{
	"id": "fbdfa4dd7445a952f72d9090918084c5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LandFiStake3.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract LandFiStaking is Ownable(msg.sender), ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    enum Status { Pending, Running, Paused, Complete }\r\n\r\n    // Immutable config\r\n    IERC20 public immutable landFiToken;\r\n    IERC20 public immutable rewardToken;\r\n    address public immutable teamWallet;\r\n    uint256 public immutable buyDuration;\r\n    uint256 public immutable stakeDuration;\r\n    uint256 public immutable minStake;\r\n    uint256 public immutable maxStake;\r\n    uint256 public immutable maxTotalStake;\r\n    uint256 public immutable rewardTotal;\r\n\r\n    // State\r\n    bool public launchStaking = false;\r\n    uint256 public launchTime;\r\n    Status public stakingStatus = Status.Pending;\r\n    uint256 public totalStaked;\r\n\r\n    mapping(address => uint256) public userStakes;\r\n    address[] public stakedList;\r\n\r\n    // --- Events ---\r\n    event Stake(address indexed user, uint256 amount);\r\n    event Launch(uint256 launchTime);\r\n    event Complete(uint256 completeTime);\r\n    event RewardDistributed(address indexed user, uint256 stake, uint256 reward);\r\n    event Terminated(address indexed user, uint256 amount);\r\n    event TerminatedSingle(address indexed user, uint256 amount);\r\n\r\n    modifier onlyRunning() {\r\n        require(stakingStatus == Status.Running, \"Staking not active\");\r\n        _;\r\n    }\r\n\r\n    constructor(\r\n        address _landFiToken,\r\n        address _rewardToken,\r\n        address _teamWallet,\r\n        uint256 _buyDuration,\r\n        uint256 _stakeDuration,\r\n        uint256 _minStake,\r\n        uint256 _maxStake,\r\n        uint256 _maxTotalStake,\r\n        uint256 _rewardTotal\r\n    ) {\r\n        require(_landFiToken != address(0), \"Invalid stake token\");\r\n        require(_rewardToken != address(0), \"Invalid reward token\");\r\n        require(_teamWallet != address(0), \"Invalid team wallet\");\r\n\r\n        landFiToken = IERC20(_landFiToken);\r\n        rewardToken = IERC20(_rewardToken);\r\n        teamWallet = _teamWallet;\r\n\r\n        buyDuration = _buyDuration;\r\n        stakeDuration = _stakeDuration;\r\n        minStake = _minStake;\r\n        maxStake = _maxStake;\r\n        maxTotalStake = _maxTotalStake;\r\n        rewardTotal = _rewardTotal;\r\n    }\r\n\r\n    // --- Lifecycle ---\r\n    function launch() external onlyOwner {\r\n        require(!launchStaking, \"Already launched\");\r\n        launchStaking = true;\r\n        launchTime = block.timestamp;\r\n        stakingStatus = Status.Running;\r\n        emit Launch(launchTime);\r\n    }\r\n\r\n    function pause() external onlyOwner {\r\n        stakingStatus = Status.Paused;\r\n    }\r\n\r\n    function unpause() external onlyOwner {\r\n        stakingStatus = Status.Running;\r\n    }\r\n\r\n    function completeStaking() external onlyOwner {\r\n        require(block.timestamp > launchTime + buyDuration + stakeDuration, \"Stake not ended\");\r\n        stakingStatus = Status.Complete;\r\n        emit Complete(block.timestamp);\r\n    }\r\n\r\n    // --- Stake ---\r\n    function stake(uint256 amount) external nonReentrant onlyRunning {\r\n        require(launchStaking, \"Staking not live\");\r\n        require(block.timestamp <= launchTime + buyDuration, \"Buy period over\");\r\n        require(amount >= minStake, \"Below min stake\");\r\n        require(userStakes[msg.sender] + amount <= maxStake, \"Exceeds max stake\");\r\n        require(totalStaked + amount <= maxTotalStake, \"Exceeds total pool\");\r\n\r\n        if (userStakes[msg.sender] == 0) {\r\n            stakedList.push(msg.sender);\r\n        }\r\n\r\n        landFiToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        userStakes[msg.sender] += amount;\r\n        totalStaked += amount;\r\n\r\n        emit Stake(msg.sender, amount);\r\n    }\r\n\r\n    // --- Reward Distribution ---\r\n    function distributeRewards() external onlyOwner nonReentrant {\r\n        require(stakingStatus == Status.Complete, \"Staking not complete\");\r\n\r\n        for (uint256 i = 0; i < stakedList.length; i++) {\r\n            address user = stakedList[i];\r\n            uint256 userStake = userStakes[user];\r\n            if (userStake == 0) continue;\r\n\r\n            uint256 reward = (userStake * rewardTotal) / totalStaked;\r\n\r\n            landFiToken.safeTransfer(user, userStake);\r\n            rewardToken.safeTransfer(user, reward);\r\n            userStakes[user] = 0;\r\n\r\n            emit RewardDistributed(user, userStake, reward);\r\n        }\r\n\r\n        // Send any leftover reward tokens to teamWallet\r\n        uint256 leftover = rewardToken.balanceOf(address(this));\r\n        if (leftover > 0) {\r\n            rewardToken.safeTransfer(teamWallet, leftover);\r\n        }\r\n    }\r\n\r\n    // --- Termination ---\r\n    function terminateAll() external onlyOwner nonReentrant {\r\n        for (uint256 i = 0; i < stakedList.length; i++) {\r\n            address user = stakedList[i];\r\n            uint256 amt = userStakes[user];\r\n            if (amt > 0) {\r\n                landFiToken.safeTransfer(user, amt);\r\n                userStakes[user] = 0;\r\n                emit Terminated(user, amt);\r\n            }\r\n        }\r\n        stakingStatus = Status.Complete;\r\n    }\r\n\r\n    function terminateSingle(address user) external onlyOwner nonReentrant {\r\n        uint256 amt = userStakes[user];\r\n        require(amt > 0, \"Nothing to terminate\");\r\n        landFiToken.safeTransfer(user, amt);\r\n        userStakes[user] = 0;\r\n        emit TerminatedSingle(user, amt);\r\n    }\r\n\r\n    // --- Getters ---\r\n    function getStakedUsers() external view returns (address[] memory) {\r\n        return stakedList;\r\n    }\r\n\r\n    function getStakingStatus() external view returns (Status) {\r\n        return stakingStatus;\r\n    }\r\n\r\n    function previewReward(uint256 amount) external view returns (uint256 reward) {\r\n        if (totalStaked == 0 || amount == 0) return 0;\r\n        reward = (amount * rewardTotal) / totalStaked;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/LandFiStake3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LandFiStake3.sol": {
				"LandFiStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_landFiToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_teamWallet",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_buyDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_stakeDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minStake",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxStake",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxTotalStake",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rewardTotal",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "completeTime",
									"type": "uint256"
								}
							],
							"name": "Complete",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "launchTime",
									"type": "uint256"
								}
							],
							"name": "Launch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stake",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Terminated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TerminatedSingle",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "buyDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "completeStaking",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distributeRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakedUsers",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStakingStatus",
							"outputs": [
								{
									"internalType": "enum LandFiStaking.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "landFiToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "launch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "launchStaking",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "launchTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxTotalStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "previewReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardTotal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakedList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingStatus",
							"outputs": [
								{
									"internalType": "enum LandFiStaking.Status",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "teamWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "terminateAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "terminateSingle",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userStakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LandFiStake3.sol\":306:6089  contract LandFiStaking is Ownable(msg.sender), ReentrancyGuard {... */\n  mstore(0x40, 0x01a0)\n    /* \"contracts/LandFiStake3.sol\":920:925  false */\n  0x00\n    /* \"contracts/LandFiStake3.sol\":892:925  bool public launchStaking = false */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake3.sol\":994:1008  Status.Pending */\n  0x00\n    /* \"contracts/LandFiStake3.sol\":964:1008  Status public stakingStatus = Status.Pending */\n  0x04\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  tag_2\n  tag_3\n  jump\t// in\ntag_2:\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake3.sol\":1636:2493  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  revert(0x00, 0x00)\ntag_4:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n    /* \"contracts/LandFiStake3.sol\":340:350  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake3.sol\":1974:1975  0 */\n  0x00\n    /* \"contracts/LandFiStake3.sol\":1950:1976  _landFiToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/LandFiStake3.sol\":1950:1962  _landFiToken */\n  dup10\n    /* \"contracts/LandFiStake3.sol\":1950:1976  _landFiToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/LandFiStake3.sol\":1942:2000  require(_landFiToken != address(0), \"Invalid stake token\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/LandFiStake3.sol\":2043:2044  0 */\n  0x00\n    /* \"contracts/LandFiStake3.sol\":2019:2045  _rewardToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/LandFiStake3.sol\":2019:2031  _rewardToken */\n  dup9\n    /* \"contracts/LandFiStake3.sol\":2019:2045  _rewardToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/LandFiStake3.sol\":2011:2070  require(_rewardToken != address(0), \"Invalid reward token\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"contracts/LandFiStake3.sol\":2112:2113  0 */\n  0x00\n    /* \"contracts/LandFiStake3.sol\":2089:2114  _teamWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/LandFiStake3.sol\":2089:2100  _teamWallet */\n  dup8\n    /* \"contracts/LandFiStake3.sol\":2089:2114  _teamWallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/LandFiStake3.sol\":2081:2138  require(_teamWallet != address(0), \"Invalid team wallet\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"contracts/LandFiStake3.sol\":2172:2184  _landFiToken */\n  dup9\n    /* \"contracts/LandFiStake3.sol\":2151:2185  landFiToken = IERC20(_landFiToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFiStake3.sol\":2217:2229  _rewardToken */\n  dup8\n    /* \"contracts/LandFiStake3.sol\":2196:2230  rewardToken = IERC20(_rewardToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFiStake3.sol\":2254:2265  _teamWallet */\n  dup7\n    /* \"contracts/LandFiStake3.sol\":2241:2265  teamWallet = _teamWallet */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFiStake3.sol\":2292:2304  _buyDuration */\n  dup6\n    /* \"contracts/LandFiStake3.sol\":2278:2304  buyDuration = _buyDuration */\n  0xe0\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFiStake3.sol\":2331:2345  _stakeDuration */\n  dup5\n    /* \"contracts/LandFiStake3.sol\":2315:2345  stakeDuration = _stakeDuration */\n  0x0100\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFiStake3.sol\":2367:2376  _minStake */\n  dup4\n    /* \"contracts/LandFiStake3.sol\":2356:2376  minStake = _minStake */\n  0x0120\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFiStake3.sol\":2398:2407  _maxStake */\n  dup3\n    /* \"contracts/LandFiStake3.sol\":2387:2407  maxStake = _maxStake */\n  0x0140\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFiStake3.sol\":2434:2448  _maxTotalStake */\n  dup2\n    /* \"contracts/LandFiStake3.sol\":2418:2448  maxTotalStake = _maxTotalStake */\n  0x0160\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFiStake3.sol\":2473:2485  _rewardTotal */\n  dup1\n    /* \"contracts/LandFiStake3.sol\":2459:2485  rewardTotal = _rewardTotal */\n  0x0180\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFiStake3.sol\":1636:2493  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/LandFiStake3.sol\":306:6089  contract LandFiStaking is Ownable(msg.sender), ReentrancyGuard {... */\n  jump(tag_27)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:187   */\ntag_3:\n    /* \"#utility.yul\":55:132   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":52:53   */\n  0x00\n    /* \"#utility.yul\":45:133   */\n  mstore\n    /* \"#utility.yul\":152:156   */\n  0x21\n    /* \"#utility.yul\":149:150   */\n  0x04\n    /* \"#utility.yul\":142:157   */\n  mstore\n    /* \"#utility.yul\":176:180   */\n  0x24\n    /* \"#utility.yul\":173:174   */\n  0x00\n    /* \"#utility.yul\":166:181   */\n  revert\n    /* \"#utility.yul\":274:391   */\ntag_30:\n    /* \"#utility.yul\":383:384   */\n  0x00\n    /* \"#utility.yul\":380:381   */\n  0x00\n    /* \"#utility.yul\":373:385   */\n  revert\n    /* \"#utility.yul\":520:646   */\ntag_32:\n    /* \"#utility.yul\":557:564   */\n  0x00\n    /* \"#utility.yul\":597:639   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":590:595   */\n  dup3\n    /* \"#utility.yul\":586:640   */\n  and\n    /* \"#utility.yul\":575:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":520:646   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":652:748   */\ntag_33:\n    /* \"#utility.yul\":689:696   */\n  0x00\n    /* \"#utility.yul\":718:742   */\n  tag_54\n    /* \"#utility.yul\":736:741   */\n  dup3\n    /* \"#utility.yul\":718:742   */\n  tag_32\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":707:742   */\n  swap1\n  pop\n    /* \"#utility.yul\":652:748   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":754:876   */\ntag_34:\n    /* \"#utility.yul\":827:851   */\n  tag_56\n    /* \"#utility.yul\":845:850   */\n  dup2\n    /* \"#utility.yul\":827:851   */\n  tag_33\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":817:852   */\n  eq\n    /* \"#utility.yul\":807:870   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":866:867   */\n  0x00\n    /* \"#utility.yul\":863:864   */\n  0x00\n    /* \"#utility.yul\":856:868   */\n  revert\n    /* \"#utility.yul\":807:870   */\ntag_57:\n    /* \"#utility.yul\":754:876   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":882:1025   */\ntag_35:\n    /* \"#utility.yul\":939:944   */\n  0x00\n    /* \"#utility.yul\":970:976   */\n  dup2\n    /* \"#utility.yul\":964:977   */\n  mload\n    /* \"#utility.yul\":955:977   */\n  swap1\n  pop\n    /* \"#utility.yul\":986:1019   */\n  tag_59\n    /* \"#utility.yul\":1013:1018   */\n  dup2\n    /* \"#utility.yul\":986:1019   */\n  tag_34\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":882:1025   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1031:1108   */\ntag_36:\n    /* \"#utility.yul\":1068:1075   */\n  0x00\n    /* \"#utility.yul\":1097:1102   */\n  dup2\n    /* \"#utility.yul\":1086:1102   */\n  swap1\n  pop\n    /* \"#utility.yul\":1031:1108   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1114:1236   */\ntag_37:\n    /* \"#utility.yul\":1187:1211   */\n  tag_62\n    /* \"#utility.yul\":1205:1210   */\n  dup2\n    /* \"#utility.yul\":1187:1211   */\n  tag_36\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1180:1185   */\n  dup2\n    /* \"#utility.yul\":1177:1212   */\n  eq\n    /* \"#utility.yul\":1167:1230   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1226:1227   */\n  0x00\n    /* \"#utility.yul\":1223:1224   */\n  0x00\n    /* \"#utility.yul\":1216:1228   */\n  revert\n    /* \"#utility.yul\":1167:1230   */\ntag_63:\n    /* \"#utility.yul\":1114:1236   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1242:1385   */\ntag_38:\n    /* \"#utility.yul\":1299:1304   */\n  0x00\n    /* \"#utility.yul\":1330:1336   */\n  dup2\n    /* \"#utility.yul\":1324:1337   */\n  mload\n    /* \"#utility.yul\":1315:1337   */\n  swap1\n  pop\n    /* \"#utility.yul\":1346:1379   */\n  tag_65\n    /* \"#utility.yul\":1373:1378   */\n  dup2\n    /* \"#utility.yul\":1346:1379   */\n  tag_37\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1242:1385   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1391:2996   */\ntag_6:\n    /* \"#utility.yul\":1533:1539   */\n  0x00\n    /* \"#utility.yul\":1541:1547   */\n  0x00\n    /* \"#utility.yul\":1549:1555   */\n  0x00\n    /* \"#utility.yul\":1557:1563   */\n  0x00\n    /* \"#utility.yul\":1565:1571   */\n  0x00\n    /* \"#utility.yul\":1573:1579   */\n  0x00\n    /* \"#utility.yul\":1581:1587   */\n  0x00\n    /* \"#utility.yul\":1589:1595   */\n  0x00\n    /* \"#utility.yul\":1597:1603   */\n  0x00\n    /* \"#utility.yul\":1646:1649   */\n  0x0120\n    /* \"#utility.yul\":1634:1643   */\n  dup11\n    /* \"#utility.yul\":1625:1632   */\n  dup13\n    /* \"#utility.yul\":1621:1644   */\n  sub\n    /* \"#utility.yul\":1617:1650   */\n  slt\n    /* \"#utility.yul\":1614:1734   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1653:1732   */\n  tag_68\n  tag_30\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1614:1734   */\ntag_67:\n    /* \"#utility.yul\":1773:1774   */\n  0x00\n    /* \"#utility.yul\":1798:1862   */\n  tag_69\n    /* \"#utility.yul\":1854:1861   */\n  dup13\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1834:1843   */\n  dup14\n    /* \"#utility.yul\":1830:1852   */\n  add\n    /* \"#utility.yul\":1798:1862   */\n  tag_35\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1788:1862   */\n  swap10\n  pop\n    /* \"#utility.yul\":1744:1872   */\n  pop\n    /* \"#utility.yul\":1911:1913   */\n  0x20\n    /* \"#utility.yul\":1937:2001   */\n  tag_70\n    /* \"#utility.yul\":1993:2000   */\n  dup13\n    /* \"#utility.yul\":1984:1990   */\n  dup3\n    /* \"#utility.yul\":1973:1982   */\n  dup14\n    /* \"#utility.yul\":1969:1991   */\n  add\n    /* \"#utility.yul\":1937:2001   */\n  tag_35\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1927:2001   */\n  swap9\n  pop\n    /* \"#utility.yul\":1882:2011   */\n  pop\n    /* \"#utility.yul\":2050:2052   */\n  0x40\n    /* \"#utility.yul\":2076:2140   */\n  tag_71\n    /* \"#utility.yul\":2132:2139   */\n  dup13\n    /* \"#utility.yul\":2123:2129   */\n  dup3\n    /* \"#utility.yul\":2112:2121   */\n  dup14\n    /* \"#utility.yul\":2108:2130   */\n  add\n    /* \"#utility.yul\":2076:2140   */\n  tag_35\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2066:2140   */\n  swap8\n  pop\n    /* \"#utility.yul\":2021:2150   */\n  pop\n    /* \"#utility.yul\":2189:2191   */\n  0x60\n    /* \"#utility.yul\":2215:2279   */\n  tag_72\n    /* \"#utility.yul\":2271:2278   */\n  dup13\n    /* \"#utility.yul\":2262:2268   */\n  dup3\n    /* \"#utility.yul\":2251:2260   */\n  dup14\n    /* \"#utility.yul\":2247:2269   */\n  add\n    /* \"#utility.yul\":2215:2279   */\n  tag_38\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2205:2279   */\n  swap7\n  pop\n    /* \"#utility.yul\":2160:2289   */\n  pop\n    /* \"#utility.yul\":2328:2331   */\n  0x80\n    /* \"#utility.yul\":2355:2419   */\n  tag_73\n    /* \"#utility.yul\":2411:2418   */\n  dup13\n    /* \"#utility.yul\":2402:2408   */\n  dup3\n    /* \"#utility.yul\":2391:2400   */\n  dup14\n    /* \"#utility.yul\":2387:2409   */\n  add\n    /* \"#utility.yul\":2355:2419   */\n  tag_38\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2345:2419   */\n  swap6\n  pop\n    /* \"#utility.yul\":2299:2429   */\n  pop\n    /* \"#utility.yul\":2468:2471   */\n  0xa0\n    /* \"#utility.yul\":2495:2559   */\n  tag_74\n    /* \"#utility.yul\":2551:2558   */\n  dup13\n    /* \"#utility.yul\":2542:2548   */\n  dup3\n    /* \"#utility.yul\":2531:2540   */\n  dup14\n    /* \"#utility.yul\":2527:2549   */\n  add\n    /* \"#utility.yul\":2495:2559   */\n  tag_38\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2485:2559   */\n  swap5\n  pop\n    /* \"#utility.yul\":2439:2569   */\n  pop\n    /* \"#utility.yul\":2608:2611   */\n  0xc0\n    /* \"#utility.yul\":2635:2699   */\n  tag_75\n    /* \"#utility.yul\":2691:2698   */\n  dup13\n    /* \"#utility.yul\":2682:2688   */\n  dup3\n    /* \"#utility.yul\":2671:2680   */\n  dup14\n    /* \"#utility.yul\":2667:2689   */\n  add\n    /* \"#utility.yul\":2635:2699   */\n  tag_38\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2625:2699   */\n  swap4\n  pop\n    /* \"#utility.yul\":2579:2709   */\n  pop\n    /* \"#utility.yul\":2748:2751   */\n  0xe0\n    /* \"#utility.yul\":2775:2839   */\n  tag_76\n    /* \"#utility.yul\":2831:2838   */\n  dup13\n    /* \"#utility.yul\":2822:2828   */\n  dup3\n    /* \"#utility.yul\":2811:2820   */\n  dup14\n    /* \"#utility.yul\":2807:2829   */\n  add\n    /* \"#utility.yul\":2775:2839   */\n  tag_38\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2765:2839   */\n  swap3\n  pop\n    /* \"#utility.yul\":2719:2849   */\n  pop\n    /* \"#utility.yul\":2888:2891   */\n  0x0100\n    /* \"#utility.yul\":2915:2979   */\n  tag_77\n    /* \"#utility.yul\":2971:2978   */\n  dup13\n    /* \"#utility.yul\":2962:2968   */\n  dup3\n    /* \"#utility.yul\":2951:2960   */\n  dup14\n    /* \"#utility.yul\":2947:2969   */\n  add\n    /* \"#utility.yul\":2915:2979   */\n  tag_38\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2905:2979   */\n  swap2\n  pop\n    /* \"#utility.yul\":2859:2989   */\n  pop\n    /* \"#utility.yul\":1391:2996   */\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  pop\n  swap3\n  swap6\n  swap9\n  jump\t// out\n    /* \"#utility.yul\":3002:3120   */\ntag_39:\n    /* \"#utility.yul\":3089:3113   */\n  tag_79\n    /* \"#utility.yul\":3107:3112   */\n  dup2\n    /* \"#utility.yul\":3089:3113   */\n  tag_33\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":3084:3087   */\n  dup3\n    /* \"#utility.yul\":3077:3114   */\n  mstore\n    /* \"#utility.yul\":3002:3120   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3126:3348   */\ntag_13:\n    /* \"#utility.yul\":3219:3223   */\n  0x00\n    /* \"#utility.yul\":3257:3259   */\n  0x20\n    /* \"#utility.yul\":3246:3255   */\n  dup3\n    /* \"#utility.yul\":3242:3260   */\n  add\n    /* \"#utility.yul\":3234:3260   */\n  swap1\n  pop\n    /* \"#utility.yul\":3270:3341   */\n  tag_81\n    /* \"#utility.yul\":3338:3339   */\n  0x00\n    /* \"#utility.yul\":3327:3336   */\n  dup4\n    /* \"#utility.yul\":3323:3340   */\n  add\n    /* \"#utility.yul\":3314:3320   */\n  dup5\n    /* \"#utility.yul\":3270:3341   */\n  tag_39\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3126:3348   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3354:3523   */\ntag_40:\n    /* \"#utility.yul\":3438:3449   */\n  0x00\n    /* \"#utility.yul\":3472:3478   */\n  dup3\n    /* \"#utility.yul\":3467:3470   */\n  dup3\n    /* \"#utility.yul\":3460:3479   */\n  mstore\n    /* \"#utility.yul\":3512:3516   */\n  0x20\n    /* \"#utility.yul\":3507:3510   */\n  dup3\n    /* \"#utility.yul\":3503:3517   */\n  add\n    /* \"#utility.yul\":3488:3517   */\n  swap1\n  pop\n    /* \"#utility.yul\":3354:3523   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3529:3698   */\ntag_41:\n    /* \"#utility.yul\":3669:3690   */\n  0x496e76616c6964207374616b6520746f6b656e00000000000000000000000000\n    /* \"#utility.yul\":3665:3666   */\n  0x00\n    /* \"#utility.yul\":3657:3663   */\n  dup3\n    /* \"#utility.yul\":3653:3667   */\n  add\n    /* \"#utility.yul\":3646:3691   */\n  mstore\n    /* \"#utility.yul\":3529:3698   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3704:4070   */\ntag_42:\n    /* \"#utility.yul\":3846:3849   */\n  0x00\n    /* \"#utility.yul\":3867:3934   */\n  tag_85\n    /* \"#utility.yul\":3931:3933   */\n  0x13\n    /* \"#utility.yul\":3926:3929   */\n  dup4\n    /* \"#utility.yul\":3867:3934   */\n  tag_40\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3860:3934   */\n  swap2\n  pop\n    /* \"#utility.yul\":3943:4036   */\n  tag_86\n    /* \"#utility.yul\":4032:4035   */\n  dup3\n    /* \"#utility.yul\":3943:4036   */\n  tag_41\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4061:4063   */\n  0x20\n    /* \"#utility.yul\":4056:4059   */\n  dup3\n    /* \"#utility.yul\":4052:4064   */\n  add\n    /* \"#utility.yul\":4045:4064   */\n  swap1\n  pop\n    /* \"#utility.yul\":3704:4070   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4076:4495   */\ntag_20:\n    /* \"#utility.yul\":4242:4246   */\n  0x00\n    /* \"#utility.yul\":4280:4282   */\n  0x20\n    /* \"#utility.yul\":4269:4278   */\n  dup3\n    /* \"#utility.yul\":4265:4283   */\n  add\n    /* \"#utility.yul\":4257:4283   */\n  swap1\n  pop\n    /* \"#utility.yul\":4329:4338   */\n  dup2\n    /* \"#utility.yul\":4323:4327   */\n  dup2\n    /* \"#utility.yul\":4319:4339   */\n  sub\n    /* \"#utility.yul\":4315:4316   */\n  0x00\n    /* \"#utility.yul\":4304:4313   */\n  dup4\n    /* \"#utility.yul\":4300:4317   */\n  add\n    /* \"#utility.yul\":4293:4340   */\n  mstore\n    /* \"#utility.yul\":4357:4488   */\n  tag_88\n    /* \"#utility.yul\":4483:4487   */\n  dup2\n    /* \"#utility.yul\":4357:4488   */\n  tag_42\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":4349:4488   */\n  swap1\n  pop\n    /* \"#utility.yul\":4076:4495   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4501:4671   */\ntag_43:\n    /* \"#utility.yul\":4641:4663   */\n  0x496e76616c69642072657761726420746f6b656e000000000000000000000000\n    /* \"#utility.yul\":4637:4638   */\n  0x00\n    /* \"#utility.yul\":4629:4635   */\n  dup3\n    /* \"#utility.yul\":4625:4639   */\n  add\n    /* \"#utility.yul\":4618:4664   */\n  mstore\n    /* \"#utility.yul\":4501:4671   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4677:5043   */\ntag_44:\n    /* \"#utility.yul\":4819:4822   */\n  0x00\n    /* \"#utility.yul\":4840:4907   */\n  tag_91\n    /* \"#utility.yul\":4904:4906   */\n  0x14\n    /* \"#utility.yul\":4899:4902   */\n  dup4\n    /* \"#utility.yul\":4840:4907   */\n  tag_40\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4833:4907   */\n  swap2\n  pop\n    /* \"#utility.yul\":4916:5009   */\n  tag_92\n    /* \"#utility.yul\":5005:5008   */\n  dup3\n    /* \"#utility.yul\":4916:5009   */\n  tag_43\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":5034:5036   */\n  0x20\n    /* \"#utility.yul\":5029:5032   */\n  dup3\n    /* \"#utility.yul\":5025:5037   */\n  add\n    /* \"#utility.yul\":5018:5037   */\n  swap1\n  pop\n    /* \"#utility.yul\":4677:5043   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5049:5468   */\ntag_23:\n    /* \"#utility.yul\":5215:5219   */\n  0x00\n    /* \"#utility.yul\":5253:5255   */\n  0x20\n    /* \"#utility.yul\":5242:5251   */\n  dup3\n    /* \"#utility.yul\":5238:5256   */\n  add\n    /* \"#utility.yul\":5230:5256   */\n  swap1\n  pop\n    /* \"#utility.yul\":5302:5311   */\n  dup2\n    /* \"#utility.yul\":5296:5300   */\n  dup2\n    /* \"#utility.yul\":5292:5312   */\n  sub\n    /* \"#utility.yul\":5288:5289   */\n  0x00\n    /* \"#utility.yul\":5277:5286   */\n  dup4\n    /* \"#utility.yul\":5273:5290   */\n  add\n    /* \"#utility.yul\":5266:5313   */\n  mstore\n    /* \"#utility.yul\":5330:5461   */\n  tag_94\n    /* \"#utility.yul\":5456:5460   */\n  dup2\n    /* \"#utility.yul\":5330:5461   */\n  tag_44\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":5322:5461   */\n  swap1\n  pop\n    /* \"#utility.yul\":5049:5468   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5474:5643   */\ntag_45:\n    /* \"#utility.yul\":5614:5635   */\n  0x496e76616c6964207465616d2077616c6c657400000000000000000000000000\n    /* \"#utility.yul\":5610:5611   */\n  0x00\n    /* \"#utility.yul\":5602:5608   */\n  dup3\n    /* \"#utility.yul\":5598:5612   */\n  add\n    /* \"#utility.yul\":5591:5636   */\n  mstore\n    /* \"#utility.yul\":5474:5643   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5649:6015   */\ntag_46:\n    /* \"#utility.yul\":5791:5794   */\n  0x00\n    /* \"#utility.yul\":5812:5879   */\n  tag_97\n    /* \"#utility.yul\":5876:5878   */\n  0x13\n    /* \"#utility.yul\":5871:5874   */\n  dup4\n    /* \"#utility.yul\":5812:5879   */\n  tag_40\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5805:5879   */\n  swap2\n  pop\n    /* \"#utility.yul\":5888:5981   */\n  tag_98\n    /* \"#utility.yul\":5977:5980   */\n  dup3\n    /* \"#utility.yul\":5888:5981   */\n  tag_45\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":6006:6008   */\n  0x20\n    /* \"#utility.yul\":6001:6004   */\n  dup3\n    /* \"#utility.yul\":5997:6009   */\n  add\n    /* \"#utility.yul\":5990:6009   */\n  swap1\n  pop\n    /* \"#utility.yul\":5649:6015   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6021:6440   */\ntag_26:\n    /* \"#utility.yul\":6187:6191   */\n  0x00\n    /* \"#utility.yul\":6225:6227   */\n  0x20\n    /* \"#utility.yul\":6214:6223   */\n  dup3\n    /* \"#utility.yul\":6210:6228   */\n  add\n    /* \"#utility.yul\":6202:6228   */\n  swap1\n  pop\n    /* \"#utility.yul\":6274:6283   */\n  dup2\n    /* \"#utility.yul\":6268:6272   */\n  dup2\n    /* \"#utility.yul\":6264:6284   */\n  sub\n    /* \"#utility.yul\":6260:6261   */\n  0x00\n    /* \"#utility.yul\":6249:6258   */\n  dup4\n    /* \"#utility.yul\":6245:6262   */\n  add\n    /* \"#utility.yul\":6238:6285   */\n  mstore\n    /* \"#utility.yul\":6302:6433   */\n  tag_100\n    /* \"#utility.yul\":6428:6432   */\n  dup2\n    /* \"#utility.yul\":6302:6433   */\n  tag_46\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":6294:6433   */\n  swap1\n  pop\n    /* \"#utility.yul\":6021:6440   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/LandFiStake3.sol\":306:6089  contract LandFiStaking is Ownable(msg.sender), ReentrancyGuard {... */\ntag_27:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  mload(0x0100)\n  mload(0x0120)\n  mload(0x0140)\n  mload(0x0160)\n  mload(0x0180)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x1ac5f1ff5c22b675095d7de80c4f0796d8bf1ebc411b96ebd8b39a839de5c12e\")\n  0x00\n  assignImmutable(\"0x7705a66c05de96d79dddf8024a7669ad29d5b174f4aa496e3ca7c392f0ca18e1\")\n  0x00\n  assignImmutable(\"0x7788a34765a1848103cae61102f343cc0b1a9985ae3a59de22223016042ad663\")\n  0x00\n  assignImmutable(\"0xdc2a25037b2bbcedb14daf80b8aa2c09c28caff3d2f2ec216b72117d71331e12\")\n  0x00\n  assignImmutable(\"0x6dada6d1ec3b2e3878674118e8d86948ebe4d584ee013eb690e56f8e53016879\")\n  0x00\n  assignImmutable(\"0x1599b065c17883492f21704cb8488060e90dc8dd041de3cfae3e3631a601abed\")\n  0x00\n  assignImmutable(\"0x07f054c10757ecd7ba45558d1f545708449fb2687cb03aabf8acf0687ec069b0\")\n  0x00\n  assignImmutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n  0x00\n  assignImmutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/LandFiStake3.sol\":306:6089  contract LandFiStaking is Ownable(msg.sender), ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xcab9b8fb\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf959680b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xfe1d3795\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0xcab9b8fb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd719fa97\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe9b98746\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xea1b28e0\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x8da7ad23\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x8da7ad23\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa30a2474\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb973e1bf\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x817b1cd2\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x455ab53c\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x64904071\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x64904071\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6f4a2cd0\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x790ca413\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x455ab53c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4f984c5c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x59927044\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x292a6b19\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x292a6b19\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x375b3c0a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40f02ab6\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x01339c21\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x02ac512f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x10d63d03\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/LandFiStake3.sol\":2527:2771  function launch() external onlyOwner {... */\n    tag_3:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/LandFiStake3.sol\":1102:1129  address[] public stakedList */\n    tag_4:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":5348:5639  function terminateSingle(address user) external onlyOwner nonReentrant {... */\n    tag_5:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"contracts/LandFiStake3.sol\":494:529  IERC20 public immutable landFiToken */\n    tag_6:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":708:741  uint256 public immutable minStake */\n    tag_7:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":2871:2958  function unpause() external onlyOwner {... */\n    tag_8:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/LandFiStake3.sol\":663:701  uint256 public immutable stakeDuration */\n    tag_9:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":964:1008  Status public stakingStatus = Status.Pending */\n    tag_10:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":4895:5340  function terminateAll() external onlyOwner nonReentrant {... */\n    tag_11:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/LandFiStake3.sol\":578:613  address public immutable teamWallet */\n    tag_12:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":788:826  uint256 public immutable maxTotalStake */\n    tag_13:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":3995:4859  function distributeRewards() external onlyOwner nonReentrant {... */\n    tag_14:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/LandFiStake3.sol\":932:957  uint256 public launchTime */\n    tag_16:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":1015:1041  uint256 public totalStaked */\n    tag_17:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":2779:2863  function pause() external onlyOwner {... */\n    tag_18:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_19:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":1050:1095  mapping(address => uint256) public userStakes */\n    tag_20:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":892:925  bool public launchStaking = false */\n    tag_21:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":3230:3951  function stake(uint256 amount) external nonReentrant onlyRunning {... */\n    tag_22:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/LandFiStake3.sol\":5888:6086  function previewReward(uint256 amount) external view returns (uint256 reward) {... */\n    tag_23:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":5782:5880  function getStakingStatus() external view returns (Status) {... */\n    tag_24:\n      tag_106\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":5671:5774  function getStakedUsers() external view returns (address[] memory) {... */\n    tag_25:\n      tag_109\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":620:656  uint256 public immutable buyDuration */\n    tag_26:\n      tag_113\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":748:781  uint256 public immutable maxStake */\n    tag_27:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n    tag_119:\n      stop\n        /* \"contracts/LandFiStake3.sol\":536:571  IERC20 public immutable rewardToken */\n    tag_29:\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":833:869  uint256 public immutable rewardTotal */\n    tag_30:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      tag_127\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake3.sol\":2966:3200  function completeStaking() external onlyOwner {... */\n    tag_31:\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n      stop\n        /* \"contracts/LandFiStake3.sol\":2527:2771  function launch() external onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"contracts/LandFiStake3.sol\":2584:2597  launchStaking */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake3.sol\":2583:2597  !launchStaking */\n      iszero\n        /* \"contracts/LandFiStake3.sol\":2575:2618  require(!launchStaking, \"Already launched\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/LandFiStake3.sol\":2645:2649  true */\n      0x01\n        /* \"contracts/LandFiStake3.sol\":2629:2642  launchStaking */\n      0x02\n      0x00\n        /* \"contracts/LandFiStake3.sol\":2629:2649  launchStaking = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake3.sol\":2673:2688  block.timestamp */\n      timestamp\n        /* \"contracts/LandFiStake3.sol\":2660:2670  launchTime */\n      0x03\n        /* \"contracts/LandFiStake3.sol\":2660:2688  launchTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake3.sol\":2715:2729  Status.Running */\n      0x01\n        /* \"contracts/LandFiStake3.sol\":2699:2712  stakingStatus */\n      0x04\n      0x00\n        /* \"contracts/LandFiStake3.sol\":2699:2729  stakingStatus = Status.Running */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_137\n      jumpi\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n    tag_137:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake3.sol\":2745:2763  Launch(launchTime) */\n      0xa72e5e150ebe7b67363131cf1d5e72a8053adc58eb1879467ebd529ae3d4ecca\n        /* \"contracts/LandFiStake3.sol\":2752:2762  launchTime */\n      sload(0x03)\n        /* \"contracts/LandFiStake3.sol\":2745:2763  Launch(launchTime) */\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LandFiStake3.sol\":2527:2771  function launch() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":1102:1129  address[] public stakedList */\n    tag_44:\n      0x07\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":5348:5639  function terminateSingle(address user) external onlyOwner nonReentrant {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_146\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/LandFiStake3.sol\":5430:5441  uint256 amt */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5444:5454  userStakes */\n      0x06\n        /* \"contracts/LandFiStake3.sol\":5444:5460  userStakes[user] */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5455:5459  user */\n      dup4\n        /* \"contracts/LandFiStake3.sol\":5444:5460  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake3.sol\":5430:5460  uint256 amt = userStakes[user] */\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":5485:5486  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5479:5482  amt */\n      dup2\n        /* \"contracts/LandFiStake3.sol\":5479:5486  amt > 0 */\n      gt\n        /* \"contracts/LandFiStake3.sol\":5471:5511  require(amt > 0, \"Nothing to terminate\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"contracts/LandFiStake3.sol\":5522:5557  landFiToken.safeTransfer(user, amt) */\n      tag_152\n        /* \"contracts/LandFiStake3.sol\":5547:5551  user */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":5553:5556  amt */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":5522:5533  landFiToken */\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n        /* \"contracts/LandFiStake3.sol\":5522:5546  landFiToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_153\n      swap1\n        /* \"contracts/LandFiStake3.sol\":5522:5557  landFiToken.safeTransfer(user, amt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_152:\n        /* \"contracts/LandFiStake3.sol\":5587:5588  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5568:5578  userStakes */\n      0x06\n        /* \"contracts/LandFiStake3.sol\":5568:5584  userStakes[user] */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5579:5583  user */\n      dup5\n        /* \"contracts/LandFiStake3.sol\":5568:5584  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake3.sol\":5568:5588  userStakes[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake3.sol\":5621:5625  user */\n      dup2\n        /* \"contracts/LandFiStake3.sol\":5604:5631  TerminatedSingle(user, amt) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbf8f812d3d85df21758e37a857352fb02610f4278c682198af5c5c00bbb3d500\n        /* \"contracts/LandFiStake3.sol\":5627:5630  amt */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":5604:5631  TerminatedSingle(user, amt) */\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LandFiStake3.sol\":5419:5639  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_155\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_156\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/LandFiStake3.sol\":5348:5639  function terminateSingle(address user) external onlyOwner nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":494:529  IERC20 public immutable landFiToken */\n    tag_52:\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":708:741  uint256 public immutable minStake */\n    tag_56:\n      immutable(\"0xdc2a25037b2bbcedb14daf80b8aa2c09c28caff3d2f2ec216b72117d71331e12\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":2871:2958  function unpause() external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"contracts/LandFiStake3.sol\":2936:2950  Status.Running */\n      0x01\n        /* \"contracts/LandFiStake3.sol\":2920:2933  stakingStatus */\n      0x04\n      0x00\n        /* \"contracts/LandFiStake3.sol\":2920:2950  stakingStatus = Status.Running */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_160\n      jumpi\n      tag_161\n      tag_139\n      jump\t// in\n    tag_161:\n    tag_160:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake3.sol\":2871:2958  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":663:701  uint256 public immutable stakeDuration */\n    tag_62:\n      immutable(\"0x6dada6d1ec3b2e3878674118e8d86948ebe4d584ee013eb690e56f8e53016879\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":964:1008  Status public stakingStatus = Status.Pending */\n    tag_65:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":4895:5340  function terminateAll() external onlyOwner nonReentrant {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_165\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/LandFiStake3.sol\":4967:4976  uint256 i */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4979:4980  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4967:4980  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":4962:5291  for (uint256 i = 0; i < stakedList.length; i++) {... */\n    tag_167:\n        /* \"contracts/LandFiStake3.sol\":4986:4996  stakedList */\n      0x07\n        /* \"contracts/LandFiStake3.sol\":4986:5003  stakedList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":4982:4983  i */\n      dup2\n        /* \"contracts/LandFiStake3.sol\":4982:5003  i < stakedList.length */\n      lt\n        /* \"contracts/LandFiStake3.sol\":4962:5291  for (uint256 i = 0; i < stakedList.length; i++) {... */\n      iszero\n      tag_168\n      jumpi\n        /* \"contracts/LandFiStake3.sol\":5025:5037  address user */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5040:5050  stakedList */\n      0x07\n        /* \"contracts/LandFiStake3.sol\":5051:5052  i */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":5040:5053  stakedList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_170\n      jumpi\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n    tag_170:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LandFiStake3.sol\":5025:5053  address user = stakedList[i] */\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":5068:5079  uint256 amt */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5082:5092  userStakes */\n      0x06\n        /* \"contracts/LandFiStake3.sol\":5082:5098  userStakes[user] */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5093:5097  user */\n      dup4\n        /* \"contracts/LandFiStake3.sol\":5082:5098  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake3.sol\":5068:5098  uint256 amt = userStakes[user] */\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":5123:5124  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5117:5120  amt */\n      dup2\n        /* \"contracts/LandFiStake3.sol\":5117:5124  amt > 0 */\n      gt\n        /* \"contracts/LandFiStake3.sol\":5113:5280  if (amt > 0) {... */\n      iszero\n      tag_174\n      jumpi\n        /* \"contracts/LandFiStake3.sol\":5145:5180  landFiToken.safeTransfer(user, amt) */\n      tag_175\n        /* \"contracts/LandFiStake3.sol\":5170:5174  user */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":5176:5179  amt */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":5145:5156  landFiToken */\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n        /* \"contracts/LandFiStake3.sol\":5145:5169  landFiToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_153\n      swap1\n        /* \"contracts/LandFiStake3.sol\":5145:5180  landFiToken.safeTransfer(user, amt) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_175:\n        /* \"contracts/LandFiStake3.sol\":5218:5219  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5199:5209  userStakes */\n      0x06\n        /* \"contracts/LandFiStake3.sol\":5199:5215  userStakes[user] */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5210:5214  user */\n      dup5\n        /* \"contracts/LandFiStake3.sol\":5199:5215  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake3.sol\":5199:5219  userStakes[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake3.sol\":5254:5258  user */\n      dup2\n        /* \"contracts/LandFiStake3.sol\":5243:5264  Terminated(user, amt) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb2372f309a2c0b54c10ce95469012d95c4d8cc7c8a154bfc22db66d993abbc71\n        /* \"contracts/LandFiStake3.sol\":5260:5263  amt */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":5243:5264  Terminated(user, amt) */\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LandFiStake3.sol\":5113:5280  if (amt > 0) {... */\n    tag_174:\n        /* \"contracts/LandFiStake3.sol\":5010:5291  {... */\n      pop\n      pop\n        /* \"contracts/LandFiStake3.sol\":5005:5008  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/LandFiStake3.sol\":4962:5291  for (uint256 i = 0; i < stakedList.length; i++) {... */\n      jump(tag_167)\n    tag_168:\n      pop\n        /* \"contracts/LandFiStake3.sol\":5317:5332  Status.Complete */\n      0x03\n        /* \"contracts/LandFiStake3.sol\":5301:5314  stakingStatus */\n      0x04\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5301:5332  stakingStatus = Status.Complete */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_177\n      jumpi\n      tag_178\n      tag_139\n      jump\t// in\n    tag_178:\n    tag_177:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_179\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_156\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_179:\n        /* \"contracts/LandFiStake3.sol\":4895:5340  function terminateAll() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":578:613  address public immutable teamWallet */\n    tag_71:\n      immutable(\"0x07f054c10757ecd7ba45558d1f545708449fb2687cb03aabf8acf0687ec069b0\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":788:826  uint256 public immutable maxTotalStake */\n    tag_74:\n      immutable(\"0x7705a66c05de96d79dddf8024a7669ad29d5b174f4aa496e3ca7c392f0ca18e1\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":3995:4859  function distributeRewards() external onlyOwner nonReentrant {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_183\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/LandFiStake3.sol\":4092:4107  Status.Complete */\n      0x03\n        /* \"contracts/LandFiStake3.sol\":4075:4107  stakingStatus == Status.Complete */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_185\n      jumpi\n      tag_186\n      tag_139\n      jump\t// in\n    tag_186:\n    tag_185:\n        /* \"contracts/LandFiStake3.sol\":4075:4088  stakingStatus */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake3.sol\":4075:4107  stakingStatus == Status.Complete */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_187\n      jumpi\n      tag_188\n      tag_139\n      jump\t// in\n    tag_188:\n    tag_187:\n      eq\n        /* \"contracts/LandFiStake3.sol\":4067:4132  require(stakingStatus == Status.Complete, \"Staking not complete\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/LandFiStake3.sol\":4150:4159  uint256 i */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4162:4163  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4150:4163  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":4145:4625  for (uint256 i = 0; i < stakedList.length; i++) {... */\n    tag_192:\n        /* \"contracts/LandFiStake3.sol\":4169:4179  stakedList */\n      0x07\n        /* \"contracts/LandFiStake3.sol\":4169:4186  stakedList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":4165:4166  i */\n      dup2\n        /* \"contracts/LandFiStake3.sol\":4165:4186  i < stakedList.length */\n      lt\n        /* \"contracts/LandFiStake3.sol\":4145:4625  for (uint256 i = 0; i < stakedList.length; i++) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/LandFiStake3.sol\":4208:4220  address user */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4223:4233  stakedList */\n      0x07\n        /* \"contracts/LandFiStake3.sol\":4234:4235  i */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":4223:4236  stakedList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      tag_196\n      tag_172\n      jump\t// in\n    tag_196:\n    tag_195:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LandFiStake3.sol\":4208:4236  address user = stakedList[i] */\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":4251:4268  uint256 userStake */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4271:4281  userStakes */\n      0x06\n        /* \"contracts/LandFiStake3.sol\":4271:4287  userStakes[user] */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4282:4286  user */\n      dup4\n        /* \"contracts/LandFiStake3.sol\":4271:4287  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake3.sol\":4251:4287  uint256 userStake = userStakes[user] */\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":4319:4320  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4306:4315  userStake */\n      dup2\n        /* \"contracts/LandFiStake3.sol\":4306:4320  userStake == 0 */\n      sub\n        /* \"contracts/LandFiStake3.sol\":4302:4330  if (userStake == 0) continue */\n      tag_198\n      jumpi\n        /* \"contracts/LandFiStake3.sol\":4322:4330  continue */\n      pop\n      pop\n      jump(tag_194)\n        /* \"contracts/LandFiStake3.sol\":4302:4330  if (userStake == 0) continue */\n    tag_198:\n        /* \"contracts/LandFiStake3.sol\":4347:4361  uint256 reward */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4392:4403  totalStaked */\n      sload(0x05)\n        /* \"contracts/LandFiStake3.sol\":4377:4388  rewardTotal */\n      immutable(\"0x1ac5f1ff5c22b675095d7de80c4f0796d8bf1ebc411b96ebd8b39a839de5c12e\")\n        /* \"contracts/LandFiStake3.sol\":4365:4374  userStake */\n      dup4\n        /* \"contracts/LandFiStake3.sol\":4365:4388  userStake * rewardTotal */\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"contracts/LandFiStake3.sol\":4364:4403  (userStake * rewardTotal) / totalStaked */\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"contracts/LandFiStake3.sol\":4347:4403  uint256 reward = (userStake * rewardTotal) / totalStaked */\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":4420:4461  landFiToken.safeTransfer(user, userStake) */\n      tag_203\n        /* \"contracts/LandFiStake3.sol\":4445:4449  user */\n      dup4\n        /* \"contracts/LandFiStake3.sol\":4451:4460  userStake */\n      dup4\n        /* \"contracts/LandFiStake3.sol\":4420:4431  landFiToken */\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n        /* \"contracts/LandFiStake3.sol\":4420:4444  landFiToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_153\n      swap1\n        /* \"contracts/LandFiStake3.sol\":4420:4461  landFiToken.safeTransfer(user, userStake) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"contracts/LandFiStake3.sol\":4476:4514  rewardToken.safeTransfer(user, reward) */\n      tag_204\n        /* \"contracts/LandFiStake3.sol\":4501:4505  user */\n      dup4\n        /* \"contracts/LandFiStake3.sol\":4507:4513  reward */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":4476:4487  rewardToken */\n      immutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n        /* \"contracts/LandFiStake3.sol\":4476:4500  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_153\n      swap1\n        /* \"contracts/LandFiStake3.sol\":4476:4514  rewardToken.safeTransfer(user, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"contracts/LandFiStake3.sol\":4548:4549  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4529:4539  userStakes */\n      0x06\n        /* \"contracts/LandFiStake3.sol\":4529:4545  userStakes[user] */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4540:4544  user */\n      dup6\n        /* \"contracts/LandFiStake3.sol\":4529:4545  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake3.sol\":4529:4549  userStakes[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake3.sol\":4589:4593  user */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":4571:4613  RewardDistributed(user, userStake, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x53118bff2fb56701752f5bf54053d24fb83cec92f9f6ce664b90c38a2991caa4\n        /* \"contracts/LandFiStake3.sol\":4595:4604  userStake */\n      dup4\n        /* \"contracts/LandFiStake3.sol\":4606:4612  reward */\n      dup4\n        /* \"contracts/LandFiStake3.sol\":4571:4613  RewardDistributed(user, userStake, reward) */\n      mload(0x40)\n      tag_205\n      swap3\n      swap2\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LandFiStake3.sol\":4193:4625  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/LandFiStake3.sol\":4145:4625  for (uint256 i = 0; i < stakedList.length; i++) {... */\n    tag_194:\n        /* \"contracts/LandFiStake3.sol\":4188:4191  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/LandFiStake3.sol\":4145:4625  for (uint256 i = 0; i < stakedList.length; i++) {... */\n      jump(tag_192)\n    tag_193:\n      pop\n        /* \"contracts/LandFiStake3.sol\":4695:4711  uint256 leftover */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4714:4725  rewardToken */\n      immutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n        /* \"contracts/LandFiStake3.sol\":4714:4735  rewardToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LandFiStake3.sol\":4744:4748  this */\n      address\n        /* \"contracts/LandFiStake3.sol\":4714:4750  rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_207:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_210\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n        /* \"contracts/LandFiStake3.sol\":4695:4750  uint256 leftover = rewardToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":4776:4777  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":4765:4773  leftover */\n      dup2\n        /* \"contracts/LandFiStake3.sol\":4765:4777  leftover > 0 */\n      gt\n        /* \"contracts/LandFiStake3.sol\":4761:4852  if (leftover > 0) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/LandFiStake3.sol\":4794:4840  rewardToken.safeTransfer(teamWallet, leftover) */\n      tag_213\n        /* \"contracts/LandFiStake3.sol\":4819:4829  teamWallet */\n      immutable(\"0x07f054c10757ecd7ba45558d1f545708449fb2687cb03aabf8acf0687ec069b0\")\n        /* \"contracts/LandFiStake3.sol\":4831:4839  leftover */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":4794:4805  rewardToken */\n      immutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n        /* \"contracts/LandFiStake3.sol\":4794:4818  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_153\n      swap1\n        /* \"contracts/LandFiStake3.sol\":4794:4840  rewardToken.safeTransfer(teamWallet, leftover) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/LandFiStake3.sol\":4761:4852  if (leftover > 0) {... */\n    tag_212:\n        /* \"contracts/LandFiStake3.sol\":4056:4859  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_214\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_156\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_214:\n        /* \"contracts/LandFiStake3.sol\":3995:4859  function distributeRewards() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":932:957  uint256 public launchTime */\n    tag_81:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":1015:1041  uint256 public totalStaked */\n    tag_84:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":2779:2863  function pause() external onlyOwner {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_221\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/LandFiStake3.sol\":2842:2855  Status.Paused */\n      0x02\n        /* \"contracts/LandFiStake3.sol\":2826:2839  stakingStatus */\n      0x04\n      0x00\n        /* \"contracts/LandFiStake3.sol\":2826:2855  stakingStatus = Status.Paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_223\n      jumpi\n      tag_224\n      tag_139\n      jump\t// in\n    tag_224:\n    tag_223:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake3.sol\":2779:2863  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":1050:1095  mapping(address => uint256) public userStakes */\n    tag_93:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":892:925  bool public launchStaking = false */\n    tag_96:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":3230:3951  function stake(uint256 amount) external nonReentrant onlyRunning {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_227\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_147\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_227:\n        /* \"contracts/LandFiStake3.sol\":1571:1585  Status.Running */\n      0x01\n        /* \"contracts/LandFiStake3.sol\":1554:1585  stakingStatus == Status.Running */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_229\n      jumpi\n      tag_230\n      tag_139\n      jump\t// in\n    tag_230:\n    tag_229:\n        /* \"contracts/LandFiStake3.sol\":1554:1567  stakingStatus */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake3.sol\":1554:1585  stakingStatus == Status.Running */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_231\n      jumpi\n      tag_232\n      tag_139\n      jump\t// in\n    tag_232:\n    tag_231:\n      eq\n        /* \"contracts/LandFiStake3.sol\":1546:1608  require(stakingStatus == Status.Running, \"Staking not active\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"contracts/LandFiStake3.sol\":3314:3327  launchStaking */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake3.sol\":3306:3348  require(launchStaking, \"Staking not live\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"contracts/LandFiStake3.sol\":3399:3410  buyDuration */\n      immutable(\"0x1599b065c17883492f21704cb8488060e90dc8dd041de3cfae3e3631a601abed\")\n        /* \"contracts/LandFiStake3.sol\":3386:3396  launchTime */\n      sload(0x03)\n        /* \"contracts/LandFiStake3.sol\":3386:3410  launchTime + buyDuration */\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"contracts/LandFiStake3.sol\":3367:3382  block.timestamp */\n      timestamp\n        /* \"contracts/LandFiStake3.sol\":3367:3410  block.timestamp <= launchTime + buyDuration */\n      gt\n      iszero\n        /* \"contracts/LandFiStake3.sol\":3359:3430  require(block.timestamp <= launchTime + buyDuration, \"Buy period over\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"contracts/LandFiStake3.sol\":3459:3467  minStake */\n      immutable(\"0xdc2a25037b2bbcedb14daf80b8aa2c09c28caff3d2f2ec216b72117d71331e12\")\n        /* \"contracts/LandFiStake3.sol\":3449:3455  amount */\n      dup2\n        /* \"contracts/LandFiStake3.sol\":3449:3467  amount >= minStake */\n      lt\n      iszero\n        /* \"contracts/LandFiStake3.sol\":3441:3487  require(amount >= minStake, \"Below min stake\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"contracts/LandFiStake3.sol\":3541:3549  maxStake */\n      immutable(\"0x7788a34765a1848103cae61102f343cc0b1a9985ae3a59de22223016042ad663\")\n        /* \"contracts/LandFiStake3.sol\":3531:3537  amount */\n      dup2\n        /* \"contracts/LandFiStake3.sol\":3506:3516  userStakes */\n      0x06\n        /* \"contracts/LandFiStake3.sol\":3506:3528  userStakes[msg.sender] */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":3517:3527  msg.sender */\n      caller\n        /* \"contracts/LandFiStake3.sol\":3506:3528  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake3.sol\":3506:3537  userStakes[msg.sender] + amount */\n      tag_248\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_248:\n        /* \"contracts/LandFiStake3.sol\":3506:3549  userStakes[msg.sender] + amount <= maxStake */\n      gt\n      iszero\n        /* \"contracts/LandFiStake3.sol\":3498:3571  require(userStakes[msg.sender] + amount <= maxStake, \"Exceeds max stake\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_249:\n        /* \"contracts/LandFiStake3.sol\":3614:3627  maxTotalStake */\n      immutable(\"0x7705a66c05de96d79dddf8024a7669ad29d5b174f4aa496e3ca7c392f0ca18e1\")\n        /* \"contracts/LandFiStake3.sol\":3604:3610  amount */\n      dup2\n        /* \"contracts/LandFiStake3.sol\":3590:3601  totalStaked */\n      sload(0x05)\n        /* \"contracts/LandFiStake3.sol\":3590:3610  totalStaked + amount */\n      tag_252\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_252:\n        /* \"contracts/LandFiStake3.sol\":3590:3627  totalStaked + amount <= maxTotalStake */\n      gt\n      iszero\n        /* \"contracts/LandFiStake3.sol\":3582:3650  require(totalStaked + amount <= maxTotalStake, \"Exceeds total pool\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"contracts/LandFiStake3.sol\":3693:3694  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":3667:3677  userStakes */\n      0x06\n        /* \"contracts/LandFiStake3.sol\":3667:3689  userStakes[msg.sender] */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":3678:3688  msg.sender */\n      caller\n        /* \"contracts/LandFiStake3.sol\":3667:3689  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake3.sol\":3667:3694  userStakes[msg.sender] == 0 */\n      sub\n        /* \"contracts/LandFiStake3.sol\":3663:3750  if (userStakes[msg.sender] == 0) {... */\n      tag_256\n      jumpi\n        /* \"contracts/LandFiStake3.sol\":3711:3721  stakedList */\n      0x07\n        /* \"contracts/LandFiStake3.sol\":3727:3737  msg.sender */\n      caller\n        /* \"contracts/LandFiStake3.sol\":3711:3738  stakedList.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake3.sol\":3663:3750  if (userStakes[msg.sender] == 0) {... */\n    tag_256:\n        /* \"contracts/LandFiStake3.sol\":3762:3825  landFiToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_258\n        /* \"contracts/LandFiStake3.sol\":3791:3801  msg.sender */\n      caller\n        /* \"contracts/LandFiStake3.sol\":3811:3815  this */\n      address\n        /* \"contracts/LandFiStake3.sol\":3818:3824  amount */\n      dup4\n        /* \"contracts/LandFiStake3.sol\":3762:3773  landFiToken */\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n        /* \"contracts/LandFiStake3.sol\":3762:3790  landFiToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_259\n      swap1\n        /* \"contracts/LandFiStake3.sol\":3762:3825  landFiToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_258:\n        /* \"contracts/LandFiStake3.sol\":3862:3868  amount */\n      dup1\n        /* \"contracts/LandFiStake3.sol\":3836:3846  userStakes */\n      0x06\n        /* \"contracts/LandFiStake3.sol\":3836:3858  userStakes[msg.sender] */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":3847:3857  msg.sender */\n      caller\n        /* \"contracts/LandFiStake3.sol\":3836:3858  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/LandFiStake3.sol\":3836:3868  userStakes[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_260\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_260:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake3.sol\":3894:3900  amount */\n      dup1\n        /* \"contracts/LandFiStake3.sol\":3879:3890  totalStaked */\n      0x05\n      0x00\n        /* \"contracts/LandFiStake3.sol\":3879:3900  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_261\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_261:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake3.sol\":3924:3934  msg.sender */\n      caller\n        /* \"contracts/LandFiStake3.sol\":3918:3943  Stake(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a\n        /* \"contracts/LandFiStake3.sol\":3936:3942  amount */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":3918:3943  Stake(msg.sender, amount) */\n      mload(0x40)\n      tag_262\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_263\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_156\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_263:\n        /* \"contracts/LandFiStake3.sol\":3230:3951  function stake(uint256 amount) external nonReentrant onlyRunning {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":5888:6086  function previewReward(uint256 amount) external view returns (uint256 reward) {... */\n    tag_104:\n        /* \"contracts/LandFiStake3.sol\":5950:5964  uint256 reward */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5996:5997  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5981:5992  totalStaked */\n      sload(0x05)\n        /* \"contracts/LandFiStake3.sol\":5981:5997  totalStaked == 0 */\n      eq\n        /* \"contracts/LandFiStake3.sol\":5981:6012  totalStaked == 0 || amount == 0 */\n      dup1\n      tag_265\n      jumpi\n      pop\n        /* \"contracts/LandFiStake3.sol\":6011:6012  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":6001:6007  amount */\n      dup3\n        /* \"contracts/LandFiStake3.sol\":6001:6012  amount == 0 */\n      eq\n        /* \"contracts/LandFiStake3.sol\":5981:6012  totalStaked == 0 || amount == 0 */\n    tag_265:\n        /* \"contracts/LandFiStake3.sol\":5977:6022  if (totalStaked == 0 || amount == 0) return 0 */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/LandFiStake3.sol\":6021:6022  0 */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":6014:6022  return 0 */\n      swap1\n      pop\n      jump(tag_264)\n        /* \"contracts/LandFiStake3.sol\":5977:6022  if (totalStaked == 0 || amount == 0) return 0 */\n    tag_266:\n        /* \"contracts/LandFiStake3.sol\":6067:6078  totalStaked */\n      sload(0x05)\n        /* \"contracts/LandFiStake3.sol\":6052:6063  rewardTotal */\n      immutable(\"0x1ac5f1ff5c22b675095d7de80c4f0796d8bf1ebc411b96ebd8b39a839de5c12e\")\n        /* \"contracts/LandFiStake3.sol\":6043:6049  amount */\n      dup4\n        /* \"contracts/LandFiStake3.sol\":6043:6063  amount * rewardTotal */\n      tag_267\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_267:\n        /* \"contracts/LandFiStake3.sol\":6042:6078  (amount * rewardTotal) / totalStaked */\n      tag_268\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_268:\n        /* \"contracts/LandFiStake3.sol\":6033:6078  reward = (amount * rewardTotal) / totalStaked */\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":5888:6086  function previewReward(uint256 amount) external view returns (uint256 reward) {... */\n    tag_264:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":5782:5880  function getStakingStatus() external view returns (Status) {... */\n    tag_107:\n        /* \"contracts/LandFiStake3.sol\":5833:5839  Status */\n      0x00\n        /* \"contracts/LandFiStake3.sol\":5859:5872  stakingStatus */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake3.sol\":5852:5872  return stakingStatus */\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":5782:5880  function getStakingStatus() external view returns (Status) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":5671:5774  function getStakedUsers() external view returns (address[] memory) {... */\n    tag_110:\n        /* \"contracts/LandFiStake3.sol\":5720:5736  address[] memory */\n      0x60\n        /* \"contracts/LandFiStake3.sol\":5756:5766  stakedList */\n      0x07\n        /* \"contracts/LandFiStake3.sol\":5749:5766  return stakedList */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_271\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_272:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_272\n      jumpi\n    tag_271:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/LandFiStake3.sol\":5671:5774  function getStakedUsers() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":620:656  uint256 public immutable buyDuration */\n    tag_114:\n      immutable(\"0x1599b065c17883492f21704cb8488060e90dc8dd041de3cfae3e3631a601abed\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":748:781  uint256 public immutable maxStake */\n    tag_117:\n      immutable(\"0x7788a34765a1848103cae61102f343cc0b1a9985ae3a59de22223016042ad663\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_278\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":536:571  IERC20 public immutable rewardToken */\n    tag_123:\n      immutable(\"0x6357266b9d53c0f9af6b7cc53f59dc85b165702d9398eebfa95f674cadfbd638\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":833:869  uint256 public immutable rewardTotal */\n    tag_126:\n      immutable(\"0x1ac5f1ff5c22b675095d7de80c4f0796d8bf1ebc411b96ebd8b39a839de5c12e\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake3.sol\":2966:3200  function completeStaking() external onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_280:\n        /* \"contracts/LandFiStake3.sol\":3076:3089  stakeDuration */\n      immutable(\"0x6dada6d1ec3b2e3878674118e8d86948ebe4d584ee013eb690e56f8e53016879\")\n        /* \"contracts/LandFiStake3.sol\":3062:3073  buyDuration */\n      immutable(\"0x1599b065c17883492f21704cb8488060e90dc8dd041de3cfae3e3631a601abed\")\n        /* \"contracts/LandFiStake3.sol\":3049:3059  launchTime */\n      sload(0x03)\n        /* \"contracts/LandFiStake3.sol\":3049:3073  launchTime + buyDuration */\n      tag_282\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_282:\n        /* \"contracts/LandFiStake3.sol\":3049:3089  launchTime + buyDuration + stakeDuration */\n      tag_283\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_283:\n        /* \"contracts/LandFiStake3.sol\":3031:3046  block.timestamp */\n      timestamp\n        /* \"contracts/LandFiStake3.sol\":3031:3089  block.timestamp > launchTime + buyDuration + stakeDuration */\n      gt\n        /* \"contracts/LandFiStake3.sol\":3023:3109  require(block.timestamp > launchTime + buyDuration + stakeDuration, \"Stake not ended\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"contracts/LandFiStake3.sol\":3136:3151  Status.Complete */\n      0x03\n        /* \"contracts/LandFiStake3.sol\":3120:3133  stakingStatus */\n      0x04\n      0x00\n        /* \"contracts/LandFiStake3.sol\":3120:3151  stakingStatus = Status.Complete */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_287\n      jumpi\n      tag_288\n      tag_139\n      jump\t// in\n    tag_288:\n    tag_287:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake3.sol\":3167:3192  Complete(block.timestamp) */\n      0xaaaf03c480f43393f2414d5013b316f6cc36576bed29ae1ea15d8936dcc0d5e7\n        /* \"contracts/LandFiStake3.sol\":3176:3191  block.timestamp */\n      timestamp\n        /* \"contracts/LandFiStake3.sol\":3167:3192  Complete(block.timestamp) */\n      mload(0x40)\n      tag_289\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/LandFiStake3.sol\":2966:3200  function completeStaking() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_291\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_291:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_293\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_295\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_292\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap1\n      tag_300\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_298:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_303\n      swap3\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_305\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_310\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_305\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_316)\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_320:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_322:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_323:\n        /* \"#utility.yul\":490:514   */\n      tag_381\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_322\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_382:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_324:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_384\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_323\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_43:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_387\n      tag_320\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":766:885   */\n    tag_386:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_388\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_324\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_325:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_326:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_391\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_325\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_327:\n        /* \"#utility.yul\":1346:1370   */\n      tag_393\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_326\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_46:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_395\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_327\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_328:\n        /* \"#utility.yul\":1684:1708   */\n      tag_397\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_326\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_398\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_398:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_329:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_400\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_328\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_49:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_403\n      tag_320\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":1960:2079   */\n    tag_402:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_404\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_329\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2279   */\n    tag_330:\n        /* \"#utility.yul\":2247:2250   */\n      0x00\n        /* \"#utility.yul\":2268:2273   */\n      dup2\n        /* \"#utility.yul\":2261:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2285:2427   */\n    tag_331:\n        /* \"#utility.yul\":2335:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2421   */\n      tag_407\n        /* \"#utility.yul\":2386:2420   */\n      tag_408\n        /* \"#utility.yul\":2395:2419   */\n      tag_409\n        /* \"#utility.yul\":2413:2418   */\n      dup5\n        /* \"#utility.yul\":2395:2419   */\n      tag_325\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":2386:2420   */\n      tag_330\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":2368:2421   */\n      tag_325\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2355:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2559   */\n    tag_332:\n        /* \"#utility.yul\":2483:2492   */\n      0x00\n        /* \"#utility.yul\":2516:2553   */\n      tag_411\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2516:2553   */\n      tag_331\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":2503:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2705   */\n    tag_333:\n        /* \"#utility.yul\":2629:2638   */\n      0x00\n        /* \"#utility.yul\":2662:2699   */\n      tag_413\n        /* \"#utility.yul\":2693:2698   */\n      dup3\n        /* \"#utility.yul\":2662:2699   */\n      tag_332\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":2649:2699   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:2870   */\n    tag_334:\n        /* \"#utility.yul\":2812:2863   */\n      tag_415\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2812:2863   */\n      tag_333\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2807:2810   */\n      dup3\n        /* \"#utility.yul\":2800:2864   */\n      mstore\n        /* \"#utility.yul\":2711:2870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:3126   */\n    tag_54:\n        /* \"#utility.yul\":2983:2987   */\n      0x00\n        /* \"#utility.yul\":3021:3023   */\n      0x20\n        /* \"#utility.yul\":3010:3019   */\n      dup3\n        /* \"#utility.yul\":3006:3024   */\n      add\n        /* \"#utility.yul\":2998:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3119   */\n      tag_417\n        /* \"#utility.yul\":3116:3117   */\n      0x00\n        /* \"#utility.yul\":3105:3114   */\n      dup4\n        /* \"#utility.yul\":3101:3118   */\n      add\n        /* \"#utility.yul\":3092:3098   */\n      dup5\n        /* \"#utility.yul\":3034:3119   */\n      tag_334\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":2876:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3250   */\n    tag_335:\n        /* \"#utility.yul\":3219:3243   */\n      tag_419\n        /* \"#utility.yul\":3237:3242   */\n      dup2\n        /* \"#utility.yul\":3219:3243   */\n      tag_322\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":3214:3217   */\n      dup3\n        /* \"#utility.yul\":3207:3244   */\n      mstore\n        /* \"#utility.yul\":3132:3250   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3256:3478   */\n    tag_58:\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3376:3385   */\n      dup3\n        /* \"#utility.yul\":3372:3390   */\n      add\n        /* \"#utility.yul\":3364:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3471   */\n      tag_421\n        /* \"#utility.yul\":3468:3469   */\n      0x00\n        /* \"#utility.yul\":3457:3466   */\n      dup4\n        /* \"#utility.yul\":3453:3470   */\n      add\n        /* \"#utility.yul\":3444:3450   */\n      dup5\n        /* \"#utility.yul\":3400:3471   */\n      tag_335\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":3256:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3664   */\n    tag_139:\n        /* \"#utility.yul\":3532:3609   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3529:3530   */\n      0x00\n        /* \"#utility.yul\":3522:3610   */\n      mstore\n        /* \"#utility.yul\":3629:3633   */\n      0x21\n        /* \"#utility.yul\":3626:3627   */\n      0x04\n        /* \"#utility.yul\":3619:3634   */\n      mstore\n        /* \"#utility.yul\":3653:3657   */\n      0x24\n        /* \"#utility.yul\":3650:3651   */\n      0x00\n        /* \"#utility.yul\":3643:3658   */\n      revert\n        /* \"#utility.yul\":3670:3785   */\n    tag_336:\n        /* \"#utility.yul\":3753:3754   */\n      0x04\n        /* \"#utility.yul\":3746:3751   */\n      dup2\n        /* \"#utility.yul\":3743:3755   */\n      lt\n        /* \"#utility.yul\":3733:3779   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":3759:3777   */\n      tag_425\n      tag_139\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":3733:3779   */\n    tag_424:\n        /* \"#utility.yul\":3670:3785   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3791:3922   */\n    tag_337:\n        /* \"#utility.yul\":3838:3845   */\n      0x00\n        /* \"#utility.yul\":3867:3872   */\n      dup2\n        /* \"#utility.yul\":3856:3872   */\n      swap1\n      pop\n        /* \"#utility.yul\":3873:3916   */\n      tag_427\n        /* \"#utility.yul\":3910:3915   */\n      dup3\n        /* \"#utility.yul\":3873:3916   */\n      tag_336\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":3791:3922   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3928:4059   */\n    tag_338:\n        /* \"#utility.yul\":3986:3995   */\n      0x00\n        /* \"#utility.yul\":4019:4053   */\n      tag_429\n        /* \"#utility.yul\":4047:4052   */\n      dup3\n        /* \"#utility.yul\":4019:4053   */\n      tag_337\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":4006:4053   */\n      swap1\n      pop\n        /* \"#utility.yul\":3928:4059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4065:4212   */\n    tag_339:\n        /* \"#utility.yul\":4160:4205   */\n      tag_431\n        /* \"#utility.yul\":4199:4204   */\n      dup2\n        /* \"#utility.yul\":4160:4205   */\n      tag_338\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":4155:4158   */\n      dup3\n        /* \"#utility.yul\":4148:4206   */\n      mstore\n        /* \"#utility.yul\":4065:4212   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4218:4456   */\n    tag_67:\n        /* \"#utility.yul\":4319:4323   */\n      0x00\n        /* \"#utility.yul\":4357:4359   */\n      0x20\n        /* \"#utility.yul\":4346:4355   */\n      dup3\n        /* \"#utility.yul\":4342:4360   */\n      add\n        /* \"#utility.yul\":4334:4360   */\n      swap1\n      pop\n        /* \"#utility.yul\":4370:4449   */\n      tag_433\n        /* \"#utility.yul\":4446:4447   */\n      0x00\n        /* \"#utility.yul\":4435:4444   */\n      dup4\n        /* \"#utility.yul\":4431:4448   */\n      add\n        /* \"#utility.yul\":4422:4428   */\n      dup5\n        /* \"#utility.yul\":4370:4449   */\n      tag_339\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4218:4456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4462:4552   */\n    tag_340:\n        /* \"#utility.yul\":4496:4503   */\n      0x00\n        /* \"#utility.yul\":4539:4544   */\n      dup2\n        /* \"#utility.yul\":4532:4545   */\n      iszero\n        /* \"#utility.yul\":4525:4546   */\n      iszero\n        /* \"#utility.yul\":4514:4546   */\n      swap1\n      pop\n        /* \"#utility.yul\":4462:4552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4558:4667   */\n    tag_341:\n        /* \"#utility.yul\":4639:4660   */\n      tag_436\n        /* \"#utility.yul\":4654:4659   */\n      dup2\n        /* \"#utility.yul\":4639:4660   */\n      tag_340\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":4634:4637   */\n      dup3\n        /* \"#utility.yul\":4627:4661   */\n      mstore\n        /* \"#utility.yul\":4558:4667   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4673:4883   */\n    tag_98:\n        /* \"#utility.yul\":4760:4764   */\n      0x00\n        /* \"#utility.yul\":4798:4800   */\n      0x20\n        /* \"#utility.yul\":4787:4796   */\n      dup3\n        /* \"#utility.yul\":4783:4801   */\n      add\n        /* \"#utility.yul\":4775:4801   */\n      swap1\n      pop\n        /* \"#utility.yul\":4811:4876   */\n      tag_438\n        /* \"#utility.yul\":4873:4874   */\n      0x00\n        /* \"#utility.yul\":4862:4871   */\n      dup4\n        /* \"#utility.yul\":4858:4875   */\n      add\n        /* \"#utility.yul\":4849:4855   */\n      dup5\n        /* \"#utility.yul\":4811:4876   */\n      tag_341\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4673:4883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4889:5003   */\n    tag_342:\n        /* \"#utility.yul\":4956:4962   */\n      0x00\n        /* \"#utility.yul\":4990:4995   */\n      dup2\n        /* \"#utility.yul\":4984:4996   */\n      mload\n        /* \"#utility.yul\":4974:4996   */\n      swap1\n      pop\n        /* \"#utility.yul\":4889:5003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5009:5193   */\n    tag_343:\n        /* \"#utility.yul\":5108:5119   */\n      0x00\n        /* \"#utility.yul\":5142:5148   */\n      dup3\n        /* \"#utility.yul\":5137:5140   */\n      dup3\n        /* \"#utility.yul\":5130:5149   */\n      mstore\n        /* \"#utility.yul\":5182:5186   */\n      0x20\n        /* \"#utility.yul\":5177:5180   */\n      dup3\n        /* \"#utility.yul\":5173:5187   */\n      add\n        /* \"#utility.yul\":5158:5187   */\n      swap1\n      pop\n        /* \"#utility.yul\":5009:5193   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5199:5331   */\n    tag_344:\n        /* \"#utility.yul\":5266:5270   */\n      0x00\n        /* \"#utility.yul\":5289:5292   */\n      dup2\n        /* \"#utility.yul\":5281:5292   */\n      swap1\n      pop\n        /* \"#utility.yul\":5319:5323   */\n      0x20\n        /* \"#utility.yul\":5314:5317   */\n      dup3\n        /* \"#utility.yul\":5310:5324   */\n      add\n        /* \"#utility.yul\":5302:5324   */\n      swap1\n      pop\n        /* \"#utility.yul\":5199:5331   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5337:5445   */\n    tag_345:\n        /* \"#utility.yul\":5414:5438   */\n      tag_443\n        /* \"#utility.yul\":5432:5437   */\n      dup2\n        /* \"#utility.yul\":5414:5438   */\n      tag_326\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5409:5412   */\n      dup3\n        /* \"#utility.yul\":5402:5439   */\n      mstore\n        /* \"#utility.yul\":5337:5445   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5451:5630   */\n    tag_346:\n        /* \"#utility.yul\":5520:5530   */\n      0x00\n        /* \"#utility.yul\":5541:5587   */\n      tag_445\n        /* \"#utility.yul\":5583:5586   */\n      dup4\n        /* \"#utility.yul\":5575:5581   */\n      dup4\n        /* \"#utility.yul\":5541:5587   */\n      tag_345\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":5619:5623   */\n      0x20\n        /* \"#utility.yul\":5614:5617   */\n      dup4\n        /* \"#utility.yul\":5610:5624   */\n      add\n        /* \"#utility.yul\":5596:5624   */\n      swap1\n      pop\n        /* \"#utility.yul\":5451:5630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5636:5749   */\n    tag_347:\n        /* \"#utility.yul\":5706:5710   */\n      0x00\n        /* \"#utility.yul\":5738:5742   */\n      0x20\n        /* \"#utility.yul\":5733:5736   */\n      dup3\n        /* \"#utility.yul\":5729:5743   */\n      add\n        /* \"#utility.yul\":5721:5743   */\n      swap1\n      pop\n        /* \"#utility.yul\":5636:5749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5785:6517   */\n    tag_348:\n        /* \"#utility.yul\":5904:5907   */\n      0x00\n        /* \"#utility.yul\":5933:5987   */\n      tag_448\n        /* \"#utility.yul\":5981:5986   */\n      dup3\n        /* \"#utility.yul\":5933:5987   */\n      tag_342\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":6003:6089   */\n      tag_449\n        /* \"#utility.yul\":6082:6088   */\n      dup2\n        /* \"#utility.yul\":6077:6080   */\n      dup6\n        /* \"#utility.yul\":6003:6089   */\n      tag_343\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5996:6089   */\n      swap4\n      pop\n        /* \"#utility.yul\":6113:6169   */\n      tag_450\n        /* \"#utility.yul\":6163:6168   */\n      dup4\n        /* \"#utility.yul\":6113:6169   */\n      tag_344\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6192:6199   */\n      dup1\n        /* \"#utility.yul\":6223:6224   */\n      0x00\n        /* \"#utility.yul\":6208:6492   */\n    tag_451:\n        /* \"#utility.yul\":6233:6239   */\n      dup4\n        /* \"#utility.yul\":6230:6231   */\n      dup2\n        /* \"#utility.yul\":6227:6240   */\n      lt\n        /* \"#utility.yul\":6208:6492   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":6309:6315   */\n      dup2\n        /* \"#utility.yul\":6303:6316   */\n      mload\n        /* \"#utility.yul\":6336:6399   */\n      tag_454\n        /* \"#utility.yul\":6395:6398   */\n      dup9\n        /* \"#utility.yul\":6380:6393   */\n      dup3\n        /* \"#utility.yul\":6336:6399   */\n      tag_346\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":6329:6399   */\n      swap8\n      pop\n        /* \"#utility.yul\":6422:6482   */\n      tag_455\n        /* \"#utility.yul\":6475:6481   */\n      dup4\n        /* \"#utility.yul\":6422:6482   */\n      tag_347\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":6412:6482   */\n      swap3\n      pop\n        /* \"#utility.yul\":6268:6492   */\n      pop\n        /* \"#utility.yul\":6255:6256   */\n      0x01\n        /* \"#utility.yul\":6252:6253   */\n      dup2\n        /* \"#utility.yul\":6248:6257   */\n      add\n        /* \"#utility.yul\":6243:6257   */\n      swap1\n      pop\n        /* \"#utility.yul\":6208:6492   */\n      jump(tag_451)\n    tag_453:\n        /* \"#utility.yul\":6212:6226   */\n      pop\n        /* \"#utility.yul\":6508:6511   */\n      dup6\n        /* \"#utility.yul\":6501:6511   */\n      swap4\n      pop\n        /* \"#utility.yul\":5909:6517   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5785:6517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6523:6896   */\n    tag_112:\n        /* \"#utility.yul\":6666:6670   */\n      0x00\n        /* \"#utility.yul\":6704:6706   */\n      0x20\n        /* \"#utility.yul\":6693:6702   */\n      dup3\n        /* \"#utility.yul\":6689:6707   */\n      add\n        /* \"#utility.yul\":6681:6707   */\n      swap1\n      pop\n        /* \"#utility.yul\":6753:6762   */\n      dup2\n        /* \"#utility.yul\":6747:6751   */\n      dup2\n        /* \"#utility.yul\":6743:6763   */\n      sub\n        /* \"#utility.yul\":6739:6740   */\n      0x00\n        /* \"#utility.yul\":6728:6737   */\n      dup4\n        /* \"#utility.yul\":6724:6741   */\n      add\n        /* \"#utility.yul\":6717:6764   */\n      mstore\n        /* \"#utility.yul\":6781:6889   */\n      tag_457\n        /* \"#utility.yul\":6884:6888   */\n      dup2\n        /* \"#utility.yul\":6875:6881   */\n      dup5\n        /* \"#utility.yul\":6781:6889   */\n      tag_348\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6773:6889   */\n      swap1\n      pop\n        /* \"#utility.yul\":6523:6896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6902:7071   */\n    tag_349:\n        /* \"#utility.yul\":6986:6997   */\n      0x00\n        /* \"#utility.yul\":7020:7026   */\n      dup3\n        /* \"#utility.yul\":7015:7018   */\n      dup3\n        /* \"#utility.yul\":7008:7027   */\n      mstore\n        /* \"#utility.yul\":7060:7064   */\n      0x20\n        /* \"#utility.yul\":7055:7058   */\n      dup3\n        /* \"#utility.yul\":7051:7065   */\n      add\n        /* \"#utility.yul\":7036:7065   */\n      swap1\n      pop\n        /* \"#utility.yul\":6902:7071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7077:7243   */\n    tag_350:\n        /* \"#utility.yul\":7217:7235   */\n      0x416c7265616479206c61756e6368656400000000000000000000000000000000\n        /* \"#utility.yul\":7213:7214   */\n      0x00\n        /* \"#utility.yul\":7205:7211   */\n      dup3\n        /* \"#utility.yul\":7201:7215   */\n      add\n        /* \"#utility.yul\":7194:7236   */\n      mstore\n        /* \"#utility.yul\":7077:7243   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7249:7615   */\n    tag_351:\n        /* \"#utility.yul\":7391:7394   */\n      0x00\n        /* \"#utility.yul\":7412:7479   */\n      tag_461\n        /* \"#utility.yul\":7476:7478   */\n      0x10\n        /* \"#utility.yul\":7471:7474   */\n      dup4\n        /* \"#utility.yul\":7412:7479   */\n      tag_349\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":7405:7479   */\n      swap2\n      pop\n        /* \"#utility.yul\":7488:7581   */\n      tag_462\n        /* \"#utility.yul\":7577:7580   */\n      dup3\n        /* \"#utility.yul\":7488:7581   */\n      tag_350\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":7606:7608   */\n      0x20\n        /* \"#utility.yul\":7601:7604   */\n      dup3\n        /* \"#utility.yul\":7597:7609   */\n      add\n        /* \"#utility.yul\":7590:7609   */\n      swap1\n      pop\n        /* \"#utility.yul\":7249:7615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7621:8040   */\n    tag_136:\n        /* \"#utility.yul\":7787:7791   */\n      0x00\n        /* \"#utility.yul\":7825:7827   */\n      0x20\n        /* \"#utility.yul\":7814:7823   */\n      dup3\n        /* \"#utility.yul\":7810:7828   */\n      add\n        /* \"#utility.yul\":7802:7828   */\n      swap1\n      pop\n        /* \"#utility.yul\":7874:7883   */\n      dup2\n        /* \"#utility.yul\":7868:7872   */\n      dup2\n        /* \"#utility.yul\":7864:7884   */\n      sub\n        /* \"#utility.yul\":7860:7861   */\n      0x00\n        /* \"#utility.yul\":7849:7858   */\n      dup4\n        /* \"#utility.yul\":7845:7862   */\n      add\n        /* \"#utility.yul\":7838:7885   */\n      mstore\n        /* \"#utility.yul\":7902:8033   */\n      tag_464\n        /* \"#utility.yul\":8028:8032   */\n      dup2\n        /* \"#utility.yul\":7902:8033   */\n      tag_351\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":7894:8033   */\n      swap1\n      pop\n        /* \"#utility.yul\":7621:8040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8046:8216   */\n    tag_352:\n        /* \"#utility.yul\":8186:8208   */\n      0x4e6f7468696e6720746f207465726d696e617465000000000000000000000000\n        /* \"#utility.yul\":8182:8183   */\n      0x00\n        /* \"#utility.yul\":8174:8180   */\n      dup3\n        /* \"#utility.yul\":8170:8184   */\n      add\n        /* \"#utility.yul\":8163:8209   */\n      mstore\n        /* \"#utility.yul\":8046:8216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8222:8588   */\n    tag_353:\n        /* \"#utility.yul\":8364:8367   */\n      0x00\n        /* \"#utility.yul\":8385:8452   */\n      tag_467\n        /* \"#utility.yul\":8449:8451   */\n      0x14\n        /* \"#utility.yul\":8444:8447   */\n      dup4\n        /* \"#utility.yul\":8385:8452   */\n      tag_349\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":8378:8452   */\n      swap2\n      pop\n        /* \"#utility.yul\":8461:8554   */\n      tag_468\n        /* \"#utility.yul\":8550:8553   */\n      dup3\n        /* \"#utility.yul\":8461:8554   */\n      tag_352\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":8579:8581   */\n      0x20\n        /* \"#utility.yul\":8574:8577   */\n      dup3\n        /* \"#utility.yul\":8570:8582   */\n      add\n        /* \"#utility.yul\":8563:8582   */\n      swap1\n      pop\n        /* \"#utility.yul\":8222:8588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8594:9013   */\n    tag_151:\n        /* \"#utility.yul\":8760:8764   */\n      0x00\n        /* \"#utility.yul\":8798:8800   */\n      0x20\n        /* \"#utility.yul\":8787:8796   */\n      dup3\n        /* \"#utility.yul\":8783:8801   */\n      add\n        /* \"#utility.yul\":8775:8801   */\n      swap1\n      pop\n        /* \"#utility.yul\":8847:8856   */\n      dup2\n        /* \"#utility.yul\":8841:8845   */\n      dup2\n        /* \"#utility.yul\":8837:8857   */\n      sub\n        /* \"#utility.yul\":8833:8834   */\n      0x00\n        /* \"#utility.yul\":8822:8831   */\n      dup4\n        /* \"#utility.yul\":8818:8835   */\n      add\n        /* \"#utility.yul\":8811:8858   */\n      mstore\n        /* \"#utility.yul\":8875:9006   */\n      tag_470\n        /* \"#utility.yul\":9001:9005   */\n      dup2\n        /* \"#utility.yul\":8875:9006   */\n      tag_353\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":8867:9006   */\n      swap1\n      pop\n        /* \"#utility.yul\":8594:9013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9019:9199   */\n    tag_172:\n        /* \"#utility.yul\":9067:9144   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9064:9065   */\n      0x00\n        /* \"#utility.yul\":9057:9145   */\n      mstore\n        /* \"#utility.yul\":9164:9168   */\n      0x32\n        /* \"#utility.yul\":9161:9162   */\n      0x04\n        /* \"#utility.yul\":9154:9169   */\n      mstore\n        /* \"#utility.yul\":9188:9192   */\n      0x24\n        /* \"#utility.yul\":9185:9186   */\n      0x00\n        /* \"#utility.yul\":9178:9193   */\n      revert\n        /* \"#utility.yul\":9205:9375   */\n    tag_354:\n        /* \"#utility.yul\":9345:9367   */\n      0x5374616b696e67206e6f7420636f6d706c657465000000000000000000000000\n        /* \"#utility.yul\":9341:9342   */\n      0x00\n        /* \"#utility.yul\":9333:9339   */\n      dup3\n        /* \"#utility.yul\":9329:9343   */\n      add\n        /* \"#utility.yul\":9322:9368   */\n      mstore\n        /* \"#utility.yul\":9205:9375   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9381:9747   */\n    tag_355:\n        /* \"#utility.yul\":9523:9526   */\n      0x00\n        /* \"#utility.yul\":9544:9611   */\n      tag_474\n        /* \"#utility.yul\":9608:9610   */\n      0x14\n        /* \"#utility.yul\":9603:9606   */\n      dup4\n        /* \"#utility.yul\":9544:9611   */\n      tag_349\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":9537:9611   */\n      swap2\n      pop\n        /* \"#utility.yul\":9620:9713   */\n      tag_475\n        /* \"#utility.yul\":9709:9712   */\n      dup3\n        /* \"#utility.yul\":9620:9713   */\n      tag_354\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":9738:9740   */\n      0x20\n        /* \"#utility.yul\":9733:9736   */\n      dup3\n        /* \"#utility.yul\":9729:9741   */\n      add\n        /* \"#utility.yul\":9722:9741   */\n      swap1\n      pop\n        /* \"#utility.yul\":9381:9747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9753:10172   */\n    tag_191:\n        /* \"#utility.yul\":9919:9923   */\n      0x00\n        /* \"#utility.yul\":9957:9959   */\n      0x20\n        /* \"#utility.yul\":9946:9955   */\n      dup3\n        /* \"#utility.yul\":9942:9960   */\n      add\n        /* \"#utility.yul\":9934:9960   */\n      swap1\n      pop\n        /* \"#utility.yul\":10006:10015   */\n      dup2\n        /* \"#utility.yul\":10000:10004   */\n      dup2\n        /* \"#utility.yul\":9996:10016   */\n      sub\n        /* \"#utility.yul\":9992:9993   */\n      0x00\n        /* \"#utility.yul\":9981:9990   */\n      dup4\n        /* \"#utility.yul\":9977:9994   */\n      add\n        /* \"#utility.yul\":9970:10017   */\n      mstore\n        /* \"#utility.yul\":10034:10165   */\n      tag_477\n        /* \"#utility.yul\":10160:10164   */\n      dup2\n        /* \"#utility.yul\":10034:10165   */\n      tag_355\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":10026:10165   */\n      swap1\n      pop\n        /* \"#utility.yul\":9753:10172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10178:10358   */\n    tag_356:\n        /* \"#utility.yul\":10226:10303   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10223:10224   */\n      0x00\n        /* \"#utility.yul\":10216:10304   */\n      mstore\n        /* \"#utility.yul\":10323:10327   */\n      0x11\n        /* \"#utility.yul\":10320:10321   */\n      0x04\n        /* \"#utility.yul\":10313:10328   */\n      mstore\n        /* \"#utility.yul\":10347:10351   */\n      0x24\n        /* \"#utility.yul\":10344:10345   */\n      0x00\n        /* \"#utility.yul\":10337:10352   */\n      revert\n        /* \"#utility.yul\":10364:10774   */\n    tag_200:\n        /* \"#utility.yul\":10404:10411   */\n      0x00\n        /* \"#utility.yul\":10427:10447   */\n      tag_480\n        /* \"#utility.yul\":10445:10446   */\n      dup3\n        /* \"#utility.yul\":10427:10447   */\n      tag_322\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":10422:10447   */\n      swap2\n      pop\n        /* \"#utility.yul\":10461:10481   */\n      tag_481\n        /* \"#utility.yul\":10479:10480   */\n      dup4\n        /* \"#utility.yul\":10461:10481   */\n      tag_322\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":10456:10481   */\n      swap3\n      pop\n        /* \"#utility.yul\":10516:10517   */\n      dup3\n        /* \"#utility.yul\":10513:10514   */\n      dup3\n        /* \"#utility.yul\":10509:10518   */\n      mul\n        /* \"#utility.yul\":10538:10568   */\n      tag_482\n        /* \"#utility.yul\":10556:10567   */\n      dup2\n        /* \"#utility.yul\":10538:10568   */\n      tag_322\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":10527:10568   */\n      swap2\n      pop\n        /* \"#utility.yul\":10717:10718   */\n      dup3\n        /* \"#utility.yul\":10708:10715   */\n      dup3\n        /* \"#utility.yul\":10704:10719   */\n      div\n        /* \"#utility.yul\":10701:10702   */\n      dup5\n        /* \"#utility.yul\":10698:10720   */\n      eq\n        /* \"#utility.yul\":10678:10679   */\n      dup4\n        /* \"#utility.yul\":10671:10680   */\n      iszero\n        /* \"#utility.yul\":10651:10734   */\n      or\n        /* \"#utility.yul\":10628:10767   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":10747:10765   */\n      tag_484\n      tag_356\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":10628:10767   */\n    tag_483:\n        /* \"#utility.yul\":10412:10774   */\n      pop\n        /* \"#utility.yul\":10364:10774   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10780:10960   */\n    tag_357:\n        /* \"#utility.yul\":10828:10905   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10825:10826   */\n      0x00\n        /* \"#utility.yul\":10818:10906   */\n      mstore\n        /* \"#utility.yul\":10925:10929   */\n      0x12\n        /* \"#utility.yul\":10922:10923   */\n      0x04\n        /* \"#utility.yul\":10915:10930   */\n      mstore\n        /* \"#utility.yul\":10949:10953   */\n      0x24\n        /* \"#utility.yul\":10946:10947   */\n      0x00\n        /* \"#utility.yul\":10939:10954   */\n      revert\n        /* \"#utility.yul\":10966:11151   */\n    tag_202:\n        /* \"#utility.yul\":11006:11007   */\n      0x00\n        /* \"#utility.yul\":11023:11043   */\n      tag_487\n        /* \"#utility.yul\":11041:11042   */\n      dup3\n        /* \"#utility.yul\":11023:11043   */\n      tag_322\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":11018:11043   */\n      swap2\n      pop\n        /* \"#utility.yul\":11057:11077   */\n      tag_488\n        /* \"#utility.yul\":11075:11076   */\n      dup4\n        /* \"#utility.yul\":11057:11077   */\n      tag_322\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":11052:11077   */\n      swap3\n      pop\n        /* \"#utility.yul\":11096:11097   */\n      dup3\n        /* \"#utility.yul\":11086:11121   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":11101:11119   */\n      tag_490\n      tag_357\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":11086:11121   */\n    tag_489:\n        /* \"#utility.yul\":11143:11144   */\n      dup3\n        /* \"#utility.yul\":11140:11141   */\n      dup3\n        /* \"#utility.yul\":11136:11145   */\n      div\n        /* \"#utility.yul\":11131:11145   */\n      swap1\n      pop\n        /* \"#utility.yul\":10966:11151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11157:11489   */\n    tag_206:\n        /* \"#utility.yul\":11278:11282   */\n      0x00\n        /* \"#utility.yul\":11316:11318   */\n      0x40\n        /* \"#utility.yul\":11305:11314   */\n      dup3\n        /* \"#utility.yul\":11301:11319   */\n      add\n        /* \"#utility.yul\":11293:11319   */\n      swap1\n      pop\n        /* \"#utility.yul\":11329:11400   */\n      tag_492\n        /* \"#utility.yul\":11397:11398   */\n      0x00\n        /* \"#utility.yul\":11386:11395   */\n      dup4\n        /* \"#utility.yul\":11382:11399   */\n      add\n        /* \"#utility.yul\":11373:11379   */\n      dup6\n        /* \"#utility.yul\":11329:11400   */\n      tag_335\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":11410:11482   */\n      tag_493\n        /* \"#utility.yul\":11478:11480   */\n      0x20\n        /* \"#utility.yul\":11467:11476   */\n      dup4\n        /* \"#utility.yul\":11463:11481   */\n      add\n        /* \"#utility.yul\":11454:11460   */\n      dup5\n        /* \"#utility.yul\":11410:11482   */\n      tag_335\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":11157:11489   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11495:11638   */\n    tag_358:\n        /* \"#utility.yul\":11552:11557   */\n      0x00\n        /* \"#utility.yul\":11583:11589   */\n      dup2\n        /* \"#utility.yul\":11577:11590   */\n      mload\n        /* \"#utility.yul\":11568:11590   */\n      swap1\n      pop\n        /* \"#utility.yul\":11599:11632   */\n      tag_495\n        /* \"#utility.yul\":11626:11631   */\n      dup2\n        /* \"#utility.yul\":11599:11632   */\n      tag_323\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":11495:11638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11644:11995   */\n    tag_211:\n        /* \"#utility.yul\":11714:11720   */\n      0x00\n        /* \"#utility.yul\":11763:11765   */\n      0x20\n        /* \"#utility.yul\":11751:11760   */\n      dup3\n        /* \"#utility.yul\":11742:11749   */\n      dup5\n        /* \"#utility.yul\":11738:11761   */\n      sub\n        /* \"#utility.yul\":11734:11766   */\n      slt\n        /* \"#utility.yul\":11731:11850   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":11769:11848   */\n      tag_498\n      tag_320\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":11731:11850   */\n    tag_497:\n        /* \"#utility.yul\":11889:11890   */\n      0x00\n        /* \"#utility.yul\":11914:11978   */\n      tag_499\n        /* \"#utility.yul\":11970:11977   */\n      dup5\n        /* \"#utility.yul\":11961:11967   */\n      dup3\n        /* \"#utility.yul\":11950:11959   */\n      dup6\n        /* \"#utility.yul\":11946:11968   */\n      add\n        /* \"#utility.yul\":11914:11978   */\n      tag_358\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":11904:11978   */\n      swap2\n      pop\n        /* \"#utility.yul\":11860:11988   */\n      pop\n        /* \"#utility.yul\":11644:11995   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12001:12169   */\n    tag_359:\n        /* \"#utility.yul\":12141:12161   */\n      0x5374616b696e67206e6f74206163746976650000000000000000000000000000\n        /* \"#utility.yul\":12137:12138   */\n      0x00\n        /* \"#utility.yul\":12129:12135   */\n      dup3\n        /* \"#utility.yul\":12125:12139   */\n      add\n        /* \"#utility.yul\":12118:12162   */\n      mstore\n        /* \"#utility.yul\":12001:12169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12175:12541   */\n    tag_360:\n        /* \"#utility.yul\":12317:12320   */\n      0x00\n        /* \"#utility.yul\":12338:12405   */\n      tag_502\n        /* \"#utility.yul\":12402:12404   */\n      0x12\n        /* \"#utility.yul\":12397:12400   */\n      dup4\n        /* \"#utility.yul\":12338:12405   */\n      tag_349\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":12331:12405   */\n      swap2\n      pop\n        /* \"#utility.yul\":12414:12507   */\n      tag_503\n        /* \"#utility.yul\":12503:12506   */\n      dup3\n        /* \"#utility.yul\":12414:12507   */\n      tag_359\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":12532:12534   */\n      0x20\n        /* \"#utility.yul\":12527:12530   */\n      dup3\n        /* \"#utility.yul\":12523:12535   */\n      add\n        /* \"#utility.yul\":12516:12535   */\n      swap1\n      pop\n        /* \"#utility.yul\":12175:12541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12547:12966   */\n    tag_235:\n        /* \"#utility.yul\":12713:12717   */\n      0x00\n        /* \"#utility.yul\":12751:12753   */\n      0x20\n        /* \"#utility.yul\":12740:12749   */\n      dup3\n        /* \"#utility.yul\":12736:12754   */\n      add\n        /* \"#utility.yul\":12728:12754   */\n      swap1\n      pop\n        /* \"#utility.yul\":12800:12809   */\n      dup2\n        /* \"#utility.yul\":12794:12798   */\n      dup2\n        /* \"#utility.yul\":12790:12810   */\n      sub\n        /* \"#utility.yul\":12786:12787   */\n      0x00\n        /* \"#utility.yul\":12775:12784   */\n      dup4\n        /* \"#utility.yul\":12771:12788   */\n      add\n        /* \"#utility.yul\":12764:12811   */\n      mstore\n        /* \"#utility.yul\":12828:12959   */\n      tag_505\n        /* \"#utility.yul\":12954:12958   */\n      dup2\n        /* \"#utility.yul\":12828:12959   */\n      tag_360\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":12820:12959   */\n      swap1\n      pop\n        /* \"#utility.yul\":12547:12966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12972:13138   */\n    tag_361:\n        /* \"#utility.yul\":13112:13130   */\n      0x5374616b696e67206e6f74206c69766500000000000000000000000000000000\n        /* \"#utility.yul\":13108:13109   */\n      0x00\n        /* \"#utility.yul\":13100:13106   */\n      dup3\n        /* \"#utility.yul\":13096:13110   */\n      add\n        /* \"#utility.yul\":13089:13131   */\n      mstore\n        /* \"#utility.yul\":12972:13138   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13144:13510   */\n    tag_362:\n        /* \"#utility.yul\":13286:13289   */\n      0x00\n        /* \"#utility.yul\":13307:13374   */\n      tag_508\n        /* \"#utility.yul\":13371:13373   */\n      0x10\n        /* \"#utility.yul\":13366:13369   */\n      dup4\n        /* \"#utility.yul\":13307:13374   */\n      tag_349\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":13300:13374   */\n      swap2\n      pop\n        /* \"#utility.yul\":13383:13476   */\n      tag_509\n        /* \"#utility.yul\":13472:13475   */\n      dup3\n        /* \"#utility.yul\":13383:13476   */\n      tag_361\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":13501:13503   */\n      0x20\n        /* \"#utility.yul\":13496:13499   */\n      dup3\n        /* \"#utility.yul\":13492:13504   */\n      add\n        /* \"#utility.yul\":13485:13504   */\n      swap1\n      pop\n        /* \"#utility.yul\":13144:13510   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13516:13935   */\n    tag_239:\n        /* \"#utility.yul\":13682:13686   */\n      0x00\n        /* \"#utility.yul\":13720:13722   */\n      0x20\n        /* \"#utility.yul\":13709:13718   */\n      dup3\n        /* \"#utility.yul\":13705:13723   */\n      add\n        /* \"#utility.yul\":13697:13723   */\n      swap1\n      pop\n        /* \"#utility.yul\":13769:13778   */\n      dup2\n        /* \"#utility.yul\":13763:13767   */\n      dup2\n        /* \"#utility.yul\":13759:13779   */\n      sub\n        /* \"#utility.yul\":13755:13756   */\n      0x00\n        /* \"#utility.yul\":13744:13753   */\n      dup4\n        /* \"#utility.yul\":13740:13757   */\n      add\n        /* \"#utility.yul\":13733:13780   */\n      mstore\n        /* \"#utility.yul\":13797:13928   */\n      tag_511\n        /* \"#utility.yul\":13923:13927   */\n      dup2\n        /* \"#utility.yul\":13797:13928   */\n      tag_362\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":13789:13928   */\n      swap1\n      pop\n        /* \"#utility.yul\":13516:13935   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13941:14132   */\n    tag_241:\n        /* \"#utility.yul\":13981:13984   */\n      0x00\n        /* \"#utility.yul\":14000:14020   */\n      tag_513\n        /* \"#utility.yul\":14018:14019   */\n      dup3\n        /* \"#utility.yul\":14000:14020   */\n      tag_322\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":13995:14020   */\n      swap2\n      pop\n        /* \"#utility.yul\":14034:14054   */\n      tag_514\n        /* \"#utility.yul\":14052:14053   */\n      dup4\n        /* \"#utility.yul\":14034:14054   */\n      tag_322\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":14029:14054   */\n      swap3\n      pop\n        /* \"#utility.yul\":14077:14078   */\n      dup3\n        /* \"#utility.yul\":14074:14075   */\n      dup3\n        /* \"#utility.yul\":14070:14079   */\n      add\n        /* \"#utility.yul\":14063:14079   */\n      swap1\n      pop\n        /* \"#utility.yul\":14098:14101   */\n      dup1\n        /* \"#utility.yul\":14095:14096   */\n      dup3\n        /* \"#utility.yul\":14092:14102   */\n      gt\n        /* \"#utility.yul\":14089:14125   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":14105:14123   */\n      tag_516\n      tag_356\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":14089:14125   */\n    tag_515:\n        /* \"#utility.yul\":13941:14132   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14138:14303   */\n    tag_363:\n        /* \"#utility.yul\":14278:14295   */\n      0x42757920706572696f64206f7665720000000000000000000000000000000000\n        /* \"#utility.yul\":14274:14275   */\n      0x00\n        /* \"#utility.yul\":14266:14272   */\n      dup3\n        /* \"#utility.yul\":14262:14276   */\n      add\n        /* \"#utility.yul\":14255:14296   */\n      mstore\n        /* \"#utility.yul\":14138:14303   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14309:14675   */\n    tag_364:\n        /* \"#utility.yul\":14451:14454   */\n      0x00\n        /* \"#utility.yul\":14472:14539   */\n      tag_519\n        /* \"#utility.yul\":14536:14538   */\n      0x0f\n        /* \"#utility.yul\":14531:14534   */\n      dup4\n        /* \"#utility.yul\":14472:14539   */\n      tag_349\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":14465:14539   */\n      swap2\n      pop\n        /* \"#utility.yul\":14548:14641   */\n      tag_520\n        /* \"#utility.yul\":14637:14640   */\n      dup3\n        /* \"#utility.yul\":14548:14641   */\n      tag_363\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":14666:14668   */\n      0x20\n        /* \"#utility.yul\":14661:14664   */\n      dup3\n        /* \"#utility.yul\":14657:14669   */\n      add\n        /* \"#utility.yul\":14650:14669   */\n      swap1\n      pop\n        /* \"#utility.yul\":14309:14675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14681:15100   */\n    tag_244:\n        /* \"#utility.yul\":14847:14851   */\n      0x00\n        /* \"#utility.yul\":14885:14887   */\n      0x20\n        /* \"#utility.yul\":14874:14883   */\n      dup3\n        /* \"#utility.yul\":14870:14888   */\n      add\n        /* \"#utility.yul\":14862:14888   */\n      swap1\n      pop\n        /* \"#utility.yul\":14934:14943   */\n      dup2\n        /* \"#utility.yul\":14928:14932   */\n      dup2\n        /* \"#utility.yul\":14924:14944   */\n      sub\n        /* \"#utility.yul\":14920:14921   */\n      0x00\n        /* \"#utility.yul\":14909:14918   */\n      dup4\n        /* \"#utility.yul\":14905:14922   */\n      add\n        /* \"#utility.yul\":14898:14945   */\n      mstore\n        /* \"#utility.yul\":14962:15093   */\n      tag_522\n        /* \"#utility.yul\":15088:15092   */\n      dup2\n        /* \"#utility.yul\":14962:15093   */\n      tag_364\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":14954:15093   */\n      swap1\n      pop\n        /* \"#utility.yul\":14681:15100   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15106:15271   */\n    tag_365:\n        /* \"#utility.yul\":15246:15263   */\n      0x42656c6f77206d696e207374616b650000000000000000000000000000000000\n        /* \"#utility.yul\":15242:15243   */\n      0x00\n        /* \"#utility.yul\":15234:15240   */\n      dup3\n        /* \"#utility.yul\":15230:15244   */\n      add\n        /* \"#utility.yul\":15223:15264   */\n      mstore\n        /* \"#utility.yul\":15106:15271   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15277:15643   */\n    tag_366:\n        /* \"#utility.yul\":15419:15422   */\n      0x00\n        /* \"#utility.yul\":15440:15507   */\n      tag_525\n        /* \"#utility.yul\":15504:15506   */\n      0x0f\n        /* \"#utility.yul\":15499:15502   */\n      dup4\n        /* \"#utility.yul\":15440:15507   */\n      tag_349\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":15433:15507   */\n      swap2\n      pop\n        /* \"#utility.yul\":15516:15609   */\n      tag_526\n        /* \"#utility.yul\":15605:15608   */\n      dup3\n        /* \"#utility.yul\":15516:15609   */\n      tag_365\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":15634:15636   */\n      0x20\n        /* \"#utility.yul\":15629:15632   */\n      dup3\n        /* \"#utility.yul\":15625:15637   */\n      add\n        /* \"#utility.yul\":15618:15637   */\n      swap1\n      pop\n        /* \"#utility.yul\":15277:15643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15649:16068   */\n    tag_247:\n        /* \"#utility.yul\":15815:15819   */\n      0x00\n        /* \"#utility.yul\":15853:15855   */\n      0x20\n        /* \"#utility.yul\":15842:15851   */\n      dup3\n        /* \"#utility.yul\":15838:15856   */\n      add\n        /* \"#utility.yul\":15830:15856   */\n      swap1\n      pop\n        /* \"#utility.yul\":15902:15911   */\n      dup2\n        /* \"#utility.yul\":15896:15900   */\n      dup2\n        /* \"#utility.yul\":15892:15912   */\n      sub\n        /* \"#utility.yul\":15888:15889   */\n      0x00\n        /* \"#utility.yul\":15877:15886   */\n      dup4\n        /* \"#utility.yul\":15873:15890   */\n      add\n        /* \"#utility.yul\":15866:15913   */\n      mstore\n        /* \"#utility.yul\":15930:16061   */\n      tag_528\n        /* \"#utility.yul\":16056:16060   */\n      dup2\n        /* \"#utility.yul\":15930:16061   */\n      tag_366\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":15922:16061   */\n      swap1\n      pop\n        /* \"#utility.yul\":15649:16068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16074:16241   */\n    tag_367:\n        /* \"#utility.yul\":16214:16233   */\n      0x45786365656473206d6178207374616b65000000000000000000000000000000\n        /* \"#utility.yul\":16210:16211   */\n      0x00\n        /* \"#utility.yul\":16202:16208   */\n      dup3\n        /* \"#utility.yul\":16198:16212   */\n      add\n        /* \"#utility.yul\":16191:16234   */\n      mstore\n        /* \"#utility.yul\":16074:16241   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16247:16613   */\n    tag_368:\n        /* \"#utility.yul\":16389:16392   */\n      0x00\n        /* \"#utility.yul\":16410:16477   */\n      tag_531\n        /* \"#utility.yul\":16474:16476   */\n      0x11\n        /* \"#utility.yul\":16469:16472   */\n      dup4\n        /* \"#utility.yul\":16410:16477   */\n      tag_349\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":16403:16477   */\n      swap2\n      pop\n        /* \"#utility.yul\":16486:16579   */\n      tag_532\n        /* \"#utility.yul\":16575:16578   */\n      dup3\n        /* \"#utility.yul\":16486:16579   */\n      tag_367\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":16604:16606   */\n      0x20\n        /* \"#utility.yul\":16599:16602   */\n      dup3\n        /* \"#utility.yul\":16595:16607   */\n      add\n        /* \"#utility.yul\":16588:16607   */\n      swap1\n      pop\n        /* \"#utility.yul\":16247:16613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16619:17038   */\n    tag_251:\n        /* \"#utility.yul\":16785:16789   */\n      0x00\n        /* \"#utility.yul\":16823:16825   */\n      0x20\n        /* \"#utility.yul\":16812:16821   */\n      dup3\n        /* \"#utility.yul\":16808:16826   */\n      add\n        /* \"#utility.yul\":16800:16826   */\n      swap1\n      pop\n        /* \"#utility.yul\":16872:16881   */\n      dup2\n        /* \"#utility.yul\":16866:16870   */\n      dup2\n        /* \"#utility.yul\":16862:16882   */\n      sub\n        /* \"#utility.yul\":16858:16859   */\n      0x00\n        /* \"#utility.yul\":16847:16856   */\n      dup4\n        /* \"#utility.yul\":16843:16860   */\n      add\n        /* \"#utility.yul\":16836:16883   */\n      mstore\n        /* \"#utility.yul\":16900:17031   */\n      tag_534\n        /* \"#utility.yul\":17026:17030   */\n      dup2\n        /* \"#utility.yul\":16900:17031   */\n      tag_368\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":16892:17031   */\n      swap1\n      pop\n        /* \"#utility.yul\":16619:17038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17044:17212   */\n    tag_369:\n        /* \"#utility.yul\":17184:17204   */\n      0x4578636565647320746f74616c20706f6f6c0000000000000000000000000000\n        /* \"#utility.yul\":17180:17181   */\n      0x00\n        /* \"#utility.yul\":17172:17178   */\n      dup3\n        /* \"#utility.yul\":17168:17182   */\n      add\n        /* \"#utility.yul\":17161:17205   */\n      mstore\n        /* \"#utility.yul\":17044:17212   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17218:17584   */\n    tag_370:\n        /* \"#utility.yul\":17360:17363   */\n      0x00\n        /* \"#utility.yul\":17381:17448   */\n      tag_537\n        /* \"#utility.yul\":17445:17447   */\n      0x12\n        /* \"#utility.yul\":17440:17443   */\n      dup4\n        /* \"#utility.yul\":17381:17448   */\n      tag_349\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":17374:17448   */\n      swap2\n      pop\n        /* \"#utility.yul\":17457:17550   */\n      tag_538\n        /* \"#utility.yul\":17546:17549   */\n      dup3\n        /* \"#utility.yul\":17457:17550   */\n      tag_369\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":17575:17577   */\n      0x20\n        /* \"#utility.yul\":17570:17573   */\n      dup3\n        /* \"#utility.yul\":17566:17578   */\n      add\n        /* \"#utility.yul\":17559:17578   */\n      swap1\n      pop\n        /* \"#utility.yul\":17218:17584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17590:18009   */\n    tag_255:\n        /* \"#utility.yul\":17756:17760   */\n      0x00\n        /* \"#utility.yul\":17794:17796   */\n      0x20\n        /* \"#utility.yul\":17783:17792   */\n      dup3\n        /* \"#utility.yul\":17779:17797   */\n      add\n        /* \"#utility.yul\":17771:17797   */\n      swap1\n      pop\n        /* \"#utility.yul\":17843:17852   */\n      dup2\n        /* \"#utility.yul\":17837:17841   */\n      dup2\n        /* \"#utility.yul\":17833:17853   */\n      sub\n        /* \"#utility.yul\":17829:17830   */\n      0x00\n        /* \"#utility.yul\":17818:17827   */\n      dup4\n        /* \"#utility.yul\":17814:17831   */\n      add\n        /* \"#utility.yul\":17807:17854   */\n      mstore\n        /* \"#utility.yul\":17871:18002   */\n      tag_540\n        /* \"#utility.yul\":17997:18001   */\n      dup2\n        /* \"#utility.yul\":17871:18002   */\n      tag_370\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":17863:18002   */\n      swap1\n      pop\n        /* \"#utility.yul\":17590:18009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18015:18180   */\n    tag_371:\n        /* \"#utility.yul\":18155:18172   */\n      0x5374616b65206e6f7420656e6465640000000000000000000000000000000000\n        /* \"#utility.yul\":18151:18152   */\n      0x00\n        /* \"#utility.yul\":18143:18149   */\n      dup3\n        /* \"#utility.yul\":18139:18153   */\n      add\n        /* \"#utility.yul\":18132:18173   */\n      mstore\n        /* \"#utility.yul\":18015:18180   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18186:18552   */\n    tag_372:\n        /* \"#utility.yul\":18328:18331   */\n      0x00\n        /* \"#utility.yul\":18349:18416   */\n      tag_543\n        /* \"#utility.yul\":18413:18415   */\n      0x0f\n        /* \"#utility.yul\":18408:18411   */\n      dup4\n        /* \"#utility.yul\":18349:18416   */\n      tag_349\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":18342:18416   */\n      swap2\n      pop\n        /* \"#utility.yul\":18425:18518   */\n      tag_544\n        /* \"#utility.yul\":18514:18517   */\n      dup3\n        /* \"#utility.yul\":18425:18518   */\n      tag_371\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":18543:18545   */\n      0x20\n        /* \"#utility.yul\":18538:18541   */\n      dup3\n        /* \"#utility.yul\":18534:18546   */\n      add\n        /* \"#utility.yul\":18527:18546   */\n      swap1\n      pop\n        /* \"#utility.yul\":18186:18552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18558:18977   */\n    tag_286:\n        /* \"#utility.yul\":18724:18728   */\n      0x00\n        /* \"#utility.yul\":18762:18764   */\n      0x20\n        /* \"#utility.yul\":18751:18760   */\n      dup3\n        /* \"#utility.yul\":18747:18765   */\n      add\n        /* \"#utility.yul\":18739:18765   */\n      swap1\n      pop\n        /* \"#utility.yul\":18811:18820   */\n      dup2\n        /* \"#utility.yul\":18805:18809   */\n      dup2\n        /* \"#utility.yul\":18801:18821   */\n      sub\n        /* \"#utility.yul\":18797:18798   */\n      0x00\n        /* \"#utility.yul\":18786:18795   */\n      dup4\n        /* \"#utility.yul\":18782:18799   */\n      add\n        /* \"#utility.yul\":18775:18822   */\n      mstore\n        /* \"#utility.yul\":18839:18970   */\n      tag_546\n        /* \"#utility.yul\":18965:18969   */\n      dup2\n        /* \"#utility.yul\":18839:18970   */\n      tag_372\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":18831:18970   */\n      swap1\n      pop\n        /* \"#utility.yul\":18558:18977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18983:19164   */\n    tag_373:\n        /* \"#utility.yul\":19123:19156   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":19119:19120   */\n      0x00\n        /* \"#utility.yul\":19111:19117   */\n      dup3\n        /* \"#utility.yul\":19107:19121   */\n      add\n        /* \"#utility.yul\":19100:19157   */\n      mstore\n        /* \"#utility.yul\":18983:19164   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19170:19536   */\n    tag_374:\n        /* \"#utility.yul\":19312:19315   */\n      0x00\n        /* \"#utility.yul\":19333:19400   */\n      tag_549\n        /* \"#utility.yul\":19397:19399   */\n      0x1f\n        /* \"#utility.yul\":19392:19395   */\n      dup4\n        /* \"#utility.yul\":19333:19400   */\n      tag_349\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":19326:19400   */\n      swap2\n      pop\n        /* \"#utility.yul\":19409:19502   */\n      tag_550\n        /* \"#utility.yul\":19498:19501   */\n      dup3\n        /* \"#utility.yul\":19409:19502   */\n      tag_373\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":19527:19529   */\n      0x20\n        /* \"#utility.yul\":19522:19525   */\n      dup3\n        /* \"#utility.yul\":19518:19530   */\n      add\n        /* \"#utility.yul\":19511:19530   */\n      swap1\n      pop\n        /* \"#utility.yul\":19170:19536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19542:19961   */\n    tag_300:\n        /* \"#utility.yul\":19708:19712   */\n      0x00\n        /* \"#utility.yul\":19746:19748   */\n      0x20\n        /* \"#utility.yul\":19735:19744   */\n      dup3\n        /* \"#utility.yul\":19731:19749   */\n      add\n        /* \"#utility.yul\":19723:19749   */\n      swap1\n      pop\n        /* \"#utility.yul\":19795:19804   */\n      dup2\n        /* \"#utility.yul\":19789:19793   */\n      dup2\n        /* \"#utility.yul\":19785:19805   */\n      sub\n        /* \"#utility.yul\":19781:19782   */\n      0x00\n        /* \"#utility.yul\":19770:19779   */\n      dup4\n        /* \"#utility.yul\":19766:19783   */\n      add\n        /* \"#utility.yul\":19759:19806   */\n      mstore\n        /* \"#utility.yul\":19823:19954   */\n      tag_552\n        /* \"#utility.yul\":19949:19953   */\n      dup2\n        /* \"#utility.yul\":19823:19954   */\n      tag_374\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":19815:19954   */\n      swap1\n      pop\n        /* \"#utility.yul\":19542:19961   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19967:20299   */\n    tag_304:\n        /* \"#utility.yul\":20088:20092   */\n      0x00\n        /* \"#utility.yul\":20126:20128   */\n      0x40\n        /* \"#utility.yul\":20115:20124   */\n      dup3\n        /* \"#utility.yul\":20111:20129   */\n      add\n        /* \"#utility.yul\":20103:20129   */\n      swap1\n      pop\n        /* \"#utility.yul\":20139:20210   */\n      tag_554\n        /* \"#utility.yul\":20207:20208   */\n      0x00\n        /* \"#utility.yul\":20196:20205   */\n      dup4\n        /* \"#utility.yul\":20192:20209   */\n      add\n        /* \"#utility.yul\":20183:20189   */\n      dup6\n        /* \"#utility.yul\":20139:20210   */\n      tag_327\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":20220:20292   */\n      tag_555\n        /* \"#utility.yul\":20288:20290   */\n      0x20\n        /* \"#utility.yul\":20277:20286   */\n      dup4\n        /* \"#utility.yul\":20273:20291   */\n      add\n        /* \"#utility.yul\":20264:20270   */\n      dup5\n        /* \"#utility.yul\":20220:20292   */\n      tag_335\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":19967:20299   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20305:20747   */\n    tag_311:\n        /* \"#utility.yul\":20454:20458   */\n      0x00\n        /* \"#utility.yul\":20492:20494   */\n      0x60\n        /* \"#utility.yul\":20481:20490   */\n      dup3\n        /* \"#utility.yul\":20477:20495   */\n      add\n        /* \"#utility.yul\":20469:20495   */\n      swap1\n      pop\n        /* \"#utility.yul\":20505:20576   */\n      tag_557\n        /* \"#utility.yul\":20573:20574   */\n      0x00\n        /* \"#utility.yul\":20562:20571   */\n      dup4\n        /* \"#utility.yul\":20558:20575   */\n      add\n        /* \"#utility.yul\":20549:20555   */\n      dup7\n        /* \"#utility.yul\":20505:20576   */\n      tag_327\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":20586:20658   */\n      tag_558\n        /* \"#utility.yul\":20654:20656   */\n      0x20\n        /* \"#utility.yul\":20643:20652   */\n      dup4\n        /* \"#utility.yul\":20639:20657   */\n      add\n        /* \"#utility.yul\":20630:20636   */\n      dup6\n        /* \"#utility.yul\":20586:20658   */\n      tag_327\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":20668:20740   */\n      tag_559\n        /* \"#utility.yul\":20736:20738   */\n      0x40\n        /* \"#utility.yul\":20725:20734   */\n      dup4\n        /* \"#utility.yul\":20721:20739   */\n      add\n        /* \"#utility.yul\":20712:20718   */\n      dup5\n        /* \"#utility.yul\":20668:20740   */\n      tag_335\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":20305:20747   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205e89409125f5c943b6837e2fcb642abfb4fb5e2958f7363817e02a4d74f42eb264736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1084": {
									"entryPoint": null,
									"id": 1084,
									"parameterSlots": 9,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 805,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 9
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x21": {
									"entryPoint": 998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e": {
									"entryPoint": 1648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd": {
									"entryPoint": 1544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6443:10",
										"nodeType": "YulBlock",
										"src": "0:6443:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "35:152:10",
													"nodeType": "YulBlock",
													"src": "35:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "52:1:10",
																		"nodeType": "YulLiteral",
																		"src": "52:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "55:77:10",
																		"nodeType": "YulLiteral",
																		"src": "55:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "45:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "45:6:10"
																},
																"nativeSrc": "45:88:10",
																"nodeType": "YulFunctionCall",
																"src": "45:88:10"
															},
															"nativeSrc": "45:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "45:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "149:1:10",
																		"nodeType": "YulLiteral",
																		"src": "149:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "152:4:10",
																		"nodeType": "YulLiteral",
																		"src": "152:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "142:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "142:6:10"
																},
																"nativeSrc": "142:15:10",
																"nodeType": "YulFunctionCall",
																"src": "142:15:10"
															},
															"nativeSrc": "142:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "142:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "173:1:10",
																		"nodeType": "YulLiteral",
																		"src": "173:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "176:4:10",
																		"nodeType": "YulLiteral",
																		"src": "176:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "166:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:10"
																},
																"nativeSrc": "166:15:10",
																"nodeType": "YulFunctionCall",
																"src": "166:15:10"
															},
															"nativeSrc": "166:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "166:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "7:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7:180:10"
											},
											{
												"body": {
													"nativeSrc": "233:35:10",
													"nodeType": "YulBlock",
													"src": "233:35:10",
													"statements": [
														{
															"nativeSrc": "243:19:10",
															"nodeType": "YulAssignment",
															"src": "243:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "259:2:10",
																		"nodeType": "YulLiteral",
																		"src": "259:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "253:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "253:5:10"
																},
																"nativeSrc": "253:9:10",
																"nodeType": "YulFunctionCall",
																"src": "253:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "243:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "243:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "193:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "226:6:10",
														"nodeType": "YulTypedName",
														"src": "226:6:10",
														"type": ""
													}
												],
												"src": "193:75:10"
											},
											{
												"body": {
													"nativeSrc": "363:28:10",
													"nodeType": "YulBlock",
													"src": "363:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "380:1:10",
																		"nodeType": "YulLiteral",
																		"src": "380:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "383:1:10",
																		"nodeType": "YulLiteral",
																		"src": "383:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "373:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "373:6:10"
																},
																"nativeSrc": "373:12:10",
																"nodeType": "YulFunctionCall",
																"src": "373:12:10"
															},
															"nativeSrc": "373:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "373:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "274:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "274:117:10"
											},
											{
												"body": {
													"nativeSrc": "486:28:10",
													"nodeType": "YulBlock",
													"src": "486:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "503:1:10",
																		"nodeType": "YulLiteral",
																		"src": "503:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "506:1:10",
																		"nodeType": "YulLiteral",
																		"src": "506:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "496:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "496:6:10"
																},
																"nativeSrc": "496:12:10",
																"nodeType": "YulFunctionCall",
																"src": "496:12:10"
															},
															"nativeSrc": "496:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "496:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "397:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "397:117:10"
											},
											{
												"body": {
													"nativeSrc": "565:81:10",
													"nodeType": "YulBlock",
													"src": "565:81:10",
													"statements": [
														{
															"nativeSrc": "575:65:10",
															"nodeType": "YulAssignment",
															"src": "575:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "590:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "590:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "597:42:10",
																		"nodeType": "YulLiteral",
																		"src": "597:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "586:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "586:3:10"
																},
																"nativeSrc": "586:54:10",
																"nodeType": "YulFunctionCall",
																"src": "586:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "575:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "575:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "520:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "547:5:10",
														"nodeType": "YulTypedName",
														"src": "547:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "557:7:10",
														"nodeType": "YulTypedName",
														"src": "557:7:10",
														"type": ""
													}
												],
												"src": "520:126:10"
											},
											{
												"body": {
													"nativeSrc": "697:51:10",
													"nodeType": "YulBlock",
													"src": "697:51:10",
													"statements": [
														{
															"nativeSrc": "707:35:10",
															"nodeType": "YulAssignment",
															"src": "707:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "736:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "736:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "718:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "718:17:10"
																},
																"nativeSrc": "718:24:10",
																"nodeType": "YulFunctionCall",
																"src": "718:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "707:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "707:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "652:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "679:5:10",
														"nodeType": "YulTypedName",
														"src": "679:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "689:7:10",
														"nodeType": "YulTypedName",
														"src": "689:7:10",
														"type": ""
													}
												],
												"src": "652:96:10"
											},
											{
												"body": {
													"nativeSrc": "797:79:10",
													"nodeType": "YulBlock",
													"src": "797:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "854:16:10",
																"nodeType": "YulBlock",
																"src": "854:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "863:1:10",
																					"nodeType": "YulLiteral",
																					"src": "863:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "866:1:10",
																					"nodeType": "YulLiteral",
																					"src": "866:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "856:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "856:6:10"
																			},
																			"nativeSrc": "856:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "856:12:10"
																		},
																		"nativeSrc": "856:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "856:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "820:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "820:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "845:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "845:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "827:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "827:17:10"
																				},
																				"nativeSrc": "827:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "827:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "817:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "817:2:10"
																		},
																		"nativeSrc": "817:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "817:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "810:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "810:6:10"
																},
																"nativeSrc": "810:43:10",
																"nodeType": "YulFunctionCall",
																"src": "810:43:10"
															},
															"nativeSrc": "807:63:10",
															"nodeType": "YulIf",
															"src": "807:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "754:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "790:5:10",
														"nodeType": "YulTypedName",
														"src": "790:5:10",
														"type": ""
													}
												],
												"src": "754:122:10"
											},
											{
												"body": {
													"nativeSrc": "945:80:10",
													"nodeType": "YulBlock",
													"src": "945:80:10",
													"statements": [
														{
															"nativeSrc": "955:22:10",
															"nodeType": "YulAssignment",
															"src": "955:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "970:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "970:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "964:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "964:5:10"
																},
																"nativeSrc": "964:13:10",
																"nodeType": "YulFunctionCall",
																"src": "964:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "955:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "955:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1013:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1013:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "986:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "986:26:10"
																},
																"nativeSrc": "986:33:10",
																"nodeType": "YulFunctionCall",
																"src": "986:33:10"
															},
															"nativeSrc": "986:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "986:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "882:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "923:6:10",
														"nodeType": "YulTypedName",
														"src": "923:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "931:3:10",
														"nodeType": "YulTypedName",
														"src": "931:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "939:5:10",
														"nodeType": "YulTypedName",
														"src": "939:5:10",
														"type": ""
													}
												],
												"src": "882:143:10"
											},
											{
												"body": {
													"nativeSrc": "1076:32:10",
													"nodeType": "YulBlock",
													"src": "1076:32:10",
													"statements": [
														{
															"nativeSrc": "1086:16:10",
															"nodeType": "YulAssignment",
															"src": "1086:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1097:5:10",
																"nodeType": "YulIdentifier",
																"src": "1097:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1086:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1086:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1031:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1058:5:10",
														"nodeType": "YulTypedName",
														"src": "1058:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1068:7:10",
														"nodeType": "YulTypedName",
														"src": "1068:7:10",
														"type": ""
													}
												],
												"src": "1031:77:10"
											},
											{
												"body": {
													"nativeSrc": "1157:79:10",
													"nodeType": "YulBlock",
													"src": "1157:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1214:16:10",
																"nodeType": "YulBlock",
																"src": "1214:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1223:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1223:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1226:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1226:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1216:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1216:6:10"
																			},
																			"nativeSrc": "1216:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1216:12:10"
																		},
																		"nativeSrc": "1216:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1216:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1180:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1180:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1205:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1205:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1187:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1187:17:10"
																				},
																				"nativeSrc": "1187:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1187:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1177:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1177:2:10"
																		},
																		"nativeSrc": "1177:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1177:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1170:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1170:6:10"
																},
																"nativeSrc": "1170:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1170:43:10"
															},
															"nativeSrc": "1167:63:10",
															"nodeType": "YulIf",
															"src": "1167:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1114:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1150:5:10",
														"nodeType": "YulTypedName",
														"src": "1150:5:10",
														"type": ""
													}
												],
												"src": "1114:122:10"
											},
											{
												"body": {
													"nativeSrc": "1305:80:10",
													"nodeType": "YulBlock",
													"src": "1305:80:10",
													"statements": [
														{
															"nativeSrc": "1315:22:10",
															"nodeType": "YulAssignment",
															"src": "1315:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1330:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1330:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1324:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1324:5:10"
																},
																"nativeSrc": "1324:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1324:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1315:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1315:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1373:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1373:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1346:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1346:26:10"
																},
																"nativeSrc": "1346:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1346:33:10"
															},
															"nativeSrc": "1346:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1346:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1242:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1283:6:10",
														"nodeType": "YulTypedName",
														"src": "1283:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1291:3:10",
														"nodeType": "YulTypedName",
														"src": "1291:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1299:5:10",
														"nodeType": "YulTypedName",
														"src": "1299:5:10",
														"type": ""
													}
												],
												"src": "1242:143:10"
											},
											{
												"body": {
													"nativeSrc": "1604:1392:10",
													"nodeType": "YulBlock",
													"src": "1604:1392:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1651:83:10",
																"nodeType": "YulBlock",
																"src": "1651:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1653:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1653:77:10"
																			},
																			"nativeSrc": "1653:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1653:79:10"
																		},
																		"nativeSrc": "1653:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1653:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1625:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1625:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1621:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1621:3:10"
																		},
																		"nativeSrc": "1621:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1621:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:3:10",
																		"nodeType": "YulLiteral",
																		"src": "1646:3:10",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1617:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1617:3:10"
																},
																"nativeSrc": "1617:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1617:33:10"
															},
															"nativeSrc": "1614:120:10",
															"nodeType": "YulIf",
															"src": "1614:120:10"
														},
														{
															"nativeSrc": "1744:128:10",
															"nodeType": "YulBlock",
															"src": "1744:128:10",
															"statements": [
																{
																	"nativeSrc": "1759:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1759:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1773:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1773:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1763:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1763:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1788:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1788:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1834:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1834:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1845:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1845:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1830:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1830:3:10"
																				},
																				"nativeSrc": "1830:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1830:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1854:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1854:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1798:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1798:31:10"
																		},
																		"nativeSrc": "1798:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1798:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1788:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1788:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1882:129:10",
															"nodeType": "YulBlock",
															"src": "1882:129:10",
															"statements": [
																{
																	"nativeSrc": "1897:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1897:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1911:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1911:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1901:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1901:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1927:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1927:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1973:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1973:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1984:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1984:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1969:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1969:3:10"
																				},
																				"nativeSrc": "1969:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1969:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1993:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1993:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1937:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1937:31:10"
																		},
																		"nativeSrc": "1937:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1937:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1927:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1927:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2021:129:10",
															"nodeType": "YulBlock",
															"src": "2021:129:10",
															"statements": [
																{
																	"nativeSrc": "2036:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2036:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2050:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2050:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2040:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2040:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2066:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2066:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2112:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2112:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2123:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2123:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2108:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2108:3:10"
																				},
																				"nativeSrc": "2108:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2108:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2132:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2132:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "2076:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2076:31:10"
																		},
																		"nativeSrc": "2076:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2076:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2066:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2066:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2160:129:10",
															"nodeType": "YulBlock",
															"src": "2160:129:10",
															"statements": [
																{
																	"nativeSrc": "2175:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2175:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2189:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2189:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2179:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2179:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2205:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2205:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2251:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2251:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2262:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2262:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2247:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2247:3:10"
																				},
																				"nativeSrc": "2247:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2247:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2271:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2271:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2215:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2215:31:10"
																		},
																		"nativeSrc": "2215:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2215:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2205:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2205:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2299:130:10",
															"nodeType": "YulBlock",
															"src": "2299:130:10",
															"statements": [
																{
																	"nativeSrc": "2314:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2314:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2328:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2328:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2318:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2318:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2345:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2345:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2391:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2391:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2402:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2402:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2387:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2387:3:10"
																				},
																				"nativeSrc": "2387:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2387:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2411:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2411:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2355:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2355:31:10"
																		},
																		"nativeSrc": "2355:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2355:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2345:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2345:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2439:130:10",
															"nodeType": "YulBlock",
															"src": "2439:130:10",
															"statements": [
																{
																	"nativeSrc": "2454:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2454:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2468:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2468:3:10",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2458:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2458:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2485:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2485:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2531:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2531:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2542:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2542:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2527:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2527:3:10"
																				},
																				"nativeSrc": "2527:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2527:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2551:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2551:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2495:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2495:31:10"
																		},
																		"nativeSrc": "2495:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2495:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "2485:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2579:130:10",
															"nodeType": "YulBlock",
															"src": "2579:130:10",
															"statements": [
																{
																	"nativeSrc": "2594:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2594:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2608:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2608:3:10",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2598:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2598:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2625:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2625:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2671:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2671:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2682:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2682:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2667:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2667:3:10"
																				},
																				"nativeSrc": "2667:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2667:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2691:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2691:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2635:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2635:31:10"
																		},
																		"nativeSrc": "2635:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2635:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "2625:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2625:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2719:130:10",
															"nodeType": "YulBlock",
															"src": "2719:130:10",
															"statements": [
																{
																	"nativeSrc": "2734:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2734:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2748:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2748:3:10",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2738:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2738:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2765:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2765:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2811:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2811:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2822:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2822:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2807:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2807:3:10"
																				},
																				"nativeSrc": "2807:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2807:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2831:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2831:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2775:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2775:31:10"
																		},
																		"nativeSrc": "2775:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2775:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "2765:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2765:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2859:130:10",
															"nodeType": "YulBlock",
															"src": "2859:130:10",
															"statements": [
																{
																	"nativeSrc": "2874:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2874:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2888:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2888:3:10",
																		"type": "",
																		"value": "256"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2878:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2878:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2905:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2905:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2951:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2951:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2962:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2962:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2947:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:10"
																				},
																				"nativeSrc": "2947:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2947:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2971:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2971:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2915:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2915:31:10"
																		},
																		"nativeSrc": "2915:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2915:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value8",
																			"nativeSrc": "2905:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2905:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "1391:1605:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1510:9:10",
														"nodeType": "YulTypedName",
														"src": "1510:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1521:7:10",
														"nodeType": "YulTypedName",
														"src": "1521:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1533:6:10",
														"nodeType": "YulTypedName",
														"src": "1533:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1541:6:10",
														"nodeType": "YulTypedName",
														"src": "1541:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1549:6:10",
														"nodeType": "YulTypedName",
														"src": "1549:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1557:6:10",
														"nodeType": "YulTypedName",
														"src": "1557:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1565:6:10",
														"nodeType": "YulTypedName",
														"src": "1565:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1573:6:10",
														"nodeType": "YulTypedName",
														"src": "1573:6:10",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "1581:6:10",
														"nodeType": "YulTypedName",
														"src": "1581:6:10",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "1589:6:10",
														"nodeType": "YulTypedName",
														"src": "1589:6:10",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "1597:6:10",
														"nodeType": "YulTypedName",
														"src": "1597:6:10",
														"type": ""
													}
												],
												"src": "1391:1605:10"
											},
											{
												"body": {
													"nativeSrc": "3067:53:10",
													"nodeType": "YulBlock",
													"src": "3067:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3107:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3107:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3089:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:17:10"
																		},
																		"nativeSrc": "3089:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:10"
																},
																"nativeSrc": "3077:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3077:37:10"
															},
															"nativeSrc": "3077:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3077:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3002:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:10",
														"nodeType": "YulTypedName",
														"src": "3055:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:10",
														"nodeType": "YulTypedName",
														"src": "3062:3:10",
														"type": ""
													}
												],
												"src": "3002:118:10"
											},
											{
												"body": {
													"nativeSrc": "3224:124:10",
													"nodeType": "YulBlock",
													"src": "3224:124:10",
													"statements": [
														{
															"nativeSrc": "3234:26:10",
															"nodeType": "YulAssignment",
															"src": "3234:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3246:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3246:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3257:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3257:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3242:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3242:3:10"
																},
																"nativeSrc": "3242:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3242:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3234:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3234:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3314:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3314:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3327:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3327:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3338:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3338:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3323:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3323:3:10"
																		},
																		"nativeSrc": "3323:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3323:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3270:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3270:43:10"
																},
																"nativeSrc": "3270:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3270:71:10"
															},
															"nativeSrc": "3270:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3270:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3126:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3196:9:10",
														"nodeType": "YulTypedName",
														"src": "3196:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3208:6:10",
														"nodeType": "YulTypedName",
														"src": "3208:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3219:4:10",
														"nodeType": "YulTypedName",
														"src": "3219:4:10",
														"type": ""
													}
												],
												"src": "3126:222:10"
											},
											{
												"body": {
													"nativeSrc": "3450:73:10",
													"nodeType": "YulBlock",
													"src": "3450:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3467:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3467:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3472:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3472:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3460:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:10"
																},
																"nativeSrc": "3460:19:10",
																"nodeType": "YulFunctionCall",
																"src": "3460:19:10"
															},
															"nativeSrc": "3460:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "3460:19:10"
														},
														{
															"nativeSrc": "3488:29:10",
															"nodeType": "YulAssignment",
															"src": "3488:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3507:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3507:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3512:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3512:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3503:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3503:3:10"
																},
																"nativeSrc": "3503:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3503:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3488:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "3488:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3354:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3422:3:10",
														"nodeType": "YulTypedName",
														"src": "3422:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3427:6:10",
														"nodeType": "YulTypedName",
														"src": "3427:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3438:11:10",
														"nodeType": "YulTypedName",
														"src": "3438:11:10",
														"type": ""
													}
												],
												"src": "3354:169:10"
											},
											{
												"body": {
													"nativeSrc": "3635:63:10",
													"nodeType": "YulBlock",
													"src": "3635:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3657:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3657:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3665:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3665:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3653:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3653:3:10"
																		},
																		"nativeSrc": "3653:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3653:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b6520746f6b656e",
																		"kind": "string",
																		"nativeSrc": "3669:21:10",
																		"nodeType": "YulLiteral",
																		"src": "3669:21:10",
																		"type": "",
																		"value": "Invalid stake token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3646:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3646:6:10"
																},
																"nativeSrc": "3646:45:10",
																"nodeType": "YulFunctionCall",
																"src": "3646:45:10"
															},
															"nativeSrc": "3646:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "3646:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624",
												"nativeSrc": "3529:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3627:6:10",
														"nodeType": "YulTypedName",
														"src": "3627:6:10",
														"type": ""
													}
												],
												"src": "3529:169:10"
											},
											{
												"body": {
													"nativeSrc": "3850:220:10",
													"nodeType": "YulBlock",
													"src": "3850:220:10",
													"statements": [
														{
															"nativeSrc": "3860:74:10",
															"nodeType": "YulAssignment",
															"src": "3860:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3926:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3926:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3931:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3931:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3867:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3867:58:10"
																},
																"nativeSrc": "3867:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3867:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3860:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3860:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4032:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4032:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624",
																	"nativeSrc": "3943:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "3943:88:10"
																},
																"nativeSrc": "3943:93:10",
																"nodeType": "YulFunctionCall",
																"src": "3943:93:10"
															},
															"nativeSrc": "3943:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "3943:93:10"
														},
														{
															"nativeSrc": "4045:19:10",
															"nodeType": "YulAssignment",
															"src": "4045:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4056:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4056:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4061:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4061:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4052:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4052:3:10"
																},
																"nativeSrc": "4052:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4052:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4045:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4045:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3704:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3838:3:10",
														"nodeType": "YulTypedName",
														"src": "3838:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3846:3:10",
														"nodeType": "YulTypedName",
														"src": "3846:3:10",
														"type": ""
													}
												],
												"src": "3704:366:10"
											},
											{
												"body": {
													"nativeSrc": "4247:248:10",
													"nodeType": "YulBlock",
													"src": "4247:248:10",
													"statements": [
														{
															"nativeSrc": "4257:26:10",
															"nodeType": "YulAssignment",
															"src": "4257:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4269:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4269:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4280:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4280:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4265:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4265:3:10"
																},
																"nativeSrc": "4265:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4265:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4257:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4257:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4304:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4304:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4300:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4300:3:10"
																		},
																		"nativeSrc": "4300:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4300:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4323:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4323:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4329:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4329:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4319:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4319:3:10"
																		},
																		"nativeSrc": "4319:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4293:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4293:6:10"
																},
																"nativeSrc": "4293:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4293:47:10"
															},
															"nativeSrc": "4293:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4293:47:10"
														},
														{
															"nativeSrc": "4349:139:10",
															"nodeType": "YulAssignment",
															"src": "4349:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4483:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4483:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4357:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4357:124:10"
																},
																"nativeSrc": "4357:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4357:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4349:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4349:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4076:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4227:9:10",
														"nodeType": "YulTypedName",
														"src": "4227:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4242:4:10",
														"nodeType": "YulTypedName",
														"src": "4242:4:10",
														"type": ""
													}
												],
												"src": "4076:419:10"
											},
											{
												"body": {
													"nativeSrc": "4607:64:10",
													"nodeType": "YulBlock",
													"src": "4607:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4629:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4629:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4637:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4637:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4625:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4625:3:10"
																		},
																		"nativeSrc": "4625:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4625:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642072657761726420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "4641:22:10",
																		"nodeType": "YulLiteral",
																		"src": "4641:22:10",
																		"type": "",
																		"value": "Invalid reward token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4618:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4618:6:10"
																},
																"nativeSrc": "4618:46:10",
																"nodeType": "YulFunctionCall",
																"src": "4618:46:10"
															},
															"nativeSrc": "4618:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "4618:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
												"nativeSrc": "4501:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4599:6:10",
														"nodeType": "YulTypedName",
														"src": "4599:6:10",
														"type": ""
													}
												],
												"src": "4501:170:10"
											},
											{
												"body": {
													"nativeSrc": "4823:220:10",
													"nodeType": "YulBlock",
													"src": "4823:220:10",
													"statements": [
														{
															"nativeSrc": "4833:74:10",
															"nodeType": "YulAssignment",
															"src": "4833:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4899:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4899:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4904:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4904:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4840:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4840:58:10"
																},
																"nativeSrc": "4840:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4840:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4833:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4833:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5005:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5005:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																	"nativeSrc": "4916:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4916:88:10"
																},
																"nativeSrc": "4916:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4916:93:10"
															},
															"nativeSrc": "4916:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4916:93:10"
														},
														{
															"nativeSrc": "5018:19:10",
															"nodeType": "YulAssignment",
															"src": "5018:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5029:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5029:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5034:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5034:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5025:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5025:3:10"
																},
																"nativeSrc": "5025:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5025:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5018:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5018:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4677:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4811:3:10",
														"nodeType": "YulTypedName",
														"src": "4811:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4819:3:10",
														"nodeType": "YulTypedName",
														"src": "4819:3:10",
														"type": ""
													}
												],
												"src": "4677:366:10"
											},
											{
												"body": {
													"nativeSrc": "5220:248:10",
													"nodeType": "YulBlock",
													"src": "5220:248:10",
													"statements": [
														{
															"nativeSrc": "5230:26:10",
															"nodeType": "YulAssignment",
															"src": "5230:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5242:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5242:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5253:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5253:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5238:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5238:3:10"
																},
																"nativeSrc": "5238:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5238:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5230:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5230:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5277:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5277:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5288:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5288:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5273:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5273:3:10"
																		},
																		"nativeSrc": "5273:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5273:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5296:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5296:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5302:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5302:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5292:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5292:3:10"
																		},
																		"nativeSrc": "5292:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5292:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5266:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5266:6:10"
																},
																"nativeSrc": "5266:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5266:47:10"
															},
															"nativeSrc": "5266:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5266:47:10"
														},
														{
															"nativeSrc": "5322:139:10",
															"nodeType": "YulAssignment",
															"src": "5322:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5456:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5456:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5330:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "5330:124:10"
																},
																"nativeSrc": "5330:131:10",
																"nodeType": "YulFunctionCall",
																"src": "5330:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5322:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5322:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5049:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5200:9:10",
														"nodeType": "YulTypedName",
														"src": "5200:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5215:4:10",
														"nodeType": "YulTypedName",
														"src": "5215:4:10",
														"type": ""
													}
												],
												"src": "5049:419:10"
											},
											{
												"body": {
													"nativeSrc": "5580:63:10",
													"nodeType": "YulBlock",
													"src": "5580:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5602:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5602:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5610:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5610:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5598:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:10"
																		},
																		"nativeSrc": "5598:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207465616d2077616c6c6574",
																		"kind": "string",
																		"nativeSrc": "5614:21:10",
																		"nodeType": "YulLiteral",
																		"src": "5614:21:10",
																		"type": "",
																		"value": "Invalid team wallet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5591:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5591:6:10"
																},
																"nativeSrc": "5591:45:10",
																"nodeType": "YulFunctionCall",
																"src": "5591:45:10"
															},
															"nativeSrc": "5591:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "5591:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e",
												"nativeSrc": "5474:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5572:6:10",
														"nodeType": "YulTypedName",
														"src": "5572:6:10",
														"type": ""
													}
												],
												"src": "5474:169:10"
											},
											{
												"body": {
													"nativeSrc": "5795:220:10",
													"nodeType": "YulBlock",
													"src": "5795:220:10",
													"statements": [
														{
															"nativeSrc": "5805:74:10",
															"nodeType": "YulAssignment",
															"src": "5805:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5871:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5871:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5876:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5876:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5812:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5812:58:10"
																},
																"nativeSrc": "5812:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5812:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5805:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5805:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5977:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5977:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e",
																	"nativeSrc": "5888:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5888:88:10"
																},
																"nativeSrc": "5888:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5888:93:10"
															},
															"nativeSrc": "5888:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5888:93:10"
														},
														{
															"nativeSrc": "5990:19:10",
															"nodeType": "YulAssignment",
															"src": "5990:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6001:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6001:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6006:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6006:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5997:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5997:3:10"
																},
																"nativeSrc": "5997:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5997:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5990:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5990:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5649:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5783:3:10",
														"nodeType": "YulTypedName",
														"src": "5783:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5791:3:10",
														"nodeType": "YulTypedName",
														"src": "5791:3:10",
														"type": ""
													}
												],
												"src": "5649:366:10"
											},
											{
												"body": {
													"nativeSrc": "6192:248:10",
													"nodeType": "YulBlock",
													"src": "6192:248:10",
													"statements": [
														{
															"nativeSrc": "6202:26:10",
															"nodeType": "YulAssignment",
															"src": "6202:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6214:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6214:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6225:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6225:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6210:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6210:3:10"
																},
																"nativeSrc": "6210:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6210:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6202:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6202:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6249:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6249:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6260:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6260:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6245:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6245:3:10"
																		},
																		"nativeSrc": "6245:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6245:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6268:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6268:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6274:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6274:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6264:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6264:3:10"
																		},
																		"nativeSrc": "6264:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6264:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6238:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6238:6:10"
																},
																"nativeSrc": "6238:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6238:47:10"
															},
															"nativeSrc": "6238:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6238:47:10"
														},
														{
															"nativeSrc": "6294:139:10",
															"nodeType": "YulAssignment",
															"src": "6294:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6428:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6428:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6302:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6302:124:10"
																},
																"nativeSrc": "6302:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6302:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6294:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6294:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6021:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6172:9:10",
														"nodeType": "YulTypedName",
														"src": "6172:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6187:4:10",
														"nodeType": "YulTypedName",
														"src": "6187:4:10",
														"type": ""
													}
												],
												"src": "6021:419:10"
											}
										]
									},
									"contents": "{\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8 {\n        if slt(sub(dataEnd, headStart), 288) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid stake token\")\n\n    }\n\n    function abi_encode_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid reward token\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid team wallet\")\n\n    }\n\n    function abi_encode_t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6101a06040525f60025f6101000a81548160ff0219169083151502179055505f60045f6101000a81548160ff02191690836003811115610042576100416103e6565b5b0217905550348015610052575f5ffd5b50604051612ae8380380612ae8833981810160405281019061007491906104a4565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100e5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100dc9190610577565b60405180910390fd5b6100f48161032560201b60201c565b50600180819055505f73ffffffffffffffffffffffffffffffffffffffff168973ffffffffffffffffffffffffffffffffffffffff160361016a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610161906105ea565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16036101d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101cf90610652565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1603610246576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023d906106ba565b60405180910390fd5b8873ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508773ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508673ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508560e081815250508461010081815250508361012081815250508261014081815250508161016081815250508061018081815250505050505050505050506106d8565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61044082610417565b9050919050565b61045081610436565b811461045a575f5ffd5b50565b5f8151905061046b81610447565b92915050565b5f819050919050565b61048381610471565b811461048d575f5ffd5b50565b5f8151905061049e8161047a565b92915050565b5f5f5f5f5f5f5f5f5f6101208a8c0312156104c2576104c1610413565b5b5f6104cf8c828d0161045d565b99505060206104e08c828d0161045d565b98505060406104f18c828d0161045d565b97505060606105028c828d01610490565b96505060806105138c828d01610490565b95505060a06105248c828d01610490565b94505060c06105358c828d01610490565b93505060e06105468c828d01610490565b9250506101006105588c828d01610490565b9150509295985092959850929598565b61057181610436565b82525050565b5f60208201905061058a5f830184610568565b92915050565b5f82825260208201905092915050565b7f496e76616c6964207374616b6520746f6b656e000000000000000000000000005f82015250565b5f6105d4601383610590565b91506105df826105a0565b602082019050919050565b5f6020820190508181035f830152610601816105c8565b9050919050565b7f496e76616c69642072657761726420746f6b656e0000000000000000000000005f82015250565b5f61063c601483610590565b915061064782610608565b602082019050919050565b5f6020820190508181035f83015261066981610630565b9050919050565b7f496e76616c6964207465616d2077616c6c6574000000000000000000000000005f82015250565b5f6106a4601383610590565b91506106af82610670565b602082019050919050565b5f6020820190508181035f8301526106d181610698565b9050919050565b60805160a05160c05160e051610100516101205161014051610160516101805161233b6107ad5f395f8181610b5b0152818161131701526114e501525f8181610a0f01526110d101525f8181611026015261141901525f81816107930152610fc301525f81816107eb015261151101525f8181610f53015281816113f5015261153201525f81816109eb0152610d7301525f8181610be301528181610cce01528181610d9501526114c101525f818161068d0152818161076f015281816108d001528181610b9801526111ec015261233b5ff3fe608060405234801561000f575f5ffd5b50600436106101cd575f3560e01c8063817b1cd211610102578063cab9b8fb116100a0578063f2fde38b1161006f578063f2fde38b14610479578063f7c618c114610495578063f959680b146104b3578063fe1d3795146104d1576101cd565b8063cab9b8fb14610401578063d719fa971461041f578063e9b987461461043d578063ea1b28e01461045b576101cd565b80638da7ad23116100dc5780638da7ad2314610367578063a30a247414610397578063a694fc3a146103b5578063b973e1bf146103d1576101cd565b8063817b1cd2146103215780638456cb591461033f5780638da5cb5b14610349576101cd565b8063455ab53c1161016f578063649040711161014957806364904071146102d15780636f4a2cd0146102ef578063715018a6146102f9578063790ca41314610303576101cd565b8063455ab53c1461028b5780634f984c5c146102a957806359927044146102b3576101cd565b8063292a6b19116101ab578063292a6b1914610227578063375b3c0a146102455780633f4ba83a1461026357806340f02ab61461026d576101cd565b806301339c21146101d157806302ac512f146101db57806310d63d031461020b575b5f5ffd5b6101d96104db565b005b6101f560048036038101906101f09190611986565b6105b8565b60405161020291906119f0565b60405180910390f35b61022560048036038101906102209190611a33565b6105f3565b005b61022f61076d565b60405161023c9190611ab9565b60405180910390f35b61024d610791565b60405161025a9190611ae1565b60405180910390f35b61026b6107b5565b005b6102756107e9565b6040516102829190611ae1565b60405180910390f35b61029361080d565b6040516102a09190611b6d565b60405180910390f35b6102b161081f565b005b6102bb6109e9565b6040516102c891906119f0565b60405180910390f35b6102d9610a0d565b6040516102e69190611ae1565b60405180910390f35b6102f7610a31565b005b610301610de5565b005b61030b610df8565b6040516103189190611ae1565b60405180910390f35b610329610dfe565b6040516103369190611ae1565b60405180910390f35b610347610e04565b005b610351610e38565b60405161035e91906119f0565b60405180910390f35b610381600480360381019061037c9190611a33565b610e5f565b60405161038e9190611ae1565b60405180910390f35b61039f610e74565b6040516103ac9190611ba0565b60405180910390f35b6103cf60048036038101906103ca9190611986565b610e86565b005b6103eb60048036038101906103e69190611986565b6112f5565b6040516103f89190611ae1565b60405180910390f35b610409611353565b6040516104169190611b6d565b60405180910390f35b610427611368565b6040516104349190611c70565b60405180910390f35b6104456113f3565b6040516104529190611ae1565b60405180910390f35b610463611417565b6040516104709190611ae1565b60405180910390f35b610493600480360381019061048e9190611a33565b61143b565b005b61049d6114bf565b6040516104aa9190611ab9565b60405180910390f35b6104bb6114e3565b6040516104c89190611ae1565b60405180910390f35b6104d9611507565b005b6104e361160c565b60025f9054906101000a900460ff1615610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052990611cea565b60405180910390fd5b600160025f6101000a81548160ff02191690831515021790555042600381905550600160045f6101000a81548160ff0219169083600381111561057857610577611afa565b5b02179055507fa72e5e150ebe7b67363131cf1d5e72a8053adc58eb1879467ebd529ae3d4ecca6003546040516105ae9190611ae1565b60405180910390a1565b600781815481106105c7575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105fb61160c565b610603611693565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d90611d52565b60405180910390fd5b6106d182827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116e29092919063ffffffff16565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fbf8f812d3d85df21758e37a857352fb02610f4278c682198af5c5c00bbb3d500826040516107599190611ae1565b60405180910390a25061076a611761565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6107bd61160c565b600160045f6101000a81548160ff021916908360038111156107e2576107e1611afa565b5b0217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60045f9054906101000a900460ff1681565b61082761160c565b61082f611693565b5f5f90505b6007805490508110156109b4575f6007828154811061085657610855611d70565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111156109a55761091482827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116e29092919063ffffffff16565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fb2372f309a2c0b54c10ce95469012d95c4d8cc7c8a154bfc22db66d993abbc718260405161099c9190611ae1565b60405180910390a25b50508080600101915050610834565b50600360045f6101000a81548160ff021916908360038111156109da576109d9611afa565b5b02179055506109e7611761565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a3961160c565b610a41611693565b600380811115610a5457610a53611afa565b5b60045f9054906101000a900460ff166003811115610a7557610a74611afa565b5b14610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aac90611de7565b60405180910390fd5b5f5f90505b600780549050811015610cca575f60078281548110610adc57610adb611d70565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8103610b55575050610cbd565b5f6005547f000000000000000000000000000000000000000000000000000000000000000083610b859190611e32565b610b8f9190611ea0565b9050610bdc83837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116e29092919063ffffffff16565b610c2783827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116e29092919063ffffffff16565b5f60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff167f53118bff2fb56701752f5bf54053d24fb83cec92f9f6ce664b90c38a2991caa48383604051610cb1929190611ed0565b60405180910390a25050505b8080600101915050610aba565b505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d2591906119f0565b602060405180830381865afa158015610d40573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d649190611f0b565b90505f811115610dda57610dd97f0000000000000000000000000000000000000000000000000000000000000000827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116e29092919063ffffffff16565b5b50610de3611761565b565b610ded61160c565b610df65f61176a565b565b60035481565b60055481565b610e0c61160c565b600260045f6101000a81548160ff02191690836003811115610e3157610e30611afa565b5b0217905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6006602052805f5260405f205f915090505481565b60025f9054906101000a900460ff1681565b610e8e611693565b60016003811115610ea257610ea1611afa565b5b60045f9054906101000a900460ff166003811115610ec357610ec2611afa565b5b14610f03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efa90611f80565b60405180910390fd5b60025f9054906101000a900460ff16610f51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4890611fe8565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600354610f7f9190612006565b421115610fc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb890612083565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000811015611024576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101b906120eb565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000008160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461108e9190612006565b11156110cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c690612153565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000816005546110fe9190612006565b111561113f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611136906121bb565b60405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036111e457600733908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6112313330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661182b909392919063ffffffff16565b8060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461127d9190612006565b925050819055508060055f8282546112959190612006565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a826040516112e29190611ae1565b60405180910390a26112f2611761565b50565b5f5f600554148061130557505f82145b15611312575f905061134e565b6005547f0000000000000000000000000000000000000000000000000000000000000000836113419190611e32565b61134b9190611ea0565b90505b919050565b5f60045f9054906101000a900460ff16905090565b606060078054806020026020016040519081016040528092919081815260200182805480156113e957602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113a0575b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61144361160c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114b3575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114aa91906119f0565b60405180910390fd5b6114bc8161176a565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61150f61160c565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060035461155e9190612006565b6115689190612006565b42116115a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a090612223565b60405180910390fd5b600360045f6101000a81548160ff021916908360038111156115ce576115cd611afa565b5b02179055507faaaf03c480f43393f2414d5013b316f6cc36576bed29ae1ea15d8936dcc0d5e7426040516116029190611ae1565b60405180910390a1565b6116146118ad565b73ffffffffffffffffffffffffffffffffffffffff16611632610e38565b73ffffffffffffffffffffffffffffffffffffffff1614611691576116556118ad565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161168891906119f0565b60405180910390fd5b565b6002600154036116d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cf9061228b565b60405180910390fd5b6002600181905550565b61175c838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016117159291906122a9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118b4565b505050565b60018081905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6118a7848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611860939291906122d0565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118b4565b50505050565b5f33905090565b5f5f60205f8451602086015f885af1806118d3576040513d5f823e3d81fd5b3d92505f519150505f82146118ec576001811415611907565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561194957836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161194091906119f0565b60405180910390fd5b50505050565b5f5ffd5b5f819050919050565b61196581611953565b811461196f575f5ffd5b50565b5f813590506119808161195c565b92915050565b5f6020828403121561199b5761199a61194f565b5b5f6119a884828501611972565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119da826119b1565b9050919050565b6119ea816119d0565b82525050565b5f602082019050611a035f8301846119e1565b92915050565b611a12816119d0565b8114611a1c575f5ffd5b50565b5f81359050611a2d81611a09565b92915050565b5f60208284031215611a4857611a4761194f565b5b5f611a5584828501611a1f565b91505092915050565b5f819050919050565b5f611a81611a7c611a77846119b1565b611a5e565b6119b1565b9050919050565b5f611a9282611a67565b9050919050565b5f611aa382611a88565b9050919050565b611ab381611a99565b82525050565b5f602082019050611acc5f830184611aaa565b92915050565b611adb81611953565b82525050565b5f602082019050611af45f830184611ad2565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60048110611b3857611b37611afa565b5b50565b5f819050611b4882611b27565b919050565b5f611b5782611b3b565b9050919050565b611b6781611b4d565b82525050565b5f602082019050611b805f830184611b5e565b92915050565b5f8115159050919050565b611b9a81611b86565b82525050565b5f602082019050611bb35f830184611b91565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611beb816119d0565b82525050565b5f611bfc8383611be2565b60208301905092915050565b5f602082019050919050565b5f611c1e82611bb9565b611c288185611bc3565b9350611c3383611bd3565b805f5b83811015611c63578151611c4a8882611bf1565b9750611c5583611c08565b925050600181019050611c36565b5085935050505092915050565b5f6020820190508181035f830152611c888184611c14565b905092915050565b5f82825260208201905092915050565b7f416c7265616479206c61756e63686564000000000000000000000000000000005f82015250565b5f611cd4601083611c90565b9150611cdf82611ca0565b602082019050919050565b5f6020820190508181035f830152611d0181611cc8565b9050919050565b7f4e6f7468696e6720746f207465726d696e6174650000000000000000000000005f82015250565b5f611d3c601483611c90565b9150611d4782611d08565b602082019050919050565b5f6020820190508181035f830152611d6981611d30565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5374616b696e67206e6f7420636f6d706c6574650000000000000000000000005f82015250565b5f611dd1601483611c90565b9150611ddc82611d9d565b602082019050919050565b5f6020820190508181035f830152611dfe81611dc5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e3c82611953565b9150611e4783611953565b9250828202611e5581611953565b91508282048414831517611e6c57611e6b611e05565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611eaa82611953565b9150611eb583611953565b925082611ec557611ec4611e73565b5b828204905092915050565b5f604082019050611ee35f830185611ad2565b611ef06020830184611ad2565b9392505050565b5f81519050611f058161195c565b92915050565b5f60208284031215611f2057611f1f61194f565b5b5f611f2d84828501611ef7565b91505092915050565b7f5374616b696e67206e6f742061637469766500000000000000000000000000005f82015250565b5f611f6a601283611c90565b9150611f7582611f36565b602082019050919050565b5f6020820190508181035f830152611f9781611f5e565b9050919050565b7f5374616b696e67206e6f74206c697665000000000000000000000000000000005f82015250565b5f611fd2601083611c90565b9150611fdd82611f9e565b602082019050919050565b5f6020820190508181035f830152611fff81611fc6565b9050919050565b5f61201082611953565b915061201b83611953565b925082820190508082111561203357612032611e05565b5b92915050565b7f42757920706572696f64206f76657200000000000000000000000000000000005f82015250565b5f61206d600f83611c90565b915061207882612039565b602082019050919050565b5f6020820190508181035f83015261209a81612061565b9050919050565b7f42656c6f77206d696e207374616b6500000000000000000000000000000000005f82015250565b5f6120d5600f83611c90565b91506120e0826120a1565b602082019050919050565b5f6020820190508181035f830152612102816120c9565b9050919050565b7f45786365656473206d6178207374616b650000000000000000000000000000005f82015250565b5f61213d601183611c90565b915061214882612109565b602082019050919050565b5f6020820190508181035f83015261216a81612131565b9050919050565b7f4578636565647320746f74616c20706f6f6c00000000000000000000000000005f82015250565b5f6121a5601283611c90565b91506121b082612171565b602082019050919050565b5f6020820190508181035f8301526121d281612199565b9050919050565b7f5374616b65206e6f7420656e64656400000000000000000000000000000000005f82015250565b5f61220d600f83611c90565b9150612218826121d9565b602082019050919050565b5f6020820190508181035f83015261223a81612201565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612275601f83611c90565b915061228082612241565b602082019050919050565b5f6020820190508181035f8301526122a281612269565b9050919050565b5f6040820190506122bc5f8301856119e1565b6122c96020830184611ad2565b9392505050565b5f6060820190506122e35f8301866119e1565b6122f060208301856119e1565b6122fd6040830184611ad2565b94935050505056fea26469706673582212205e89409125f5c943b6837e2fcb642abfb4fb5e2958f7363817e02a4d74f42eb264736f6c634300081e0033",
							"opcodes": "PUSH2 0x1A0 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x42 JUMPI PUSH2 0x41 PUSH2 0x3E6 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2AE8 CODESIZE SUB DUP1 PUSH2 0x2AE8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x74 SWAP2 SWAP1 PUSH2 0x4A4 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC SWAP2 SWAP1 PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF4 DUP2 PUSH2 0x325 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x161 SWAP1 PUSH2 0x5EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF SWAP1 PUSH2 0x652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x246 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23D SWAP1 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP6 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP5 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP DUP4 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP DUP3 PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 PUSH2 0x160 DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x180 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP POP POP POP PUSH2 0x6D8 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x440 DUP3 PUSH2 0x417 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x450 DUP2 PUSH2 0x436 JUMP JUMPDEST DUP2 EQ PUSH2 0x45A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x46B DUP2 PUSH2 0x447 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x483 DUP2 PUSH2 0x471 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x49E DUP2 PUSH2 0x47A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x4C1 PUSH2 0x413 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4CF DUP13 DUP3 DUP14 ADD PUSH2 0x45D JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH2 0x4E0 DUP13 DUP3 DUP14 ADD PUSH2 0x45D JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH2 0x4F1 DUP13 DUP3 DUP14 ADD PUSH2 0x45D JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH2 0x502 DUP13 DUP3 DUP14 ADD PUSH2 0x490 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH2 0x513 DUP13 DUP3 DUP14 ADD PUSH2 0x490 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH2 0x524 DUP13 DUP3 DUP14 ADD PUSH2 0x490 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH2 0x535 DUP13 DUP3 DUP14 ADD PUSH2 0x490 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 PUSH2 0x546 DUP13 DUP3 DUP14 ADD PUSH2 0x490 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH2 0x558 DUP13 DUP3 DUP14 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH2 0x571 DUP2 PUSH2 0x436 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x58A PUSH0 DUP4 ADD DUP5 PUSH2 0x568 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6520746F6B656E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5D4 PUSH1 0x13 DUP4 PUSH2 0x590 JUMP JUMPDEST SWAP2 POP PUSH2 0x5DF DUP3 PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x601 DUP2 PUSH2 0x5C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642072657761726420746F6B656E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x63C PUSH1 0x14 DUP4 PUSH2 0x590 JUMP JUMPDEST SWAP2 POP PUSH2 0x647 DUP3 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x669 DUP2 PUSH2 0x630 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207465616D2077616C6C657400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6A4 PUSH1 0x13 DUP4 PUSH2 0x590 JUMP JUMPDEST SWAP2 POP PUSH2 0x6AF DUP3 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6D1 DUP2 PUSH2 0x698 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x233B PUSH2 0x7AD PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xB5B ADD MSTORE DUP2 DUP2 PUSH2 0x1317 ADD MSTORE PUSH2 0x14E5 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0xA0F ADD MSTORE PUSH2 0x10D1 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x1026 ADD MSTORE PUSH2 0x1419 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x793 ADD MSTORE PUSH2 0xFC3 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x7EB ADD MSTORE PUSH2 0x1511 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0xF53 ADD MSTORE DUP2 DUP2 PUSH2 0x13F5 ADD MSTORE PUSH2 0x1532 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x9EB ADD MSTORE PUSH2 0xD73 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0xBE3 ADD MSTORE DUP2 DUP2 PUSH2 0xCCE ADD MSTORE DUP2 DUP2 PUSH2 0xD95 ADD MSTORE PUSH2 0x14C1 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x68D ADD MSTORE DUP2 DUP2 PUSH2 0x76F ADD MSTORE DUP2 DUP2 PUSH2 0x8D0 ADD MSTORE DUP2 DUP2 PUSH2 0xB98 ADD MSTORE PUSH2 0x11EC ADD MSTORE PUSH2 0x233B PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xCAB9B8FB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xF959680B EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xFE1D3795 EQ PUSH2 0x4D1 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xCAB9B8FB EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0xD719FA97 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xE9B98746 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xEA1B28E0 EQ PUSH2 0x45B JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x8DA7AD23 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8DA7AD23 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xA30A2474 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xB973E1BF EQ PUSH2 0x3D1 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x349 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x455AB53C GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x64904071 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x64904071 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x6F4A2CD0 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x790CA413 EQ PUSH2 0x303 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x455AB53C EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x4F984C5C EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x59927044 EQ PUSH2 0x2B3 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x292A6B19 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x292A6B19 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x375B3C0A EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x40F02AB6 EQ PUSH2 0x26D JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x1339C21 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x2AC512F EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x10D63D03 EQ PUSH2 0x20B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1D9 PUSH2 0x4DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x7B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH2 0x81F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0xA31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH2 0xDE5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH2 0xE04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x351 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0xE86 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x409 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x427 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x445 PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x493 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x143B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49D PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BB PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH2 0x1507 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E3 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x529 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x578 JUMPI PUSH2 0x577 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xA72E5E150EBE7B67363131CF1D5E72A8053ADC58EB1879467EBD529AE3D4ECCA PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5FB PUSH2 0x160C JUMP JUMPDEST PUSH2 0x603 PUSH2 0x1693 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67D SWAP1 PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D1 DUP3 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBF8F812D3D85DF21758E37A857352FB02610F4278C682198AF5C5C00BBB3D500 DUP3 PUSH1 0x40 MLOAD PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x76A PUSH2 0x1761 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x7BD PUSH2 0x160C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7E2 JUMPI PUSH2 0x7E1 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x827 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x82F PUSH2 0x1693 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x9B4 JUMPI PUSH0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x856 JUMPI PUSH2 0x855 PUSH2 0x1D70 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x914 DUP3 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB2372F309A2C0B54C10CE95469012D95C4D8CC7C8A154BFC22DB66D993ABBC71 DUP3 PUSH1 0x40 MLOAD PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x834 JUMP JUMPDEST POP PUSH1 0x3 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9DA JUMPI PUSH2 0x9D9 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x9E7 PUSH2 0x1761 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xA39 PUSH2 0x160C JUMP JUMPDEST PUSH2 0xA41 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0xA54 JUMPI PUSH2 0xA53 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA75 JUMPI PUSH2 0xA74 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST EQ PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAC SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCCA JUMPI PUSH0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xADC JUMPI PUSH2 0xADB PUSH2 0x1D70 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xB55 JUMPI POP POP PUSH2 0xCBD JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD PUSH32 0x0 DUP4 PUSH2 0xB85 SWAP2 SWAP1 PUSH2 0x1E32 JUMP JUMPDEST PUSH2 0xB8F SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP PUSH2 0xBDC DUP4 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC27 DUP4 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x53118BFF2FB56701752F5BF54053D24FB83CEC92F9F6CE664B90C38A2991CAA4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCB1 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xABA JUMP JUMPDEST POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD25 SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD40 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xDDA JUMPI PUSH2 0xDD9 PUSH32 0x0 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP PUSH2 0xDE3 PUSH2 0x1761 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDED PUSH2 0x160C JUMP JUMPDEST PUSH2 0xDF6 PUSH0 PUSH2 0x176A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE0C PUSH2 0x160C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE31 JUMPI PUSH2 0xE30 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xE8E PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xEA2 JUMPI PUSH2 0xEA1 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xEC3 JUMPI PUSH2 0xEC2 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST EQ PUSH2 0xF03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFA SWAP1 PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF48 SWAP1 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x3 SLOAD PUSH2 0xF7F SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xFC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB8 SWAP1 PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101B SWAP1 PUSH2 0x20EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST GT ISZERO PUSH2 0x10CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C6 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 PUSH1 0x5 SLOAD PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST GT ISZERO PUSH2 0x113F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1136 SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x11E4 JUMPI PUSH1 0x7 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1231 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x182B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP3 PUSH1 0x40 MLOAD PUSH2 0x12E2 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x12F2 PUSH2 0x1761 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x5 SLOAD EQ DUP1 PUSH2 0x1305 JUMPI POP PUSH0 DUP3 EQ JUMPDEST ISZERO PUSH2 0x1312 JUMPI PUSH0 SWAP1 POP PUSH2 0x134E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH32 0x0 DUP4 PUSH2 0x1341 SWAP2 SWAP1 PUSH2 0x1E32 JUMP JUMPDEST PUSH2 0x134B SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x13E9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x13A0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1443 PUSH2 0x160C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AA SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14BC DUP2 PUSH2 0x176A JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x150F PUSH2 0x160C JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 SLOAD PUSH2 0x155E SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x15A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A0 SWAP1 PUSH2 0x2223 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15CE JUMPI PUSH2 0x15CD PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xAAAF03C480F43393F2414D5013B316F6CC36576BED29AE1EA15D8936DCC0D5E7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1602 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1614 PUSH2 0x18AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1632 PUSH2 0xE38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1691 JUMPI PUSH2 0x1655 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1688 SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x16D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CF SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x175C DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1715 SWAP3 SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x18A7 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1860 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x18D3 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x18EC JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1907 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1949 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1940 SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1965 DUP2 PUSH2 0x1953 JUMP JUMPDEST DUP2 EQ PUSH2 0x196F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1980 DUP2 PUSH2 0x195C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199B JUMPI PUSH2 0x199A PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19A8 DUP5 DUP3 DUP6 ADD PUSH2 0x1972 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19DA DUP3 PUSH2 0x19B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EA DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A03 PUSH0 DUP4 ADD DUP5 PUSH2 0x19E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A12 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A1C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A2D DUP2 PUSH2 0x1A09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A48 JUMPI PUSH2 0x1A47 PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A55 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A81 PUSH2 0x1A7C PUSH2 0x1A77 DUP5 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x1A5E JUMP JUMPDEST PUSH2 0x19B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A92 DUP3 PUSH2 0x1A67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA3 DUP3 PUSH2 0x1A88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB3 DUP2 PUSH2 0x1A99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ACC PUSH0 DUP4 ADD DUP5 PUSH2 0x1AAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ADB DUP2 PUSH2 0x1953 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1B38 JUMPI PUSH2 0x1B37 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x1B48 DUP3 PUSH2 0x1B27 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B57 DUP3 PUSH2 0x1B3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B67 DUP2 PUSH2 0x1B4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B80 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9A DUP2 PUSH2 0x1B86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BEB DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BFC DUP4 DUP4 PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C1E DUP3 PUSH2 0x1BB9 JUMP JUMPDEST PUSH2 0x1C28 DUP2 DUP6 PUSH2 0x1BC3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C33 DUP4 PUSH2 0x1BD3 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C63 JUMPI DUP2 MLOAD PUSH2 0x1C4A DUP9 DUP3 PUSH2 0x1BF1 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C55 DUP4 PUSH2 0x1C08 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C36 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C88 DUP2 DUP5 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C7265616479206C61756E6368656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD4 PUSH1 0x10 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDF DUP3 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D01 DUP2 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F207465726D696E617465000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3C PUSH1 0x14 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D47 DUP3 PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D69 DUP2 PUSH2 0x1D30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5374616B696E67206E6F7420636F6D706C657465000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD1 PUSH1 0x14 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDC DUP3 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DFE DUP2 PUSH2 0x1DC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E3C DUP3 PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E47 DUP4 PUSH2 0x1953 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E55 DUP2 PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E6C JUMPI PUSH2 0x1E6B PUSH2 0x1E05 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EAA DUP3 PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB5 DUP4 PUSH2 0x1953 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x1E73 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EE3 PUSH0 DUP4 ADD DUP6 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x1EF0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AD2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F05 DUP2 PUSH2 0x195C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F20 JUMPI PUSH2 0x1F1F PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F2D DUP5 DUP3 DUP6 ADD PUSH2 0x1EF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E67206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6A PUSH1 0x12 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F75 DUP3 PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F97 DUP2 PUSH2 0x1F5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E67206E6F74206C69766500000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FD2 PUSH1 0x10 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDD DUP3 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FFF DUP2 PUSH2 0x1FC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2010 DUP3 PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP PUSH2 0x201B DUP4 PUSH2 0x1953 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2033 JUMPI PUSH2 0x2032 PUSH2 0x1E05 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42757920706572696F64206F7665720000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x206D PUSH1 0xF DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x2078 DUP3 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x209A DUP2 PUSH2 0x2061 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42656C6F77206D696E207374616B650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20D5 PUSH1 0xF DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E0 DUP3 PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2102 DUP2 PUSH2 0x20C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178207374616B65000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x213D PUSH1 0x11 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x2148 DUP3 PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x216A DUP2 PUSH2 0x2131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4578636565647320746F74616C20706F6F6C0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21A5 PUSH1 0x12 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x21B0 DUP3 PUSH2 0x2171 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21D2 DUP2 PUSH2 0x2199 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B65206E6F7420656E6465640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x220D PUSH1 0xF DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x2218 DUP3 PUSH2 0x21D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x223A DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2275 PUSH1 0x1F DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x2280 DUP3 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22A2 DUP2 PUSH2 0x2269 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22BC PUSH0 DUP4 ADD DUP6 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x22C9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AD2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22E3 PUSH0 DUP4 ADD DUP7 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x22F0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x22FD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AD2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY DUP10 BLOCKHASH SWAP2 0x25 CREATE2 0xC9 NUMBER 0xB6 DUP4 PUSH31 0x2FCB642ABFB4FB5E2958F7363817E02A4D74F42EB264736F6C634300081E00 CALLER ",
							"sourceMap": "306:5783:9:-:0;;;920:5;892:33;;;;;;;;;;;;;;;;;;;;994:14;964:44;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1636:857;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;340:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;1974:1:9;1950:26;;:12;:26;;;1942:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2043:1;2019:26;;:12;:26;;;2011:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;2112:1;2089:25;;:11;:25;;;2081:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;2172:12;2151:34;;;;;;;;;;2217:12;2196:34;;;;;;;;;;2254:11;2241:24;;;;;;;;;;2292:12;2278:26;;;;;;2331:14;2315:30;;;;;;2367:9;2356:20;;;;;;2398:9;2387:20;;;;;;2434:14;2418:30;;;;;;2473:12;2459:26;;;;;;1636:857;;;;;;;;;306:5783;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:180:10:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;274:117;383:1;380;373:12;520:126;557:7;597:42;590:5;586:54;575:65;;520:126;;;:::o;652:96::-;689:7;718:24;736:5;718:24;:::i;:::-;707:35;;652:96;;;:::o;754:122::-;827:24;845:5;827:24;:::i;:::-;820:5;817:35;807:63;;866:1;863;856:12;807:63;754:122;:::o;882:143::-;939:5;970:6;964:13;955:22;;986:33;1013:5;986:33;:::i;:::-;882:143;;;;:::o;1031:77::-;1068:7;1097:5;1086:16;;1031:77;;;:::o;1114:122::-;1187:24;1205:5;1187:24;:::i;:::-;1180:5;1177:35;1167:63;;1226:1;1223;1216:12;1167:63;1114:122;:::o;1242:143::-;1299:5;1330:6;1324:13;1315:22;;1346:33;1373:5;1346:33;:::i;:::-;1242:143;;;;:::o;1391:1605::-;1533:6;1541;1549;1557;1565;1573;1581;1589;1597;1646:3;1634:9;1625:7;1621:23;1617:33;1614:120;;;1653:79;;:::i;:::-;1614:120;1773:1;1798:64;1854:7;1845:6;1834:9;1830:22;1798:64;:::i;:::-;1788:74;;1744:128;1911:2;1937:64;1993:7;1984:6;1973:9;1969:22;1937:64;:::i;:::-;1927:74;;1882:129;2050:2;2076:64;2132:7;2123:6;2112:9;2108:22;2076:64;:::i;:::-;2066:74;;2021:129;2189:2;2215:64;2271:7;2262:6;2251:9;2247:22;2215:64;:::i;:::-;2205:74;;2160:129;2328:3;2355:64;2411:7;2402:6;2391:9;2387:22;2355:64;:::i;:::-;2345:74;;2299:130;2468:3;2495:64;2551:7;2542:6;2531:9;2527:22;2495:64;:::i;:::-;2485:74;;2439:130;2608:3;2635:64;2691:7;2682:6;2671:9;2667:22;2635:64;:::i;:::-;2625:74;;2579:130;2748:3;2775:64;2831:7;2822:6;2811:9;2807:22;2775:64;:::i;:::-;2765:74;;2719:130;2888:3;2915:64;2971:7;2962:6;2951:9;2947:22;2915:64;:::i;:::-;2905:74;;2859:130;1391:1605;;;;;;;;;;;:::o;3002:118::-;3089:24;3107:5;3089:24;:::i;:::-;3084:3;3077:37;3002:118;;:::o;3126:222::-;3219:4;3257:2;3246:9;3242:18;3234:26;;3270:71;3338:1;3327:9;3323:17;3314:6;3270:71;:::i;:::-;3126:222;;;;:::o;3354:169::-;3438:11;3472:6;3467:3;3460:19;3512:4;3507:3;3503:14;3488:29;;3354:169;;;;:::o;3529:::-;3669:21;3665:1;3657:6;3653:14;3646:45;3529:169;:::o;3704:366::-;3846:3;3867:67;3931:2;3926:3;3867:67;:::i;:::-;3860:74;;3943:93;4032:3;3943:93;:::i;:::-;4061:2;4056:3;4052:12;4045:19;;3704:366;;;:::o;4076:419::-;4242:4;4280:2;4269:9;4265:18;4257:26;;4329:9;4323:4;4319:20;4315:1;4304:9;4300:17;4293:47;4357:131;4483:4;4357:131;:::i;:::-;4349:139;;4076:419;;;:::o;4501:170::-;4641:22;4637:1;4629:6;4625:14;4618:46;4501:170;:::o;4677:366::-;4819:3;4840:67;4904:2;4899:3;4840:67;:::i;:::-;4833:74;;4916:93;5005:3;4916:93;:::i;:::-;5034:2;5029:3;5025:12;5018:19;;4677:366;;;:::o;5049:419::-;5215:4;5253:2;5242:9;5238:18;5230:26;;5302:9;5296:4;5292:20;5288:1;5277:9;5273:17;5266:47;5330:131;5456:4;5330:131;:::i;:::-;5322:139;;5049:419;;;:::o;5474:169::-;5614:21;5610:1;5602:6;5598:14;5591:45;5474:169;:::o;5649:366::-;5791:3;5812:67;5876:2;5871:3;5812:67;:::i;:::-;5805:74;;5888:93;5977:3;5888:93;:::i;:::-;6006:2;6001:3;5997:12;5990:19;;5649:366;;;:::o;6021:419::-;6187:4;6225:2;6214:9;6210:18;6202:26;;6274:9;6268:4;6264:20;6260:1;6249:9;6245:17;6238:47;6302:131;6428:4;6302:131;:::i;:::-;6294:139;;6021:419;;;:::o;306:5783:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_802": {
									"entryPoint": 6324,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5644,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_856": {
									"entryPoint": 6317,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 5985,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 5779,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5994,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyDuration_917": {
									"entryPoint": 5107,
									"id": 917,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@completeStaking_1164": {
									"entryPoint": 5383,
									"id": 1164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@distributeRewards_1364": {
									"entryPoint": 2609,
									"id": 1364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getStakedUsers_1475": {
									"entryPoint": 4968,
									"id": 1475,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStakingStatus_1484": {
									"entryPoint": 4947,
									"id": 1484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@landFiToken_910": {
									"entryPoint": 1901,
									"id": 910,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@launchStaking_930": {
									"entryPoint": 3700,
									"id": 930,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@launchTime_932": {
									"entryPoint": 3576,
									"id": 932,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@launch_1114": {
									"entryPoint": 1243,
									"id": 1114,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxStake_923": {
									"entryPoint": 5143,
									"id": 923,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxTotalStake_925": {
									"entryPoint": 2573,
									"id": 925,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minStake_921": {
									"entryPoint": 1937,
									"id": 921,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 3640,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1125": {
									"entryPoint": 3588,
									"id": 1125,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@previewReward_1511": {
									"entryPoint": 4853,
									"id": 1511,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 3557,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_913": {
									"entryPoint": 5311,
									"id": 913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardTotal_927": {
									"entryPoint": 5347,
									"id": 927,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 6187,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 5858,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakeDuration_919": {
									"entryPoint": 2025,
									"id": 919,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1261": {
									"entryPoint": 3718,
									"id": 1261,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedList_946": {
									"entryPoint": 1464,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingStatus_937": {
									"entryPoint": 2061,
									"id": 937,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@teamWallet_915": {
									"entryPoint": 2537,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@terminateAll_1425": {
									"entryPoint": 2079,
									"id": 1425,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@terminateSingle_1466": {
									"entryPoint": 1523,
									"id": 1466,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@totalStaked_939": {
									"entryPoint": 3582,
									"id": 939,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 5179,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1136": {
									"entryPoint": 1973,
									"id": 1136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userStakes_943": {
									"entryPoint": 3679,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 7153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 7138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6625,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 6826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Status_$907_to_t_uint8_fromStack": {
									"entryPoint": 7006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8912,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8873,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 6841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_Status_$907__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7888,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Status_$907": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 6809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Status_$907_to_t_uint8": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7795,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 6906,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7536,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6479,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1": {
									"entryPoint": 8561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d": {
									"entryPoint": 8094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d": {
									"entryPoint": 7581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065": {
									"entryPoint": 8249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d": {
									"entryPoint": 8665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1": {
									"entryPoint": 7432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7": {
									"entryPoint": 7990,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb": {
									"entryPoint": 8457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_Status_$907": {
									"entryPoint": 6951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20750:10",
										"nodeType": "YulBlock",
										"src": "0:20750:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:32:10",
													"nodeType": "YulBlock",
													"src": "379:32:10",
													"statements": [
														{
															"nativeSrc": "389:16:10",
															"nodeType": "YulAssignment",
															"src": "389:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:10",
																"nodeType": "YulIdentifier",
																"src": "400:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:77:10"
											},
											{
												"body": {
													"nativeSrc": "460:79:10",
													"nodeType": "YulBlock",
													"src": "460:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:10",
																"nodeType": "YulBlock",
																"src": "517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:10",
																					"nodeType": "YulLiteral",
																					"src": "526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:10",
																					"nodeType": "YulLiteral",
																					"src": "529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:10"
																			},
																			"nativeSrc": "519:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:10"
																		},
																		"nativeSrc": "519:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:10"
																				},
																				"nativeSrc": "490:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:10"
																		},
																		"nativeSrc": "480:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:10"
																},
																"nativeSrc": "473:43:10",
																"nodeType": "YulFunctionCall",
																"src": "473:43:10"
															},
															"nativeSrc": "470:63:10",
															"nodeType": "YulIf",
															"src": "470:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:10",
														"nodeType": "YulTypedName",
														"src": "453:5:10",
														"type": ""
													}
												],
												"src": "417:122:10"
											},
											{
												"body": {
													"nativeSrc": "597:87:10",
													"nodeType": "YulBlock",
													"src": "597:87:10",
													"statements": [
														{
															"nativeSrc": "607:29:10",
															"nodeType": "YulAssignment",
															"src": "607:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:10"
																},
																"nativeSrc": "616:20:10",
																"nodeType": "YulFunctionCall",
																"src": "616:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:10"
																},
																"nativeSrc": "645:33:10",
																"nodeType": "YulFunctionCall",
																"src": "645:33:10"
															},
															"nativeSrc": "645:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:10",
														"nodeType": "YulTypedName",
														"src": "575:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:10",
														"nodeType": "YulTypedName",
														"src": "583:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:10",
														"nodeType": "YulTypedName",
														"src": "591:5:10",
														"type": ""
													}
												],
												"src": "545:139:10"
											},
											{
												"body": {
													"nativeSrc": "756:263:10",
													"nodeType": "YulBlock",
													"src": "756:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:10",
																"nodeType": "YulBlock",
																"src": "802:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:10"
																			},
																			"nativeSrc": "804:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:10"
																		},
																		"nativeSrc": "804:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:10"
																		},
																		"nativeSrc": "773:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "798:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:10"
																},
																"nativeSrc": "769:32:10",
																"nodeType": "YulFunctionCall",
																"src": "769:32:10"
															},
															"nativeSrc": "766:119:10",
															"nodeType": "YulIf",
															"src": "766:119:10"
														},
														{
															"nativeSrc": "895:117:10",
															"nodeType": "YulBlock",
															"src": "895:117:10",
															"statements": [
																{
																	"nativeSrc": "910:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:10",
																		"nodeType": "YulLiteral",
																		"src": "924:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:10",
																			"nodeType": "YulTypedName",
																			"src": "914:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:10",
																	"nodeType": "YulAssignment",
																	"src": "939:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:10"
																				},
																				"nativeSrc": "970:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:10"
																		},
																		"nativeSrc": "949:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:10",
														"nodeType": "YulTypedName",
														"src": "726:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:10",
														"nodeType": "YulTypedName",
														"src": "737:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:10",
														"nodeType": "YulTypedName",
														"src": "749:6:10",
														"type": ""
													}
												],
												"src": "690:329:10"
											},
											{
												"body": {
													"nativeSrc": "1070:81:10",
													"nodeType": "YulBlock",
													"src": "1070:81:10",
													"statements": [
														{
															"nativeSrc": "1080:65:10",
															"nodeType": "YulAssignment",
															"src": "1080:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:10"
																},
																"nativeSrc": "1091:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:10",
														"nodeType": "YulTypedName",
														"src": "1052:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:10",
														"nodeType": "YulTypedName",
														"src": "1062:7:10",
														"type": ""
													}
												],
												"src": "1025:126:10"
											},
											{
												"body": {
													"nativeSrc": "1202:51:10",
													"nodeType": "YulBlock",
													"src": "1202:51:10",
													"statements": [
														{
															"nativeSrc": "1212:35:10",
															"nodeType": "YulAssignment",
															"src": "1212:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:10"
																},
																"nativeSrc": "1223:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:10",
														"nodeType": "YulTypedName",
														"src": "1184:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:10",
														"nodeType": "YulTypedName",
														"src": "1194:7:10",
														"type": ""
													}
												],
												"src": "1157:96:10"
											},
											{
												"body": {
													"nativeSrc": "1324:53:10",
													"nodeType": "YulBlock",
													"src": "1324:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1346:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:10"
																		},
																		"nativeSrc": "1346:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:10"
																},
																"nativeSrc": "1334:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:10"
															},
															"nativeSrc": "1334:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1259:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:10",
														"nodeType": "YulTypedName",
														"src": "1312:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:10",
														"nodeType": "YulTypedName",
														"src": "1319:3:10",
														"type": ""
													}
												],
												"src": "1259:118:10"
											},
											{
												"body": {
													"nativeSrc": "1481:124:10",
													"nodeType": "YulBlock",
													"src": "1481:124:10",
													"statements": [
														{
															"nativeSrc": "1491:26:10",
															"nodeType": "YulAssignment",
															"src": "1491:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:10"
																},
																"nativeSrc": "1499:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:10"
																		},
																		"nativeSrc": "1580:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1527:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:10"
																},
																"nativeSrc": "1527:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:10"
															},
															"nativeSrc": "1527:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1383:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:10",
														"nodeType": "YulTypedName",
														"src": "1453:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:10",
														"nodeType": "YulTypedName",
														"src": "1465:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:10",
														"nodeType": "YulTypedName",
														"src": "1476:4:10",
														"type": ""
													}
												],
												"src": "1383:222:10"
											},
											{
												"body": {
													"nativeSrc": "1654:79:10",
													"nodeType": "YulBlock",
													"src": "1654:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:10",
																"nodeType": "YulBlock",
																"src": "1711:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:10"
																			},
																			"nativeSrc": "1713:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:10"
																		},
																		"nativeSrc": "1713:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1684:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:10"
																				},
																				"nativeSrc": "1684:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:10"
																		},
																		"nativeSrc": "1674:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:10"
																},
																"nativeSrc": "1667:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:10"
															},
															"nativeSrc": "1664:63:10",
															"nodeType": "YulIf",
															"src": "1664:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1611:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:10",
														"nodeType": "YulTypedName",
														"src": "1647:5:10",
														"type": ""
													}
												],
												"src": "1611:122:10"
											},
											{
												"body": {
													"nativeSrc": "1791:87:10",
													"nodeType": "YulBlock",
													"src": "1791:87:10",
													"statements": [
														{
															"nativeSrc": "1801:29:10",
															"nodeType": "YulAssignment",
															"src": "1801:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:10"
																},
																"nativeSrc": "1810:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1839:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:10"
																},
																"nativeSrc": "1839:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:10"
															},
															"nativeSrc": "1839:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1739:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:10",
														"nodeType": "YulTypedName",
														"src": "1769:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:10",
														"nodeType": "YulTypedName",
														"src": "1777:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:10",
														"nodeType": "YulTypedName",
														"src": "1785:5:10",
														"type": ""
													}
												],
												"src": "1739:139:10"
											},
											{
												"body": {
													"nativeSrc": "1950:263:10",
													"nodeType": "YulBlock",
													"src": "1950:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:10",
																"nodeType": "YulBlock",
																"src": "1996:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:10"
																			},
																			"nativeSrc": "1998:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:10"
																		},
																		"nativeSrc": "1998:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:10"
																		},
																		"nativeSrc": "1967:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:10"
																},
																"nativeSrc": "1963:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:10"
															},
															"nativeSrc": "1960:119:10",
															"nodeType": "YulIf",
															"src": "1960:119:10"
														},
														{
															"nativeSrc": "2089:117:10",
															"nodeType": "YulBlock",
															"src": "2089:117:10",
															"statements": [
																{
																	"nativeSrc": "2104:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:10"
																				},
																				"nativeSrc": "2164:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2143:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:10"
																		},
																		"nativeSrc": "2143:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1884:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:10",
														"nodeType": "YulTypedName",
														"src": "1920:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:10",
														"nodeType": "YulTypedName",
														"src": "1931:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:10",
														"nodeType": "YulTypedName",
														"src": "1943:6:10",
														"type": ""
													}
												],
												"src": "1884:329:10"
											},
											{
												"body": {
													"nativeSrc": "2251:28:10",
													"nodeType": "YulBlock",
													"src": "2251:28:10",
													"statements": [
														{
															"nativeSrc": "2261:12:10",
															"nodeType": "YulAssignment",
															"src": "2261:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "2268:5:10",
																"nodeType": "YulIdentifier",
																"src": "2268:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2219:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2237:5:10",
														"nodeType": "YulTypedName",
														"src": "2237:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2247:3:10",
														"nodeType": "YulTypedName",
														"src": "2247:3:10",
														"type": ""
													}
												],
												"src": "2219:60:10"
											},
											{
												"body": {
													"nativeSrc": "2345:82:10",
													"nodeType": "YulBlock",
													"src": "2345:82:10",
													"statements": [
														{
															"nativeSrc": "2355:66:10",
															"nodeType": "YulAssignment",
															"src": "2355:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2413:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2395:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2395:17:10"
																				},
																				"nativeSrc": "2395:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2395:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2386:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "2386:8:10"
																		},
																		"nativeSrc": "2386:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2368:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2368:17:10"
																},
																"nativeSrc": "2368:53:10",
																"nodeType": "YulFunctionCall",
																"src": "2368:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2355:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2355:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2285:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2325:5:10",
														"nodeType": "YulTypedName",
														"src": "2325:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2335:9:10",
														"nodeType": "YulTypedName",
														"src": "2335:9:10",
														"type": ""
													}
												],
												"src": "2285:142:10"
											},
											{
												"body": {
													"nativeSrc": "2493:66:10",
													"nodeType": "YulBlock",
													"src": "2493:66:10",
													"statements": [
														{
															"nativeSrc": "2503:50:10",
															"nodeType": "YulAssignment",
															"src": "2503:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2547:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2516:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2516:30:10"
																},
																"nativeSrc": "2516:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2516:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2503:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2503:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2433:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2473:5:10",
														"nodeType": "YulTypedName",
														"src": "2473:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2483:9:10",
														"nodeType": "YulTypedName",
														"src": "2483:9:10",
														"type": ""
													}
												],
												"src": "2433:126:10"
											},
											{
												"body": {
													"nativeSrc": "2639:66:10",
													"nodeType": "YulBlock",
													"src": "2639:66:10",
													"statements": [
														{
															"nativeSrc": "2649:50:10",
															"nodeType": "YulAssignment",
															"src": "2649:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2693:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2693:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2662:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2662:30:10"
																},
																"nativeSrc": "2662:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2662:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2649:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2649:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nativeSrc": "2565:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2619:5:10",
														"nodeType": "YulTypedName",
														"src": "2619:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2629:9:10",
														"nodeType": "YulTypedName",
														"src": "2629:9:10",
														"type": ""
													}
												],
												"src": "2565:140:10"
											},
											{
												"body": {
													"nativeSrc": "2790:80:10",
													"nodeType": "YulBlock",
													"src": "2790:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2807:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2807:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2857:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2857:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nativeSrc": "2812:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "2812:44:10"
																		},
																		"nativeSrc": "2812:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2812:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2800:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:10"
																},
																"nativeSrc": "2800:64:10",
																"nodeType": "YulFunctionCall",
																"src": "2800:64:10"
															},
															"nativeSrc": "2800:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "2800:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nativeSrc": "2711:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2778:5:10",
														"nodeType": "YulTypedName",
														"src": "2778:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2785:3:10",
														"nodeType": "YulTypedName",
														"src": "2785:3:10",
														"type": ""
													}
												],
												"src": "2711:159:10"
											},
											{
												"body": {
													"nativeSrc": "2988:138:10",
													"nodeType": "YulBlock",
													"src": "2988:138:10",
													"statements": [
														{
															"nativeSrc": "2998:26:10",
															"nodeType": "YulAssignment",
															"src": "2998:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3010:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3010:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3021:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3006:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3006:3:10"
																},
																"nativeSrc": "3006:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3006:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2998:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2998:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3092:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3092:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3105:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3116:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3116:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3101:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:10"
																		},
																		"nativeSrc": "3101:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3101:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nativeSrc": "3034:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "3034:57:10"
																},
																"nativeSrc": "3034:85:10",
																"nodeType": "YulFunctionCall",
																"src": "3034:85:10"
															},
															"nativeSrc": "3034:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "3034:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nativeSrc": "2876:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2960:9:10",
														"nodeType": "YulTypedName",
														"src": "2960:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2972:6:10",
														"nodeType": "YulTypedName",
														"src": "2972:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2983:4:10",
														"nodeType": "YulTypedName",
														"src": "2983:4:10",
														"type": ""
													}
												],
												"src": "2876:250:10"
											},
											{
												"body": {
													"nativeSrc": "3197:53:10",
													"nodeType": "YulBlock",
													"src": "3197:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3214:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3214:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3237:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3237:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3219:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3219:17:10"
																		},
																		"nativeSrc": "3219:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3207:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3207:6:10"
																},
																"nativeSrc": "3207:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3207:37:10"
															},
															"nativeSrc": "3207:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3207:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3132:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3185:5:10",
														"nodeType": "YulTypedName",
														"src": "3185:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3192:3:10",
														"nodeType": "YulTypedName",
														"src": "3192:3:10",
														"type": ""
													}
												],
												"src": "3132:118:10"
											},
											{
												"body": {
													"nativeSrc": "3354:124:10",
													"nodeType": "YulBlock",
													"src": "3354:124:10",
													"statements": [
														{
															"nativeSrc": "3364:26:10",
															"nodeType": "YulAssignment",
															"src": "3364:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3376:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3387:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3372:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:10"
																},
																"nativeSrc": "3372:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3372:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3364:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3364:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3444:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3444:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3457:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3468:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3468:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3453:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:10"
																		},
																		"nativeSrc": "3453:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3453:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3400:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3400:43:10"
																},
																"nativeSrc": "3400:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3400:71:10"
															},
															"nativeSrc": "3400:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3400:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3256:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3326:9:10",
														"nodeType": "YulTypedName",
														"src": "3326:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3338:6:10",
														"nodeType": "YulTypedName",
														"src": "3338:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3349:4:10",
														"nodeType": "YulTypedName",
														"src": "3349:4:10",
														"type": ""
													}
												],
												"src": "3256:222:10"
											},
											{
												"body": {
													"nativeSrc": "3512:152:10",
													"nodeType": "YulBlock",
													"src": "3512:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3529:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3529:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3532:77:10",
																		"nodeType": "YulLiteral",
																		"src": "3532:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3522:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:10"
																},
																"nativeSrc": "3522:88:10",
																"nodeType": "YulFunctionCall",
																"src": "3522:88:10"
															},
															"nativeSrc": "3522:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "3522:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3626:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3629:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3629:4:10",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3619:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3619:6:10"
																},
																"nativeSrc": "3619:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3619:15:10"
															},
															"nativeSrc": "3619:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3619:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3650:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3650:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3653:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3653:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3643:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:10"
																},
																"nativeSrc": "3643:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3643:15:10"
															},
															"nativeSrc": "3643:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "3643:15:10"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "3484:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "3484:180:10"
											},
											{
												"body": {
													"nativeSrc": "3723:62:10",
													"nodeType": "YulBlock",
													"src": "3723:62:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3757:22:10",
																"nodeType": "YulBlock",
																"src": "3757:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "3759:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "3759:16:10"
																			},
																			"nativeSrc": "3759:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3759:18:10"
																		},
																		"nativeSrc": "3759:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3759:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3746:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3746:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3753:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3753:1:10",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3743:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3743:2:10"
																		},
																		"nativeSrc": "3743:12:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3743:12:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3736:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3736:6:10"
																},
																"nativeSrc": "3736:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3736:20:10"
															},
															"nativeSrc": "3733:46:10",
															"nodeType": "YulIf",
															"src": "3733:46:10"
														}
													]
												},
												"name": "validator_assert_t_enum$_Status_$907",
												"nativeSrc": "3670:115:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3716:5:10",
														"nodeType": "YulTypedName",
														"src": "3716:5:10",
														"type": ""
													}
												],
												"src": "3670:115:10"
											},
											{
												"body": {
													"nativeSrc": "3846:76:10",
													"nodeType": "YulBlock",
													"src": "3846:76:10",
													"statements": [
														{
															"nativeSrc": "3856:16:10",
															"nodeType": "YulAssignment",
															"src": "3856:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "3867:5:10",
																"nodeType": "YulIdentifier",
																"src": "3867:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3856:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3856:7:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3910:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3910:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Status_$907",
																	"nativeSrc": "3873:36:10",
																	"nodeType": "YulIdentifier",
																	"src": "3873:36:10"
																},
																"nativeSrc": "3873:43:10",
																"nodeType": "YulFunctionCall",
																"src": "3873:43:10"
															},
															"nativeSrc": "3873:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "3873:43:10"
														}
													]
												},
												"name": "cleanup_t_enum$_Status_$907",
												"nativeSrc": "3791:131:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3828:5:10",
														"nodeType": "YulTypedName",
														"src": "3828:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3838:7:10",
														"nodeType": "YulTypedName",
														"src": "3838:7:10",
														"type": ""
													}
												],
												"src": "3791:131:10"
											},
											{
												"body": {
													"nativeSrc": "3996:63:10",
													"nodeType": "YulBlock",
													"src": "3996:63:10",
													"statements": [
														{
															"nativeSrc": "4006:47:10",
															"nodeType": "YulAssignment",
															"src": "4006:47:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4047:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4047:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Status_$907",
																	"nativeSrc": "4019:27:10",
																	"nodeType": "YulIdentifier",
																	"src": "4019:27:10"
																},
																"nativeSrc": "4019:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4019:34:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4006:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4006:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Status_$907_to_t_uint8",
												"nativeSrc": "3928:131:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3976:5:10",
														"nodeType": "YulTypedName",
														"src": "3976:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3986:9:10",
														"nodeType": "YulTypedName",
														"src": "3986:9:10",
														"type": ""
													}
												],
												"src": "3928:131:10"
											},
											{
												"body": {
													"nativeSrc": "4138:74:10",
													"nodeType": "YulBlock",
													"src": "4138:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4155:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4155:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4199:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4199:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Status_$907_to_t_uint8",
																			"nativeSrc": "4160:38:10",
																			"nodeType": "YulIdentifier",
																			"src": "4160:38:10"
																		},
																		"nativeSrc": "4160:45:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4160:45:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4148:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4148:6:10"
																},
																"nativeSrc": "4148:58:10",
																"nodeType": "YulFunctionCall",
																"src": "4148:58:10"
															},
															"nativeSrc": "4148:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "4148:58:10"
														}
													]
												},
												"name": "abi_encode_t_enum$_Status_$907_to_t_uint8_fromStack",
												"nativeSrc": "4065:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4126:5:10",
														"nodeType": "YulTypedName",
														"src": "4126:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4133:3:10",
														"nodeType": "YulTypedName",
														"src": "4133:3:10",
														"type": ""
													}
												],
												"src": "4065:147:10"
											},
											{
												"body": {
													"nativeSrc": "4324:132:10",
													"nodeType": "YulBlock",
													"src": "4324:132:10",
													"statements": [
														{
															"nativeSrc": "4334:26:10",
															"nodeType": "YulAssignment",
															"src": "4334:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4346:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4346:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4357:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4357:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4342:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4342:3:10"
																},
																"nativeSrc": "4342:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4342:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4334:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4334:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4422:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4422:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4435:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4435:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4446:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4446:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4431:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4431:3:10"
																		},
																		"nativeSrc": "4431:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4431:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_Status_$907_to_t_uint8_fromStack",
																	"nativeSrc": "4370:51:10",
																	"nodeType": "YulIdentifier",
																	"src": "4370:51:10"
																},
																"nativeSrc": "4370:79:10",
																"nodeType": "YulFunctionCall",
																"src": "4370:79:10"
															},
															"nativeSrc": "4370:79:10",
															"nodeType": "YulExpressionStatement",
															"src": "4370:79:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_Status_$907__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4218:238:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4296:9:10",
														"nodeType": "YulTypedName",
														"src": "4296:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4308:6:10",
														"nodeType": "YulTypedName",
														"src": "4308:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4319:4:10",
														"nodeType": "YulTypedName",
														"src": "4319:4:10",
														"type": ""
													}
												],
												"src": "4218:238:10"
											},
											{
												"body": {
													"nativeSrc": "4504:48:10",
													"nodeType": "YulBlock",
													"src": "4504:48:10",
													"statements": [
														{
															"nativeSrc": "4514:32:10",
															"nodeType": "YulAssignment",
															"src": "4514:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4539:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4539:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4532:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4532:6:10"
																		},
																		"nativeSrc": "4532:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4532:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4525:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4525:6:10"
																},
																"nativeSrc": "4525:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4525:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4514:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4514:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4462:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4486:5:10",
														"nodeType": "YulTypedName",
														"src": "4486:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4496:7:10",
														"nodeType": "YulTypedName",
														"src": "4496:7:10",
														"type": ""
													}
												],
												"src": "4462:90:10"
											},
											{
												"body": {
													"nativeSrc": "4617:50:10",
													"nodeType": "YulBlock",
													"src": "4617:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4634:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4634:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4654:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4654:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4639:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "4639:14:10"
																		},
																		"nativeSrc": "4639:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4639:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4627:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4627:6:10"
																},
																"nativeSrc": "4627:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4627:34:10"
															},
															"nativeSrc": "4627:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4627:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4558:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4605:5:10",
														"nodeType": "YulTypedName",
														"src": "4605:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4612:3:10",
														"nodeType": "YulTypedName",
														"src": "4612:3:10",
														"type": ""
													}
												],
												"src": "4558:109:10"
											},
											{
												"body": {
													"nativeSrc": "4765:118:10",
													"nodeType": "YulBlock",
													"src": "4765:118:10",
													"statements": [
														{
															"nativeSrc": "4775:26:10",
															"nodeType": "YulAssignment",
															"src": "4775:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4787:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4787:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4798:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4783:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:10"
																},
																"nativeSrc": "4783:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4783:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4775:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4775:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4849:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4849:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4862:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4862:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4873:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4873:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4858:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4858:3:10"
																		},
																		"nativeSrc": "4858:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4858:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4811:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "4811:37:10"
																},
																"nativeSrc": "4811:65:10",
																"nodeType": "YulFunctionCall",
																"src": "4811:65:10"
															},
															"nativeSrc": "4811:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "4811:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4673:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4737:9:10",
														"nodeType": "YulTypedName",
														"src": "4737:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4749:6:10",
														"nodeType": "YulTypedName",
														"src": "4749:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4760:4:10",
														"nodeType": "YulTypedName",
														"src": "4760:4:10",
														"type": ""
													}
												],
												"src": "4673:210:10"
											},
											{
												"body": {
													"nativeSrc": "4963:40:10",
													"nodeType": "YulBlock",
													"src": "4963:40:10",
													"statements": [
														{
															"nativeSrc": "4974:22:10",
															"nodeType": "YulAssignment",
															"src": "4974:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4990:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4990:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4984:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4984:5:10"
																},
																"nativeSrc": "4984:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4984:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4974:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4974:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "4889:114:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4946:5:10",
														"nodeType": "YulTypedName",
														"src": "4946:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4956:6:10",
														"nodeType": "YulTypedName",
														"src": "4956:6:10",
														"type": ""
													}
												],
												"src": "4889:114:10"
											},
											{
												"body": {
													"nativeSrc": "5120:73:10",
													"nodeType": "YulBlock",
													"src": "5120:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5137:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5137:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5142:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5142:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5130:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:10"
																},
																"nativeSrc": "5130:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5130:19:10"
															},
															"nativeSrc": "5130:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "5130:19:10"
														},
														{
															"nativeSrc": "5158:29:10",
															"nodeType": "YulAssignment",
															"src": "5158:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5177:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5177:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5182:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5182:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5173:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5173:3:10"
																},
																"nativeSrc": "5173:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5173:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5158:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "5158:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5009:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5092:3:10",
														"nodeType": "YulTypedName",
														"src": "5092:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5097:6:10",
														"nodeType": "YulTypedName",
														"src": "5097:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5108:11:10",
														"nodeType": "YulTypedName",
														"src": "5108:11:10",
														"type": ""
													}
												],
												"src": "5009:184:10"
											},
											{
												"body": {
													"nativeSrc": "5271:60:10",
													"nodeType": "YulBlock",
													"src": "5271:60:10",
													"statements": [
														{
															"nativeSrc": "5281:11:10",
															"nodeType": "YulAssignment",
															"src": "5281:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "5289:3:10",
																"nodeType": "YulIdentifier",
																"src": "5289:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5281:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5281:4:10"
																}
															]
														},
														{
															"nativeSrc": "5302:22:10",
															"nodeType": "YulAssignment",
															"src": "5302:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "5314:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5314:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5319:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5319:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5310:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5310:3:10"
																},
																"nativeSrc": "5310:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5310:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5302:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5302:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5199:132:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5258:3:10",
														"nodeType": "YulTypedName",
														"src": "5258:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5266:4:10",
														"nodeType": "YulTypedName",
														"src": "5266:4:10",
														"type": ""
													}
												],
												"src": "5199:132:10"
											},
											{
												"body": {
													"nativeSrc": "5392:53:10",
													"nodeType": "YulBlock",
													"src": "5392:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5409:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5409:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5432:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5432:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5414:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5414:17:10"
																		},
																		"nativeSrc": "5414:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5414:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5402:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5402:6:10"
																},
																"nativeSrc": "5402:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5402:37:10"
															},
															"nativeSrc": "5402:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5402:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "5337:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5380:5:10",
														"nodeType": "YulTypedName",
														"src": "5380:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5387:3:10",
														"nodeType": "YulTypedName",
														"src": "5387:3:10",
														"type": ""
													}
												],
												"src": "5337:108:10"
											},
											{
												"body": {
													"nativeSrc": "5531:99:10",
													"nodeType": "YulBlock",
													"src": "5531:99:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5575:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5575:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5583:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5583:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nativeSrc": "5541:33:10",
																	"nodeType": "YulIdentifier",
																	"src": "5541:33:10"
																},
																"nativeSrc": "5541:46:10",
																"nodeType": "YulFunctionCall",
																"src": "5541:46:10"
															},
															"nativeSrc": "5541:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "5541:46:10"
														},
														{
															"nativeSrc": "5596:28:10",
															"nodeType": "YulAssignment",
															"src": "5596:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5614:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5614:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5619:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5619:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5610:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5610:3:10"
																},
																"nativeSrc": "5610:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5610:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "5596:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "5596:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nativeSrc": "5451:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "5504:6:10",
														"nodeType": "YulTypedName",
														"src": "5504:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5512:3:10",
														"nodeType": "YulTypedName",
														"src": "5512:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "5520:10:10",
														"nodeType": "YulTypedName",
														"src": "5520:10:10",
														"type": ""
													}
												],
												"src": "5451:179:10"
											},
											{
												"body": {
													"nativeSrc": "5711:38:10",
													"nodeType": "YulBlock",
													"src": "5711:38:10",
													"statements": [
														{
															"nativeSrc": "5721:22:10",
															"nodeType": "YulAssignment",
															"src": "5721:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "5733:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5733:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5738:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5738:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5729:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5729:3:10"
																},
																"nativeSrc": "5729:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5729:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "5721:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5721:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "5636:113:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5698:3:10",
														"nodeType": "YulTypedName",
														"src": "5698:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "5706:4:10",
														"nodeType": "YulTypedName",
														"src": "5706:4:10",
														"type": ""
													}
												],
												"src": "5636:113:10"
											},
											{
												"body": {
													"nativeSrc": "5909:608:10",
													"nodeType": "YulBlock",
													"src": "5909:608:10",
													"statements": [
														{
															"nativeSrc": "5919:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5919:68:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5981:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5981:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "5933:47:10",
																	"nodeType": "YulIdentifier",
																	"src": "5933:47:10"
																},
																"nativeSrc": "5933:54:10",
																"nodeType": "YulFunctionCall",
																"src": "5933:54:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5923:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5923:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5996:93:10",
															"nodeType": "YulAssignment",
															"src": "5996:93:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6077:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6077:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6082:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6082:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "6003:73:10",
																	"nodeType": "YulIdentifier",
																	"src": "6003:73:10"
																},
																"nativeSrc": "6003:86:10",
																"nodeType": "YulFunctionCall",
																"src": "6003:86:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5996:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5996:3:10"
																}
															]
														},
														{
															"nativeSrc": "6098:71:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6098:71:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6163:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "6163:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "6113:49:10",
																	"nodeType": "YulIdentifier",
																	"src": "6113:49:10"
																},
																"nativeSrc": "6113:56:10",
																"nodeType": "YulFunctionCall",
																"src": "6113:56:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "6102:7:10",
																	"nodeType": "YulTypedName",
																	"src": "6102:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6178:21:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6178:21:10",
															"value": {
																"name": "baseRef",
																"nativeSrc": "6192:7:10",
																"nodeType": "YulIdentifier",
																"src": "6192:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "6182:6:10",
																	"nodeType": "YulTypedName",
																	"src": "6182:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:224:10",
																"nodeType": "YulBlock",
																"src": "6268:224:10",
																"statements": [
																	{
																		"nativeSrc": "6282:34:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6282:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6309:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6309:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6303:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6303:5:10"
																			},
																			"nativeSrc": "6303:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6303:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "6286:13:10",
																				"nodeType": "YulTypedName",
																				"src": "6286:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6329:70:10",
																		"nodeType": "YulAssignment",
																		"src": "6329:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "6380:13:10",
																					"nodeType": "YulIdentifier",
																					"src": "6380:13:10"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "6395:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6395:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nativeSrc": "6336:43:10",
																				"nodeType": "YulIdentifier",
																				"src": "6336:43:10"
																			},
																			"nativeSrc": "6336:63:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6336:63:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "6329:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6329:3:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6412:70:10",
																		"nodeType": "YulAssignment",
																		"src": "6412:70:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "6475:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6475:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nativeSrc": "6422:52:10",
																				"nodeType": "YulIdentifier",
																				"src": "6422:52:10"
																			},
																			"nativeSrc": "6422:60:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6422:60:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "6412:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6412:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6230:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6230:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6233:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6233:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6227:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6227:2:10"
																},
																"nativeSrc": "6227:13:10",
																"nodeType": "YulFunctionCall",
																"src": "6227:13:10"
															},
															"nativeSrc": "6208:284:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6241:18:10",
																"nodeType": "YulBlock",
																"src": "6241:18:10",
																"statements": [
																	{
																		"nativeSrc": "6243:14:10",
																		"nodeType": "YulAssignment",
																		"src": "6243:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6252:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "6252:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6255:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6255:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6248:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "6248:3:10"
																			},
																			"nativeSrc": "6248:9:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6248:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6243:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "6243:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6212:14:10",
																"nodeType": "YulBlock",
																"src": "6212:14:10",
																"statements": [
																	{
																		"nativeSrc": "6214:10:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6214:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6223:1:10",
																			"nodeType": "YulLiteral",
																			"src": "6223:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "6218:1:10",
																				"nodeType": "YulTypedName",
																				"src": "6218:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6208:284:10"
														},
														{
															"nativeSrc": "6501:10:10",
															"nodeType": "YulAssignment",
															"src": "6501:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "6508:3:10",
																"nodeType": "YulIdentifier",
																"src": "6508:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6501:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6501:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nativeSrc": "5785:732:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5888:5:10",
														"nodeType": "YulTypedName",
														"src": "5888:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5895:3:10",
														"nodeType": "YulTypedName",
														"src": "5895:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5904:3:10",
														"nodeType": "YulTypedName",
														"src": "5904:3:10",
														"type": ""
													}
												],
												"src": "5785:732:10"
											},
											{
												"body": {
													"nativeSrc": "6671:225:10",
													"nodeType": "YulBlock",
													"src": "6671:225:10",
													"statements": [
														{
															"nativeSrc": "6681:26:10",
															"nodeType": "YulAssignment",
															"src": "6681:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6693:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6693:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6704:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6704:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6689:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6689:3:10"
																},
																"nativeSrc": "6689:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6689:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6681:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6681:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6728:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6728:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6739:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6739:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6724:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6724:3:10"
																		},
																		"nativeSrc": "6724:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6724:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6747:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6747:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6753:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6753:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6743:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6743:3:10"
																		},
																		"nativeSrc": "6743:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6717:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6717:6:10"
																},
																"nativeSrc": "6717:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6717:47:10"
															},
															"nativeSrc": "6717:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6717:47:10"
														},
														{
															"nativeSrc": "6773:116:10",
															"nodeType": "YulAssignment",
															"src": "6773:116:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6875:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6875:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6884:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6884:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "6781:93:10",
																	"nodeType": "YulIdentifier",
																	"src": "6781:93:10"
																},
																"nativeSrc": "6781:108:10",
																"nodeType": "YulFunctionCall",
																"src": "6781:108:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6773:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6773:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "6523:373:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6643:9:10",
														"nodeType": "YulTypedName",
														"src": "6643:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6655:6:10",
														"nodeType": "YulTypedName",
														"src": "6655:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6666:4:10",
														"nodeType": "YulTypedName",
														"src": "6666:4:10",
														"type": ""
													}
												],
												"src": "6523:373:10"
											},
											{
												"body": {
													"nativeSrc": "6998:73:10",
													"nodeType": "YulBlock",
													"src": "6998:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7015:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7015:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7020:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7020:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7008:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7008:6:10"
																},
																"nativeSrc": "7008:19:10",
																"nodeType": "YulFunctionCall",
																"src": "7008:19:10"
															},
															"nativeSrc": "7008:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "7008:19:10"
														},
														{
															"nativeSrc": "7036:29:10",
															"nodeType": "YulAssignment",
															"src": "7036:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7055:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7055:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7060:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7060:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7051:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7051:3:10"
																},
																"nativeSrc": "7051:14:10",
																"nodeType": "YulFunctionCall",
																"src": "7051:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7036:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "7036:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6902:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6970:3:10",
														"nodeType": "YulTypedName",
														"src": "6970:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6975:6:10",
														"nodeType": "YulTypedName",
														"src": "6975:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6986:11:10",
														"nodeType": "YulTypedName",
														"src": "6986:11:10",
														"type": ""
													}
												],
												"src": "6902:169:10"
											},
											{
												"body": {
													"nativeSrc": "7183:60:10",
													"nodeType": "YulBlock",
													"src": "7183:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7205:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7205:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7213:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7213:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7201:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7201:3:10"
																		},
																		"nativeSrc": "7201:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7201:14:10"
																	},
																	{
																		"hexValue": "416c7265616479206c61756e63686564",
																		"kind": "string",
																		"nativeSrc": "7217:18:10",
																		"nodeType": "YulLiteral",
																		"src": "7217:18:10",
																		"type": "",
																		"value": "Already launched"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7194:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7194:6:10"
																},
																"nativeSrc": "7194:42:10",
																"nodeType": "YulFunctionCall",
																"src": "7194:42:10"
															},
															"nativeSrc": "7194:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "7194:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865",
												"nativeSrc": "7077:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7175:6:10",
														"nodeType": "YulTypedName",
														"src": "7175:6:10",
														"type": ""
													}
												],
												"src": "7077:166:10"
											},
											{
												"body": {
													"nativeSrc": "7395:220:10",
													"nodeType": "YulBlock",
													"src": "7395:220:10",
													"statements": [
														{
															"nativeSrc": "7405:74:10",
															"nodeType": "YulAssignment",
															"src": "7405:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7471:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7471:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7476:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7476:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7412:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7412:58:10"
																},
																"nativeSrc": "7412:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7412:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7405:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7405:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7577:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7577:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865",
																	"nativeSrc": "7488:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7488:88:10"
																},
																"nativeSrc": "7488:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7488:93:10"
															},
															"nativeSrc": "7488:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7488:93:10"
														},
														{
															"nativeSrc": "7590:19:10",
															"nodeType": "YulAssignment",
															"src": "7590:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7601:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7601:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7606:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7606:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7597:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7597:3:10"
																},
																"nativeSrc": "7597:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7597:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7590:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7590:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7249:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7383:3:10",
														"nodeType": "YulTypedName",
														"src": "7383:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7391:3:10",
														"nodeType": "YulTypedName",
														"src": "7391:3:10",
														"type": ""
													}
												],
												"src": "7249:366:10"
											},
											{
												"body": {
													"nativeSrc": "7792:248:10",
													"nodeType": "YulBlock",
													"src": "7792:248:10",
													"statements": [
														{
															"nativeSrc": "7802:26:10",
															"nodeType": "YulAssignment",
															"src": "7802:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7814:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7814:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7825:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7825:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7810:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7810:3:10"
																},
																"nativeSrc": "7810:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7810:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7802:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7802:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7849:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7849:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7860:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7860:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7845:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7845:3:10"
																		},
																		"nativeSrc": "7845:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7845:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7868:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7868:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7874:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7874:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7864:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7864:3:10"
																		},
																		"nativeSrc": "7864:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7864:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7838:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7838:6:10"
																},
																"nativeSrc": "7838:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7838:47:10"
															},
															"nativeSrc": "7838:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7838:47:10"
														},
														{
															"nativeSrc": "7894:139:10",
															"nodeType": "YulAssignment",
															"src": "7894:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8028:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8028:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7902:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7902:124:10"
																},
																"nativeSrc": "7902:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7902:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7894:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7894:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7621:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7772:9:10",
														"nodeType": "YulTypedName",
														"src": "7772:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7787:4:10",
														"nodeType": "YulTypedName",
														"src": "7787:4:10",
														"type": ""
													}
												],
												"src": "7621:419:10"
											},
											{
												"body": {
													"nativeSrc": "8152:64:10",
													"nodeType": "YulBlock",
													"src": "8152:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8174:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8174:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8182:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8182:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8170:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8170:3:10"
																		},
																		"nativeSrc": "8170:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8170:14:10"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f207465726d696e617465",
																		"kind": "string",
																		"nativeSrc": "8186:22:10",
																		"nodeType": "YulLiteral",
																		"src": "8186:22:10",
																		"type": "",
																		"value": "Nothing to terminate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8163:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8163:6:10"
																},
																"nativeSrc": "8163:46:10",
																"nodeType": "YulFunctionCall",
																"src": "8163:46:10"
															},
															"nativeSrc": "8163:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "8163:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1",
												"nativeSrc": "8046:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8144:6:10",
														"nodeType": "YulTypedName",
														"src": "8144:6:10",
														"type": ""
													}
												],
												"src": "8046:170:10"
											},
											{
												"body": {
													"nativeSrc": "8368:220:10",
													"nodeType": "YulBlock",
													"src": "8368:220:10",
													"statements": [
														{
															"nativeSrc": "8378:74:10",
															"nodeType": "YulAssignment",
															"src": "8378:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8444:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8444:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8449:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8449:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8385:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "8385:58:10"
																},
																"nativeSrc": "8385:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8385:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8378:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8378:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8550:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8550:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1",
																	"nativeSrc": "8461:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8461:88:10"
																},
																"nativeSrc": "8461:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8461:93:10"
															},
															"nativeSrc": "8461:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8461:93:10"
														},
														{
															"nativeSrc": "8563:19:10",
															"nodeType": "YulAssignment",
															"src": "8563:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8574:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8574:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8579:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8579:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8570:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8570:3:10"
																},
																"nativeSrc": "8570:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8570:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8563:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8563:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8222:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8356:3:10",
														"nodeType": "YulTypedName",
														"src": "8356:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8364:3:10",
														"nodeType": "YulTypedName",
														"src": "8364:3:10",
														"type": ""
													}
												],
												"src": "8222:366:10"
											},
											{
												"body": {
													"nativeSrc": "8765:248:10",
													"nodeType": "YulBlock",
													"src": "8765:248:10",
													"statements": [
														{
															"nativeSrc": "8775:26:10",
															"nodeType": "YulAssignment",
															"src": "8775:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8787:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8787:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8798:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8783:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8783:3:10"
																},
																"nativeSrc": "8783:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8783:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8775:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8775:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8822:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8822:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8833:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8833:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8818:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8818:3:10"
																		},
																		"nativeSrc": "8818:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8818:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8841:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8841:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8847:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8847:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8837:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8837:3:10"
																		},
																		"nativeSrc": "8837:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8837:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8811:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8811:6:10"
																},
																"nativeSrc": "8811:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8811:47:10"
															},
															"nativeSrc": "8811:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8811:47:10"
														},
														{
															"nativeSrc": "8867:139:10",
															"nodeType": "YulAssignment",
															"src": "8867:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9001:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9001:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8875:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8875:124:10"
																},
																"nativeSrc": "8875:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8875:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8867:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8867:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8594:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8745:9:10",
														"nodeType": "YulTypedName",
														"src": "8745:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8760:4:10",
														"nodeType": "YulTypedName",
														"src": "8760:4:10",
														"type": ""
													}
												],
												"src": "8594:419:10"
											},
											{
												"body": {
													"nativeSrc": "9047:152:10",
													"nodeType": "YulBlock",
													"src": "9047:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9064:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9064:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9067:77:10",
																		"nodeType": "YulLiteral",
																		"src": "9067:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9057:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9057:6:10"
																},
																"nativeSrc": "9057:88:10",
																"nodeType": "YulFunctionCall",
																"src": "9057:88:10"
															},
															"nativeSrc": "9057:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "9057:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9161:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9161:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9164:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9164:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9154:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9154:6:10"
																},
																"nativeSrc": "9154:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9154:15:10"
															},
															"nativeSrc": "9154:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9154:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9185:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9185:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9188:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9178:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9178:6:10"
																},
																"nativeSrc": "9178:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9178:15:10"
															},
															"nativeSrc": "9178:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9178:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9019:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9019:180:10"
											},
											{
												"body": {
													"nativeSrc": "9311:64:10",
													"nodeType": "YulBlock",
													"src": "9311:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9333:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9333:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9341:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9341:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9329:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9329:3:10"
																		},
																		"nativeSrc": "9329:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9329:14:10"
																	},
																	{
																		"hexValue": "5374616b696e67206e6f7420636f6d706c657465",
																		"kind": "string",
																		"nativeSrc": "9345:22:10",
																		"nodeType": "YulLiteral",
																		"src": "9345:22:10",
																		"type": "",
																		"value": "Staking not complete"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9322:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9322:6:10"
																},
																"nativeSrc": "9322:46:10",
																"nodeType": "YulFunctionCall",
																"src": "9322:46:10"
															},
															"nativeSrc": "9322:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "9322:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d",
												"nativeSrc": "9205:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9303:6:10",
														"nodeType": "YulTypedName",
														"src": "9303:6:10",
														"type": ""
													}
												],
												"src": "9205:170:10"
											},
											{
												"body": {
													"nativeSrc": "9527:220:10",
													"nodeType": "YulBlock",
													"src": "9527:220:10",
													"statements": [
														{
															"nativeSrc": "9537:74:10",
															"nodeType": "YulAssignment",
															"src": "9537:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9603:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9603:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9608:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9608:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9544:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9544:58:10"
																},
																"nativeSrc": "9544:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9544:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9537:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9537:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9709:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9709:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d",
																	"nativeSrc": "9620:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9620:88:10"
																},
																"nativeSrc": "9620:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9620:93:10"
															},
															"nativeSrc": "9620:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9620:93:10"
														},
														{
															"nativeSrc": "9722:19:10",
															"nodeType": "YulAssignment",
															"src": "9722:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9733:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9733:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9738:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9738:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9729:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9729:3:10"
																},
																"nativeSrc": "9729:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9729:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9722:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9722:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9381:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9515:3:10",
														"nodeType": "YulTypedName",
														"src": "9515:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9523:3:10",
														"nodeType": "YulTypedName",
														"src": "9523:3:10",
														"type": ""
													}
												],
												"src": "9381:366:10"
											},
											{
												"body": {
													"nativeSrc": "9924:248:10",
													"nodeType": "YulBlock",
													"src": "9924:248:10",
													"statements": [
														{
															"nativeSrc": "9934:26:10",
															"nodeType": "YulAssignment",
															"src": "9934:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9946:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9946:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9957:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9957:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9942:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9942:3:10"
																},
																"nativeSrc": "9942:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9942:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9934:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9934:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9981:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9981:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9992:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9992:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9977:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9977:3:10"
																		},
																		"nativeSrc": "9977:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9977:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10000:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10000:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10006:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10006:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9996:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9996:3:10"
																		},
																		"nativeSrc": "9996:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9996:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9970:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9970:6:10"
																},
																"nativeSrc": "9970:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9970:47:10"
															},
															"nativeSrc": "9970:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9970:47:10"
														},
														{
															"nativeSrc": "10026:139:10",
															"nodeType": "YulAssignment",
															"src": "10026:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10160:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10160:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10034:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10034:124:10"
																},
																"nativeSrc": "10034:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10034:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10026:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10026:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9753:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9904:9:10",
														"nodeType": "YulTypedName",
														"src": "9904:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9919:4:10",
														"nodeType": "YulTypedName",
														"src": "9919:4:10",
														"type": ""
													}
												],
												"src": "9753:419:10"
											},
											{
												"body": {
													"nativeSrc": "10206:152:10",
													"nodeType": "YulBlock",
													"src": "10206:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10223:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10223:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10226:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10226:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10216:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10216:6:10"
																},
																"nativeSrc": "10216:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10216:88:10"
															},
															"nativeSrc": "10216:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10216:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10320:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10323:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10323:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10313:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10313:6:10"
																},
																"nativeSrc": "10313:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10313:15:10"
															},
															"nativeSrc": "10313:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10313:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10344:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10344:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10347:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10347:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10337:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10337:6:10"
																},
																"nativeSrc": "10337:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10337:15:10"
															},
															"nativeSrc": "10337:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10337:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10178:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10178:180:10"
											},
											{
												"body": {
													"nativeSrc": "10412:362:10",
													"nodeType": "YulBlock",
													"src": "10412:362:10",
													"statements": [
														{
															"nativeSrc": "10422:25:10",
															"nodeType": "YulAssignment",
															"src": "10422:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10445:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10445:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10427:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10427:17:10"
																},
																"nativeSrc": "10427:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10427:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10422:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10422:1:10"
																}
															]
														},
														{
															"nativeSrc": "10456:25:10",
															"nodeType": "YulAssignment",
															"src": "10456:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10479:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10479:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10461:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10461:17:10"
																},
																"nativeSrc": "10461:20:10",
																"nodeType": "YulFunctionCall",
																"src": "10461:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10456:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "10456:1:10"
																}
															]
														},
														{
															"nativeSrc": "10490:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10490:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10513:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10513:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10516:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "10516:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10509:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10509:3:10"
																},
																"nativeSrc": "10509:9:10",
																"nodeType": "YulFunctionCall",
																"src": "10509:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10494:11:10",
																	"nodeType": "YulTypedName",
																	"src": "10494:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10527:41:10",
															"nodeType": "YulAssignment",
															"src": "10527:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10556:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "10556:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10538:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "10538:17:10"
																},
																"nativeSrc": "10538:30:10",
																"nodeType": "YulFunctionCall",
																"src": "10538:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10527:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "10527:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10745:22:10",
																"nodeType": "YulBlock",
																"src": "10745:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10747:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10747:16:10"
																			},
																			"nativeSrc": "10747:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10747:18:10"
																		},
																		"nativeSrc": "10747:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10747:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10678:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "10678:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10671:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "10671:6:10"
																				},
																				"nativeSrc": "10671:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10671:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10701:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "10701:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10708:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "10708:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10717:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "10717:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10704:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "10704:3:10"
																						},
																						"nativeSrc": "10704:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "10704:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10698:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "10698:2:10"
																				},
																				"nativeSrc": "10698:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10698:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10651:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10651:2:10"
																		},
																		"nativeSrc": "10651:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10651:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10631:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10631:6:10"
																},
																"nativeSrc": "10631:113:10",
																"nodeType": "YulFunctionCall",
																"src": "10631:113:10"
															},
															"nativeSrc": "10628:139:10",
															"nodeType": "YulIf",
															"src": "10628:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10364:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10395:1:10",
														"nodeType": "YulTypedName",
														"src": "10395:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10398:1:10",
														"nodeType": "YulTypedName",
														"src": "10398:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10404:7:10",
														"nodeType": "YulTypedName",
														"src": "10404:7:10",
														"type": ""
													}
												],
												"src": "10364:410:10"
											},
											{
												"body": {
													"nativeSrc": "10808:152:10",
													"nodeType": "YulBlock",
													"src": "10808:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10825:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10825:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10828:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10828:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10818:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10818:6:10"
																},
																"nativeSrc": "10818:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10818:88:10"
															},
															"nativeSrc": "10818:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10818:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10922:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10922:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10925:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10925:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10915:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10915:6:10"
																},
																"nativeSrc": "10915:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10915:15:10"
															},
															"nativeSrc": "10915:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10915:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10946:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10946:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10949:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10949:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10939:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10939:6:10"
																},
																"nativeSrc": "10939:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10939:15:10"
															},
															"nativeSrc": "10939:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10939:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10780:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "10780:180:10"
											},
											{
												"body": {
													"nativeSrc": "11008:143:10",
													"nodeType": "YulBlock",
													"src": "11008:143:10",
													"statements": [
														{
															"nativeSrc": "11018:25:10",
															"nodeType": "YulAssignment",
															"src": "11018:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11041:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11041:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11023:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11023:17:10"
																},
																"nativeSrc": "11023:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11023:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11018:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11018:1:10"
																}
															]
														},
														{
															"nativeSrc": "11052:25:10",
															"nodeType": "YulAssignment",
															"src": "11052:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11075:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11075:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11057:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "11057:17:10"
																},
																"nativeSrc": "11057:20:10",
																"nodeType": "YulFunctionCall",
																"src": "11057:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11052:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11052:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11099:22:10",
																"nodeType": "YulBlock",
																"src": "11099:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11101:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "11101:16:10"
																			},
																			"nativeSrc": "11101:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11101:18:10"
																		},
																		"nativeSrc": "11101:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11101:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11096:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11096:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11089:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11089:6:10"
																},
																"nativeSrc": "11089:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11089:9:10"
															},
															"nativeSrc": "11086:35:10",
															"nodeType": "YulIf",
															"src": "11086:35:10"
														},
														{
															"nativeSrc": "11131:14:10",
															"nodeType": "YulAssignment",
															"src": "11131:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11140:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11140:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11143:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "11143:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11136:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11136:3:10"
																},
																"nativeSrc": "11136:9:10",
																"nodeType": "YulFunctionCall",
																"src": "11136:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11131:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "11131:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10966:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10997:1:10",
														"nodeType": "YulTypedName",
														"src": "10997:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11000:1:10",
														"nodeType": "YulTypedName",
														"src": "11000:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11006:1:10",
														"nodeType": "YulTypedName",
														"src": "11006:1:10",
														"type": ""
													}
												],
												"src": "10966:185:10"
											},
											{
												"body": {
													"nativeSrc": "11283:206:10",
													"nodeType": "YulBlock",
													"src": "11283:206:10",
													"statements": [
														{
															"nativeSrc": "11293:26:10",
															"nodeType": "YulAssignment",
															"src": "11293:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11305:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11305:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11316:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11316:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11301:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11301:3:10"
																},
																"nativeSrc": "11301:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11301:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11293:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11293:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11373:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11373:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11386:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11386:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11397:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11397:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11382:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11382:3:10"
																		},
																		"nativeSrc": "11382:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11382:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11329:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11329:43:10"
																},
																"nativeSrc": "11329:71:10",
																"nodeType": "YulFunctionCall",
																"src": "11329:71:10"
															},
															"nativeSrc": "11329:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "11329:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11454:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11454:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11467:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11467:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11478:2:10",
																				"nodeType": "YulLiteral",
																				"src": "11478:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11463:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11463:3:10"
																		},
																		"nativeSrc": "11463:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11463:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11410:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "11410:43:10"
																},
																"nativeSrc": "11410:72:10",
																"nodeType": "YulFunctionCall",
																"src": "11410:72:10"
															},
															"nativeSrc": "11410:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "11410:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11157:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11247:9:10",
														"nodeType": "YulTypedName",
														"src": "11247:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11259:6:10",
														"nodeType": "YulTypedName",
														"src": "11259:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11267:6:10",
														"nodeType": "YulTypedName",
														"src": "11267:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11278:4:10",
														"nodeType": "YulTypedName",
														"src": "11278:4:10",
														"type": ""
													}
												],
												"src": "11157:332:10"
											},
											{
												"body": {
													"nativeSrc": "11558:80:10",
													"nodeType": "YulBlock",
													"src": "11558:80:10",
													"statements": [
														{
															"nativeSrc": "11568:22:10",
															"nodeType": "YulAssignment",
															"src": "11568:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11583:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "11583:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11577:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11577:5:10"
																},
																"nativeSrc": "11577:13:10",
																"nodeType": "YulFunctionCall",
																"src": "11577:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11568:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "11568:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11626:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "11626:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11599:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "11599:26:10"
																},
																"nativeSrc": "11599:33:10",
																"nodeType": "YulFunctionCall",
																"src": "11599:33:10"
															},
															"nativeSrc": "11599:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "11599:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "11495:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11536:6:10",
														"nodeType": "YulTypedName",
														"src": "11536:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11544:3:10",
														"nodeType": "YulTypedName",
														"src": "11544:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11552:5:10",
														"nodeType": "YulTypedName",
														"src": "11552:5:10",
														"type": ""
													}
												],
												"src": "11495:143:10"
											},
											{
												"body": {
													"nativeSrc": "11721:274:10",
													"nodeType": "YulBlock",
													"src": "11721:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "11767:83:10",
																"nodeType": "YulBlock",
																"src": "11767:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11769:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "11769:77:10"
																			},
																			"nativeSrc": "11769:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "11769:79:10"
																		},
																		"nativeSrc": "11769:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "11769:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11742:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11742:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11751:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11751:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11738:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11738:3:10"
																		},
																		"nativeSrc": "11738:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11738:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11763:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11763:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11734:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11734:3:10"
																},
																"nativeSrc": "11734:32:10",
																"nodeType": "YulFunctionCall",
																"src": "11734:32:10"
															},
															"nativeSrc": "11731:119:10",
															"nodeType": "YulIf",
															"src": "11731:119:10"
														},
														{
															"nativeSrc": "11860:128:10",
															"nodeType": "YulBlock",
															"src": "11860:128:10",
															"statements": [
																{
																	"nativeSrc": "11875:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11875:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11889:1:10",
																		"nodeType": "YulLiteral",
																		"src": "11889:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11879:6:10",
																			"nodeType": "YulTypedName",
																			"src": "11879:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11904:74:10",
																	"nodeType": "YulAssignment",
																	"src": "11904:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11950:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "11950:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11961:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "11961:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11946:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "11946:3:10"
																				},
																				"nativeSrc": "11946:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "11946:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11970:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "11970:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "11914:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "11914:31:10"
																		},
																		"nativeSrc": "11914:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11914:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11904:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "11904:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "11644:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11691:9:10",
														"nodeType": "YulTypedName",
														"src": "11691:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11702:7:10",
														"nodeType": "YulTypedName",
														"src": "11702:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11714:6:10",
														"nodeType": "YulTypedName",
														"src": "11714:6:10",
														"type": ""
													}
												],
												"src": "11644:351:10"
											},
											{
												"body": {
													"nativeSrc": "12107:62:10",
													"nodeType": "YulBlock",
													"src": "12107:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12129:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12129:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12137:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12137:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12125:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12125:3:10"
																		},
																		"nativeSrc": "12125:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12125:14:10"
																	},
																	{
																		"hexValue": "5374616b696e67206e6f7420616374697665",
																		"kind": "string",
																		"nativeSrc": "12141:20:10",
																		"nodeType": "YulLiteral",
																		"src": "12141:20:10",
																		"type": "",
																		"value": "Staking not active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12118:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12118:6:10"
																},
																"nativeSrc": "12118:44:10",
																"nodeType": "YulFunctionCall",
																"src": "12118:44:10"
															},
															"nativeSrc": "12118:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "12118:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7",
												"nativeSrc": "12001:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12099:6:10",
														"nodeType": "YulTypedName",
														"src": "12099:6:10",
														"type": ""
													}
												],
												"src": "12001:168:10"
											},
											{
												"body": {
													"nativeSrc": "12321:220:10",
													"nodeType": "YulBlock",
													"src": "12321:220:10",
													"statements": [
														{
															"nativeSrc": "12331:74:10",
															"nodeType": "YulAssignment",
															"src": "12331:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12397:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12397:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12402:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12402:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12338:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12338:58:10"
																},
																"nativeSrc": "12338:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12338:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12331:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12331:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12503:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12503:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7",
																	"nativeSrc": "12414:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12414:88:10"
																},
																"nativeSrc": "12414:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12414:93:10"
															},
															"nativeSrc": "12414:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12414:93:10"
														},
														{
															"nativeSrc": "12516:19:10",
															"nodeType": "YulAssignment",
															"src": "12516:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12527:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12527:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12532:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12532:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12523:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12523:3:10"
																},
																"nativeSrc": "12523:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12523:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12516:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12516:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12175:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12309:3:10",
														"nodeType": "YulTypedName",
														"src": "12309:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12317:3:10",
														"nodeType": "YulTypedName",
														"src": "12317:3:10",
														"type": ""
													}
												],
												"src": "12175:366:10"
											},
											{
												"body": {
													"nativeSrc": "12718:248:10",
													"nodeType": "YulBlock",
													"src": "12718:248:10",
													"statements": [
														{
															"nativeSrc": "12728:26:10",
															"nodeType": "YulAssignment",
															"src": "12728:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12740:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12740:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12751:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12751:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12736:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12736:3:10"
																},
																"nativeSrc": "12736:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12736:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12728:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12728:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12775:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12775:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12786:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12786:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12771:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12771:3:10"
																		},
																		"nativeSrc": "12771:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12771:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12794:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12794:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12800:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12800:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12790:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12790:3:10"
																		},
																		"nativeSrc": "12790:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12790:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12764:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12764:6:10"
																},
																"nativeSrc": "12764:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12764:47:10"
															},
															"nativeSrc": "12764:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12764:47:10"
														},
														{
															"nativeSrc": "12820:139:10",
															"nodeType": "YulAssignment",
															"src": "12820:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12954:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12954:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12828:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12828:124:10"
																},
																"nativeSrc": "12828:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12828:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12820:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12820:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12547:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12698:9:10",
														"nodeType": "YulTypedName",
														"src": "12698:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12713:4:10",
														"nodeType": "YulTypedName",
														"src": "12713:4:10",
														"type": ""
													}
												],
												"src": "12547:419:10"
											},
											{
												"body": {
													"nativeSrc": "13078:60:10",
													"nodeType": "YulBlock",
													"src": "13078:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13100:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13100:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13108:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13108:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13096:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13096:3:10"
																		},
																		"nativeSrc": "13096:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13096:14:10"
																	},
																	{
																		"hexValue": "5374616b696e67206e6f74206c697665",
																		"kind": "string",
																		"nativeSrc": "13112:18:10",
																		"nodeType": "YulLiteral",
																		"src": "13112:18:10",
																		"type": "",
																		"value": "Staking not live"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13089:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13089:6:10"
																},
																"nativeSrc": "13089:42:10",
																"nodeType": "YulFunctionCall",
																"src": "13089:42:10"
															},
															"nativeSrc": "13089:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "13089:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d",
												"nativeSrc": "12972:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13070:6:10",
														"nodeType": "YulTypedName",
														"src": "13070:6:10",
														"type": ""
													}
												],
												"src": "12972:166:10"
											},
											{
												"body": {
													"nativeSrc": "13290:220:10",
													"nodeType": "YulBlock",
													"src": "13290:220:10",
													"statements": [
														{
															"nativeSrc": "13300:74:10",
															"nodeType": "YulAssignment",
															"src": "13300:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13366:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13366:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13371:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13371:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13307:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13307:58:10"
																},
																"nativeSrc": "13307:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13307:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13300:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13300:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13472:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13472:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d",
																	"nativeSrc": "13383:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13383:88:10"
																},
																"nativeSrc": "13383:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13383:93:10"
															},
															"nativeSrc": "13383:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13383:93:10"
														},
														{
															"nativeSrc": "13485:19:10",
															"nodeType": "YulAssignment",
															"src": "13485:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13496:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13496:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13501:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13501:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13492:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13492:3:10"
																},
																"nativeSrc": "13492:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13492:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13485:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13485:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13144:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13278:3:10",
														"nodeType": "YulTypedName",
														"src": "13278:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13286:3:10",
														"nodeType": "YulTypedName",
														"src": "13286:3:10",
														"type": ""
													}
												],
												"src": "13144:366:10"
											},
											{
												"body": {
													"nativeSrc": "13687:248:10",
													"nodeType": "YulBlock",
													"src": "13687:248:10",
													"statements": [
														{
															"nativeSrc": "13697:26:10",
															"nodeType": "YulAssignment",
															"src": "13697:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13709:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13709:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13720:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13720:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13705:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13705:3:10"
																},
																"nativeSrc": "13705:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13705:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13697:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13697:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13744:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13744:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13755:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13755:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13740:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13740:3:10"
																		},
																		"nativeSrc": "13740:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13740:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13763:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13763:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13769:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13769:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13759:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13759:3:10"
																		},
																		"nativeSrc": "13759:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13759:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13733:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13733:6:10"
																},
																"nativeSrc": "13733:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13733:47:10"
															},
															"nativeSrc": "13733:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13733:47:10"
														},
														{
															"nativeSrc": "13789:139:10",
															"nodeType": "YulAssignment",
															"src": "13789:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13923:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13923:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13797:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13797:124:10"
																},
																"nativeSrc": "13797:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13797:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13789:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13789:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13516:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13667:9:10",
														"nodeType": "YulTypedName",
														"src": "13667:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13682:4:10",
														"nodeType": "YulTypedName",
														"src": "13682:4:10",
														"type": ""
													}
												],
												"src": "13516:419:10"
											},
											{
												"body": {
													"nativeSrc": "13985:147:10",
													"nodeType": "YulBlock",
													"src": "13985:147:10",
													"statements": [
														{
															"nativeSrc": "13995:25:10",
															"nodeType": "YulAssignment",
															"src": "13995:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14018:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14018:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14000:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14000:17:10"
																},
																"nativeSrc": "14000:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14000:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13995:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13995:1:10"
																}
															]
														},
														{
															"nativeSrc": "14029:25:10",
															"nodeType": "YulAssignment",
															"src": "14029:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14052:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14052:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14034:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14034:17:10"
																},
																"nativeSrc": "14034:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14034:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14029:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14029:1:10"
																}
															]
														},
														{
															"nativeSrc": "14063:16:10",
															"nodeType": "YulAssignment",
															"src": "14063:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14074:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14074:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14077:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14077:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14070:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14070:3:10"
																},
																"nativeSrc": "14070:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14070:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14063:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14063:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14103:22:10",
																"nodeType": "YulBlock",
																"src": "14103:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14105:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14105:16:10"
																			},
																			"nativeSrc": "14105:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14105:18:10"
																		},
																		"nativeSrc": "14105:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14105:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14095:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14095:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14098:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14098:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14092:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "14092:2:10"
																},
																"nativeSrc": "14092:10:10",
																"nodeType": "YulFunctionCall",
																"src": "14092:10:10"
															},
															"nativeSrc": "14089:36:10",
															"nodeType": "YulIf",
															"src": "14089:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13941:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13972:1:10",
														"nodeType": "YulTypedName",
														"src": "13972:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13975:1:10",
														"nodeType": "YulTypedName",
														"src": "13975:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13981:3:10",
														"nodeType": "YulTypedName",
														"src": "13981:3:10",
														"type": ""
													}
												],
												"src": "13941:191:10"
											},
											{
												"body": {
													"nativeSrc": "14244:59:10",
													"nodeType": "YulBlock",
													"src": "14244:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14266:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14266:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14274:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14274:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14262:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14262:3:10"
																		},
																		"nativeSrc": "14262:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14262:14:10"
																	},
																	{
																		"hexValue": "42757920706572696f64206f766572",
																		"kind": "string",
																		"nativeSrc": "14278:17:10",
																		"nodeType": "YulLiteral",
																		"src": "14278:17:10",
																		"type": "",
																		"value": "Buy period over"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14255:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14255:6:10"
																},
																"nativeSrc": "14255:41:10",
																"nodeType": "YulFunctionCall",
																"src": "14255:41:10"
															},
															"nativeSrc": "14255:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "14255:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065",
												"nativeSrc": "14138:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14236:6:10",
														"nodeType": "YulTypedName",
														"src": "14236:6:10",
														"type": ""
													}
												],
												"src": "14138:165:10"
											},
											{
												"body": {
													"nativeSrc": "14455:220:10",
													"nodeType": "YulBlock",
													"src": "14455:220:10",
													"statements": [
														{
															"nativeSrc": "14465:74:10",
															"nodeType": "YulAssignment",
															"src": "14465:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14531:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14531:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14536:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14536:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14472:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14472:58:10"
																},
																"nativeSrc": "14472:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14472:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14465:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14465:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14637:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14637:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065",
																	"nativeSrc": "14548:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14548:88:10"
																},
																"nativeSrc": "14548:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14548:93:10"
															},
															"nativeSrc": "14548:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14548:93:10"
														},
														{
															"nativeSrc": "14650:19:10",
															"nodeType": "YulAssignment",
															"src": "14650:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14661:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14661:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14666:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14666:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14657:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14657:3:10"
																},
																"nativeSrc": "14657:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14657:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14650:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14650:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14309:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14443:3:10",
														"nodeType": "YulTypedName",
														"src": "14443:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14451:3:10",
														"nodeType": "YulTypedName",
														"src": "14451:3:10",
														"type": ""
													}
												],
												"src": "14309:366:10"
											},
											{
												"body": {
													"nativeSrc": "14852:248:10",
													"nodeType": "YulBlock",
													"src": "14852:248:10",
													"statements": [
														{
															"nativeSrc": "14862:26:10",
															"nodeType": "YulAssignment",
															"src": "14862:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14874:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14874:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14885:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14885:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14870:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14870:3:10"
																},
																"nativeSrc": "14870:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14870:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14862:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14862:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14909:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14909:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14920:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14920:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14905:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14905:3:10"
																		},
																		"nativeSrc": "14905:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14905:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14928:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14928:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14934:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14934:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14924:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14924:3:10"
																		},
																		"nativeSrc": "14924:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14924:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14898:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14898:6:10"
																},
																"nativeSrc": "14898:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14898:47:10"
															},
															"nativeSrc": "14898:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14898:47:10"
														},
														{
															"nativeSrc": "14954:139:10",
															"nodeType": "YulAssignment",
															"src": "14954:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15088:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15088:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14962:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14962:124:10"
																},
																"nativeSrc": "14962:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14962:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14954:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14954:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14681:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14832:9:10",
														"nodeType": "YulTypedName",
														"src": "14832:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14847:4:10",
														"nodeType": "YulTypedName",
														"src": "14847:4:10",
														"type": ""
													}
												],
												"src": "14681:419:10"
											},
											{
												"body": {
													"nativeSrc": "15212:59:10",
													"nodeType": "YulBlock",
													"src": "15212:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15234:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15234:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15242:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15242:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15230:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15230:3:10"
																		},
																		"nativeSrc": "15230:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15230:14:10"
																	},
																	{
																		"hexValue": "42656c6f77206d696e207374616b65",
																		"kind": "string",
																		"nativeSrc": "15246:17:10",
																		"nodeType": "YulLiteral",
																		"src": "15246:17:10",
																		"type": "",
																		"value": "Below min stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15223:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15223:6:10"
																},
																"nativeSrc": "15223:41:10",
																"nodeType": "YulFunctionCall",
																"src": "15223:41:10"
															},
															"nativeSrc": "15223:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "15223:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781",
												"nativeSrc": "15106:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15204:6:10",
														"nodeType": "YulTypedName",
														"src": "15204:6:10",
														"type": ""
													}
												],
												"src": "15106:165:10"
											},
											{
												"body": {
													"nativeSrc": "15423:220:10",
													"nodeType": "YulBlock",
													"src": "15423:220:10",
													"statements": [
														{
															"nativeSrc": "15433:74:10",
															"nodeType": "YulAssignment",
															"src": "15433:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15499:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15499:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15504:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15504:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15440:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15440:58:10"
																},
																"nativeSrc": "15440:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15440:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15433:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15433:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15605:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15605:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781",
																	"nativeSrc": "15516:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15516:88:10"
																},
																"nativeSrc": "15516:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15516:93:10"
															},
															"nativeSrc": "15516:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15516:93:10"
														},
														{
															"nativeSrc": "15618:19:10",
															"nodeType": "YulAssignment",
															"src": "15618:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15629:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15629:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15634:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15634:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15625:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15625:3:10"
																},
																"nativeSrc": "15625:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15625:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15618:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15618:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15277:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15411:3:10",
														"nodeType": "YulTypedName",
														"src": "15411:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15419:3:10",
														"nodeType": "YulTypedName",
														"src": "15419:3:10",
														"type": ""
													}
												],
												"src": "15277:366:10"
											},
											{
												"body": {
													"nativeSrc": "15820:248:10",
													"nodeType": "YulBlock",
													"src": "15820:248:10",
													"statements": [
														{
															"nativeSrc": "15830:26:10",
															"nodeType": "YulAssignment",
															"src": "15830:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15842:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15842:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15853:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15853:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15838:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15838:3:10"
																},
																"nativeSrc": "15838:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15838:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15830:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15830:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15877:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15877:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15888:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15888:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15873:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15873:3:10"
																		},
																		"nativeSrc": "15873:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15873:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15896:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15896:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15902:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15902:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15892:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15892:3:10"
																		},
																		"nativeSrc": "15892:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15892:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15866:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15866:6:10"
																},
																"nativeSrc": "15866:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15866:47:10"
															},
															"nativeSrc": "15866:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15866:47:10"
														},
														{
															"nativeSrc": "15922:139:10",
															"nodeType": "YulAssignment",
															"src": "15922:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16056:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16056:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15930:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15930:124:10"
																},
																"nativeSrc": "15930:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15930:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15922:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15922:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15649:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15800:9:10",
														"nodeType": "YulTypedName",
														"src": "15800:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15815:4:10",
														"nodeType": "YulTypedName",
														"src": "15815:4:10",
														"type": ""
													}
												],
												"src": "15649:419:10"
											},
											{
												"body": {
													"nativeSrc": "16180:61:10",
													"nodeType": "YulBlock",
													"src": "16180:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16202:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16202:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16210:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16210:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16198:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16198:3:10"
																		},
																		"nativeSrc": "16198:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16198:14:10"
																	},
																	{
																		"hexValue": "45786365656473206d6178207374616b65",
																		"kind": "string",
																		"nativeSrc": "16214:19:10",
																		"nodeType": "YulLiteral",
																		"src": "16214:19:10",
																		"type": "",
																		"value": "Exceeds max stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16191:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16191:6:10"
																},
																"nativeSrc": "16191:43:10",
																"nodeType": "YulFunctionCall",
																"src": "16191:43:10"
															},
															"nativeSrc": "16191:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "16191:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb",
												"nativeSrc": "16074:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16172:6:10",
														"nodeType": "YulTypedName",
														"src": "16172:6:10",
														"type": ""
													}
												],
												"src": "16074:167:10"
											},
											{
												"body": {
													"nativeSrc": "16393:220:10",
													"nodeType": "YulBlock",
													"src": "16393:220:10",
													"statements": [
														{
															"nativeSrc": "16403:74:10",
															"nodeType": "YulAssignment",
															"src": "16403:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16469:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16469:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16474:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16474:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16410:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16410:58:10"
																},
																"nativeSrc": "16410:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16410:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16403:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16403:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16575:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16575:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb",
																	"nativeSrc": "16486:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16486:88:10"
																},
																"nativeSrc": "16486:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16486:93:10"
															},
															"nativeSrc": "16486:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16486:93:10"
														},
														{
															"nativeSrc": "16588:19:10",
															"nodeType": "YulAssignment",
															"src": "16588:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16599:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16599:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16604:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16604:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16595:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16595:3:10"
																},
																"nativeSrc": "16595:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16595:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16588:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16588:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16247:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16381:3:10",
														"nodeType": "YulTypedName",
														"src": "16381:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16389:3:10",
														"nodeType": "YulTypedName",
														"src": "16389:3:10",
														"type": ""
													}
												],
												"src": "16247:366:10"
											},
											{
												"body": {
													"nativeSrc": "16790:248:10",
													"nodeType": "YulBlock",
													"src": "16790:248:10",
													"statements": [
														{
															"nativeSrc": "16800:26:10",
															"nodeType": "YulAssignment",
															"src": "16800:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16812:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16812:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16823:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16823:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16808:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16808:3:10"
																},
																"nativeSrc": "16808:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16808:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16800:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16800:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16847:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16847:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16858:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16858:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16843:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16843:3:10"
																		},
																		"nativeSrc": "16843:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16843:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16866:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16866:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16872:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16872:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16862:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16862:3:10"
																		},
																		"nativeSrc": "16862:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16862:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16836:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16836:6:10"
																},
																"nativeSrc": "16836:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16836:47:10"
															},
															"nativeSrc": "16836:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16836:47:10"
														},
														{
															"nativeSrc": "16892:139:10",
															"nodeType": "YulAssignment",
															"src": "16892:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17026:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17026:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16900:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16900:124:10"
																},
																"nativeSrc": "16900:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16900:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16892:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16892:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16619:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16770:9:10",
														"nodeType": "YulTypedName",
														"src": "16770:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16785:4:10",
														"nodeType": "YulTypedName",
														"src": "16785:4:10",
														"type": ""
													}
												],
												"src": "16619:419:10"
											},
											{
												"body": {
													"nativeSrc": "17150:62:10",
													"nodeType": "YulBlock",
													"src": "17150:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17172:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17172:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17180:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17180:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17168:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17168:3:10"
																		},
																		"nativeSrc": "17168:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17168:14:10"
																	},
																	{
																		"hexValue": "4578636565647320746f74616c20706f6f6c",
																		"kind": "string",
																		"nativeSrc": "17184:20:10",
																		"nodeType": "YulLiteral",
																		"src": "17184:20:10",
																		"type": "",
																		"value": "Exceeds total pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17161:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17161:6:10"
																},
																"nativeSrc": "17161:44:10",
																"nodeType": "YulFunctionCall",
																"src": "17161:44:10"
															},
															"nativeSrc": "17161:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "17161:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1",
												"nativeSrc": "17044:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17142:6:10",
														"nodeType": "YulTypedName",
														"src": "17142:6:10",
														"type": ""
													}
												],
												"src": "17044:168:10"
											},
											{
												"body": {
													"nativeSrc": "17364:220:10",
													"nodeType": "YulBlock",
													"src": "17364:220:10",
													"statements": [
														{
															"nativeSrc": "17374:74:10",
															"nodeType": "YulAssignment",
															"src": "17374:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17440:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17440:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17445:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17445:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17381:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17381:58:10"
																},
																"nativeSrc": "17381:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17381:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17374:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17374:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17546:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17546:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1",
																	"nativeSrc": "17457:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17457:88:10"
																},
																"nativeSrc": "17457:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17457:93:10"
															},
															"nativeSrc": "17457:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17457:93:10"
														},
														{
															"nativeSrc": "17559:19:10",
															"nodeType": "YulAssignment",
															"src": "17559:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17570:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17570:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17575:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17566:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17566:3:10"
																},
																"nativeSrc": "17566:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17566:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17559:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17559:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17218:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17352:3:10",
														"nodeType": "YulTypedName",
														"src": "17352:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17360:3:10",
														"nodeType": "YulTypedName",
														"src": "17360:3:10",
														"type": ""
													}
												],
												"src": "17218:366:10"
											},
											{
												"body": {
													"nativeSrc": "17761:248:10",
													"nodeType": "YulBlock",
													"src": "17761:248:10",
													"statements": [
														{
															"nativeSrc": "17771:26:10",
															"nodeType": "YulAssignment",
															"src": "17771:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17783:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17783:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17794:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17794:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17779:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17779:3:10"
																},
																"nativeSrc": "17779:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17779:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17771:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17771:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17818:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17818:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17829:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17829:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17814:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17814:3:10"
																		},
																		"nativeSrc": "17814:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17814:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17837:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17837:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17843:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17843:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17833:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17833:3:10"
																		},
																		"nativeSrc": "17833:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17833:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17807:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17807:6:10"
																},
																"nativeSrc": "17807:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17807:47:10"
															},
															"nativeSrc": "17807:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17807:47:10"
														},
														{
															"nativeSrc": "17863:139:10",
															"nodeType": "YulAssignment",
															"src": "17863:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17997:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17997:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17871:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17871:124:10"
																},
																"nativeSrc": "17871:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17871:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17863:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17863:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17590:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17741:9:10",
														"nodeType": "YulTypedName",
														"src": "17741:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17756:4:10",
														"nodeType": "YulTypedName",
														"src": "17756:4:10",
														"type": ""
													}
												],
												"src": "17590:419:10"
											},
											{
												"body": {
													"nativeSrc": "18121:59:10",
													"nodeType": "YulBlock",
													"src": "18121:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18143:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18143:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18151:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18151:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18139:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18139:3:10"
																		},
																		"nativeSrc": "18139:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18139:14:10"
																	},
																	{
																		"hexValue": "5374616b65206e6f7420656e646564",
																		"kind": "string",
																		"nativeSrc": "18155:17:10",
																		"nodeType": "YulLiteral",
																		"src": "18155:17:10",
																		"type": "",
																		"value": "Stake not ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18132:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18132:6:10"
																},
																"nativeSrc": "18132:41:10",
																"nodeType": "YulFunctionCall",
																"src": "18132:41:10"
															},
															"nativeSrc": "18132:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "18132:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d",
												"nativeSrc": "18015:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18113:6:10",
														"nodeType": "YulTypedName",
														"src": "18113:6:10",
														"type": ""
													}
												],
												"src": "18015:165:10"
											},
											{
												"body": {
													"nativeSrc": "18332:220:10",
													"nodeType": "YulBlock",
													"src": "18332:220:10",
													"statements": [
														{
															"nativeSrc": "18342:74:10",
															"nodeType": "YulAssignment",
															"src": "18342:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18408:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18408:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18413:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18413:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18349:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18349:58:10"
																},
																"nativeSrc": "18349:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18349:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18342:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18342:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18514:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18514:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d",
																	"nativeSrc": "18425:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18425:88:10"
																},
																"nativeSrc": "18425:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18425:93:10"
															},
															"nativeSrc": "18425:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18425:93:10"
														},
														{
															"nativeSrc": "18527:19:10",
															"nodeType": "YulAssignment",
															"src": "18527:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18538:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18538:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18543:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18543:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18534:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18534:3:10"
																},
																"nativeSrc": "18534:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18534:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18527:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18527:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18186:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18320:3:10",
														"nodeType": "YulTypedName",
														"src": "18320:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18328:3:10",
														"nodeType": "YulTypedName",
														"src": "18328:3:10",
														"type": ""
													}
												],
												"src": "18186:366:10"
											},
											{
												"body": {
													"nativeSrc": "18729:248:10",
													"nodeType": "YulBlock",
													"src": "18729:248:10",
													"statements": [
														{
															"nativeSrc": "18739:26:10",
															"nodeType": "YulAssignment",
															"src": "18739:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18751:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18751:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18762:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18762:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18747:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18747:3:10"
																},
																"nativeSrc": "18747:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18747:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18739:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18739:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18786:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18786:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18797:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18797:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18782:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18782:3:10"
																		},
																		"nativeSrc": "18782:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18782:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18805:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18805:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18811:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18811:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18801:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18801:3:10"
																		},
																		"nativeSrc": "18801:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18801:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18775:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18775:6:10"
																},
																"nativeSrc": "18775:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18775:47:10"
															},
															"nativeSrc": "18775:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18775:47:10"
														},
														{
															"nativeSrc": "18831:139:10",
															"nodeType": "YulAssignment",
															"src": "18831:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18965:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18965:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18839:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18839:124:10"
																},
																"nativeSrc": "18839:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18839:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18831:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18831:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18558:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18709:9:10",
														"nodeType": "YulTypedName",
														"src": "18709:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18724:4:10",
														"nodeType": "YulTypedName",
														"src": "18724:4:10",
														"type": ""
													}
												],
												"src": "18558:419:10"
											},
											{
												"body": {
													"nativeSrc": "19089:75:10",
													"nodeType": "YulBlock",
													"src": "19089:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19111:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19111:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19119:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19119:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19107:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19107:3:10"
																		},
																		"nativeSrc": "19107:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19107:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "19123:33:10",
																		"nodeType": "YulLiteral",
																		"src": "19123:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19100:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19100:6:10"
																},
																"nativeSrc": "19100:57:10",
																"nodeType": "YulFunctionCall",
																"src": "19100:57:10"
															},
															"nativeSrc": "19100:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "19100:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "18983:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19081:6:10",
														"nodeType": "YulTypedName",
														"src": "19081:6:10",
														"type": ""
													}
												],
												"src": "18983:181:10"
											},
											{
												"body": {
													"nativeSrc": "19316:220:10",
													"nodeType": "YulBlock",
													"src": "19316:220:10",
													"statements": [
														{
															"nativeSrc": "19326:74:10",
															"nodeType": "YulAssignment",
															"src": "19326:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19392:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19392:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19397:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19397:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19333:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19333:58:10"
																},
																"nativeSrc": "19333:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19333:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19326:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19326:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19498:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19498:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "19409:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19409:88:10"
																},
																"nativeSrc": "19409:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19409:93:10"
															},
															"nativeSrc": "19409:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19409:93:10"
														},
														{
															"nativeSrc": "19511:19:10",
															"nodeType": "YulAssignment",
															"src": "19511:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19522:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19522:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19527:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19527:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19518:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19518:3:10"
																},
																"nativeSrc": "19518:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19518:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19511:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19511:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19170:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19304:3:10",
														"nodeType": "YulTypedName",
														"src": "19304:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19312:3:10",
														"nodeType": "YulTypedName",
														"src": "19312:3:10",
														"type": ""
													}
												],
												"src": "19170:366:10"
											},
											{
												"body": {
													"nativeSrc": "19713:248:10",
													"nodeType": "YulBlock",
													"src": "19713:248:10",
													"statements": [
														{
															"nativeSrc": "19723:26:10",
															"nodeType": "YulAssignment",
															"src": "19723:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19735:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19735:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19746:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19746:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19731:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19731:3:10"
																},
																"nativeSrc": "19731:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19731:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19723:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19723:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19770:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19770:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19781:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19781:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19766:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19766:3:10"
																		},
																		"nativeSrc": "19766:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19766:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19789:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19789:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19795:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19795:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19785:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19785:3:10"
																		},
																		"nativeSrc": "19785:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19785:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19759:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19759:6:10"
																},
																"nativeSrc": "19759:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19759:47:10"
															},
															"nativeSrc": "19759:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19759:47:10"
														},
														{
															"nativeSrc": "19815:139:10",
															"nodeType": "YulAssignment",
															"src": "19815:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19949:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19949:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19823:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19823:124:10"
																},
																"nativeSrc": "19823:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19823:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19815:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19815:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19542:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19693:9:10",
														"nodeType": "YulTypedName",
														"src": "19693:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19708:4:10",
														"nodeType": "YulTypedName",
														"src": "19708:4:10",
														"type": ""
													}
												],
												"src": "19542:419:10"
											},
											{
												"body": {
													"nativeSrc": "20093:206:10",
													"nodeType": "YulBlock",
													"src": "20093:206:10",
													"statements": [
														{
															"nativeSrc": "20103:26:10",
															"nodeType": "YulAssignment",
															"src": "20103:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20115:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20115:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20126:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20126:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20111:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20111:3:10"
																},
																"nativeSrc": "20111:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20111:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20103:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20103:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20183:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20183:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20196:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20196:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20207:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20207:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20192:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20192:3:10"
																		},
																		"nativeSrc": "20192:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20192:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20139:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20139:43:10"
																},
																"nativeSrc": "20139:71:10",
																"nodeType": "YulFunctionCall",
																"src": "20139:71:10"
															},
															"nativeSrc": "20139:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "20139:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20264:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20264:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20277:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20277:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20288:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20288:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20273:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20273:3:10"
																		},
																		"nativeSrc": "20273:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20273:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20220:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20220:43:10"
																},
																"nativeSrc": "20220:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20220:72:10"
															},
															"nativeSrc": "20220:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20220:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19967:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20057:9:10",
														"nodeType": "YulTypedName",
														"src": "20057:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20069:6:10",
														"nodeType": "YulTypedName",
														"src": "20069:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20077:6:10",
														"nodeType": "YulTypedName",
														"src": "20077:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20088:4:10",
														"nodeType": "YulTypedName",
														"src": "20088:4:10",
														"type": ""
													}
												],
												"src": "19967:332:10"
											},
											{
												"body": {
													"nativeSrc": "20459:288:10",
													"nodeType": "YulBlock",
													"src": "20459:288:10",
													"statements": [
														{
															"nativeSrc": "20469:26:10",
															"nodeType": "YulAssignment",
															"src": "20469:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20481:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20481:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20492:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20492:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20477:3:10"
																},
																"nativeSrc": "20477:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20477:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20469:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20469:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20549:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20549:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20562:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20562:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20573:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20573:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20558:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20558:3:10"
																		},
																		"nativeSrc": "20558:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20558:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20505:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20505:43:10"
																},
																"nativeSrc": "20505:71:10",
																"nodeType": "YulFunctionCall",
																"src": "20505:71:10"
															},
															"nativeSrc": "20505:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "20505:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20630:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20630:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20643:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20643:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20654:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20654:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20639:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20639:3:10"
																		},
																		"nativeSrc": "20639:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20639:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20586:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20586:43:10"
																},
																"nativeSrc": "20586:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20586:72:10"
															},
															"nativeSrc": "20586:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20586:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20712:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20712:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20725:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20725:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20736:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20736:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20721:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20721:3:10"
																		},
																		"nativeSrc": "20721:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20721:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20668:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20668:43:10"
																},
																"nativeSrc": "20668:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20668:72:10"
															},
															"nativeSrc": "20668:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20668:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20305:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20415:9:10",
														"nodeType": "YulTypedName",
														"src": "20415:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20427:6:10",
														"nodeType": "YulTypedName",
														"src": "20427:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20435:6:10",
														"nodeType": "YulTypedName",
														"src": "20435:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20443:6:10",
														"nodeType": "YulTypedName",
														"src": "20443:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20454:4:10",
														"nodeType": "YulTypedName",
														"src": "20454:4:10",
														"type": ""
													}
												],
												"src": "20305:442:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$907(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$907(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$907(value)\n    }\n\n    function convert_t_enum$_Status_$907_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$907(value)\n    }\n\n    function abi_encode_t_enum$_Status_$907_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$907_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Status_$907__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Status_$907_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already launched\")\n\n    }\n\n    function abi_encode_t_stringliteral_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Nothing to terminate\")\n\n    }\n\n    function abi_encode_t_stringliteral_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking not complete\")\n\n    }\n\n    function abi_encode_t_stringliteral_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking not active\")\n\n    }\n\n    function abi_encode_t_stringliteral_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking not live\")\n\n    }\n\n    function abi_encode_t_stringliteral_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065(memPtr) {\n\n        mstore(add(memPtr, 0), \"Buy period over\")\n\n    }\n\n    function abi_encode_t_stringliteral_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781(memPtr) {\n\n        mstore(add(memPtr, 0), \"Below min stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds max stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds total pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake not ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"910": [
									{
										"length": 32,
										"start": 1677
									},
									{
										"length": 32,
										"start": 1903
									},
									{
										"length": 32,
										"start": 2256
									},
									{
										"length": 32,
										"start": 2968
									},
									{
										"length": 32,
										"start": 4588
									}
								],
								"913": [
									{
										"length": 32,
										"start": 3043
									},
									{
										"length": 32,
										"start": 3278
									},
									{
										"length": 32,
										"start": 3477
									},
									{
										"length": 32,
										"start": 5313
									}
								],
								"915": [
									{
										"length": 32,
										"start": 2539
									},
									{
										"length": 32,
										"start": 3443
									}
								],
								"917": [
									{
										"length": 32,
										"start": 3923
									},
									{
										"length": 32,
										"start": 5109
									},
									{
										"length": 32,
										"start": 5426
									}
								],
								"919": [
									{
										"length": 32,
										"start": 2027
									},
									{
										"length": 32,
										"start": 5393
									}
								],
								"921": [
									{
										"length": 32,
										"start": 1939
									},
									{
										"length": 32,
										"start": 4035
									}
								],
								"923": [
									{
										"length": 32,
										"start": 4134
									},
									{
										"length": 32,
										"start": 5145
									}
								],
								"925": [
									{
										"length": 32,
										"start": 2575
									},
									{
										"length": 32,
										"start": 4305
									}
								],
								"927": [
									{
										"length": 32,
										"start": 2907
									},
									{
										"length": 32,
										"start": 4887
									},
									{
										"length": 32,
										"start": 5349
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101cd575f3560e01c8063817b1cd211610102578063cab9b8fb116100a0578063f2fde38b1161006f578063f2fde38b14610479578063f7c618c114610495578063f959680b146104b3578063fe1d3795146104d1576101cd565b8063cab9b8fb14610401578063d719fa971461041f578063e9b987461461043d578063ea1b28e01461045b576101cd565b80638da7ad23116100dc5780638da7ad2314610367578063a30a247414610397578063a694fc3a146103b5578063b973e1bf146103d1576101cd565b8063817b1cd2146103215780638456cb591461033f5780638da5cb5b14610349576101cd565b8063455ab53c1161016f578063649040711161014957806364904071146102d15780636f4a2cd0146102ef578063715018a6146102f9578063790ca41314610303576101cd565b8063455ab53c1461028b5780634f984c5c146102a957806359927044146102b3576101cd565b8063292a6b19116101ab578063292a6b1914610227578063375b3c0a146102455780633f4ba83a1461026357806340f02ab61461026d576101cd565b806301339c21146101d157806302ac512f146101db57806310d63d031461020b575b5f5ffd5b6101d96104db565b005b6101f560048036038101906101f09190611986565b6105b8565b60405161020291906119f0565b60405180910390f35b61022560048036038101906102209190611a33565b6105f3565b005b61022f61076d565b60405161023c9190611ab9565b60405180910390f35b61024d610791565b60405161025a9190611ae1565b60405180910390f35b61026b6107b5565b005b6102756107e9565b6040516102829190611ae1565b60405180910390f35b61029361080d565b6040516102a09190611b6d565b60405180910390f35b6102b161081f565b005b6102bb6109e9565b6040516102c891906119f0565b60405180910390f35b6102d9610a0d565b6040516102e69190611ae1565b60405180910390f35b6102f7610a31565b005b610301610de5565b005b61030b610df8565b6040516103189190611ae1565b60405180910390f35b610329610dfe565b6040516103369190611ae1565b60405180910390f35b610347610e04565b005b610351610e38565b60405161035e91906119f0565b60405180910390f35b610381600480360381019061037c9190611a33565b610e5f565b60405161038e9190611ae1565b60405180910390f35b61039f610e74565b6040516103ac9190611ba0565b60405180910390f35b6103cf60048036038101906103ca9190611986565b610e86565b005b6103eb60048036038101906103e69190611986565b6112f5565b6040516103f89190611ae1565b60405180910390f35b610409611353565b6040516104169190611b6d565b60405180910390f35b610427611368565b6040516104349190611c70565b60405180910390f35b6104456113f3565b6040516104529190611ae1565b60405180910390f35b610463611417565b6040516104709190611ae1565b60405180910390f35b610493600480360381019061048e9190611a33565b61143b565b005b61049d6114bf565b6040516104aa9190611ab9565b60405180910390f35b6104bb6114e3565b6040516104c89190611ae1565b60405180910390f35b6104d9611507565b005b6104e361160c565b60025f9054906101000a900460ff1615610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052990611cea565b60405180910390fd5b600160025f6101000a81548160ff02191690831515021790555042600381905550600160045f6101000a81548160ff0219169083600381111561057857610577611afa565b5b02179055507fa72e5e150ebe7b67363131cf1d5e72a8053adc58eb1879467ebd529ae3d4ecca6003546040516105ae9190611ae1565b60405180910390a1565b600781815481106105c7575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105fb61160c565b610603611693565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610686576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067d90611d52565b60405180910390fd5b6106d182827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116e29092919063ffffffff16565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fbf8f812d3d85df21758e37a857352fb02610f4278c682198af5c5c00bbb3d500826040516107599190611ae1565b60405180910390a25061076a611761565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6107bd61160c565b600160045f6101000a81548160ff021916908360038111156107e2576107e1611afa565b5b0217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b60045f9054906101000a900460ff1681565b61082761160c565b61082f611693565b5f5f90505b6007805490508110156109b4575f6007828154811061085657610855611d70565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111156109a55761091482827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116e29092919063ffffffff16565b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff167fb2372f309a2c0b54c10ce95469012d95c4d8cc7c8a154bfc22db66d993abbc718260405161099c9190611ae1565b60405180910390a25b50508080600101915050610834565b50600360045f6101000a81548160ff021916908360038111156109da576109d9611afa565b5b02179055506109e7611761565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610a3961160c565b610a41611693565b600380811115610a5457610a53611afa565b5b60045f9054906101000a900460ff166003811115610a7557610a74611afa565b5b14610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aac90611de7565b60405180910390fd5b5f5f90505b600780549050811015610cca575f60078281548110610adc57610adb611d70565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8103610b55575050610cbd565b5f6005547f000000000000000000000000000000000000000000000000000000000000000083610b859190611e32565b610b8f9190611ea0565b9050610bdc83837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116e29092919063ffffffff16565b610c2783827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116e29092919063ffffffff16565b5f60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff167f53118bff2fb56701752f5bf54053d24fb83cec92f9f6ce664b90c38a2991caa48383604051610cb1929190611ed0565b60405180910390a25050505b8080600101915050610aba565b505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d2591906119f0565b602060405180830381865afa158015610d40573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d649190611f0b565b90505f811115610dda57610dd97f0000000000000000000000000000000000000000000000000000000000000000827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166116e29092919063ffffffff16565b5b50610de3611761565b565b610ded61160c565b610df65f61176a565b565b60035481565b60055481565b610e0c61160c565b600260045f6101000a81548160ff02191690836003811115610e3157610e30611afa565b5b0217905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6006602052805f5260405f205f915090505481565b60025f9054906101000a900460ff1681565b610e8e611693565b60016003811115610ea257610ea1611afa565b5b60045f9054906101000a900460ff166003811115610ec357610ec2611afa565b5b14610f03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efa90611f80565b60405180910390fd5b60025f9054906101000a900460ff16610f51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4890611fe8565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600354610f7f9190612006565b421115610fc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb890612083565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000811015611024576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101b906120eb565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000008160065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461108e9190612006565b11156110cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c690612153565b60405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000816005546110fe9190612006565b111561113f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611136906121bb565b60405180910390fd5b5f60065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054036111e457600733908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6112313330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661182b909392919063ffffffff16565b8060065f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461127d9190612006565b925050819055508060055f8282546112959190612006565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a826040516112e29190611ae1565b60405180910390a26112f2611761565b50565b5f5f600554148061130557505f82145b15611312575f905061134e565b6005547f0000000000000000000000000000000000000000000000000000000000000000836113419190611e32565b61134b9190611ea0565b90505b919050565b5f60045f9054906101000a900460ff16905090565b606060078054806020026020016040519081016040528092919081815260200182805480156113e957602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113a0575b5050505050905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61144361160c565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114b3575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114aa91906119f0565b60405180910390fd5b6114bc8161176a565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b61150f61160c565b7f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060035461155e9190612006565b6115689190612006565b42116115a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a090612223565b60405180910390fd5b600360045f6101000a81548160ff021916908360038111156115ce576115cd611afa565b5b02179055507faaaf03c480f43393f2414d5013b316f6cc36576bed29ae1ea15d8936dcc0d5e7426040516116029190611ae1565b60405180910390a1565b6116146118ad565b73ffffffffffffffffffffffffffffffffffffffff16611632610e38565b73ffffffffffffffffffffffffffffffffffffffff1614611691576116556118ad565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161168891906119f0565b60405180910390fd5b565b6002600154036116d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116cf9061228b565b60405180910390fd5b6002600181905550565b61175c838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016117159291906122a9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118b4565b505050565b60018081905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6118a7848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611860939291906122d0565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506118b4565b50505050565b5f33905090565b5f5f60205f8451602086015f885af1806118d3576040513d5f823e3d81fd5b3d92505f519150505f82146118ec576001811415611907565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561194957836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161194091906119f0565b60405180910390fd5b50505050565b5f5ffd5b5f819050919050565b61196581611953565b811461196f575f5ffd5b50565b5f813590506119808161195c565b92915050565b5f6020828403121561199b5761199a61194f565b5b5f6119a884828501611972565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119da826119b1565b9050919050565b6119ea816119d0565b82525050565b5f602082019050611a035f8301846119e1565b92915050565b611a12816119d0565b8114611a1c575f5ffd5b50565b5f81359050611a2d81611a09565b92915050565b5f60208284031215611a4857611a4761194f565b5b5f611a5584828501611a1f565b91505092915050565b5f819050919050565b5f611a81611a7c611a77846119b1565b611a5e565b6119b1565b9050919050565b5f611a9282611a67565b9050919050565b5f611aa382611a88565b9050919050565b611ab381611a99565b82525050565b5f602082019050611acc5f830184611aaa565b92915050565b611adb81611953565b82525050565b5f602082019050611af45f830184611ad2565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60048110611b3857611b37611afa565b5b50565b5f819050611b4882611b27565b919050565b5f611b5782611b3b565b9050919050565b611b6781611b4d565b82525050565b5f602082019050611b805f830184611b5e565b92915050565b5f8115159050919050565b611b9a81611b86565b82525050565b5f602082019050611bb35f830184611b91565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611beb816119d0565b82525050565b5f611bfc8383611be2565b60208301905092915050565b5f602082019050919050565b5f611c1e82611bb9565b611c288185611bc3565b9350611c3383611bd3565b805f5b83811015611c63578151611c4a8882611bf1565b9750611c5583611c08565b925050600181019050611c36565b5085935050505092915050565b5f6020820190508181035f830152611c888184611c14565b905092915050565b5f82825260208201905092915050565b7f416c7265616479206c61756e63686564000000000000000000000000000000005f82015250565b5f611cd4601083611c90565b9150611cdf82611ca0565b602082019050919050565b5f6020820190508181035f830152611d0181611cc8565b9050919050565b7f4e6f7468696e6720746f207465726d696e6174650000000000000000000000005f82015250565b5f611d3c601483611c90565b9150611d4782611d08565b602082019050919050565b5f6020820190508181035f830152611d6981611d30565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f5374616b696e67206e6f7420636f6d706c6574650000000000000000000000005f82015250565b5f611dd1601483611c90565b9150611ddc82611d9d565b602082019050919050565b5f6020820190508181035f830152611dfe81611dc5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611e3c82611953565b9150611e4783611953565b9250828202611e5581611953565b91508282048414831517611e6c57611e6b611e05565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611eaa82611953565b9150611eb583611953565b925082611ec557611ec4611e73565b5b828204905092915050565b5f604082019050611ee35f830185611ad2565b611ef06020830184611ad2565b9392505050565b5f81519050611f058161195c565b92915050565b5f60208284031215611f2057611f1f61194f565b5b5f611f2d84828501611ef7565b91505092915050565b7f5374616b696e67206e6f742061637469766500000000000000000000000000005f82015250565b5f611f6a601283611c90565b9150611f7582611f36565b602082019050919050565b5f6020820190508181035f830152611f9781611f5e565b9050919050565b7f5374616b696e67206e6f74206c697665000000000000000000000000000000005f82015250565b5f611fd2601083611c90565b9150611fdd82611f9e565b602082019050919050565b5f6020820190508181035f830152611fff81611fc6565b9050919050565b5f61201082611953565b915061201b83611953565b925082820190508082111561203357612032611e05565b5b92915050565b7f42757920706572696f64206f76657200000000000000000000000000000000005f82015250565b5f61206d600f83611c90565b915061207882612039565b602082019050919050565b5f6020820190508181035f83015261209a81612061565b9050919050565b7f42656c6f77206d696e207374616b6500000000000000000000000000000000005f82015250565b5f6120d5600f83611c90565b91506120e0826120a1565b602082019050919050565b5f6020820190508181035f830152612102816120c9565b9050919050565b7f45786365656473206d6178207374616b650000000000000000000000000000005f82015250565b5f61213d601183611c90565b915061214882612109565b602082019050919050565b5f6020820190508181035f83015261216a81612131565b9050919050565b7f4578636565647320746f74616c20706f6f6c00000000000000000000000000005f82015250565b5f6121a5601283611c90565b91506121b082612171565b602082019050919050565b5f6020820190508181035f8301526121d281612199565b9050919050565b7f5374616b65206e6f7420656e64656400000000000000000000000000000000005f82015250565b5f61220d600f83611c90565b9150612218826121d9565b602082019050919050565b5f6020820190508181035f83015261223a81612201565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612275601f83611c90565b915061228082612241565b602082019050919050565b5f6020820190508181035f8301526122a281612269565b9050919050565b5f6040820190506122bc5f8301856119e1565b6122c96020830184611ad2565b9392505050565b5f6060820190506122e35f8301866119e1565b6122f060208301856119e1565b6122fd6040830184611ad2565b94935050505056fea26469706673582212205e89409125f5c943b6837e2fcb642abfb4fb5e2958f7363817e02a4d74f42eb264736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x102 JUMPI DUP1 PUSH4 0xCAB9B8FB GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xF959680B EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0xFE1D3795 EQ PUSH2 0x4D1 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xCAB9B8FB EQ PUSH2 0x401 JUMPI DUP1 PUSH4 0xD719FA97 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0xE9B98746 EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0xEA1B28E0 EQ PUSH2 0x45B JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x8DA7AD23 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x8DA7AD23 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xA30A2474 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xB973E1BF EQ PUSH2 0x3D1 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x349 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x455AB53C GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x64904071 GT PUSH2 0x149 JUMPI DUP1 PUSH4 0x64904071 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x6F4A2CD0 EQ PUSH2 0x2EF JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x790CA413 EQ PUSH2 0x303 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x455AB53C EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x4F984C5C EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x59927044 EQ PUSH2 0x2B3 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x292A6B19 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x292A6B19 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x375B3C0A EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x40F02AB6 EQ PUSH2 0x26D JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x1339C21 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x2AC512F EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x10D63D03 EQ PUSH2 0x20B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1D9 PUSH2 0x4DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22F PUSH2 0x76D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24D PUSH2 0x791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH2 0x7B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x275 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH2 0x81F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BB PUSH2 0x9E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH2 0xA0D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F7 PUSH2 0xA31 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x301 PUSH2 0xDE5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH2 0xDF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x329 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH2 0xE04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x351 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35E SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x381 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37C SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39F PUSH2 0xE74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AC SWAP2 SWAP1 PUSH2 0x1BA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CA SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0xE86 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x12F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F8 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x409 PUSH2 0x1353 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x1B6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x427 PUSH2 0x1368 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1C70 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x445 PUSH2 0x13F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x463 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x470 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x493 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48E SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x143B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49D PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x1AB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4BB PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C8 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D9 PUSH2 0x1507 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E3 PUSH2 0x160C JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x532 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x529 SWAP1 PUSH2 0x1CEA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x578 JUMPI PUSH2 0x577 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xA72E5E150EBE7B67363131CF1D5E72A8053ADC58EB1879467EBD529AE3D4ECCA PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x5FB PUSH2 0x160C JUMP JUMPDEST PUSH2 0x603 PUSH2 0x1693 JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x686 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67D SWAP1 PUSH2 0x1D52 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D1 DUP3 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBF8F812D3D85DF21758E37A857352FB02610F4278C682198AF5C5C00BBB3D500 DUP3 PUSH1 0x40 MLOAD PUSH2 0x759 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x76A PUSH2 0x1761 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x7BD PUSH2 0x160C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7E2 JUMPI PUSH2 0x7E1 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x827 PUSH2 0x160C JUMP JUMPDEST PUSH2 0x82F PUSH2 0x1693 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x9B4 JUMPI PUSH0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x856 JUMPI PUSH2 0x855 PUSH2 0x1D70 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x914 DUP3 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB2372F309A2C0B54C10CE95469012D95C4D8CC7C8A154BFC22DB66D993ABBC71 DUP3 PUSH1 0x40 MLOAD PUSH2 0x99C SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x834 JUMP JUMPDEST POP PUSH1 0x3 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9DA JUMPI PUSH2 0x9D9 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x9E7 PUSH2 0x1761 JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xA39 PUSH2 0x160C JUMP JUMPDEST PUSH2 0xA41 PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0xA54 JUMPI PUSH2 0xA53 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA75 JUMPI PUSH2 0xA74 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST EQ PUSH2 0xAB5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAC SWAP1 PUSH2 0x1DE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xCCA JUMPI PUSH0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xADC JUMPI PUSH2 0xADB PUSH2 0x1D70 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xB55 JUMPI POP POP PUSH2 0xCBD JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD PUSH32 0x0 DUP4 PUSH2 0xB85 SWAP2 SWAP1 PUSH2 0x1E32 JUMP JUMPDEST PUSH2 0xB8F SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP PUSH2 0xBDC DUP4 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xC27 DUP4 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x53118BFF2FB56701752F5BF54053D24FB83CEC92F9F6CE664B90C38A2991CAA4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCB1 SWAP3 SWAP2 SWAP1 PUSH2 0x1ED0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xABA JUMP JUMPDEST POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD25 SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD40 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD64 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xDDA JUMPI PUSH2 0xDD9 PUSH32 0x0 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16E2 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST POP PUSH2 0xDE3 PUSH2 0x1761 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDED PUSH2 0x160C JUMP JUMPDEST PUSH2 0xDF6 PUSH0 PUSH2 0x176A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE0C PUSH2 0x160C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE31 JUMPI PUSH2 0xE30 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xE8E PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xEA2 JUMPI PUSH2 0xEA1 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xEC3 JUMPI PUSH2 0xEC2 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST EQ PUSH2 0xF03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFA SWAP1 PUSH2 0x1F80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF48 SWAP1 PUSH2 0x1FE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x3 SLOAD PUSH2 0xF7F SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0xFC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB8 SWAP1 PUSH2 0x2083 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 LT ISZERO PUSH2 0x1024 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101B SWAP1 PUSH2 0x20EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST GT ISZERO PUSH2 0x10CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10C6 SWAP1 PUSH2 0x2153 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 DUP2 PUSH1 0x5 SLOAD PUSH2 0x10FE SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST GT ISZERO PUSH2 0x113F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1136 SWAP1 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x11E4 JUMPI PUSH1 0x7 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x1231 CALLER ADDRESS DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x182B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x127D SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1295 SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP3 PUSH1 0x40 MLOAD PUSH2 0x12E2 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x12F2 PUSH2 0x1761 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x5 SLOAD EQ DUP1 PUSH2 0x1305 JUMPI POP PUSH0 DUP3 EQ JUMPDEST ISZERO PUSH2 0x1312 JUMPI PUSH0 SWAP1 POP PUSH2 0x134E JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH32 0x0 DUP4 PUSH2 0x1341 SWAP2 SWAP1 PUSH2 0x1E32 JUMP JUMPDEST PUSH2 0x134B SWAP2 SWAP1 PUSH2 0x1EA0 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x13E9 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x13A0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1443 PUSH2 0x160C JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x14B3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14AA SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14BC DUP2 PUSH2 0x176A JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x150F PUSH2 0x160C JUMP JUMPDEST PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 SLOAD PUSH2 0x155E SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x2006 JUMP JUMPDEST TIMESTAMP GT PUSH2 0x15A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A0 SWAP1 PUSH2 0x2223 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15CE JUMPI PUSH2 0x15CD PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xAAAF03C480F43393F2414D5013B316F6CC36576BED29AE1EA15D8936DCC0D5E7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1602 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1614 PUSH2 0x18AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1632 PUSH2 0xE38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1691 JUMPI PUSH2 0x1655 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1688 SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x16D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CF SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x175C DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1715 SWAP3 SWAP2 SWAP1 PUSH2 0x22A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18B4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x18A7 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1860 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x18B4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x18D3 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x18EC JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1907 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1949 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1940 SWAP2 SWAP1 PUSH2 0x19F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1965 DUP2 PUSH2 0x1953 JUMP JUMPDEST DUP2 EQ PUSH2 0x196F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1980 DUP2 PUSH2 0x195C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x199B JUMPI PUSH2 0x199A PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19A8 DUP5 DUP3 DUP6 ADD PUSH2 0x1972 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19DA DUP3 PUSH2 0x19B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19EA DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A03 PUSH0 DUP4 ADD DUP5 PUSH2 0x19E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A12 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1A1C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A2D DUP2 PUSH2 0x1A09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A48 JUMPI PUSH2 0x1A47 PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A55 DUP5 DUP3 DUP6 ADD PUSH2 0x1A1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A81 PUSH2 0x1A7C PUSH2 0x1A77 DUP5 PUSH2 0x19B1 JUMP JUMPDEST PUSH2 0x1A5E JUMP JUMPDEST PUSH2 0x19B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A92 DUP3 PUSH2 0x1A67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA3 DUP3 PUSH2 0x1A88 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AB3 DUP2 PUSH2 0x1A99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ACC PUSH0 DUP4 ADD DUP5 PUSH2 0x1AAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1ADB DUP2 PUSH2 0x1953 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AF4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1AD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1B38 JUMPI PUSH2 0x1B37 PUSH2 0x1AFA JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x1B48 DUP3 PUSH2 0x1B27 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B57 DUP3 PUSH2 0x1B3B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B67 DUP2 PUSH2 0x1B4D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B80 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B5E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B9A DUP2 PUSH2 0x1B86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BB3 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BEB DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BFC DUP4 DUP4 PUSH2 0x1BE2 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C1E DUP3 PUSH2 0x1BB9 JUMP JUMPDEST PUSH2 0x1C28 DUP2 DUP6 PUSH2 0x1BC3 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C33 DUP4 PUSH2 0x1BD3 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C63 JUMPI DUP2 MLOAD PUSH2 0x1C4A DUP9 DUP3 PUSH2 0x1BF1 JUMP JUMPDEST SWAP8 POP PUSH2 0x1C55 DUP4 PUSH2 0x1C08 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1C36 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C88 DUP2 DUP5 PUSH2 0x1C14 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C7265616479206C61756E6368656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CD4 PUSH1 0x10 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CDF DUP3 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D01 DUP2 PUSH2 0x1CC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7468696E6720746F207465726D696E617465000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D3C PUSH1 0x14 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D47 DUP3 PUSH2 0x1D08 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D69 DUP2 PUSH2 0x1D30 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x5374616B696E67206E6F7420636F6D706C657465000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD1 PUSH1 0x14 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DDC DUP3 PUSH2 0x1D9D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DFE DUP2 PUSH2 0x1DC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1E3C DUP3 PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E47 DUP4 PUSH2 0x1953 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E55 DUP2 PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E6C JUMPI PUSH2 0x1E6B PUSH2 0x1E05 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1EAA DUP3 PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB5 DUP4 PUSH2 0x1953 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1EC5 JUMPI PUSH2 0x1EC4 PUSH2 0x1E73 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EE3 PUSH0 DUP4 ADD DUP6 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x1EF0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AD2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F05 DUP2 PUSH2 0x195C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F20 JUMPI PUSH2 0x1F1F PUSH2 0x194F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F2D DUP5 DUP3 DUP6 ADD PUSH2 0x1EF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E67206E6F74206163746976650000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1F6A PUSH1 0x12 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F75 DUP3 PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F97 DUP2 PUSH2 0x1F5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E67206E6F74206C69766500000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FD2 PUSH1 0x10 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FDD DUP3 PUSH2 0x1F9E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1FFF DUP2 PUSH2 0x1FC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2010 DUP3 PUSH2 0x1953 JUMP JUMPDEST SWAP2 POP PUSH2 0x201B DUP4 PUSH2 0x1953 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2033 JUMPI PUSH2 0x2032 PUSH2 0x1E05 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x42757920706572696F64206F7665720000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x206D PUSH1 0xF DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x2078 DUP3 PUSH2 0x2039 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x209A DUP2 PUSH2 0x2061 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x42656C6F77206D696E207374616B650000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20D5 PUSH1 0xF DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x20E0 DUP3 PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2102 DUP2 PUSH2 0x20C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178207374616B65000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x213D PUSH1 0x11 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x2148 DUP3 PUSH2 0x2109 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x216A DUP2 PUSH2 0x2131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4578636565647320746F74616C20706F6F6C0000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21A5 PUSH1 0x12 DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x21B0 DUP3 PUSH2 0x2171 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21D2 DUP2 PUSH2 0x2199 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B65206E6F7420656E6465640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x220D PUSH1 0xF DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x2218 DUP3 PUSH2 0x21D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x223A DUP2 PUSH2 0x2201 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2275 PUSH1 0x1F DUP4 PUSH2 0x1C90 JUMP JUMPDEST SWAP2 POP PUSH2 0x2280 DUP3 PUSH2 0x2241 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22A2 DUP2 PUSH2 0x2269 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22BC PUSH0 DUP4 ADD DUP6 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x22C9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1AD2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22E3 PUSH0 DUP4 ADD DUP7 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x22F0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x19E1 JUMP JUMPDEST PUSH2 0x22FD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1AD2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY DUP10 BLOCKHASH SWAP2 0x25 CREATE2 0xC9 NUMBER 0xB6 DUP4 PUSH31 0x2FCB642ABFB4FB5E2958F7363817E02A4D74F42EB264736F6C634300081E00 CALLER ",
							"sourceMap": "306:5783:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2527:244;;;:::i;:::-;;1102:27;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5348:291;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;494:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;708:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2871:87;;;:::i;:::-;;663:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;964:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4895:445;;;:::i;:::-;;578:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;788:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3995:864;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;932:25:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1015:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2779:84;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1050:45:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;892:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3230:721;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5888:198;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5782:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5671:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;620:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;748:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;536:35:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;833:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2966:234;;;:::i;:::-;;2527:244;1531:13:0;:11;:13::i;:::-;2584::9::1;;;;;;;;;;;2583:14;2575:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2645:4;2629:13;;:20;;;;;;;;;;;;;;;;;;2673:15;2660:10;:28;;;;2715:14;2699:13;;:30;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2745:18;2752:10;;2745:18;;;;;;:::i;:::-;;;;;;;;2527:244::o:0;1102:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5348:291::-;1531:13:0;:11;:13::i;:::-;2261:21:4::1;:19;:21::i;:::-;5430:11:9::2;5444:10;:16;5455:4;5444:16;;;;;;;;;;;;;;;;5430:30;;5485:1;5479:3;:7;5471:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;5522:35;5547:4;5553:3;5522:11;:24;;;;:35;;;;;:::i;:::-;5587:1;5568:10;:16;5579:4;5568:16;;;;;;;;;;;;;;;:20;;;;5621:4;5604:27;;;5627:3;5604:27;;;;;;:::i;:::-;;;;;;;;5419:220;2303:20:4::1;:18;:20::i;:::-;5348:291:9::0;:::o;494:35::-;;;:::o;708:33::-;;;:::o;2871:87::-;1531:13:0;:11;:13::i;:::-;2936:14:9::1;2920:13;;:30;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2871:87::o:0;663:38::-;;;:::o;964:44::-;;;;;;;;;;;;;:::o;4895:445::-;1531:13:0;:11;:13::i;:::-;2261:21:4::1;:19;:21::i;:::-;4967:9:9::2;4979:1;4967:13;;4962:329;4986:10;:17;;;;4982:1;:21;4962:329;;;5025:12;5040:10;5051:1;5040:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5025:28;;5068:11;5082:10;:16;5093:4;5082:16;;;;;;;;;;;;;;;;5068:30;;5123:1;5117:3;:7;5113:167;;;5145:35;5170:4;5176:3;5145:11;:24;;;;:35;;;;;:::i;:::-;5218:1;5199:10;:16;5210:4;5199:16;;;;;;;;;;;;;;;:20;;;;5254:4;5243:21;;;5260:3;5243:21;;;;;;:::i;:::-;;;;;;;;5113:167;5010:281;;5005:3;;;;;;;4962:329;;;;5317:15;5301:13;;:31;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2303:20:4::1;:18;:20::i;:::-;4895:445:9:o:0;578:35::-;;;:::o;788:38::-;;;:::o;3995:864::-;1531:13:0;:11;:13::i;:::-;2261:21:4::1;:19;:21::i;:::-;4092:15:9::2;4075:32:::0;::::2;;;;;;;:::i;:::-;;:13;;;;;;;;;;;:32;;;;;;;;:::i;:::-;;;4067:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;4150:9;4162:1;4150:13;;4145:480;4169:10;:17;;;;4165:1;:21;4145:480;;;4208:12;4223:10;4234:1;4223:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4208:28;;4251:17;4271:10;:16;4282:4;4271:16;;;;;;;;;;;;;;;;4251:36;;4319:1;4306:9;:14:::0;4302:28:::2;;4322:8;;;;4302:28;4347:14;4392:11;;4377;4365:9;:23;;;;:::i;:::-;4364:39;;;;:::i;:::-;4347:56;;4420:41;4445:4;4451:9;4420:11;:24;;;;:41;;;;;:::i;:::-;4476:38;4501:4;4507:6;4476:11;:24;;;;:38;;;;;:::i;:::-;4548:1;4529:10;:16;4540:4;4529:16;;;;;;;;;;;;;;;:20;;;;4589:4;4571:42;;;4595:9;4606:6;4571:42;;;;;;;:::i;:::-;;;;;;;;4193:432;;;4145:480;4188:3;;;;;;;4145:480;;;;4695:16;4714:11;:21;;;4744:4;4714:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4695:55;;4776:1;4765:8;:12;4761:91;;;4794:46;4819:10;4831:8;4794:11;:24;;;;:46;;;;;:::i;:::-;4761:91;4056:803;2303:20:4::1;:18;:20::i;:::-;3995:864:9:o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;932:25:9:-;;;;:::o;1015:26::-;;;;:::o;2779:84::-;1531:13:0;:11;:13::i;:::-;2842::9::1;2826;;:29;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2779:84::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1050:45:9:-;;;;;;;;;;;;;;;;;:::o;892:33::-;;;;;;;;;;;;;:::o;3230:721::-;2261:21:4;:19;:21::i;:::-;1571:14:9::1;1554:31;;;;;;;;:::i;:::-;;:13;;;;;;;;;;;:31;;;;;;;;:::i;:::-;;;1546:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3314:13:::2;;;;;;;;;;;3306:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;3399:11;3386:10;;:24;;;;:::i;:::-;3367:15;:43;;3359:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;3459:8;3449:6;:18;;3441:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;3541:8;3531:6;3506:10;:22;3517:10;3506:22;;;;;;;;;;;;;;;;:31;;;;:::i;:::-;:43;;3498:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3614:13;3604:6;3590:11;;:20;;;;:::i;:::-;:37;;3582:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3693:1;3667:10;:22;3678:10;3667:22;;;;;;;;;;;;;;;;:27:::0;3663:87:::2;;3711:10;3727;3711:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3663:87;3762:63;3791:10;3811:4;3818:6;3762:11;:28;;;;:63;;;;;;:::i;:::-;3862:6;3836:10;:22;3847:10;3836:22;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;3894:6;3879:11;;:21;;;;;;;:::i;:::-;;;;;;;;3924:10;3918:25;;;3936:6;3918:25;;;;;;:::i;:::-;;;;;;;;2303:20:4::0;:18;:20::i;:::-;3230:721:9;:::o;5888:198::-;5950:14;5996:1;5981:11;;:16;:31;;;;6011:1;6001:6;:11;5981:31;5977:45;;;6021:1;6014:8;;;;5977:45;6067:11;;6052;6043:6;:20;;;;:::i;:::-;6042:36;;;;:::i;:::-;6033:45;;5888:198;;;;:::o;5782:98::-;5833:6;5859:13;;;;;;;;;;;5852:20;;5782:98;:::o;5671:103::-;5720:16;5756:10;5749:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5671:103;:::o;620:36::-;;;:::o;748:33::-;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;536:35:9:-;;;:::o;833:36::-;;;:::o;2966:234::-;1531:13:0;:11;:13::i;:::-;3076::9::1;3062:11;3049:10;;:24;;;;:::i;:::-;:40;;;;:::i;:::-;3031:15;:58;3023:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;3136:15;3120:13;;:31;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3167:25;3176:15;3167:25;;;;;;:::i;:::-;;;;;;;;2966:234::o:0;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;88:117:10:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:140::-;2629:9;2662:37;2693:5;2662:37;:::i;:::-;2649:50;;2565:140;;;:::o;2711:159::-;2812:51;2857:5;2812:51;:::i;:::-;2807:3;2800:64;2711:159;;:::o;2876:250::-;2983:4;3021:2;3010:9;3006:18;2998:26;;3034:85;3116:1;3105:9;3101:17;3092:6;3034:85;:::i;:::-;2876:250;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:180::-;3532:77;3529:1;3522:88;3629:4;3626:1;3619:15;3653:4;3650:1;3643:15;3670:115;3753:1;3746:5;3743:12;3733:46;;3759:18;;:::i;:::-;3733:46;3670:115;:::o;3791:131::-;3838:7;3867:5;3856:16;;3873:43;3910:5;3873:43;:::i;:::-;3791:131;;;:::o;3928:::-;3986:9;4019:34;4047:5;4019:34;:::i;:::-;4006:47;;3928:131;;;:::o;4065:147::-;4160:45;4199:5;4160:45;:::i;:::-;4155:3;4148:58;4065:147;;:::o;4218:238::-;4319:4;4357:2;4346:9;4342:18;4334:26;;4370:79;4446:1;4435:9;4431:17;4422:6;4370:79;:::i;:::-;4218:238;;;;:::o;4462:90::-;4496:7;4539:5;4532:13;4525:21;4514:32;;4462:90;;;:::o;4558:109::-;4639:21;4654:5;4639:21;:::i;:::-;4634:3;4627:34;4558:109;;:::o;4673:210::-;4760:4;4798:2;4787:9;4783:18;4775:26;;4811:65;4873:1;4862:9;4858:17;4849:6;4811:65;:::i;:::-;4673:210;;;;:::o;4889:114::-;4956:6;4990:5;4984:12;4974:22;;4889:114;;;:::o;5009:184::-;5108:11;5142:6;5137:3;5130:19;5182:4;5177:3;5173:14;5158:29;;5009:184;;;;:::o;5199:132::-;5266:4;5289:3;5281:11;;5319:4;5314:3;5310:14;5302:22;;5199:132;;;:::o;5337:108::-;5414:24;5432:5;5414:24;:::i;:::-;5409:3;5402:37;5337:108;;:::o;5451:179::-;5520:10;5541:46;5583:3;5575:6;5541:46;:::i;:::-;5619:4;5614:3;5610:14;5596:28;;5451:179;;;;:::o;5636:113::-;5706:4;5738;5733:3;5729:14;5721:22;;5636:113;;;:::o;5785:732::-;5904:3;5933:54;5981:5;5933:54;:::i;:::-;6003:86;6082:6;6077:3;6003:86;:::i;:::-;5996:93;;6113:56;6163:5;6113:56;:::i;:::-;6192:7;6223:1;6208:284;6233:6;6230:1;6227:13;6208:284;;;6309:6;6303:13;6336:63;6395:3;6380:13;6336:63;:::i;:::-;6329:70;;6422:60;6475:6;6422:60;:::i;:::-;6412:70;;6268:224;6255:1;6252;6248:9;6243:14;;6208:284;;;6212:14;6508:3;6501:10;;5909:608;;;5785:732;;;;:::o;6523:373::-;6666:4;6704:2;6693:9;6689:18;6681:26;;6753:9;6747:4;6743:20;6739:1;6728:9;6724:17;6717:47;6781:108;6884:4;6875:6;6781:108;:::i;:::-;6773:116;;6523:373;;;;:::o;6902:169::-;6986:11;7020:6;7015:3;7008:19;7060:4;7055:3;7051:14;7036:29;;6902:169;;;;:::o;7077:166::-;7217:18;7213:1;7205:6;7201:14;7194:42;7077:166;:::o;7249:366::-;7391:3;7412:67;7476:2;7471:3;7412:67;:::i;:::-;7405:74;;7488:93;7577:3;7488:93;:::i;:::-;7606:2;7601:3;7597:12;7590:19;;7249:366;;;:::o;7621:419::-;7787:4;7825:2;7814:9;7810:18;7802:26;;7874:9;7868:4;7864:20;7860:1;7849:9;7845:17;7838:47;7902:131;8028:4;7902:131;:::i;:::-;7894:139;;7621:419;;;:::o;8046:170::-;8186:22;8182:1;8174:6;8170:14;8163:46;8046:170;:::o;8222:366::-;8364:3;8385:67;8449:2;8444:3;8385:67;:::i;:::-;8378:74;;8461:93;8550:3;8461:93;:::i;:::-;8579:2;8574:3;8570:12;8563:19;;8222:366;;;:::o;8594:419::-;8760:4;8798:2;8787:9;8783:18;8775:26;;8847:9;8841:4;8837:20;8833:1;8822:9;8818:17;8811:47;8875:131;9001:4;8875:131;:::i;:::-;8867:139;;8594:419;;;:::o;9019:180::-;9067:77;9064:1;9057:88;9164:4;9161:1;9154:15;9188:4;9185:1;9178:15;9205:170;9345:22;9341:1;9333:6;9329:14;9322:46;9205:170;:::o;9381:366::-;9523:3;9544:67;9608:2;9603:3;9544:67;:::i;:::-;9537:74;;9620:93;9709:3;9620:93;:::i;:::-;9738:2;9733:3;9729:12;9722:19;;9381:366;;;:::o;9753:419::-;9919:4;9957:2;9946:9;9942:18;9934:26;;10006:9;10000:4;9996:20;9992:1;9981:9;9977:17;9970:47;10034:131;10160:4;10034:131;:::i;:::-;10026:139;;9753:419;;;:::o;10178:180::-;10226:77;10223:1;10216:88;10323:4;10320:1;10313:15;10347:4;10344:1;10337:15;10364:410;10404:7;10427:20;10445:1;10427:20;:::i;:::-;10422:25;;10461:20;10479:1;10461:20;:::i;:::-;10456:25;;10516:1;10513;10509:9;10538:30;10556:11;10538:30;:::i;:::-;10527:41;;10717:1;10708:7;10704:15;10701:1;10698:22;10678:1;10671:9;10651:83;10628:139;;10747:18;;:::i;:::-;10628:139;10412:362;10364:410;;;;:::o;10780:180::-;10828:77;10825:1;10818:88;10925:4;10922:1;10915:15;10949:4;10946:1;10939:15;10966:185;11006:1;11023:20;11041:1;11023:20;:::i;:::-;11018:25;;11057:20;11075:1;11057:20;:::i;:::-;11052:25;;11096:1;11086:35;;11101:18;;:::i;:::-;11086:35;11143:1;11140;11136:9;11131:14;;10966:185;;;;:::o;11157:332::-;11278:4;11316:2;11305:9;11301:18;11293:26;;11329:71;11397:1;11386:9;11382:17;11373:6;11329:71;:::i;:::-;11410:72;11478:2;11467:9;11463:18;11454:6;11410:72;:::i;:::-;11157:332;;;;;:::o;11495:143::-;11552:5;11583:6;11577:13;11568:22;;11599:33;11626:5;11599:33;:::i;:::-;11495:143;;;;:::o;11644:351::-;11714:6;11763:2;11751:9;11742:7;11738:23;11734:32;11731:119;;;11769:79;;:::i;:::-;11731:119;11889:1;11914:64;11970:7;11961:6;11950:9;11946:22;11914:64;:::i;:::-;11904:74;;11860:128;11644:351;;;;:::o;12001:168::-;12141:20;12137:1;12129:6;12125:14;12118:44;12001:168;:::o;12175:366::-;12317:3;12338:67;12402:2;12397:3;12338:67;:::i;:::-;12331:74;;12414:93;12503:3;12414:93;:::i;:::-;12532:2;12527:3;12523:12;12516:19;;12175:366;;;:::o;12547:419::-;12713:4;12751:2;12740:9;12736:18;12728:26;;12800:9;12794:4;12790:20;12786:1;12775:9;12771:17;12764:47;12828:131;12954:4;12828:131;:::i;:::-;12820:139;;12547:419;;;:::o;12972:166::-;13112:18;13108:1;13100:6;13096:14;13089:42;12972:166;:::o;13144:366::-;13286:3;13307:67;13371:2;13366:3;13307:67;:::i;:::-;13300:74;;13383:93;13472:3;13383:93;:::i;:::-;13501:2;13496:3;13492:12;13485:19;;13144:366;;;:::o;13516:419::-;13682:4;13720:2;13709:9;13705:18;13697:26;;13769:9;13763:4;13759:20;13755:1;13744:9;13740:17;13733:47;13797:131;13923:4;13797:131;:::i;:::-;13789:139;;13516:419;;;:::o;13941:191::-;13981:3;14000:20;14018:1;14000:20;:::i;:::-;13995:25;;14034:20;14052:1;14034:20;:::i;:::-;14029:25;;14077:1;14074;14070:9;14063:16;;14098:3;14095:1;14092:10;14089:36;;;14105:18;;:::i;:::-;14089:36;13941:191;;;;:::o;14138:165::-;14278:17;14274:1;14266:6;14262:14;14255:41;14138:165;:::o;14309:366::-;14451:3;14472:67;14536:2;14531:3;14472:67;:::i;:::-;14465:74;;14548:93;14637:3;14548:93;:::i;:::-;14666:2;14661:3;14657:12;14650:19;;14309:366;;;:::o;14681:419::-;14847:4;14885:2;14874:9;14870:18;14862:26;;14934:9;14928:4;14924:20;14920:1;14909:9;14905:17;14898:47;14962:131;15088:4;14962:131;:::i;:::-;14954:139;;14681:419;;;:::o;15106:165::-;15246:17;15242:1;15234:6;15230:14;15223:41;15106:165;:::o;15277:366::-;15419:3;15440:67;15504:2;15499:3;15440:67;:::i;:::-;15433:74;;15516:93;15605:3;15516:93;:::i;:::-;15634:2;15629:3;15625:12;15618:19;;15277:366;;;:::o;15649:419::-;15815:4;15853:2;15842:9;15838:18;15830:26;;15902:9;15896:4;15892:20;15888:1;15877:9;15873:17;15866:47;15930:131;16056:4;15930:131;:::i;:::-;15922:139;;15649:419;;;:::o;16074:167::-;16214:19;16210:1;16202:6;16198:14;16191:43;16074:167;:::o;16247:366::-;16389:3;16410:67;16474:2;16469:3;16410:67;:::i;:::-;16403:74;;16486:93;16575:3;16486:93;:::i;:::-;16604:2;16599:3;16595:12;16588:19;;16247:366;;;:::o;16619:419::-;16785:4;16823:2;16812:9;16808:18;16800:26;;16872:9;16866:4;16862:20;16858:1;16847:9;16843:17;16836:47;16900:131;17026:4;16900:131;:::i;:::-;16892:139;;16619:419;;;:::o;17044:168::-;17184:20;17180:1;17172:6;17168:14;17161:44;17044:168;:::o;17218:366::-;17360:3;17381:67;17445:2;17440:3;17381:67;:::i;:::-;17374:74;;17457:93;17546:3;17457:93;:::i;:::-;17575:2;17570:3;17566:12;17559:19;;17218:366;;;:::o;17590:419::-;17756:4;17794:2;17783:9;17779:18;17771:26;;17843:9;17837:4;17833:20;17829:1;17818:9;17814:17;17807:47;17871:131;17997:4;17871:131;:::i;:::-;17863:139;;17590:419;;;:::o;18015:165::-;18155:17;18151:1;18143:6;18139:14;18132:41;18015:165;:::o;18186:366::-;18328:3;18349:67;18413:2;18408:3;18349:67;:::i;:::-;18342:74;;18425:93;18514:3;18425:93;:::i;:::-;18543:2;18538:3;18534:12;18527:19;;18186:366;;;:::o;18558:419::-;18724:4;18762:2;18751:9;18747:18;18739:26;;18811:9;18805:4;18801:20;18797:1;18786:9;18782:17;18775:47;18839:131;18965:4;18839:131;:::i;:::-;18831:139;;18558:419;;;:::o;18983:181::-;19123:33;19119:1;19111:6;19107:14;19100:57;18983:181;:::o;19170:366::-;19312:3;19333:67;19397:2;19392:3;19333:67;:::i;:::-;19326:74;;19409:93;19498:3;19409:93;:::i;:::-;19527:2;19522:3;19518:12;19511:19;;19170:366;;;:::o;19542:419::-;19708:4;19746:2;19735:9;19731:18;19723:26;;19795:9;19789:4;19785:20;19781:1;19770:9;19766:17;19759:47;19823:131;19949:4;19823:131;:::i;:::-;19815:139;;19542:419;;;:::o;19967:332::-;20088:4;20126:2;20115:9;20111:18;20103:26;;20139:71;20207:1;20196:9;20192:17;20183:6;20139:71;:::i;:::-;20220:72;20288:2;20277:9;20273:18;20264:6;20220:72;:::i;:::-;19967:332;;;;;:::o;20305:442::-;20454:4;20492:2;20481:9;20477:18;20469:26;;20505:71;20573:1;20562:9;20558:17;20549:6;20505:71;:::i;:::-;20586:72;20654:2;20643:9;20639:18;20630:6;20586:72;:::i;:::-;20668;20736:2;20725:9;20721:18;20712:6;20668:72;:::i;:::-;20305:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1803800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyDuration()": "infinite",
								"completeStaking()": "infinite",
								"distributeRewards()": "infinite",
								"getStakedUsers()": "infinite",
								"getStakingStatus()": "2606",
								"landFiToken()": "infinite",
								"launch()": "infinite",
								"launchStaking()": "2533",
								"launchTime()": "2536",
								"maxStake()": "infinite",
								"maxTotalStake()": "infinite",
								"minStake()": "infinite",
								"owner()": "2604",
								"pause()": "infinite",
								"previewReward(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"rewardToken()": "infinite",
								"rewardTotal()": "infinite",
								"stake(uint256)": "infinite",
								"stakeDuration()": "infinite",
								"stakedList(uint256)": "5013",
								"stakingStatus()": "2600",
								"teamWallet()": "infinite",
								"terminateAll()": "infinite",
								"terminateSingle(address)": "infinite",
								"totalStaked()": "2471",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"userStakes(address)": "2847"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "1A0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 920,
									"end": 925,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 925,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 892,
									"end": 925,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 925,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 892,
									"end": 925,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 892,
									"end": 925,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 892,
									"end": 925,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 994,
									"end": 1008,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 964,
									"end": 1008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 964,
									"end": 1008,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 1636,
									"end": 2493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 340,
									"end": 350,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1974,
									"end": 1975,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1950,
									"end": 1962,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1950,
									"end": 1976,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1942,
									"end": 2000,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1942,
									"end": 2000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2043,
									"end": 2044,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2019,
									"end": 2045,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2019,
									"end": 2045,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2019,
									"end": 2031,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2019,
									"end": 2045,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2019,
									"end": 2045,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2019,
									"end": 2045,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2011,
									"end": 2070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2011,
									"end": 2070,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2112,
									"end": 2113,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2089,
									"end": 2114,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2089,
									"end": 2114,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2089,
									"end": 2100,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2089,
									"end": 2114,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2089,
									"end": 2114,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2089,
									"end": 2114,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 2081,
									"end": 2138,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2081,
									"end": 2138,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2172,
									"end": 2184,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2185,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2151,
									"end": 2185,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2185,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2151,
									"end": 2185,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2185,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2151,
									"end": 2185,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2185,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2185,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2185,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2151,
									"end": 2185,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2217,
									"end": 2229,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2196,
									"end": 2230,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2196,
									"end": 2230,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2196,
									"end": 2230,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 2196,
									"end": 2230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2196,
									"end": 2230,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2196,
									"end": 2230,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2196,
									"end": 2230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2196,
									"end": 2230,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2196,
									"end": 2230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2196,
									"end": 2230,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2254,
									"end": 2265,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2241,
									"end": 2265,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2241,
									"end": 2265,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2241,
									"end": 2265,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 2241,
									"end": 2265,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2241,
									"end": 2265,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2241,
									"end": 2265,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2241,
									"end": 2265,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2241,
									"end": 2265,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2241,
									"end": 2265,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2241,
									"end": 2265,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2292,
									"end": 2304,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2304,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 2278,
									"end": 2304,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2304,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2304,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2304,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2304,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2345,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2345,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2315,
									"end": 2345,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2345,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2345,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2345,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2315,
									"end": 2345,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2367,
									"end": 2376,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2356,
									"end": 2376,
									"name": "PUSH",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 2356,
									"end": 2376,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2356,
									"end": 2376,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2356,
									"end": 2376,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2356,
									"end": 2376,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2356,
									"end": 2376,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2398,
									"end": 2407,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2387,
									"end": 2407,
									"name": "PUSH",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 2387,
									"end": 2407,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2387,
									"end": 2407,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2387,
									"end": 2407,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2387,
									"end": 2407,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2387,
									"end": 2407,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2434,
									"end": 2448,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2448,
									"name": "PUSH",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 2418,
									"end": 2448,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2448,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2448,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2448,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2418,
									"end": 2448,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2473,
									"end": 2485,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2485,
									"name": "PUSH",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 2459,
									"end": 2485,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2485,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2485,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2485,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2459,
									"end": 2485,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1636,
									"end": 2493,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 187,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 7,
									"end": 187,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 55,
									"end": 132,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 52,
									"end": 53,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 45,
									"end": 133,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 152,
									"end": 156,
									"name": "PUSH",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 149,
									"end": 150,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 142,
									"end": 157,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 176,
									"end": 180,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 173,
									"end": 174,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 166,
									"end": 181,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 274,
									"end": 391,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 274,
									"end": 391,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 383,
									"end": 384,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 380,
									"end": 381,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 373,
									"end": 385,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 520,
									"end": 646,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 520,
									"end": 646,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 557,
									"end": 564,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 639,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 590,
									"end": 595,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 586,
									"end": 640,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 575,
									"end": 640,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 575,
									"end": 640,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 520,
									"end": 646,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 520,
									"end": 646,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 520,
									"end": 646,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 520,
									"end": 646,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 652,
									"end": 748,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 652,
									"end": 748,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 689,
									"end": 696,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 718,
									"end": 742,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 736,
									"end": 741,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 718,
									"end": 742,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 718,
									"end": 742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 718,
									"end": 742,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 718,
									"end": 742,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 707,
									"end": 742,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 707,
									"end": 742,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 652,
									"end": 748,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 652,
									"end": 748,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 652,
									"end": 748,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 652,
									"end": 748,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 754,
									"end": 876,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 754,
									"end": 876,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 827,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 845,
									"end": 850,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 827,
									"end": 851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 827,
									"end": 851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 827,
									"end": 851,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 827,
									"end": 851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 817,
									"end": 852,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 807,
									"end": 870,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 807,
									"end": 870,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 866,
									"end": 867,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 863,
									"end": 864,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 856,
									"end": 868,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 807,
									"end": 870,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 807,
									"end": 870,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 754,
									"end": 876,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 754,
									"end": 876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 882,
									"end": 1025,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 882,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 939,
									"end": 944,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 970,
									"end": 976,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 964,
									"end": 977,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 955,
									"end": 977,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 955,
									"end": 977,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 986,
									"end": 1019,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1013,
									"end": 1018,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 986,
									"end": 1019,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 986,
									"end": 1019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 986,
									"end": 1019,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 986,
									"end": 1019,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 882,
									"end": 1025,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 882,
									"end": 1025,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 882,
									"end": 1025,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 882,
									"end": 1025,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 882,
									"end": 1025,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1031,
									"end": 1108,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1031,
									"end": 1108,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1068,
									"end": 1075,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 1102,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1102,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1086,
									"end": 1102,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1031,
									"end": 1108,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1031,
									"end": 1108,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1031,
									"end": 1108,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1031,
									"end": 1108,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1114,
									"end": 1236,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1114,
									"end": 1236,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1187,
									"end": 1211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1205,
									"end": 1210,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1187,
									"end": 1211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 1187,
									"end": 1211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1187,
									"end": 1211,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 1187,
									"end": 1211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1180,
									"end": 1185,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1177,
									"end": 1212,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1230,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 1167,
									"end": 1230,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1226,
									"end": 1227,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1223,
									"end": 1224,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1216,
									"end": 1228,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1167,
									"end": 1230,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 1167,
									"end": 1230,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1114,
									"end": 1236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1114,
									"end": 1236,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1242,
									"end": 1385,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 1242,
									"end": 1385,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1299,
									"end": 1304,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 1336,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1324,
									"end": 1337,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1315,
									"end": 1337,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1315,
									"end": 1337,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1373,
									"end": 1378,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 1346,
									"end": 1379,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 1346,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1242,
									"end": 1385,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1242,
									"end": 1385,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1242,
									"end": 1385,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1242,
									"end": 1385,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1242,
									"end": 1385,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1533,
									"end": 1539,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1541,
									"end": 1547,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1549,
									"end": 1555,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1557,
									"end": 1563,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1565,
									"end": 1571,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1573,
									"end": 1579,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1581,
									"end": 1587,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1589,
									"end": 1595,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1597,
									"end": 1603,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1646,
									"end": 1649,
									"name": "PUSH",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 1634,
									"end": 1643,
									"name": "DUP11",
									"source": 10
								},
								{
									"begin": 1625,
									"end": 1632,
									"name": "DUP13",
									"source": 10
								},
								{
									"begin": 1621,
									"end": 1644,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1617,
									"end": 1650,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1614,
									"end": 1734,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1614,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1614,
									"end": 1734,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1653,
									"end": 1732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1653,
									"end": 1732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 1653,
									"end": 1732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1653,
									"end": 1732,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 1653,
									"end": 1732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1614,
									"end": 1734,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 1614,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1773,
									"end": 1774,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1798,
									"end": 1862,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1854,
									"end": 1861,
									"name": "DUP13",
									"source": 10
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1834,
									"end": 1843,
									"name": "DUP14",
									"source": 10
								},
								{
									"begin": 1830,
									"end": 1852,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1798,
									"end": 1862,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1798,
									"end": 1862,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1798,
									"end": 1862,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 1798,
									"end": 1862,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1788,
									"end": 1862,
									"name": "SWAP10",
									"source": 10
								},
								{
									"begin": 1788,
									"end": 1862,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1744,
									"end": 1872,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1911,
									"end": 1913,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1937,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1993,
									"end": 2000,
									"name": "DUP13",
									"source": 10
								},
								{
									"begin": 1984,
									"end": 1990,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1973,
									"end": 1982,
									"name": "DUP14",
									"source": 10
								},
								{
									"begin": 1969,
									"end": 1991,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1937,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 1937,
									"end": 2001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1937,
									"end": 2001,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1937,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1927,
									"end": 2001,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 1927,
									"end": 2001,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1882,
									"end": 2011,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2050,
									"end": 2052,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2076,
									"end": 2140,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2132,
									"end": 2139,
									"name": "DUP13",
									"source": 10
								},
								{
									"begin": 2123,
									"end": 2129,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2112,
									"end": 2121,
									"name": "DUP14",
									"source": 10
								},
								{
									"begin": 2108,
									"end": 2130,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2076,
									"end": 2140,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 2076,
									"end": 2140,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2076,
									"end": 2140,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2076,
									"end": 2140,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2066,
									"end": 2140,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 2066,
									"end": 2140,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2021,
									"end": 2150,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2189,
									"end": 2191,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2215,
									"end": 2279,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2271,
									"end": 2278,
									"name": "DUP13",
									"source": 10
								},
								{
									"begin": 2262,
									"end": 2268,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2251,
									"end": 2260,
									"name": "DUP14",
									"source": 10
								},
								{
									"begin": 2247,
									"end": 2269,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2215,
									"end": 2279,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2215,
									"end": 2279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2215,
									"end": 2279,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 2215,
									"end": 2279,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2205,
									"end": 2279,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 2205,
									"end": 2279,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2160,
									"end": 2289,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2328,
									"end": 2331,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2355,
									"end": 2419,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2411,
									"end": 2418,
									"name": "DUP13",
									"source": 10
								},
								{
									"begin": 2402,
									"end": 2408,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2391,
									"end": 2400,
									"name": "DUP14",
									"source": 10
								},
								{
									"begin": 2387,
									"end": 2409,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2355,
									"end": 2419,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2355,
									"end": 2419,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2355,
									"end": 2419,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 2355,
									"end": 2419,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2345,
									"end": 2419,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 2345,
									"end": 2419,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2299,
									"end": 2429,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2471,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 2495,
									"end": 2559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2551,
									"end": 2558,
									"name": "DUP13",
									"source": 10
								},
								{
									"begin": 2542,
									"end": 2548,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2531,
									"end": 2540,
									"name": "DUP14",
									"source": 10
								},
								{
									"begin": 2527,
									"end": 2549,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2495,
									"end": 2559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2559,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 2495,
									"end": 2559,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2485,
									"end": 2559,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 2485,
									"end": 2559,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2439,
									"end": 2569,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2608,
									"end": 2611,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 2635,
									"end": 2699,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 2691,
									"end": 2698,
									"name": "DUP13",
									"source": 10
								},
								{
									"begin": 2682,
									"end": 2688,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2671,
									"end": 2680,
									"name": "DUP14",
									"source": 10
								},
								{
									"begin": 2667,
									"end": 2689,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2635,
									"end": 2699,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2635,
									"end": 2699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2635,
									"end": 2699,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 2635,
									"end": 2699,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2625,
									"end": 2699,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2625,
									"end": 2699,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2709,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2748,
									"end": 2751,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 2775,
									"end": 2839,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2831,
									"end": 2838,
									"name": "DUP13",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2828,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2811,
									"end": 2820,
									"name": "DUP14",
									"source": 10
								},
								{
									"begin": 2807,
									"end": 2829,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2775,
									"end": 2839,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2775,
									"end": 2839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2775,
									"end": 2839,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 2775,
									"end": 2839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2765,
									"end": 2839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2765,
									"end": 2839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2719,
									"end": 2849,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2888,
									"end": 2891,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2915,
									"end": 2979,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2971,
									"end": 2978,
									"name": "DUP13",
									"source": 10
								},
								{
									"begin": 2962,
									"end": 2968,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2951,
									"end": 2960,
									"name": "DUP14",
									"source": 10
								},
								{
									"begin": 2947,
									"end": 2969,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2915,
									"end": 2979,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 2915,
									"end": 2979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2915,
									"end": 2979,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 2915,
									"end": 2979,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2905,
									"end": 2979,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2905,
									"end": 2979,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2859,
									"end": 2989,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"name": "SWAP9",
									"source": 10
								},
								{
									"begin": 1391,
									"end": 2996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3120,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 3002,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3107,
									"end": 3112,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 3089,
									"end": 3113,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3113,
									"name": "tag",
									"source": 10,
									"value": "79"
								},
								{
									"begin": 3089,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3084,
									"end": 3087,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3077,
									"end": 3114,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3120,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3120,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3126,
									"end": 3348,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 3126,
									"end": 3348,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3219,
									"end": 3223,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3257,
									"end": 3259,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3246,
									"end": 3255,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3242,
									"end": 3260,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3234,
									"end": 3260,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3234,
									"end": 3260,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3270,
									"end": 3341,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3338,
									"end": 3339,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3327,
									"end": 3336,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3323,
									"end": 3340,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3314,
									"end": 3320,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3270,
									"end": 3341,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 3270,
									"end": 3341,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3270,
									"end": 3341,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3270,
									"end": 3341,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3126,
									"end": 3348,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3126,
									"end": 3348,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3126,
									"end": 3348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3126,
									"end": 3348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3126,
									"end": 3348,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3523,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3354,
									"end": 3523,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3438,
									"end": 3449,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3472,
									"end": 3478,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3467,
									"end": 3470,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3460,
									"end": 3479,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3512,
									"end": 3516,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3507,
									"end": 3510,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3503,
									"end": 3517,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3488,
									"end": 3517,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3488,
									"end": 3517,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3523,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3523,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3523,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3523,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3529,
									"end": 3698,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 3529,
									"end": 3698,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3669,
									"end": 3690,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C6964207374616B6520746F6B656E00000000000000000000000000"
								},
								{
									"begin": 3665,
									"end": 3666,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3657,
									"end": 3663,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3653,
									"end": 3667,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3646,
									"end": 3691,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3529,
									"end": 3698,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3529,
									"end": 3698,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3704,
									"end": 4070,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 3704,
									"end": 4070,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 3849,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3867,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 3931,
									"end": 3933,
									"name": "PUSH",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 3926,
									"end": 3929,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3867,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 3867,
									"end": 3934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3867,
									"end": 3934,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 3867,
									"end": 3934,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3860,
									"end": 3934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3943,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 4032,
									"end": 4035,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3943,
									"end": 4036,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 3943,
									"end": 4036,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3943,
									"end": 4036,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3943,
									"end": 4036,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4061,
									"end": 4063,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4056,
									"end": 4059,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4052,
									"end": 4064,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4045,
									"end": 4064,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4045,
									"end": 4064,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3704,
									"end": 4070,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3704,
									"end": 4070,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3704,
									"end": 4070,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3704,
									"end": 4070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4076,
									"end": 4495,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4076,
									"end": 4495,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4242,
									"end": 4246,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4280,
									"end": 4282,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4269,
									"end": 4278,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4265,
									"end": 4283,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4283,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4283,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4329,
									"end": 4338,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4323,
									"end": 4327,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4319,
									"end": 4339,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4315,
									"end": 4316,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4304,
									"end": 4313,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4300,
									"end": 4317,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4293,
									"end": 4340,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4357,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4357,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 4357,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4357,
									"end": 4488,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 4357,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4349,
									"end": 4488,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4349,
									"end": 4488,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4076,
									"end": 4495,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4076,
									"end": 4495,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4076,
									"end": 4495,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4076,
									"end": 4495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4501,
									"end": 4671,
									"name": "tag",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 4501,
									"end": 4671,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4641,
									"end": 4663,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C69642072657761726420746F6B656E000000000000000000000000"
								},
								{
									"begin": 4637,
									"end": 4638,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4629,
									"end": 4635,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4625,
									"end": 4639,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4618,
									"end": 4664,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4501,
									"end": 4671,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4501,
									"end": 4671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4677,
									"end": 5043,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 4677,
									"end": 5043,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4819,
									"end": 4822,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4840,
									"end": 4907,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4904,
									"end": 4906,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 4899,
									"end": 4902,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4840,
									"end": 4907,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4840,
									"end": 4907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4840,
									"end": 4907,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4840,
									"end": 4907,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4833,
									"end": 4907,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4833,
									"end": 4907,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4916,
									"end": 5009,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 5005,
									"end": 5008,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4916,
									"end": 5009,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "43"
								},
								{
									"begin": 4916,
									"end": 5009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4916,
									"end": 5009,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 4916,
									"end": 5009,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5034,
									"end": 5036,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5029,
									"end": 5032,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5025,
									"end": 5037,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5018,
									"end": 5037,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5018,
									"end": 5037,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4677,
									"end": 5043,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4677,
									"end": 5043,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4677,
									"end": 5043,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4677,
									"end": 5043,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5049,
									"end": 5468,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 5049,
									"end": 5468,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5215,
									"end": 5219,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5253,
									"end": 5255,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5242,
									"end": 5251,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5238,
									"end": 5256,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5230,
									"end": 5256,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5230,
									"end": 5256,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5302,
									"end": 5311,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5296,
									"end": 5300,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5292,
									"end": 5312,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5288,
									"end": 5289,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5277,
									"end": 5286,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5273,
									"end": 5290,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5266,
									"end": 5313,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5330,
									"end": 5461,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 5456,
									"end": 5460,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5330,
									"end": 5461,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 5330,
									"end": 5461,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5330,
									"end": 5461,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 5330,
									"end": 5461,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5322,
									"end": 5461,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5322,
									"end": 5461,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5049,
									"end": 5468,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5049,
									"end": 5468,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5049,
									"end": 5468,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5049,
									"end": 5468,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5474,
									"end": 5643,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 5474,
									"end": 5643,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5614,
									"end": 5635,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C6964207465616D2077616C6C657400000000000000000000000000"
								},
								{
									"begin": 5610,
									"end": 5611,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5602,
									"end": 5608,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5598,
									"end": 5612,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5591,
									"end": 5636,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5474,
									"end": 5643,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5474,
									"end": 5643,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5649,
									"end": 6015,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 5649,
									"end": 6015,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5791,
									"end": 5794,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5812,
									"end": 5879,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 5876,
									"end": 5878,
									"name": "PUSH",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 5871,
									"end": 5874,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5812,
									"end": 5879,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5812,
									"end": 5879,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5812,
									"end": 5879,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 5812,
									"end": 5879,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5805,
									"end": 5879,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5805,
									"end": 5879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5888,
									"end": 5981,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 5977,
									"end": 5980,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5888,
									"end": 5981,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 5888,
									"end": 5981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5888,
									"end": 5981,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 5888,
									"end": 5981,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6008,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6001,
									"end": 6004,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5997,
									"end": 6009,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5990,
									"end": 6009,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5990,
									"end": 6009,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5649,
									"end": 6015,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5649,
									"end": 6015,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5649,
									"end": 6015,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5649,
									"end": 6015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6021,
									"end": 6440,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 6021,
									"end": 6440,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6187,
									"end": 6191,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6225,
									"end": 6227,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6214,
									"end": 6223,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6210,
									"end": 6228,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6202,
									"end": 6228,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6202,
									"end": 6228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6274,
									"end": 6283,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6268,
									"end": 6272,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6264,
									"end": 6284,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 6260,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6249,
									"end": 6258,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6245,
									"end": 6262,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6238,
									"end": 6285,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6302,
									"end": 6433,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 6428,
									"end": 6432,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6302,
									"end": 6433,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 6302,
									"end": 6433,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6302,
									"end": 6433,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 6302,
									"end": 6433,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6294,
									"end": 6433,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6294,
									"end": 6433,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6021,
									"end": 6440,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6021,
									"end": 6440,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6021,
									"end": 6440,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6021,
									"end": 6440,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "180"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "927"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "925"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "923"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "921"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "919"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "917"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "915"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "913"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "910"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 6089,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205e89409125f5c943b6837e2fcb642abfb4fb5e2958f7363817e02a4d74f42eb264736f6c634300081e0033",
									".code": [
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "817B1CD2"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "CAB9B8FB"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "F7C618C1"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "F959680B"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "FE1D3795"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "CAB9B8FB"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "D719FA97"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "E9B98746"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "EA1B28E0"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "8DA7AD23"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "8DA7AD23"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "A30A2474"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "A694FC3A"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "B973E1BF"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "817B1CD2"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "8456CB59"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "455AB53C"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "64904071"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "64904071"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "6F4A2CD0"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "790CA413"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "455AB53C"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "4F984C5C"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "59927044"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "292A6B19"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "292A6B19"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "375B3C0A"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "3F4BA83A"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "40F02AB6"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "1339C21"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "2AC512F"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "10D63D03"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 6089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2771,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2527,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2527,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2771,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 2527,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2771,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1102,
											"end": 1129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1102,
											"end": 1129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1102,
											"end": 1129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 5348,
											"end": 5639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5348,
											"end": 5639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 494,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 494,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 708,
											"end": 741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 708,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 708,
											"end": 741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 708,
											"end": 741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 708,
											"end": 741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 708,
											"end": 741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 708,
											"end": 741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2958,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2871,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2871,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2871,
											"end": 2958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2958,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 2871,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2958,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 663,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 663,
											"end": 701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 964,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 964,
											"end": 1008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 5340,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4895,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4895,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4895,
											"end": 5340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 5340,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 4895,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 5340,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 578,
											"end": 613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 578,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 578,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 578,
											"end": 613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 613,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 578,
											"end": 613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 578,
											"end": 613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 578,
											"end": 613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 578,
											"end": 613,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 788,
											"end": 826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 788,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 788,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 788,
											"end": 826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 826,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 788,
											"end": 826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 788,
											"end": 826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 788,
											"end": 826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 826,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3995,
											"end": 4859,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 3995,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3995,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3995,
											"end": 4859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3995,
											"end": 4859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3995,
											"end": 4859,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3995,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3995,
											"end": 4859,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 932,
											"end": 957,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 932,
											"end": 957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 932,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 932,
											"end": 957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 932,
											"end": 957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 957,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 932,
											"end": 957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 932,
											"end": 957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 932,
											"end": 957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 932,
											"end": 957,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1015,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1015,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2863,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2779,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2779,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2779,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2863,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2779,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2863,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1050,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1050,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1050,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 892,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 892,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3230,
											"end": 3951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3230,
											"end": 3951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 5888,
											"end": 6086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 5888,
											"end": 6086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5888,
											"end": 6086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 5782,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 5782,
											"end": 5880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5671,
											"end": 5774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 5671,
											"end": 5774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 620,
											"end": 656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 620,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 620,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 620,
											"end": 656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 656,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 620,
											"end": 656,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 620,
											"end": 656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 620,
											"end": 656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 656,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 748,
											"end": 781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 748,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 748,
											"end": 781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 748,
											"end": 781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 781,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 748,
											"end": 781,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 748,
											"end": 781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 748,
											"end": 781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 781,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 571,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 536,
											"end": 571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 536,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 536,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 536,
											"end": 571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 571,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 536,
											"end": 571,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 536,
											"end": 571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 536,
											"end": 571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 536,
											"end": 571,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 833,
											"end": 869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 833,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 833,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 833,
											"end": 869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 869,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 833,
											"end": 869,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 833,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 833,
											"end": 869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 833,
											"end": 869,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 3200,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2966,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2966,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2966,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 3200,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 2966,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 3200,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2771,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2527,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2584,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2584,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2597,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2597,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2597,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2584,
											"end": 2597,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2597,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2597,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2597,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2584,
											"end": 2597,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2583,
											"end": 2597,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2575,
											"end": 2618,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 2575,
											"end": 2618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2645,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2629,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2629,
											"end": 2642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2649,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2688,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2660,
											"end": 2688,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2688,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2688,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2688,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2715,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2699,
											"end": 2712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2699,
											"end": 2712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2699,
											"end": 2729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A72E5E150EBE7B67363131CF1D5E72A8053ADC58EB1879467EBD529AE3D4ECCA"
										},
										{
											"begin": 2752,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2752,
											"end": 2762,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2745,
											"end": 2763,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2745,
											"end": 2763,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1102,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 5441,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5454,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5455,
											"end": 5459,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5460,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5460,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5460,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5485,
											"end": 5486,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5482,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5479,
											"end": 5486,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 5471,
											"end": 5511,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 5471,
											"end": 5511,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5557,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 5547,
											"end": 5551,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5553,
											"end": 5556,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5533,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "910"
										},
										{
											"begin": 5522,
											"end": 5546,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5522,
											"end": 5546,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5546,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 5522,
											"end": 5546,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5557,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5557,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5557,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5557,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5522,
											"end": 5557,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5557,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5522,
											"end": 5557,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 5522,
											"end": 5557,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5587,
											"end": 5588,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5578,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5579,
											"end": 5583,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5584,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5588,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5588,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5588,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5568,
											"end": 5588,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5621,
											"end": 5625,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "BF8F812D3D85DF21758E37A857352FB02610F4278C682198AF5C5C00BBB3D500"
										},
										{
											"begin": 5627,
											"end": 5630,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5604,
											"end": 5631,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5604,
											"end": 5631,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5639,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5348,
											"end": 5639,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5348,
											"end": 5639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "910"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 708,
											"end": 741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "921"
										},
										{
											"begin": 708,
											"end": 741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 708,
											"end": 741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2958,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2871,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2936,
											"end": 2950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2920,
											"end": 2933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2920,
											"end": 2933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2920,
											"end": 2950,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2920,
											"end": 2950,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "919"
										},
										{
											"begin": 663,
											"end": 701,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 663,
											"end": 701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 5340,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 4895,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 4976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 4980,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4980,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4967,
											"end": 4980,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 5291,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 4962,
											"end": 5291,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4986,
											"end": 4996,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4986,
											"end": 5003,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4986,
											"end": 5003,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4986,
											"end": 5003,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4986,
											"end": 5003,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4982,
											"end": 4983,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4982,
											"end": 5003,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 5291,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 5291,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 4962,
											"end": 5291,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5025,
											"end": 5037,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5040,
											"end": 5050,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5051,
											"end": 5052,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 5040,
											"end": 5053,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5040,
											"end": 5053,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5025,
											"end": 5053,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5025,
											"end": 5053,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5068,
											"end": 5079,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5092,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5093,
											"end": 5097,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5098,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5068,
											"end": 5098,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5068,
											"end": 5098,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5123,
											"end": 5124,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5120,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5117,
											"end": 5124,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5280,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5280,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 5113,
											"end": 5280,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5180,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 5170,
											"end": 5174,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5176,
											"end": 5179,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5156,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "910"
										},
										{
											"begin": 5145,
											"end": 5169,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5145,
											"end": 5169,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5169,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 5145,
											"end": 5169,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5180,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5180,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5180,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5180,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5145,
											"end": 5180,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5180,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5145,
											"end": 5180,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 5145,
											"end": 5180,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5218,
											"end": 5219,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5209,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5214,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5215,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5219,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5219,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5219,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5219,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5254,
											"end": 5258,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "B2372F309A2C0B54C10CE95469012D95C4D8CC7C8A154BFC22DB66D993ABBC71"
										},
										{
											"begin": 5260,
											"end": 5263,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5243,
											"end": 5264,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5243,
											"end": 5264,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 5113,
											"end": 5280,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 5113,
											"end": 5280,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5010,
											"end": 5291,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5010,
											"end": 5291,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5008,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5008,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5008,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5005,
											"end": 5008,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5008,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5008,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5005,
											"end": 5008,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 5291,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 4962,
											"end": 5291,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 5291,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 4962,
											"end": 5291,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4962,
											"end": 5291,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5317,
											"end": 5332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5301,
											"end": 5314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5301,
											"end": 5314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5301,
											"end": 5332,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5301,
											"end": 5332,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4895,
											"end": 5340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 578,
											"end": 613,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "915"
										},
										{
											"begin": 578,
											"end": 613,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 578,
											"end": 613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 788,
											"end": 826,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "925"
										},
										{
											"begin": 788,
											"end": 826,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 788,
											"end": 826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3995,
											"end": 4859,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3995,
											"end": 4859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4092,
											"end": 4107,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4075,
											"end": 4107,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4075,
											"end": 4107,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4088,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4075,
											"end": 4088,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4088,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4088,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4088,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4088,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4075,
											"end": 4088,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4088,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4088,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4088,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4075,
											"end": 4088,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 4075,
											"end": 4107,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4107,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 4067,
											"end": 4132,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4067,
											"end": 4132,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4150,
											"end": 4159,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4162,
											"end": 4163,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4163,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4150,
											"end": 4163,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4145,
											"end": 4625,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 4145,
											"end": 4625,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4179,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4169,
											"end": 4186,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4186,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4186,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4186,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4166,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4165,
											"end": 4186,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4145,
											"end": 4625,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4145,
											"end": 4625,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 4145,
											"end": 4625,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4234,
											"end": 4235,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 4223,
											"end": 4236,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4223,
											"end": 4236,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4236,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4208,
											"end": 4236,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4251,
											"end": 4268,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4281,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4286,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4287,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4251,
											"end": 4287,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4251,
											"end": 4287,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4319,
											"end": 4320,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4315,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4320,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4302,
											"end": 4330,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 4302,
											"end": 4330,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4330,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4330,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4322,
											"end": 4330,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 4322,
											"end": 4330,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4302,
											"end": 4330,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 4302,
											"end": 4330,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4361,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4392,
											"end": 4403,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4392,
											"end": 4403,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4388,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "927"
										},
										{
											"begin": 4365,
											"end": 4374,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4388,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 4365,
											"end": 4388,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4388,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4388,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 4365,
											"end": 4388,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4365,
											"end": 4388,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 4365,
											"end": 4388,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4403,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 4364,
											"end": 4403,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4403,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4403,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 4364,
											"end": 4403,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4364,
											"end": 4403,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 4364,
											"end": 4403,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4347,
											"end": 4403,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4461,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4445,
											"end": 4449,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4451,
											"end": 4460,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4431,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "910"
										},
										{
											"begin": 4420,
											"end": 4444,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4420,
											"end": 4444,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4444,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4420,
											"end": 4444,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4461,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4461,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4461,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4461,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4420,
											"end": 4461,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4461,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4461,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4420,
											"end": 4461,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4514,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4501,
											"end": 4505,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4507,
											"end": 4513,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4487,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "913"
										},
										{
											"begin": 4476,
											"end": 4500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4476,
											"end": 4500,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4500,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4476,
											"end": 4500,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4514,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4514,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4514,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4514,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4476,
											"end": 4514,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4514,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4514,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4476,
											"end": 4514,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4548,
											"end": 4549,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4539,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4544,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4545,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4549,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4549,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4549,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4529,
											"end": 4549,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4589,
											"end": 4593,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "53118BFF2FB56701752F5BF54053D24FB83CEC92F9F6CE664B90C38A2991CAA4"
										},
										{
											"begin": 4595,
											"end": 4604,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4606,
											"end": 4612,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 4571,
											"end": 4613,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4571,
											"end": 4613,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4625,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4625,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4193,
											"end": 4625,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4145,
											"end": 4625,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 4145,
											"end": 4625,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4188,
											"end": 4191,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4188,
											"end": 4191,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4188,
											"end": 4191,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4188,
											"end": 4191,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4188,
											"end": 4191,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4188,
											"end": 4191,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4188,
											"end": 4191,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4145,
											"end": 4625,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 4145,
											"end": 4625,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4145,
											"end": 4625,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 4145,
											"end": 4625,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4145,
											"end": 4625,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4695,
											"end": 4711,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4714,
											"end": 4725,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "913"
										},
										{
											"begin": 4714,
											"end": 4735,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4714,
											"end": 4735,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4735,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 4744,
											"end": 4748,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 4714,
											"end": 4750,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 4714,
											"end": 4750,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 4714,
											"end": 4750,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4695,
											"end": 4750,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4695,
											"end": 4750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4776,
											"end": 4777,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4765,
											"end": 4773,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4765,
											"end": 4777,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4761,
											"end": 4852,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4761,
											"end": 4852,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 4761,
											"end": 4852,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4840,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 4819,
											"end": 4829,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "915"
										},
										{
											"begin": 4831,
											"end": 4839,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4805,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "913"
										},
										{
											"begin": 4794,
											"end": 4818,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4794,
											"end": 4818,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4818,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 4794,
											"end": 4818,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4840,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4840,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4840,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4794,
											"end": 4840,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4840,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4840,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 4794,
											"end": 4840,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4761,
											"end": 4852,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 4761,
											"end": 4852,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4056,
											"end": 4859,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 932,
											"end": 957,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 932,
											"end": 957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 932,
											"end": 957,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 932,
											"end": 957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2863,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2779,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2842,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2826,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2826,
											"end": 2839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2826,
											"end": 2855,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2826,
											"end": 2855,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2779,
											"end": 2863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 892,
											"end": 925,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 892,
											"end": 925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1554,
											"end": 1585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1554,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 1567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1567,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1554,
											"end": 1567,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1567,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1567,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1554,
											"end": 1567,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 1554,
											"end": 1585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1554,
											"end": 1585,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 1546,
											"end": 1608,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1546,
											"end": 1608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3314,
											"end": 3327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3314,
											"end": 3327,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3327,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3327,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3314,
											"end": 3327,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3327,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3327,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3314,
											"end": 3327,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3314,
											"end": 3327,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 3306,
											"end": 3348,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3306,
											"end": 3348,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3399,
											"end": 3410,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "917"
										},
										{
											"begin": 3386,
											"end": 3396,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3386,
											"end": 3396,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3410,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3386,
											"end": 3410,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3410,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3410,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3386,
											"end": 3410,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3386,
											"end": 3410,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3386,
											"end": 3410,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3382,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3410,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3410,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3359,
											"end": 3430,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3359,
											"end": 3430,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3459,
											"end": 3467,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "921"
										},
										{
											"begin": 3449,
											"end": 3455,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3449,
											"end": 3467,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3449,
											"end": 3467,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 3441,
											"end": 3487,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3441,
											"end": 3487,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3541,
											"end": 3549,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "923"
										},
										{
											"begin": 3531,
											"end": 3537,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3527,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3528,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3537,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3506,
											"end": 3537,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3537,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3537,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3506,
											"end": 3537,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3537,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3506,
											"end": 3537,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3549,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3506,
											"end": 3549,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3498,
											"end": 3571,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 3498,
											"end": 3571,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3627,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "925"
										},
										{
											"begin": 3604,
											"end": 3610,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3590,
											"end": 3601,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3590,
											"end": 3601,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3590,
											"end": 3610,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3590,
											"end": 3610,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3590,
											"end": 3610,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3590,
											"end": 3610,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3590,
											"end": 3610,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3590,
											"end": 3610,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3590,
											"end": 3610,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3590,
											"end": 3627,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3590,
											"end": 3627,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 3582,
											"end": 3650,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 3582,
											"end": 3650,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3693,
											"end": 3694,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3677,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3678,
											"end": 3688,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3689,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3694,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3663,
											"end": 3750,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3663,
											"end": 3750,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3721,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3727,
											"end": 3737,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3711,
											"end": 3738,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3663,
											"end": 3750,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3663,
											"end": 3750,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3825,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3791,
											"end": 3801,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3811,
											"end": 3815,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3818,
											"end": 3824,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3773,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "910"
										},
										{
											"begin": 3762,
											"end": 3790,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3790,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3790,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 3762,
											"end": 3790,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3825,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3825,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3825,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3825,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3825,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3762,
											"end": 3825,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3825,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3762,
											"end": 3825,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3762,
											"end": 3825,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3862,
											"end": 3868,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3846,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3857,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3858,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3836,
											"end": 3868,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3836,
											"end": 3868,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 3900,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3890,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3879,
											"end": 3890,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3879,
											"end": 3900,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3879,
											"end": 3900,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3924,
											"end": 3934,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "EBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A"
										},
										{
											"begin": 3936,
											"end": 3942,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3918,
											"end": 3943,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3943,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3951,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3230,
											"end": 3951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5950,
											"end": 5964,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5996,
											"end": 5997,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 5992,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5981,
											"end": 5992,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 5997,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6012,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 5981,
											"end": 6012,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6012,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6011,
											"end": 6012,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6007,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6001,
											"end": 6012,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6012,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 5981,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 6022,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 5977,
											"end": 6022,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6022,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6014,
											"end": 6022,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6014,
											"end": 6022,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6014,
											"end": 6022,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 6014,
											"end": 6022,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5977,
											"end": 6022,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 5977,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6067,
											"end": 6078,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6067,
											"end": 6078,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6052,
											"end": 6063,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "927"
										},
										{
											"begin": 6043,
											"end": 6049,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 6043,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 6043,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6042,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6042,
											"end": 6078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6042,
											"end": 6078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6042,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 6042,
											"end": 6078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6042,
											"end": 6078,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 6042,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6033,
											"end": 6078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6033,
											"end": 6078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5833,
											"end": 5839,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5872,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5859,
											"end": 5872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5859,
											"end": 5872,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5859,
											"end": 5872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5859,
											"end": 5872,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5859,
											"end": 5872,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5859,
											"end": 5872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5859,
											"end": 5872,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5859,
											"end": 5872,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5859,
											"end": 5872,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 5872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5782,
											"end": 5880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5720,
											"end": 5736,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5756,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5749,
											"end": 5766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 620,
											"end": 656,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "917"
										},
										{
											"begin": 620,
											"end": 656,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 620,
											"end": 656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 748,
											"end": 781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "923"
										},
										{
											"begin": 748,
											"end": 781,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 748,
											"end": 781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 536,
											"end": 571,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 536,
											"end": 571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "913"
										},
										{
											"begin": 536,
											"end": 571,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 536,
											"end": 571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 833,
											"end": 869,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "927"
										},
										{
											"begin": 833,
											"end": 869,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 833,
											"end": 869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 3200,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 2966,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3076,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "919"
										},
										{
											"begin": 3062,
											"end": 3073,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "917"
										},
										{
											"begin": 3049,
											"end": 3059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3049,
											"end": 3059,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 3049,
											"end": 3073,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3049,
											"end": 3073,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 3049,
											"end": 3073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3049,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3089,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3049,
											"end": 3089,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3049,
											"end": 3089,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3049,
											"end": 3089,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3046,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3089,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3023,
											"end": 3109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3023,
											"end": 3109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3136,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3120,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3120,
											"end": 3133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 3120,
											"end": 3151,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3120,
											"end": 3151,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "AAAF03C480F43393F2414D5013B316F6CC36576BED29AE1EA15D8936DCC0D5E7"
										},
										{
											"begin": 3176,
											"end": 3191,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 3167,
											"end": 3192,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3192,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 3200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 10,
											"value": "381"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 10,
											"value": "387"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 10,
											"value": "397"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2395,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2368,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 2516,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2662,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 2812,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2983,
											"end": 2987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3118,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 3034,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 3219,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3470,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3400,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3664,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3484,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3609,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3529,
											"end": 3530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3522,
											"end": 3610,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3629,
											"end": 3633,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3619,
											"end": 3634,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3653,
											"end": 3657,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3650,
											"end": 3651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3658,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3753,
											"end": 3754,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3746,
											"end": 3751,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3743,
											"end": 3755,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3733,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 3733,
											"end": 3779,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3759,
											"end": 3777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 3759,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3733,
											"end": 3779,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 3733,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3670,
											"end": 3785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3922,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3791,
											"end": 3922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3845,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3872,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 3910,
											"end": 3915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 3873,
											"end": 3916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3873,
											"end": 3916,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 3873,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3922,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3922,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3928,
											"end": 4059,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3928,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 4047,
											"end": 4052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4019,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 4019,
											"end": 4053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4019,
											"end": 4053,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 4019,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3928,
											"end": 4059,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3928,
											"end": 4059,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3928,
											"end": 4059,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3928,
											"end": 4059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4212,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 4065,
											"end": 4212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 4199,
											"end": 4204,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 4160,
											"end": 4205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 4160,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 4158,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4148,
											"end": 4206,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4456,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 4218,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4319,
											"end": 4323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4346,
											"end": 4355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4342,
											"end": 4360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4370,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 4446,
											"end": 4447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4431,
											"end": 4448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4422,
											"end": 4428,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4370,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 4370,
											"end": 4449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4370,
											"end": 4449,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 4370,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4456,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4456,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4218,
											"end": 4456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4552,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 4462,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4496,
											"end": 4503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4539,
											"end": 4544,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4532,
											"end": 4545,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4525,
											"end": 4546,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4514,
											"end": 4546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4552,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4552,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4462,
											"end": 4552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4667,
											"name": "tag",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 4558,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 4654,
											"end": 4659,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 4639,
											"end": 4660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 4639,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4634,
											"end": 4637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4627,
											"end": 4661,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4667,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4667,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4558,
											"end": 4667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4883,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 4673,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4760,
											"end": 4764,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4798,
											"end": 4800,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4775,
											"end": 4801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4811,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 4873,
											"end": 4874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4871,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4858,
											"end": 4875,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4849,
											"end": 4855,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4811,
											"end": 4876,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "341"
										},
										{
											"begin": 4811,
											"end": 4876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4811,
											"end": 4876,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 4811,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4883,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4883,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4673,
											"end": 4883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 5003,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 4889,
											"end": 5003,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4956,
											"end": 4962,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 4995,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 4996,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4974,
											"end": 4996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 5003,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 5003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 5003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 5003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5193,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 5009,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5108,
											"end": 5119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5148,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5137,
											"end": 5140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5130,
											"end": 5149,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5177,
											"end": 5180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5173,
											"end": 5187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5193,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5193,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5193,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5009,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5331,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 5199,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5292,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5281,
											"end": 5292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5314,
											"end": 5317,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5310,
											"end": 5324,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5302,
											"end": 5324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5302,
											"end": 5324,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5331,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5331,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5331,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5199,
											"end": 5331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5337,
											"end": 5445,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 5337,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5414,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 5432,
											"end": 5437,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5414,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 5414,
											"end": 5438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5414,
											"end": 5438,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 5414,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5409,
											"end": 5412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5402,
											"end": 5439,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5337,
											"end": 5445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5337,
											"end": 5445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5337,
											"end": 5445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5451,
											"end": 5630,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 5451,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 5583,
											"end": 5586,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5575,
											"end": 5581,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5587,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 5541,
											"end": 5587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5541,
											"end": 5587,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 5541,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5619,
											"end": 5623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5614,
											"end": 5617,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5624,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5596,
											"end": 5624,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5596,
											"end": 5624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5451,
											"end": 5630,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5451,
											"end": 5630,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5451,
											"end": 5630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5451,
											"end": 5630,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5451,
											"end": 5630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5749,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 5636,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5706,
											"end": 5710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5738,
											"end": 5742,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5733,
											"end": 5736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5729,
											"end": 5743,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5721,
											"end": 5743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5721,
											"end": 5743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5749,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5749,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 6517,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 5785,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5904,
											"end": 5907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5933,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 5981,
											"end": 5986,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5933,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 5933,
											"end": 5987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5933,
											"end": 5987,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 5933,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 6082,
											"end": 6088,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6080,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 6003,
											"end": 6089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6089,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 6003,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6089,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 6163,
											"end": 6168,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 6113,
											"end": 6169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6113,
											"end": 6169,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 6113,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6192,
											"end": 6199,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6223,
											"end": 6224,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6492,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 6208,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6233,
											"end": 6239,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6230,
											"end": 6231,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6227,
											"end": 6240,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6492,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 6208,
											"end": 6492,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6309,
											"end": 6315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6303,
											"end": 6316,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6336,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 6395,
											"end": 6398,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 6380,
											"end": 6393,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6336,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 6336,
											"end": 6399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6336,
											"end": 6399,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 6336,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6329,
											"end": 6399,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 6329,
											"end": 6399,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6422,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 6475,
											"end": 6481,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6422,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 6422,
											"end": 6482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6422,
											"end": 6482,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 6422,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6412,
											"end": 6482,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6412,
											"end": 6482,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6268,
											"end": 6492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6256,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6252,
											"end": 6253,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6248,
											"end": 6257,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 6208,
											"end": 6492,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6492,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 6208,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6212,
											"end": 6226,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6511,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6501,
											"end": 6511,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6501,
											"end": 6511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5909,
											"end": 6517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5909,
											"end": 6517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5909,
											"end": 6517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 6517,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 6517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 6517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 6517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5785,
											"end": 6517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6896,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 6523,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 6670,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6704,
											"end": 6706,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6693,
											"end": 6702,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6689,
											"end": 6707,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6707,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6753,
											"end": 6762,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6747,
											"end": 6751,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6743,
											"end": 6763,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6739,
											"end": 6740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6737,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6724,
											"end": 6741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6717,
											"end": 6764,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6781,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 6884,
											"end": 6888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6875,
											"end": 6881,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6781,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 6781,
											"end": 6889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6781,
											"end": 6889,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 6781,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6773,
											"end": 6889,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6773,
											"end": 6889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6896,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6896,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6523,
											"end": 6896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 7071,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 6902,
											"end": 7071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 6997,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7026,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7015,
											"end": 7018,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7008,
											"end": 7027,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7060,
											"end": 7064,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7055,
											"end": 7058,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7051,
											"end": 7065,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7065,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7036,
											"end": 7065,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 7071,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 7071,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 7071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 7071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6902,
											"end": 7071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7243,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 7077,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7217,
											"end": 7235,
											"name": "PUSH",
											"source": 10,
											"value": "416C7265616479206C61756E6368656400000000000000000000000000000000"
										},
										{
											"begin": 7213,
											"end": 7214,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7205,
											"end": 7211,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7201,
											"end": 7215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7194,
											"end": 7236,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7243,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7077,
											"end": 7243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7249,
											"end": 7615,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 7249,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7391,
											"end": 7394,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7412,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 7476,
											"end": 7478,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 7471,
											"end": 7474,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 7412,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7479,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 7412,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7405,
											"end": 7479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 7577,
											"end": 7580,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 7488,
											"end": 7581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7488,
											"end": 7581,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 7488,
											"end": 7581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7606,
											"end": 7608,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7601,
											"end": 7604,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7597,
											"end": 7609,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7590,
											"end": 7609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7249,
											"end": 7615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7249,
											"end": 7615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7249,
											"end": 7615,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7249,
											"end": 7615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7621,
											"end": 8040,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 7621,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7787,
											"end": 7791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7825,
											"end": 7827,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7814,
											"end": 7823,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7810,
											"end": 7828,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7828,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7828,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7874,
											"end": 7883,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7872,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7864,
											"end": 7884,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7860,
											"end": 7861,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7849,
											"end": 7858,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7845,
											"end": 7862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7838,
											"end": 7885,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 8028,
											"end": 8032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 8033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 7902,
											"end": 8033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7902,
											"end": 8033,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 7902,
											"end": 8033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7894,
											"end": 8033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7894,
											"end": 8033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7621,
											"end": 8040,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7621,
											"end": 8040,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7621,
											"end": 8040,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7621,
											"end": 8040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8046,
											"end": 8216,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 8046,
											"end": 8216,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8186,
											"end": 8208,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7468696E6720746F207465726D696E617465000000000000000000000000"
										},
										{
											"begin": 8182,
											"end": 8183,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8174,
											"end": 8180,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8170,
											"end": 8184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8163,
											"end": 8209,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8046,
											"end": 8216,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8046,
											"end": 8216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8222,
											"end": 8588,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 8222,
											"end": 8588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8364,
											"end": 8367,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8385,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 8449,
											"end": 8451,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 8444,
											"end": 8447,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8385,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 8385,
											"end": 8452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8385,
											"end": 8452,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 8385,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8378,
											"end": 8452,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8378,
											"end": 8452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8461,
											"end": 8554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 8550,
											"end": 8553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8461,
											"end": 8554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 8461,
											"end": 8554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8461,
											"end": 8554,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 8461,
											"end": 8554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8579,
											"end": 8581,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8574,
											"end": 8577,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8570,
											"end": 8582,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8563,
											"end": 8582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8563,
											"end": 8582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8222,
											"end": 8588,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8222,
											"end": 8588,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8222,
											"end": 8588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8222,
											"end": 8588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 9013,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 8594,
											"end": 9013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8760,
											"end": 8764,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8798,
											"end": 8800,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8787,
											"end": 8796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8783,
											"end": 8801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8775,
											"end": 8801,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8775,
											"end": 8801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8847,
											"end": 8856,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8841,
											"end": 8845,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8837,
											"end": 8857,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8833,
											"end": 8834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8822,
											"end": 8831,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8818,
											"end": 8835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8811,
											"end": 8858,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8875,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 9001,
											"end": 9005,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8875,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 8875,
											"end": 9006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8875,
											"end": 9006,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 8875,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8867,
											"end": 9006,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8867,
											"end": 9006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 9013,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 9013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 9013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 9013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9019,
											"end": 9199,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 9019,
											"end": 9199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9067,
											"end": 9144,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9057,
											"end": 9145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9168,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 9161,
											"end": 9162,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9154,
											"end": 9169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9188,
											"end": 9192,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9185,
											"end": 9186,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9178,
											"end": 9193,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9205,
											"end": 9375,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9205,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9345,
											"end": 9367,
											"name": "PUSH",
											"source": 10,
											"value": "5374616B696E67206E6F7420636F6D706C657465000000000000000000000000"
										},
										{
											"begin": 9341,
											"end": 9342,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9333,
											"end": 9339,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9329,
											"end": 9343,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9322,
											"end": 9368,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9205,
											"end": 9375,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9205,
											"end": 9375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9381,
											"end": 9747,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 9381,
											"end": 9747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9523,
											"end": 9526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9544,
											"end": 9611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 9608,
											"end": 9610,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 9603,
											"end": 9606,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9544,
											"end": 9611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 9544,
											"end": 9611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9544,
											"end": 9611,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 9544,
											"end": 9611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9537,
											"end": 9611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9537,
											"end": 9611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 9709,
											"end": 9712,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 9620,
											"end": 9713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9620,
											"end": 9713,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 9620,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9738,
											"end": 9740,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9733,
											"end": 9736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9729,
											"end": 9741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9722,
											"end": 9741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9722,
											"end": 9741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9381,
											"end": 9747,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9381,
											"end": 9747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9381,
											"end": 9747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9381,
											"end": 9747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9753,
											"end": 10172,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 9753,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9919,
											"end": 9923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9957,
											"end": 9959,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9946,
											"end": 9955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9942,
											"end": 9960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9934,
											"end": 9960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9934,
											"end": 9960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10006,
											"end": 10015,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10000,
											"end": 10004,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9996,
											"end": 10016,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9992,
											"end": 9993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9981,
											"end": 9990,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9977,
											"end": 9994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9970,
											"end": 10017,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10034,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 10160,
											"end": 10164,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10034,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 10034,
											"end": 10165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10034,
											"end": 10165,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 10034,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10165,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9753,
											"end": 10172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9753,
											"end": 10172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9753,
											"end": 10172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9753,
											"end": 10172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10178,
											"end": 10358,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 10178,
											"end": 10358,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10226,
											"end": 10303,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10223,
											"end": 10224,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10216,
											"end": 10304,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10323,
											"end": 10327,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 10320,
											"end": 10321,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10313,
											"end": 10328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10347,
											"end": 10351,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10344,
											"end": 10345,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10337,
											"end": 10352,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10364,
											"end": 10774,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 10364,
											"end": 10774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10404,
											"end": 10411,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10427,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 10445,
											"end": 10446,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10427,
											"end": 10447,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 10427,
											"end": 10447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10427,
											"end": 10447,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 10427,
											"end": 10447,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10422,
											"end": 10447,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10422,
											"end": 10447,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10461,
											"end": 10481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 10479,
											"end": 10480,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10461,
											"end": 10481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 10461,
											"end": 10481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10461,
											"end": 10481,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 10461,
											"end": 10481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10456,
											"end": 10481,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10456,
											"end": 10481,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10513,
											"end": 10514,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10509,
											"end": 10518,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 10556,
											"end": 10567,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10568,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 10538,
											"end": 10568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10538,
											"end": 10568,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 10538,
											"end": 10568,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10527,
											"end": 10568,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10527,
											"end": 10568,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10717,
											"end": 10718,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10708,
											"end": 10715,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10704,
											"end": 10719,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10701,
											"end": 10702,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10698,
											"end": 10720,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 10678,
											"end": 10679,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10671,
											"end": 10680,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10651,
											"end": 10734,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 10628,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 10628,
											"end": 10767,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10747,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 10747,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 10747,
											"end": 10765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10747,
											"end": 10765,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 10747,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10628,
											"end": 10767,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 10628,
											"end": 10767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10412,
											"end": 10774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10364,
											"end": 10774,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10364,
											"end": 10774,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10364,
											"end": 10774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10364,
											"end": 10774,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10364,
											"end": 10774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10780,
											"end": 10960,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 10780,
											"end": 10960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10828,
											"end": 10905,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10825,
											"end": 10826,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10818,
											"end": 10906,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10925,
											"end": 10929,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 10922,
											"end": 10923,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10915,
											"end": 10930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10949,
											"end": 10953,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10946,
											"end": 10947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10939,
											"end": 10954,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10966,
											"end": 11151,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 10966,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11006,
											"end": 11007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11023,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 11041,
											"end": 11042,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11023,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 11023,
											"end": 11043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11023,
											"end": 11043,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 11023,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11018,
											"end": 11043,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11018,
											"end": 11043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11057,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 11075,
											"end": 11076,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11057,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 11057,
											"end": 11077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11057,
											"end": 11077,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 11057,
											"end": 11077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11052,
											"end": 11077,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11052,
											"end": 11077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11096,
											"end": 11097,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11086,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 11086,
											"end": 11121,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 11101,
											"end": 11119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 11101,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11086,
											"end": 11121,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 11086,
											"end": 11121,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11143,
											"end": 11144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11140,
											"end": 11141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11136,
											"end": 11145,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11131,
											"end": 11145,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11131,
											"end": 11145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10966,
											"end": 11151,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10966,
											"end": 11151,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10966,
											"end": 11151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10966,
											"end": 11151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10966,
											"end": 11151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11157,
											"end": 11489,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 11157,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11278,
											"end": 11282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11316,
											"end": 11318,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11305,
											"end": 11314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11301,
											"end": 11319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11293,
											"end": 11319,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11293,
											"end": 11319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11329,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 11397,
											"end": 11398,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11386,
											"end": 11395,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11382,
											"end": 11399,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11373,
											"end": 11379,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11329,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 11329,
											"end": 11400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11329,
											"end": 11400,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 11329,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11410,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 11478,
											"end": 11480,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11467,
											"end": 11476,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11463,
											"end": 11481,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11454,
											"end": 11460,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11410,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 11410,
											"end": 11482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11410,
											"end": 11482,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 11410,
											"end": 11482,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11157,
											"end": 11489,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 11157,
											"end": 11489,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11157,
											"end": 11489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11157,
											"end": 11489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11157,
											"end": 11489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11157,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11638,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 11495,
											"end": 11638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11552,
											"end": 11557,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11583,
											"end": 11589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11577,
											"end": 11590,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11568,
											"end": 11590,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11568,
											"end": 11590,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11599,
											"end": 11632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 11626,
											"end": 11631,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11599,
											"end": 11632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 11599,
											"end": 11632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11599,
											"end": 11632,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 11599,
											"end": 11632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11638,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11638,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11495,
											"end": 11638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 11995,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 11644,
											"end": 11995,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11714,
											"end": 11720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11763,
											"end": 11765,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11751,
											"end": 11760,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11742,
											"end": 11749,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11738,
											"end": 11761,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11734,
											"end": 11766,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 11850,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 11850,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 11731,
											"end": 11850,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11769,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 11769,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 11769,
											"end": 11848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11769,
											"end": 11848,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 11769,
											"end": 11848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11731,
											"end": 11850,
											"name": "tag",
											"source": 10,
											"value": "497"
										},
										{
											"begin": 11731,
											"end": 11850,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11889,
											"end": 11890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11914,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 11970,
											"end": 11977,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11961,
											"end": 11967,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11950,
											"end": 11959,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11946,
											"end": 11968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11914,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 11914,
											"end": 11978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11914,
											"end": 11978,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 11914,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 11978,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11904,
											"end": 11978,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11860,
											"end": 11988,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 11995,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 11995,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 11995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 11995,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11644,
											"end": 11995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12001,
											"end": 12169,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 12001,
											"end": 12169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12141,
											"end": 12161,
											"name": "PUSH",
											"source": 10,
											"value": "5374616B696E67206E6F74206163746976650000000000000000000000000000"
										},
										{
											"begin": 12137,
											"end": 12138,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12129,
											"end": 12135,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12125,
											"end": 12139,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12118,
											"end": 12162,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12001,
											"end": 12169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12001,
											"end": 12169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12541,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 12175,
											"end": 12541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12317,
											"end": 12320,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12338,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 12402,
											"end": 12404,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 12397,
											"end": 12400,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12338,
											"end": 12405,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 12338,
											"end": 12405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12338,
											"end": 12405,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 12338,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12331,
											"end": 12405,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12331,
											"end": 12405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 12503,
											"end": 12506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 12414,
											"end": 12507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12414,
											"end": 12507,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 12414,
											"end": 12507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12532,
											"end": 12534,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12527,
											"end": 12530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12523,
											"end": 12535,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12516,
											"end": 12535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12516,
											"end": 12535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12541,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12541,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12541,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12175,
											"end": 12541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12547,
											"end": 12966,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 12547,
											"end": 12966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12717,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12751,
											"end": 12753,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12740,
											"end": 12749,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 12754,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12728,
											"end": 12754,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12728,
											"end": 12754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12800,
											"end": 12809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12794,
											"end": 12798,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12790,
											"end": 12810,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12786,
											"end": 12787,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12775,
											"end": 12784,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12771,
											"end": 12788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12764,
											"end": 12811,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12828,
											"end": 12959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 12954,
											"end": 12958,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12828,
											"end": 12959,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 12828,
											"end": 12959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12828,
											"end": 12959,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 12828,
											"end": 12959,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12820,
											"end": 12959,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12820,
											"end": 12959,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12547,
											"end": 12966,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12547,
											"end": 12966,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12547,
											"end": 12966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12547,
											"end": 12966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12972,
											"end": 13138,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 12972,
											"end": 13138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13112,
											"end": 13130,
											"name": "PUSH",
											"source": 10,
											"value": "5374616B696E67206E6F74206C69766500000000000000000000000000000000"
										},
										{
											"begin": 13108,
											"end": 13109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13100,
											"end": 13106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13096,
											"end": 13110,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13089,
											"end": 13131,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12972,
											"end": 13138,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12972,
											"end": 13138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13144,
											"end": 13510,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 13144,
											"end": 13510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13286,
											"end": 13289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13307,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 13371,
											"end": 13373,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 13366,
											"end": 13369,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13307,
											"end": 13374,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 13307,
											"end": 13374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13307,
											"end": 13374,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 13307,
											"end": 13374,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13300,
											"end": 13374,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13300,
											"end": 13374,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13383,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 13472,
											"end": 13475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13383,
											"end": 13476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 13383,
											"end": 13476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13383,
											"end": 13476,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 13383,
											"end": 13476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13501,
											"end": 13503,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13496,
											"end": 13499,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13492,
											"end": 13504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13485,
											"end": 13504,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13485,
											"end": 13504,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13144,
											"end": 13510,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13144,
											"end": 13510,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13144,
											"end": 13510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13144,
											"end": 13510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13935,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 13516,
											"end": 13935,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13682,
											"end": 13686,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13720,
											"end": 13722,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13709,
											"end": 13718,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13705,
											"end": 13723,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13697,
											"end": 13723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13697,
											"end": 13723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13769,
											"end": 13778,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13763,
											"end": 13767,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13759,
											"end": 13779,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13755,
											"end": 13756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13744,
											"end": 13753,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13740,
											"end": 13757,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13733,
											"end": 13780,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13797,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 13923,
											"end": 13927,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13797,
											"end": 13928,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 13797,
											"end": 13928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13797,
											"end": 13928,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 13797,
											"end": 13928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13789,
											"end": 13928,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13789,
											"end": 13928,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13935,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13935,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13516,
											"end": 13935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14132,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 13941,
											"end": 14132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13981,
											"end": 13984,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14000,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 14018,
											"end": 14019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14000,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 14000,
											"end": 14020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14000,
											"end": 14020,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 14000,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14020,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 14052,
											"end": 14053,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 14034,
											"end": 14054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 14034,
											"end": 14054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14029,
											"end": 14054,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14029,
											"end": 14054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14077,
											"end": 14078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14074,
											"end": 14075,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14070,
											"end": 14079,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14063,
											"end": 14079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14063,
											"end": 14079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14098,
											"end": 14101,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14095,
											"end": 14096,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14092,
											"end": 14102,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14089,
											"end": 14125,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14089,
											"end": 14125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 14089,
											"end": 14125,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14105,
											"end": 14123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 14105,
											"end": 14123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 14105,
											"end": 14123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14105,
											"end": 14123,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 14105,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14089,
											"end": 14125,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 14089,
											"end": 14125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14132,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14132,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14132,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13941,
											"end": 14132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14138,
											"end": 14303,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 14138,
											"end": 14303,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14278,
											"end": 14295,
											"name": "PUSH",
											"source": 10,
											"value": "42757920706572696F64206F7665720000000000000000000000000000000000"
										},
										{
											"begin": 14274,
											"end": 14275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14266,
											"end": 14272,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14262,
											"end": 14276,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14255,
											"end": 14296,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14138,
											"end": 14303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14138,
											"end": 14303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14309,
											"end": 14675,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 14309,
											"end": 14675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14451,
											"end": 14454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14472,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 14536,
											"end": 14538,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 14531,
											"end": 14534,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14472,
											"end": 14539,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 14472,
											"end": 14539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14472,
											"end": 14539,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 14472,
											"end": 14539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14465,
											"end": 14539,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14465,
											"end": 14539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14548,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 14637,
											"end": 14640,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14548,
											"end": 14641,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 14548,
											"end": 14641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14548,
											"end": 14641,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 14548,
											"end": 14641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14666,
											"end": 14668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14661,
											"end": 14664,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14657,
											"end": 14669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14650,
											"end": 14669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14650,
											"end": 14669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14309,
											"end": 14675,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14309,
											"end": 14675,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14309,
											"end": 14675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14309,
											"end": 14675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14681,
											"end": 15100,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 14681,
											"end": 15100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14847,
											"end": 14851,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14885,
											"end": 14887,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14874,
											"end": 14883,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14870,
											"end": 14888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14862,
											"end": 14888,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14862,
											"end": 14888,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14934,
											"end": 14943,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14928,
											"end": 14932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14924,
											"end": 14944,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14920,
											"end": 14921,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14909,
											"end": 14918,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14905,
											"end": 14922,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14898,
											"end": 14945,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14962,
											"end": 15093,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 15088,
											"end": 15092,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14962,
											"end": 15093,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 14962,
											"end": 15093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14962,
											"end": 15093,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 14962,
											"end": 15093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14954,
											"end": 15093,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14954,
											"end": 15093,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14681,
											"end": 15100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14681,
											"end": 15100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14681,
											"end": 15100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14681,
											"end": 15100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15271,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 15106,
											"end": 15271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15246,
											"end": 15263,
											"name": "PUSH",
											"source": 10,
											"value": "42656C6F77206D696E207374616B650000000000000000000000000000000000"
										},
										{
											"begin": 15242,
											"end": 15243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15234,
											"end": 15240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15230,
											"end": 15244,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15223,
											"end": 15264,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15277,
											"end": 15643,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 15277,
											"end": 15643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15419,
											"end": 15422,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15440,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 15504,
											"end": 15506,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 15499,
											"end": 15502,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15440,
											"end": 15507,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 15440,
											"end": 15507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15440,
											"end": 15507,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 15440,
											"end": 15507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15507,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15433,
											"end": 15507,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 15605,
											"end": 15608,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15609,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 15516,
											"end": 15609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15609,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 15516,
											"end": 15609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15634,
											"end": 15636,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15629,
											"end": 15632,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15625,
											"end": 15637,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15618,
											"end": 15637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15618,
											"end": 15637,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15277,
											"end": 15643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15277,
											"end": 15643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15277,
											"end": 15643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15277,
											"end": 15643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 16068,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 15649,
											"end": 16068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15815,
											"end": 15819,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15853,
											"end": 15855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15842,
											"end": 15851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15838,
											"end": 15856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15830,
											"end": 15856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15830,
											"end": 15856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15902,
											"end": 15911,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15896,
											"end": 15900,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15892,
											"end": 15912,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15888,
											"end": 15889,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15877,
											"end": 15886,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15873,
											"end": 15890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15866,
											"end": 15913,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15930,
											"end": 16061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 16056,
											"end": 16060,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15930,
											"end": 16061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 15930,
											"end": 16061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15930,
											"end": 16061,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 15930,
											"end": 16061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15922,
											"end": 16061,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15922,
											"end": 16061,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 16068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 16068,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 16068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 16068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16074,
											"end": 16241,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 16074,
											"end": 16241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16214,
											"end": 16233,
											"name": "PUSH",
											"source": 10,
											"value": "45786365656473206D6178207374616B65000000000000000000000000000000"
										},
										{
											"begin": 16210,
											"end": 16211,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16202,
											"end": 16208,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16198,
											"end": 16212,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16191,
											"end": 16234,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16074,
											"end": 16241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16074,
											"end": 16241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16247,
											"end": 16613,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 16247,
											"end": 16613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16389,
											"end": 16392,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16410,
											"end": 16477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 16474,
											"end": 16476,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 16469,
											"end": 16472,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16410,
											"end": 16477,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 16410,
											"end": 16477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16410,
											"end": 16477,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 16410,
											"end": 16477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16403,
											"end": 16477,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16403,
											"end": 16477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16486,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 16575,
											"end": 16578,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16486,
											"end": 16579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 16486,
											"end": 16579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16486,
											"end": 16579,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 16486,
											"end": 16579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16604,
											"end": 16606,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16599,
											"end": 16602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16595,
											"end": 16607,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16588,
											"end": 16607,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16588,
											"end": 16607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16247,
											"end": 16613,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16247,
											"end": 16613,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16247,
											"end": 16613,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16247,
											"end": 16613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16619,
											"end": 17038,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 16619,
											"end": 17038,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16785,
											"end": 16789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16823,
											"end": 16825,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16812,
											"end": 16821,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16808,
											"end": 16826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16800,
											"end": 16826,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16800,
											"end": 16826,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16872,
											"end": 16881,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16866,
											"end": 16870,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16862,
											"end": 16882,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16858,
											"end": 16859,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16847,
											"end": 16856,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16843,
											"end": 16860,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16836,
											"end": 16883,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16900,
											"end": 17031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 17026,
											"end": 17030,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16900,
											"end": 17031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 16900,
											"end": 17031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16900,
											"end": 17031,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 16900,
											"end": 17031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16892,
											"end": 17031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16892,
											"end": 17031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16619,
											"end": 17038,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16619,
											"end": 17038,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16619,
											"end": 17038,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16619,
											"end": 17038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17044,
											"end": 17212,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 17044,
											"end": 17212,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17184,
											"end": 17204,
											"name": "PUSH",
											"source": 10,
											"value": "4578636565647320746F74616C20706F6F6C0000000000000000000000000000"
										},
										{
											"begin": 17180,
											"end": 17181,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17172,
											"end": 17178,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17168,
											"end": 17182,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17161,
											"end": 17205,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17044,
											"end": 17212,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17044,
											"end": 17212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17218,
											"end": 17584,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 17218,
											"end": 17584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17360,
											"end": 17363,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 17445,
											"end": 17447,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 17440,
											"end": 17443,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17381,
											"end": 17448,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 17381,
											"end": 17448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17381,
											"end": 17448,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 17381,
											"end": 17448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17374,
											"end": 17448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17374,
											"end": 17448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17457,
											"end": 17550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 17546,
											"end": 17549,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17457,
											"end": 17550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 17457,
											"end": 17550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17457,
											"end": 17550,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 17457,
											"end": 17550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17575,
											"end": 17577,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17570,
											"end": 17573,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17566,
											"end": 17578,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17559,
											"end": 17578,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17559,
											"end": 17578,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17218,
											"end": 17584,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17218,
											"end": 17584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17218,
											"end": 17584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17218,
											"end": 17584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 18009,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 17590,
											"end": 18009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17756,
											"end": 17760,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17794,
											"end": 17796,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17783,
											"end": 17792,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17779,
											"end": 17797,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17771,
											"end": 17797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17771,
											"end": 17797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17843,
											"end": 17852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17837,
											"end": 17841,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17833,
											"end": 17853,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17829,
											"end": 17830,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17818,
											"end": 17827,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17814,
											"end": 17831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17807,
											"end": 17854,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17871,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 17997,
											"end": 18001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17871,
											"end": 18002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 17871,
											"end": 18002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17871,
											"end": 18002,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 17871,
											"end": 18002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17863,
											"end": 18002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17863,
											"end": 18002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 18009,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 18009,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 18009,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17590,
											"end": 18009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18015,
											"end": 18180,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 18015,
											"end": 18180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18155,
											"end": 18172,
											"name": "PUSH",
											"source": 10,
											"value": "5374616B65206E6F7420656E6465640000000000000000000000000000000000"
										},
										{
											"begin": 18151,
											"end": 18152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18143,
											"end": 18149,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18139,
											"end": 18153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18132,
											"end": 18173,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18015,
											"end": 18180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18015,
											"end": 18180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18552,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 18186,
											"end": 18552,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18328,
											"end": 18331,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18349,
											"end": 18416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 18413,
											"end": 18415,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 18408,
											"end": 18411,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18349,
											"end": 18416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 18349,
											"end": 18416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18349,
											"end": 18416,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 18349,
											"end": 18416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18342,
											"end": 18416,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18342,
											"end": 18416,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18425,
											"end": 18518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 18514,
											"end": 18517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18425,
											"end": 18518,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 18425,
											"end": 18518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18425,
											"end": 18518,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 18425,
											"end": 18518,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18543,
											"end": 18545,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18538,
											"end": 18541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18534,
											"end": 18546,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18527,
											"end": 18546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18527,
											"end": 18546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18552,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18552,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18552,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18186,
											"end": 18552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18558,
											"end": 18977,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 18558,
											"end": 18977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18724,
											"end": 18728,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18762,
											"end": 18764,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18751,
											"end": 18760,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18747,
											"end": 18765,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18739,
											"end": 18765,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18739,
											"end": 18765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18811,
											"end": 18820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18805,
											"end": 18809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18801,
											"end": 18821,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18797,
											"end": 18798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18786,
											"end": 18795,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18782,
											"end": 18799,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18775,
											"end": 18822,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18839,
											"end": 18970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 18965,
											"end": 18969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18839,
											"end": 18970,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 18839,
											"end": 18970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18839,
											"end": 18970,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 18839,
											"end": 18970,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18831,
											"end": 18970,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18831,
											"end": 18970,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18558,
											"end": 18977,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18558,
											"end": 18977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18558,
											"end": 18977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18558,
											"end": 18977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18983,
											"end": 19164,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 18983,
											"end": 19164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19123,
											"end": 19156,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 19119,
											"end": 19120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19111,
											"end": 19117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19107,
											"end": 19121,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19100,
											"end": 19157,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18983,
											"end": 19164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18983,
											"end": 19164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19170,
											"end": 19536,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 19170,
											"end": 19536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19312,
											"end": 19315,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19333,
											"end": 19400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 19397,
											"end": 19399,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 19392,
											"end": 19395,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19333,
											"end": 19400,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 19333,
											"end": 19400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19333,
											"end": 19400,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 19333,
											"end": 19400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19326,
											"end": 19400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19326,
											"end": 19400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19409,
											"end": 19502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 19498,
											"end": 19501,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19409,
											"end": 19502,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 19409,
											"end": 19502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19409,
											"end": 19502,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 19409,
											"end": 19502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19527,
											"end": 19529,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19522,
											"end": 19525,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19518,
											"end": 19530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19511,
											"end": 19530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19511,
											"end": 19530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19170,
											"end": 19536,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19170,
											"end": 19536,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19170,
											"end": 19536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19170,
											"end": 19536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19542,
											"end": 19961,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 19542,
											"end": 19961,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19708,
											"end": 19712,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19746,
											"end": 19748,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19735,
											"end": 19744,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19731,
											"end": 19749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19723,
											"end": 19749,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19723,
											"end": 19749,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19795,
											"end": 19804,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19789,
											"end": 19793,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19785,
											"end": 19805,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19781,
											"end": 19782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19770,
											"end": 19779,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19766,
											"end": 19783,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19759,
											"end": 19806,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19823,
											"end": 19954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 19949,
											"end": 19953,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19823,
											"end": 19954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 19823,
											"end": 19954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19823,
											"end": 19954,
											"name": "tag",
											"source": 10,
											"value": "552"
										},
										{
											"begin": 19823,
											"end": 19954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19815,
											"end": 19954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19815,
											"end": 19954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19542,
											"end": 19961,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19542,
											"end": 19961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19542,
											"end": 19961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19542,
											"end": 19961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19967,
											"end": 20299,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 19967,
											"end": 20299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20088,
											"end": 20092,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20126,
											"end": 20128,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20115,
											"end": 20124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20111,
											"end": 20129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20103,
											"end": 20129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20103,
											"end": 20129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20139,
											"end": 20210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 20207,
											"end": 20208,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20196,
											"end": 20205,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20192,
											"end": 20209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20183,
											"end": 20189,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20139,
											"end": 20210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 20139,
											"end": 20210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20139,
											"end": 20210,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 20139,
											"end": 20210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20220,
											"end": 20292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 20288,
											"end": 20290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20277,
											"end": 20286,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20273,
											"end": 20291,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20264,
											"end": 20270,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20220,
											"end": 20292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 20220,
											"end": 20292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20220,
											"end": 20292,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 20220,
											"end": 20292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19967,
											"end": 20299,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19967,
											"end": 20299,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19967,
											"end": 20299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19967,
											"end": 20299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19967,
											"end": 20299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19967,
											"end": 20299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20747,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 20305,
											"end": 20747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20454,
											"end": 20458,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20492,
											"end": 20494,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 20481,
											"end": 20490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20477,
											"end": 20495,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20469,
											"end": 20495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20469,
											"end": 20495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20505,
											"end": 20576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 20573,
											"end": 20574,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20562,
											"end": 20571,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20558,
											"end": 20575,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20549,
											"end": 20555,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20505,
											"end": 20576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 20505,
											"end": 20576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20505,
											"end": 20576,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 20505,
											"end": 20576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20586,
											"end": 20658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 20654,
											"end": 20656,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20643,
											"end": 20652,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20639,
											"end": 20657,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20630,
											"end": 20636,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20586,
											"end": 20658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "327"
										},
										{
											"begin": 20586,
											"end": 20658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20586,
											"end": 20658,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 20586,
											"end": 20658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20668,
											"end": 20740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 20736,
											"end": 20738,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20725,
											"end": 20734,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20721,
											"end": 20739,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20712,
											"end": 20718,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20668,
											"end": 20740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 20668,
											"end": 20740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20668,
											"end": 20740,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 20668,
											"end": 20740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20747,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20747,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20305,
											"end": 20747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/LandFiStake3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyDuration()": "e9b98746",
							"completeStaking()": "fe1d3795",
							"distributeRewards()": "6f4a2cd0",
							"getStakedUsers()": "d719fa97",
							"getStakingStatus()": "cab9b8fb",
							"landFiToken()": "292a6b19",
							"launch()": "01339c21",
							"launchStaking()": "a30a2474",
							"launchTime()": "790ca413",
							"maxStake()": "ea1b28e0",
							"maxTotalStake()": "64904071",
							"minStake()": "375b3c0a",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"previewReward(uint256)": "b973e1bf",
							"renounceOwnership()": "715018a6",
							"rewardToken()": "f7c618c1",
							"rewardTotal()": "f959680b",
							"stake(uint256)": "a694fc3a",
							"stakeDuration()": "40f02ab6",
							"stakedList(uint256)": "02ac512f",
							"stakingStatus()": "455ab53c",
							"teamWallet()": "59927044",
							"terminateAll()": "4f984c5c",
							"terminateSingle(address)": "10d63d03",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"userStakes(address)": "8da7ad23"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_landFiToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_teamWallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_buyDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxTotalStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rewardTotal\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"completeTime\",\"type\":\"uint256\"}],\"name\":\"Complete\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"launchTime\",\"type\":\"uint256\"}],\"name\":\"Launch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Terminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TerminatedSingle\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"completeStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakedUsers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStakingStatus\",\"outputs\":[{\"internalType\":\"enum LandFiStaking.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landFiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchStaking\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"launchTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxTotalStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"previewReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakedList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingStatus\",\"outputs\":[{\"internalType\":\"enum LandFiStaking.Status\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"terminateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"terminateSingle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LandFiStake3.sol\":\"LandFiStaking\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/LandFiStake3.sol\":{\"keccak256\":\"0x0eabb381d7024af871eb2fdb0795d9228637e98e8847a28505fa19c814c1d892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9db7ba8fc0ef5647d6e45dedc010fc8ef11887a926d3fec900084108852bd4c3\",\"dweb:/ipfs/QmfLsNWP3xhosDmeGMe1XLP8HAVxQ2VmA7MBrBBHJLhUFc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/LandFiStake3.sol:LandFiStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "contracts/LandFiStake3.sol:LandFiStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 930,
								"contract": "contracts/LandFiStake3.sol:LandFiStaking",
								"label": "launchStaking",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 932,
								"contract": "contracts/LandFiStake3.sol:LandFiStaking",
								"label": "launchTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 937,
								"contract": "contracts/LandFiStake3.sol:LandFiStaking",
								"label": "stakingStatus",
								"offset": 0,
								"slot": "4",
								"type": "t_enum(Status)907"
							},
							{
								"astId": 939,
								"contract": "contracts/LandFiStake3.sol:LandFiStaking",
								"label": "totalStaked",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 943,
								"contract": "contracts/LandFiStake3.sol:LandFiStaking",
								"label": "userStakes",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 946,
								"contract": "contracts/LandFiStake3.sol:LandFiStaking",
								"label": "stakedList",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(Status)907": {
								"encoding": "inplace",
								"label": "enum LandFiStaking.Status",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 886,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"contracts/LandFiStake3.sol": {
				"ast": {
					"absolutePath": "contracts/LandFiStake3.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"LandFiStaking": [
							1512
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						]
					},
					"id": 1513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1513,
							"sourceUnit": 381,
							"src": "61:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1513,
							"sourceUnit": 845,
							"src": "119:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1513,
							"sourceUnit": 148,
							"src": "186:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1513,
							"sourceUnit": 303,
							"src": "240:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 894,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "340:3:9",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 895,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "344:6:9",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "340:10:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 893,
										"name": "Ownable",
										"nameLocations": [
											"332:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "332:7:9"
									},
									"id": 896,
									"nodeType": "InheritanceSpecifier",
									"src": "332:19:9"
								},
								{
									"baseName": {
										"id": 897,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"353:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "353:15:9"
									},
									"id": 898,
									"nodeType": "InheritanceSpecifier",
									"src": "353:15:9"
								}
							],
							"canonicalName": "LandFiStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1512,
							"linearizedBaseContracts": [
								1512,
								302,
								147,
								874
							],
							"name": "LandFiStaking",
							"nameLocation": "315:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 902,
									"libraryName": {
										"id": 899,
										"name": "SafeERC20",
										"nameLocations": [
											"382:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "382:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "376:27:9",
									"typeName": {
										"id": 901,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 900,
											"name": "IERC20",
											"nameLocations": [
												"396:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "396:6:9"
										},
										"referencedDeclaration": 380,
										"src": "396:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "LandFiStaking.Status",
									"id": 907,
									"members": [
										{
											"id": 903,
											"name": "Pending",
											"nameLocation": "425:7:9",
											"nodeType": "EnumValue",
											"src": "425:7:9"
										},
										{
											"id": 904,
											"name": "Running",
											"nameLocation": "434:7:9",
											"nodeType": "EnumValue",
											"src": "434:7:9"
										},
										{
											"id": 905,
											"name": "Paused",
											"nameLocation": "443:6:9",
											"nodeType": "EnumValue",
											"src": "443:6:9"
										},
										{
											"id": 906,
											"name": "Complete",
											"nameLocation": "451:8:9",
											"nodeType": "EnumValue",
											"src": "451:8:9"
										}
									],
									"name": "Status",
									"nameLocation": "416:6:9",
									"nodeType": "EnumDefinition",
									"src": "411:50:9"
								},
								{
									"constant": false,
									"functionSelector": "292a6b19",
									"id": 910,
									"mutability": "immutable",
									"name": "landFiToken",
									"nameLocation": "518:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "494:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 909,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 908,
											"name": "IERC20",
											"nameLocations": [
												"494:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "494:6:9"
										},
										"referencedDeclaration": 380,
										"src": "494:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 913,
									"mutability": "immutable",
									"name": "rewardToken",
									"nameLocation": "560:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "536:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 912,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 911,
											"name": "IERC20",
											"nameLocations": [
												"536:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "536:6:9"
										},
										"referencedDeclaration": 380,
										"src": "536:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "59927044",
									"id": 915,
									"mutability": "immutable",
									"name": "teamWallet",
									"nameLocation": "603:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "578:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 914,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "578:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e9b98746",
									"id": 917,
									"mutability": "immutable",
									"name": "buyDuration",
									"nameLocation": "645:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "620:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 916,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "40f02ab6",
									"id": 919,
									"mutability": "immutable",
									"name": "stakeDuration",
									"nameLocation": "688:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "663:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 918,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "663:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "375b3c0a",
									"id": 921,
									"mutability": "immutable",
									"name": "minStake",
									"nameLocation": "733:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "708:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 920,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "708:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ea1b28e0",
									"id": 923,
									"mutability": "immutable",
									"name": "maxStake",
									"nameLocation": "773:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "748:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 922,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "748:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "64904071",
									"id": 925,
									"mutability": "immutable",
									"name": "maxTotalStake",
									"nameLocation": "813:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "788:38:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 924,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f959680b",
									"id": 927,
									"mutability": "immutable",
									"name": "rewardTotal",
									"nameLocation": "858:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "833:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 926,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "833:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a30a2474",
									"id": 930,
									"mutability": "mutable",
									"name": "launchStaking",
									"nameLocation": "904:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "892:33:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 928,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "892:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 929,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "920:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "790ca413",
									"id": 932,
									"mutability": "mutable",
									"name": "launchTime",
									"nameLocation": "947:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "932:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 931,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "932:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "455ab53c",
									"id": 937,
									"mutability": "mutable",
									"name": "stakingStatus",
									"nameLocation": "978:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "964:44:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Status_$907",
										"typeString": "enum LandFiStaking.Status"
									},
									"typeName": {
										"id": 934,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 933,
											"name": "Status",
											"nameLocations": [
												"964:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 907,
											"src": "964:6:9"
										},
										"referencedDeclaration": 907,
										"src": "964:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$907",
											"typeString": "enum LandFiStaking.Status"
										}
									},
									"value": {
										"expression": {
											"id": 935,
											"name": "Status",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 907,
											"src": "994:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Status_$907_$",
												"typeString": "type(enum LandFiStaking.Status)"
											}
										},
										"id": 936,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberLocation": "1001:7:9",
										"memberName": "Pending",
										"nodeType": "MemberAccess",
										"referencedDeclaration": 903,
										"src": "994:14:9",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Status_$907",
											"typeString": "enum LandFiStaking.Status"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 939,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1030:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "1015:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 938,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1015:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da7ad23",
									"id": 943,
									"mutability": "mutable",
									"name": "userStakes",
									"nameLocation": "1085:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "1050:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 942,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 940,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1058:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1050:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 941,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1069:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "02ac512f",
									"id": 946,
									"mutability": "mutable",
									"name": "stakedList",
									"nameLocation": "1119:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1512,
									"src": "1102:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 944,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1102:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 945,
										"nodeType": "ArrayTypeName",
										"src": "1102:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a",
									"id": 952,
									"name": "Stake",
									"nameLocation": "1167:5:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1189:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1173:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1203:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "1195:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1172:38:9"
									},
									"src": "1161:50:9"
								},
								{
									"anonymous": false,
									"eventSelector": "a72e5e150ebe7b67363131cf1d5e72a8053adc58eb1879467ebd529ae3d4ecca",
									"id": 956,
									"name": "Launch",
									"nameLocation": "1223:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "launchTime",
												"nameLocation": "1238:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1230:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:20:9"
									},
									"src": "1217:33:9"
								},
								{
									"anonymous": false,
									"eventSelector": "aaaf03c480f43393f2414d5013b316f6cc36576bed29ae1ea15d8936dcc0d5e7",
									"id": 960,
									"name": "Complete",
									"nameLocation": "1262:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "completeTime",
												"nameLocation": "1279:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "1271:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1271:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:22:9"
									},
									"src": "1256:37:9"
								},
								{
									"anonymous": false,
									"eventSelector": "53118bff2fb56701752f5bf54053d24fb83cec92f9f6ce664b90c38a2991caa4",
									"id": 968,
									"name": "RewardDistributed",
									"nameLocation": "1305:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1339:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1323:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"indexed": false,
												"mutability": "mutable",
												"name": "stake",
												"nameLocation": "1353:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1345:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1345:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1368:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 968,
												"src": "1360:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1360:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1322:53:9"
									},
									"src": "1299:77:9"
								},
								{
									"anonymous": false,
									"eventSelector": "b2372f309a2c0b54c10ce95469012d95c4d8cc7c8a154bfc22db66d993abbc71",
									"id": 974,
									"name": "Terminated",
									"nameLocation": "1388:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1415:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1399:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1429:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 974,
												"src": "1421:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:38:9"
									},
									"src": "1382:55:9"
								},
								{
									"anonymous": false,
									"eventSelector": "bf8f812d3d85df21758e37a857352fb02610f4278c682198af5c5c00bbb3d500",
									"id": 980,
									"name": "TerminatedSingle",
									"nameLocation": "1449:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1482:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1466:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1466:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1496:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "1488:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1465:38:9"
									},
									"src": "1443:61:9"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "1535:93:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$907",
																"typeString": "enum LandFiStaking.Status"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 983,
																"name": "stakingStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "1554:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$907",
																	"typeString": "enum LandFiStaking.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 984,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "1571:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$907_$",
																		"typeString": "type(enum LandFiStaking.Status)"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1578:7:9",
																"memberName": "Running",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 904,
																"src": "1571:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$907",
																	"typeString": "enum LandFiStaking.Status"
																}
															},
															"src": "1554:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67206e6f7420616374697665",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1587:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7",
																"typeString": "literal_string \"Staking not active\""
															},
															"value": "Staking not active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e29e5a16b60c2f5056c309b40025e520335dd49dc666f497f905509e4091ede7",
																"typeString": "literal_string \"Staking not active\""
															}
														],
														"id": 982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1546:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1546:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "1546:62:9"
											},
											{
												"id": 990,
												"nodeType": "PlaceholderStatement",
												"src": "1619:1:9"
											}
										]
									},
									"id": 992,
									"name": "onlyRunning",
									"nameLocation": "1521:11:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1532:2:9"
									},
									"src": "1512:116:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "1931:562:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1014,
																"name": "_landFiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "1950:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1974:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1966:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1015,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1966:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1966:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1950:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b6520746f6b656e",
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1978:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624",
																"typeString": "literal_string \"Invalid stake token\""
															},
															"value": "Invalid stake token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624",
																"typeString": "literal_string \"Invalid stake token\""
															}
														],
														"id": 1013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1942:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "1942:58:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1024,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "2019:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2043:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2035:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1025,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2035:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2035:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2019:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072657761726420746f6b656e",
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2047:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																"typeString": "literal_string \"Invalid reward token\""
															},
															"value": "Invalid reward token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																"typeString": "literal_string \"Invalid reward token\""
															}
														],
														"id": 1023,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2011:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2011:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "2011:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1034,
																"name": "_teamWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 998,
																"src": "2089:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2112:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2104:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1035,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2104:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2104:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2089:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207465616d2077616c6c6574",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2116:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e",
																"typeString": "literal_string \"Invalid team wallet\""
															},
															"value": "Invalid team wallet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e",
																"typeString": "literal_string \"Invalid team wallet\""
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2081:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "2081:57:9"
											},
											{
												"expression": {
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1043,
														"name": "landFiToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "2151:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1045,
																"name": "_landFiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "2172:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1044,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2165:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2165:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "2151:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "2151:34:9"
											},
											{
												"expression": {
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1049,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "2196:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1051,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "2217:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1050,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2210:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2210:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "2196:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1054,
												"nodeType": "ExpressionStatement",
												"src": "2196:34:9"
											},
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1055,
														"name": "teamWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "2241:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1056,
														"name": "_teamWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "2254:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2241:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "2241:24:9"
											},
											{
												"expression": {
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1059,
														"name": "buyDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "2278:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1060,
														"name": "_buyDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "2292:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2278:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "2278:26:9"
											},
											{
												"expression": {
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1063,
														"name": "stakeDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "2315:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1064,
														"name": "_stakeDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1002,
														"src": "2331:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2315:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "2315:30:9"
											},
											{
												"expression": {
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1067,
														"name": "minStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "2356:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1068,
														"name": "_minStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "2367:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2356:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "2356:20:9"
											},
											{
												"expression": {
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1071,
														"name": "maxStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "2387:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1072,
														"name": "_maxStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "2398:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2387:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "2387:20:9"
											},
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1075,
														"name": "maxTotalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "2418:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1076,
														"name": "_maxTotalStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "2434:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2418:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "2418:30:9"
											},
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1079,
														"name": "rewardTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "2459:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1080,
														"name": "_rewardTotal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "2473:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2459:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "2459:26:9"
											}
										]
									},
									"id": 1084,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "_landFiToken",
												"nameLocation": "1666:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1658:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "1697:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1689:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1689:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "_teamWallet",
												"nameLocation": "1728:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1720:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1720:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "_buyDuration",
												"nameLocation": "1758:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1750:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1750:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "_stakeDuration",
												"nameLocation": "1789:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1781:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "_minStake",
												"nameLocation": "1822:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1814:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "_maxStake",
												"nameLocation": "1850:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1842:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "_maxTotalStake",
												"nameLocation": "1878:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1870:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "_rewardTotal",
												"nameLocation": "1911:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1903:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1647:283:9"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1931:0:9"
									},
									"scope": 1512,
									"src": "1636:857:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "2564:207:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2583:14:9",
															"subExpression": {
																"id": 1090,
																"name": "launchStaking",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "2584:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479206c61756e63686564",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2599:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865",
																"typeString": "literal_string \"Already launched\""
															},
															"value": "Already launched"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d0c893f1f5bcfae502200f3f0a15922b00fd78f79c731b5d77d3c422e8f9865",
																"typeString": "literal_string \"Already launched\""
															}
														],
														"id": 1089,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2575:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2575:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "2575:43:9"
											},
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1095,
														"name": "launchStaking",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "2629:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2645:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2629:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "2629:20:9"
											},
											{
												"expression": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1099,
														"name": "launchTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "2660:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1100,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2673:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2679:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2673:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2660:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "2660:28:9"
											},
											{
												"expression": {
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1104,
														"name": "stakingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "2699:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$907",
															"typeString": "enum LandFiStaking.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1105,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "2715:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$907_$",
																"typeString": "type(enum LandFiStaking.Status)"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2722:7:9",
														"memberName": "Running",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 904,
														"src": "2715:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$907",
															"typeString": "enum LandFiStaking.Status"
														}
													},
													"src": "2699:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$907",
														"typeString": "enum LandFiStaking.Status"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "2699:30:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1110,
															"name": "launchTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "2752:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1109,
														"name": "Launch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "2745:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2745:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1112,
												"nodeType": "EmitStatement",
												"src": "2740:23:9"
											}
										]
									},
									"functionSelector": "01339c21",
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1087,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1086,
												"name": "onlyOwner",
												"nameLocations": [
													"2554:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2554:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2554:9:9"
										}
									],
									"name": "launch",
									"nameLocation": "2536:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2542:2:9"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2564:0:9"
									},
									"scope": 1512,
									"src": "2527:244:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "2815:48:9",
										"statements": [
											{
												"expression": {
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1119,
														"name": "stakingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "2826:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$907",
															"typeString": "enum LandFiStaking.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1120,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "2842:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$907_$",
																"typeString": "type(enum LandFiStaking.Status)"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2849:6:9",
														"memberName": "Paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 905,
														"src": "2842:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$907",
															"typeString": "enum LandFiStaking.Status"
														}
													},
													"src": "2826:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$907",
														"typeString": "enum LandFiStaking.Status"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "2826:29:9"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1117,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1116,
												"name": "onlyOwner",
												"nameLocations": [
													"2805:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2805:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2805:9:9"
										}
									],
									"name": "pause",
									"nameLocation": "2788:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2793:2:9"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2815:0:9"
									},
									"scope": 1512,
									"src": "2779:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "2909:49:9",
										"statements": [
											{
												"expression": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1130,
														"name": "stakingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "2920:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$907",
															"typeString": "enum LandFiStaking.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1131,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "2936:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$907_$",
																"typeString": "type(enum LandFiStaking.Status)"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2943:7:9",
														"memberName": "Running",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 904,
														"src": "2936:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$907",
															"typeString": "enum LandFiStaking.Status"
														}
													},
													"src": "2920:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$907",
														"typeString": "enum LandFiStaking.Status"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "2920:30:9"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1128,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1127,
												"name": "onlyOwner",
												"nameLocations": [
													"2899:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2899:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2899:9:9"
										}
									],
									"name": "unpause",
									"nameLocation": "2880:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2887:2:9"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2909:0:9"
									},
									"scope": 1512,
									"src": "2871:87:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "3012:188:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1142,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3031:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3037:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3031:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1144,
																		"name": "launchTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 932,
																		"src": "3049:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1145,
																		"name": "buyDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "3062:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3049:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1147,
																	"name": "stakeDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "3076:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3049:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3031:58:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206e6f7420656e646564",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3091:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d",
																"typeString": "literal_string \"Stake not ended\""
															},
															"value": "Stake not ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_be150b9a2849a2057d6de56b9dc6fdff5ba1a005624347e9238ab1746349d17d",
																"typeString": "literal_string \"Stake not ended\""
															}
														],
														"id": 1141,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3023:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3023:86:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "3023:86:9"
											},
											{
												"expression": {
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1153,
														"name": "stakingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "3120:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$907",
															"typeString": "enum LandFiStaking.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1154,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "3136:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$907_$",
																"typeString": "type(enum LandFiStaking.Status)"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3143:8:9",
														"memberName": "Complete",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 906,
														"src": "3136:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$907",
															"typeString": "enum LandFiStaking.Status"
														}
													},
													"src": "3120:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$907",
														"typeString": "enum LandFiStaking.Status"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "3120:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1159,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3176:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3182:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3176:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1158,
														"name": "Complete",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "3167:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3167:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1162,
												"nodeType": "EmitStatement",
												"src": "3162:30:9"
											}
										]
									},
									"functionSelector": "fe1d3795",
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1138,
												"name": "onlyOwner",
												"nameLocations": [
													"3002:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3002:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3002:9:9"
										}
									],
									"name": "completeStaking",
									"nameLocation": "2975:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2990:2:9"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3012:0:9"
									},
									"scope": 1512,
									"src": "2966:234:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "3295:656:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1174,
															"name": "launchStaking",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "3314:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67206e6f74206c697665",
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3329:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d",
																"typeString": "literal_string \"Staking not live\""
															},
															"value": "Staking not live"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5532d67174248ffb17f7e83748d1f3b2ef596ef8df3d1785119253e6ebdb530d",
																"typeString": "literal_string \"Staking not live\""
															}
														],
														"id": 1173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3306:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3306:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "3306:42:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1179,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3367:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3373:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3367:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1181,
																	"name": "launchTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "3386:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1182,
																	"name": "buyDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "3399:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3386:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3367:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42757920706572696f64206f766572",
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3412:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065",
																"typeString": "literal_string \"Buy period over\""
															},
															"value": "Buy period over"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5da5319684e50dc16aec7674e7db938cd801fcdd990da148adccd32b5c5af065",
																"typeString": "literal_string \"Buy period over\""
															}
														],
														"id": 1178,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3359:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3359:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "3359:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1189,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "3449:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1190,
																"name": "minStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "3459:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3449:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42656c6f77206d696e207374616b65",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3469:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781",
																"typeString": "literal_string \"Below min stake\""
															},
															"value": "Below min stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b98e7474f5f80bb87ca7d2f563e7a69207f151076fcecacca107e14d94b2781",
																"typeString": "literal_string \"Below min stake\""
															}
														],
														"id": 1188,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3441:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3441:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "3441:46:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1196,
																		"name": "userStakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "3506:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1199,
																	"indexExpression": {
																		"expression": {
																			"id": 1197,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3517:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3521:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3517:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3506:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1200,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "3531:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3506:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1202,
																"name": "maxStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "3541:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3506:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d6178207374616b65",
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3551:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb",
																"typeString": "literal_string \"Exceeds max stake\""
															},
															"value": "Exceeds max stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e91fc66416e454af027967d2c71441ec0451b33c766a8cf84bfb0180fb22e2eb",
																"typeString": "literal_string \"Exceeds max stake\""
															}
														],
														"id": 1195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3498:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3498:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "3498:73:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1208,
																	"name": "totalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "3590:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1209,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "3604:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3590:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1211,
																"name": "maxTotalStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "3614:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3590:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578636565647320746f74616c20706f6f6c",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3629:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1",
																"typeString": "literal_string \"Exceeds total pool\""
															},
															"value": "Exceeds total pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c2dc9fe0b6c5b97a9d8ab5e8cb73bdf5269138a42c01fdd1ff0138df03c37f1",
																"typeString": "literal_string \"Exceeds total pool\""
															}
														],
														"id": 1207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3582:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3582:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "3582:68:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1216,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3667:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1219,
														"indexExpression": {
															"expression": {
																"id": 1217,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3678:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3682:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3678:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3667:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3693:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3667:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1230,
												"nodeType": "IfStatement",
												"src": "3663:87:9",
												"trueBody": {
													"id": 1229,
													"nodeType": "Block",
													"src": "3696:54:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1225,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3727:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3731:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3727:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1222,
																		"name": "stakedList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "3711:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3722:4:9",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3711:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3711:27:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1228,
															"nodeType": "ExpressionStatement",
															"src": "3711:27:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1234,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3791:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3795:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3791:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1238,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3811:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LandFiStaking_$1512",
																		"typeString": "contract LandFiStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LandFiStaking_$1512",
																		"typeString": "contract LandFiStaking"
																	}
																],
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3803:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1236,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3803:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3803:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1240,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "3818:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1231,
															"name": "landFiToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "3762:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3774:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "3762:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3762:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "3762:63:9"
											},
											{
												"expression": {
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1243,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "3836:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1246,
														"indexExpression": {
															"expression": {
																"id": 1244,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3847:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3851:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3847:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3836:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1247,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "3862:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3836:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "3836:32:9"
											},
											{
												"expression": {
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1250,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 939,
														"src": "3879:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1251,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1166,
														"src": "3894:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3879:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "3879:21:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1255,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3924:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3928:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3924:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1257,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "3936:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1254,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "3918:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3918:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "EmitStatement",
												"src": "3913:30:9"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1169,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1168,
												"name": "nonReentrant",
												"nameLocations": [
													"3270:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3270:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3270:12:9"
										},
										{
											"id": 1171,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1170,
												"name": "onlyRunning",
												"nameLocations": [
													"3283:11:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 992,
												"src": "3283:11:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3283:11:9"
										}
									],
									"name": "stake",
									"nameLocation": "3239:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3253:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "3245:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3245:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3244:16:9"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3295:0:9"
									},
									"scope": 1512,
									"src": "3230:721:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "4056:803:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_Status_$907",
																"typeString": "enum LandFiStaking.Status"
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1269,
																"name": "stakingStatus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 937,
																"src": "4075:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$907",
																	"typeString": "enum LandFiStaking.Status"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1270,
																	"name": "Status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "4092:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_Status_$907_$",
																		"typeString": "type(enum LandFiStaking.Status)"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4099:8:9",
																"memberName": "Complete",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 906,
																"src": "4092:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Status_$907",
																	"typeString": "enum LandFiStaking.Status"
																}
															},
															"src": "4075:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67206e6f7420636f6d706c657465",
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4109:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d",
																"typeString": "literal_string \"Staking not complete\""
															},
															"value": "Staking not complete"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_598fc5a6672b6f871a6c18be7df7b3ba2449370c86bd4c2cecdacf76647fb64d",
																"typeString": "literal_string \"Staking not complete\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4067:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4067:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "4067:65:9"
											},
											{
												"body": {
													"id": 1339,
													"nodeType": "Block",
													"src": "4193:432:9",
													"statements": [
														{
															"assignments": [
																1288
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1288,
																	"mutability": "mutable",
																	"name": "user",
																	"nameLocation": "4216:4:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1339,
																	"src": "4208:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1287,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4208:7:9",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1292,
															"initialValue": {
																"baseExpression": {
																	"id": 1289,
																	"name": "stakedList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "4223:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1291,
																"indexExpression": {
																	"id": 1290,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "4234:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4223:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4208:28:9"
														},
														{
															"assignments": [
																1294
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1294,
																	"mutability": "mutable",
																	"name": "userStake",
																	"nameLocation": "4259:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1339,
																	"src": "4251:17:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1293,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4251:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1298,
															"initialValue": {
																"baseExpression": {
																	"id": 1295,
																	"name": "userStakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "4271:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1297,
																"indexExpression": {
																	"id": 1296,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "4282:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4271:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4251:36:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1299,
																	"name": "userStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "4306:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4319:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4306:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1303,
															"nodeType": "IfStatement",
															"src": "4302:28:9",
															"trueBody": {
																"id": 1302,
																"nodeType": "Continue",
																"src": "4322:8:9"
															}
														},
														{
															"assignments": [
																1305
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1305,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "4355:6:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1339,
																	"src": "4347:14:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1304,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4347:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1312,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1306,
																				"name": "userStake",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1294,
																				"src": "4365:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1307,
																				"name": "rewardTotal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 927,
																				"src": "4377:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4365:23:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1309,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4364:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1310,
																	"name": "totalStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "4392:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4364:39:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4347:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1316,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1288,
																		"src": "4445:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1317,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "4451:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1313,
																		"name": "landFiToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "4420:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4432:12:9",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "4420:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4420:41:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1319,
															"nodeType": "ExpressionStatement",
															"src": "4420:41:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1323,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1288,
																		"src": "4501:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1324,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1305,
																		"src": "4507:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1320,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "4476:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4488:12:9",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "4476:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4476:38:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1326,
															"nodeType": "ExpressionStatement",
															"src": "4476:38:9"
														},
														{
															"expression": {
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1327,
																		"name": "userStakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "4529:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1329,
																	"indexExpression": {
																		"id": 1328,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1288,
																		"src": "4540:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4529:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4548:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4529:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1332,
															"nodeType": "ExpressionStatement",
															"src": "4529:20:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1334,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1288,
																		"src": "4589:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1335,
																		"name": "userStake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1294,
																		"src": "4595:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1336,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1305,
																		"src": "4606:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1333,
																	"name": "RewardDistributed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "4571:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256)"
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4571:42:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1338,
															"nodeType": "EmitStatement",
															"src": "4566:47:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1280,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "4165:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1281,
															"name": "stakedList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "4169:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4180:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4169:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4165:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1340,
												"initializationExpression": {
													"assignments": [
														1277
													],
													"declarations": [
														{
															"constant": false,
															"id": 1277,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4158:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1340,
															"src": "4150:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1276,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4150:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1279,
													"initialValue": {
														"hexValue": "30",
														"id": 1278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4162:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4150:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4188:3:9",
														"subExpression": {
															"id": 1284,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "4188:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1286,
													"nodeType": "ExpressionStatement",
													"src": "4188:3:9"
												},
												"nodeType": "ForStatement",
												"src": "4145:480:9"
											},
											{
												"assignments": [
													1342
												],
												"declarations": [
													{
														"constant": false,
														"id": 1342,
														"mutability": "mutable",
														"name": "leftover",
														"nameLocation": "4703:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1363,
														"src": "4695:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1341,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4695:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1350,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1347,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4744:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LandFiStaking_$1512",
																		"typeString": "contract LandFiStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LandFiStaking_$1512",
																		"typeString": "contract LandFiStaking"
																	}
																],
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4736:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1345,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4736:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1343,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "4714:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4726:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 337,
														"src": "4714:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4714:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4695:55:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1351,
														"name": "leftover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "4765:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4776:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4765:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1362,
												"nodeType": "IfStatement",
												"src": "4761:91:9",
												"trueBody": {
													"id": 1361,
													"nodeType": "Block",
													"src": "4779:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1357,
																		"name": "teamWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 915,
																		"src": "4819:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1358,
																		"name": "leftover",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "4831:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1354,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 913,
																		"src": "4794:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4806:12:9",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "4794:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4794:46:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1360,
															"nodeType": "ExpressionStatement",
															"src": "4794:46:9"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6f4a2cd0",
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1264,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1263,
												"name": "onlyOwner",
												"nameLocations": [
													"4033:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4033:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4033:9:9"
										},
										{
											"id": 1266,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1265,
												"name": "nonReentrant",
												"nameLocations": [
													"4043:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "4043:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4043:12:9"
										}
									],
									"name": "distributeRewards",
									"nameLocation": "4004:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4021:2:9"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4056:0:9"
									},
									"scope": 1512,
									"src": "3995:864:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "4951:389:9",
										"statements": [
											{
												"body": {
													"id": 1417,
													"nodeType": "Block",
													"src": "5010:281:9",
													"statements": [
														{
															"assignments": [
																1383
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1383,
																	"mutability": "mutable",
																	"name": "user",
																	"nameLocation": "5033:4:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1417,
																	"src": "5025:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1382,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5025:7:9",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1387,
															"initialValue": {
																"baseExpression": {
																	"id": 1384,
																	"name": "stakedList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "5040:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 1386,
																"indexExpression": {
																	"id": 1385,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1372,
																	"src": "5051:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5040:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5025:28:9"
														},
														{
															"assignments": [
																1389
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1389,
																	"mutability": "mutable",
																	"name": "amt",
																	"nameLocation": "5076:3:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1417,
																	"src": "5068:11:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1388,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5068:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1393,
															"initialValue": {
																"baseExpression": {
																	"id": 1390,
																	"name": "userStakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 943,
																	"src": "5082:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1392,
																"indexExpression": {
																	"id": 1391,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "5093:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5082:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5068:30:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1394,
																	"name": "amt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "5117:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5123:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5117:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1416,
															"nodeType": "IfStatement",
															"src": "5113:167:9",
															"trueBody": {
																"id": 1415,
																"nodeType": "Block",
																"src": "5126:154:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1400,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1383,
																					"src": "5170:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1401,
																					"name": "amt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1389,
																					"src": "5176:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1397,
																					"name": "landFiToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "5145:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1399,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5157:12:9",
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 425,
																				"src": "5145:24:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5145:35:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1403,
																		"nodeType": "ExpressionStatement",
																		"src": "5145:35:9"
																	},
																	{
																		"expression": {
																			"id": 1408,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1404,
																					"name": "userStakes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 943,
																					"src": "5199:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1406,
																				"indexExpression": {
																					"id": 1405,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1383,
																					"src": "5210:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5199:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1407,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5218:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5199:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1409,
																		"nodeType": "ExpressionStatement",
																		"src": "5199:20:9"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1411,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1383,
																					"src": "5254:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1412,
																					"name": "amt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1389,
																					"src": "5260:3:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1410,
																				"name": "Terminated",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 974,
																				"src": "5243:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5243:21:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1414,
																		"nodeType": "EmitStatement",
																		"src": "5238:26:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1375,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "4982:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1376,
															"name": "stakedList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "4986:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4997:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4986:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4982:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1418,
												"initializationExpression": {
													"assignments": [
														1372
													],
													"declarations": [
														{
															"constant": false,
															"id": 1372,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4975:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1418,
															"src": "4967:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1371,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4967:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1374,
													"initialValue": {
														"hexValue": "30",
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4979:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4967:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5005:3:9",
														"subExpression": {
															"id": 1379,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "5005:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1381,
													"nodeType": "ExpressionStatement",
													"src": "5005:3:9"
												},
												"nodeType": "ForStatement",
												"src": "4962:329:9"
											},
											{
												"expression": {
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1419,
														"name": "stakingStatus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "5301:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$907",
															"typeString": "enum LandFiStaking.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1420,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "5317:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$907_$",
																"typeString": "type(enum LandFiStaking.Status)"
															}
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5324:8:9",
														"memberName": "Complete",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 906,
														"src": "5317:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$907",
															"typeString": "enum LandFiStaking.Status"
														}
													},
													"src": "5301:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$907",
														"typeString": "enum LandFiStaking.Status"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "5301:31:9"
											}
										]
									},
									"functionSelector": "4f984c5c",
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1367,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1366,
												"name": "onlyOwner",
												"nameLocations": [
													"4928:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4928:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4928:9:9"
										},
										{
											"id": 1369,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1368,
												"name": "nonReentrant",
												"nameLocations": [
													"4938:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "4938:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4938:12:9"
										}
									],
									"name": "terminateAll",
									"nameLocation": "4904:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4916:2:9"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4951:0:9"
									},
									"scope": 1512,
									"src": "4895:445:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "5419:220:9",
										"statements": [
											{
												"assignments": [
													1435
												],
												"declarations": [
													{
														"constant": false,
														"id": 1435,
														"mutability": "mutable",
														"name": "amt",
														"nameLocation": "5438:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "5430:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5430:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1439,
												"initialValue": {
													"baseExpression": {
														"id": 1436,
														"name": "userStakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "5444:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1438,
													"indexExpression": {
														"id": 1437,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "5455:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5444:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5430:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1441,
																"name": "amt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "5479:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5485:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5479:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f207465726d696e617465",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5488:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1",
																"typeString": "literal_string \"Nothing to terminate\""
															},
															"value": "Nothing to terminate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc3a85fd5c9e64073b6419ce0fda9dd66f548740512b552c7a2ea6d37bee75b1",
																"typeString": "literal_string \"Nothing to terminate\""
															}
														],
														"id": 1440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5471:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5471:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "5471:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1450,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "5547:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1451,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "5553:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1447,
															"name": "landFiToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "5522:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5534:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "5522:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5522:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "5522:35:9"
											},
											{
												"expression": {
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1454,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "5568:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1456,
														"indexExpression": {
															"id": 1455,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "5579:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5568:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5587:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5568:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "5568:20:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1461,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "5621:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1462,
															"name": "amt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "5627:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1460,
														"name": "TerminatedSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "5604:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5604:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1464,
												"nodeType": "EmitStatement",
												"src": "5599:32:9"
											}
										]
									},
									"functionSelector": "10d63d03",
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1430,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1429,
												"name": "onlyOwner",
												"nameLocations": [
													"5396:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5396:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5396:9:9"
										},
										{
											"id": 1432,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1431,
												"name": "nonReentrant",
												"nameLocations": [
													"5406:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "5406:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5406:12:9"
										}
									],
									"name": "terminateSingle",
									"nameLocation": "5357:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5381:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "5373:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5373:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5372:14:9"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5419:0:9"
									},
									"scope": 1512,
									"src": "5348:291:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "5738:36:9",
										"statements": [
											{
												"expression": {
													"id": 1472,
													"name": "stakedList",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 946,
													"src": "5756:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1471,
												"id": 1473,
												"nodeType": "Return",
												"src": "5749:17:9"
											}
										]
									},
									"functionSelector": "d719fa97",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakedUsers",
									"nameLocation": "5680:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:2:9"
									},
									"returnParameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "5720:16:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1468,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "5720:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1469,
													"nodeType": "ArrayTypeName",
													"src": "5720:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5719:18:9"
									},
									"scope": 1512,
									"src": "5671:103:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "5841:39:9",
										"statements": [
											{
												"expression": {
													"id": 1481,
													"name": "stakingStatus",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 937,
													"src": "5859:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$907",
														"typeString": "enum LandFiStaking.Status"
													}
												},
												"functionReturnParameters": 1480,
												"id": 1482,
												"nodeType": "Return",
												"src": "5852:20:9"
											}
										]
									},
									"functionSelector": "cab9b8fb",
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakingStatus",
									"nameLocation": "5791:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5807:2:9"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "5833:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$907",
													"typeString": "enum LandFiStaking.Status"
												},
												"typeName": {
													"id": 1478,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1477,
														"name": "Status",
														"nameLocations": [
															"5833:6:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 907,
														"src": "5833:6:9"
													},
													"referencedDeclaration": 907,
													"src": "5833:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$907",
														"typeString": "enum LandFiStaking.Status"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5832:8:9"
									},
									"scope": 1512,
									"src": "5782:98:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "5966:120:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1491,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "5981:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5996:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5981:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1494,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "6001:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6011:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6001:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5981:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1500,
												"nodeType": "IfStatement",
												"src": "5977:45:9",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1498,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6021:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1490,
													"id": 1499,
													"nodeType": "Return",
													"src": "6014:8:9"
												}
											},
											{
												"expression": {
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1501,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "6033:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1502,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1486,
																		"src": "6043:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1503,
																		"name": "rewardTotal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "6052:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6043:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1505,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6042:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1506,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "6067:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6042:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6033:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "6033:45:9"
											}
										]
									},
									"functionSelector": "b973e1bf",
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "previewReward",
									"nameLocation": "5897:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5919:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "5911:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5911:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5910:16:9"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5958:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "5950:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5950:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5949:16:9"
									},
									"scope": 1512,
									"src": "5888:198:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1513,
							"src": "306:5783:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								952,
								956,
								960,
								968,
								974,
								980
							]
						}
					],
					"src": "33:6058:9"
				},
				"id": 9
			}
		}
	}
}