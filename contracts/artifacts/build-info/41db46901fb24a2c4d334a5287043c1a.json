{
	"id": "41db46901fb24a2c4d334a5287043c1a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LandFIStake2.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract LandFiStakingWithRewards is Ownable(msg.sender), ReentrancyGuard {\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public immutable landFiToken;   // Token users stake\r\n    IERC20 public immutable rewardToken;   // Token users receive as reward\r\n\r\n    uint8 public immutable landFiDecimals;\r\n    uint8 public immutable rewardDecimals;\r\n\r\n    mapping(address => uint256) public stakes;\r\n    mapping(address => uint256) public depositTimestamps;\r\n\r\n    uint256 public stakeDuration;  // Lockup period in seconds\r\n    uint256 public maxStake;\r\n    uint256 public minStake;\r\n    bool public fullUnlock;\r\n\r\n    /// @notice Emitted when a user stakes tokens\r\n    event Staked(address indexed user, uint256 amount, uint256 timestamp);\r\n\r\n    /// @notice Emitted when a user withdraws staked tokens and rewards\r\n    event Withdrawn(address indexed user, uint256 amount, uint256 reward, uint256 timestamp);\r\n\r\n    constructor(\r\n        address _landFiToken,\r\n        address _rewardToken,\r\n        uint256 _stakeDuration,\r\n        uint256 _maxStake,\r\n        uint256 _minStake\r\n    ) {\r\n        require(_landFiToken != address(0), \"LandFi token zero address\");\r\n        require(_rewardToken != address(0), \"Reward token zero address\");\r\n        require(_stakeDuration > 0, \"Stake duration must be > 0\");\r\n        require(_maxStake > 0, \"Max stake must be > 0\");\r\n        require(_minStake > 0 && _minStake <= _maxStake, \"Invalid min stake\");\r\n\r\n        landFiToken = IERC20(_landFiToken);\r\n        rewardToken = IERC20(_rewardToken);\r\n\r\n        landFiDecimals = _getDecimals(_landFiToken);\r\n        rewardDecimals = _getDecimals(_rewardToken);\r\n\r\n        stakeDuration = _stakeDuration;\r\n        maxStake = _maxStake;\r\n        minStake = _minStake;\r\n        fullUnlock = false;\r\n    }\r\n\r\n    // Internal helper to get decimals from token contract\r\n    function _getDecimals(address token) internal view returns (uint8) {\r\n        (bool success, bytes memory data) = token.staticcall(\r\n            abi.encodeWithSignature(\"decimals()\")\r\n        );\r\n        require(success && data.length == 32, \"Failed to get decimals\");\r\n        return abi.decode(data, (uint8));\r\n    }\r\n\r\n    // Admin functions\r\n    function changeStakeDuration(uint256 _newDuration) external onlyOwner {\r\n        require(_newDuration > 0, \"Stake duration must be > 0\");\r\n        stakeDuration = _newDuration;\r\n    }\r\n\r\n    function changeMaxStake(uint256 _maxStake) external onlyOwner {\r\n        require(_maxStake > 0, \"Max stake must be > 0\");\r\n        maxStake = _maxStake;\r\n    }\r\n\r\n    function changeMinStake(uint256 _minStake) external onlyOwner {\r\n        require(_minStake > 0 && _minStake <= maxStake, \"Invalid min stake\");\r\n        minStake = _minStake;\r\n    }\r\n\r\n    function changeFullUnlock(bool _fullUnlock) external onlyOwner {\r\n        fullUnlock = _fullUnlock;\r\n    }\r\n\r\n    // Stake LandFi tokens\r\n    function stake(uint256 amount) external nonReentrant {\r\n        address user = msg.sender;\r\n        require(stakes[user] == 0, \"Already staking\");\r\n        require(amount >= minStake, \"Amount below minStake\");\r\n        require(amount <= maxStake, \"Amount exceeds maxStake\");\r\n        require(!fullUnlock, \"Staking locked\");\r\n\r\n        stakes[user] = amount;\r\n        depositTimestamps[user] = block.timestamp;\r\n\r\n        landFiToken.safeTransferFrom(user, address(this), amount);\r\n\r\n        emit Staked(user, amount, block.timestamp);\r\n    }\r\n\r\n    // Calculate reward based on stake amount with decimals normalization\r\n    // Example: 5% reward based on USD value approximation\r\n    function calculateReward(address user) public view returns (uint256) {\r\n        uint256 amount = stakes[user];\r\n        if (amount == 0) return 0;\r\n\r\n        // Normalize staked amount to 18 decimals\r\n        uint256 normalizedStake = _normalizeDecimals(amount, landFiDecimals, 18);\r\n\r\n        // Calculate 5% reward of normalized stake (adjust this logic as needed)\r\n        uint256 rewardNormalized = (normalizedStake * 5) / 100;\r\n\r\n        // Convert reward back to reward token decimals\r\n        uint256 rewardAmount = _normalizeDecimals(rewardNormalized, 18, rewardDecimals);\r\n        return rewardAmount;\r\n    }\r\n\r\n    // Withdraw staked tokens + rewards\r\n    function withdraw() external nonReentrant {\r\n        address user = msg.sender;\r\n        uint256 amount = stakes[user];\r\n        require(amount > 0, \"No stake found\");\r\n        require(fullUnlock || block.timestamp >= depositTimestamps[user] + stakeDuration, \"Stake locked\");\r\n\r\n        uint256 rewardAmount = calculateReward(user);\r\n\r\n        stakes[user] = 0;\r\n        depositTimestamps[user] = 0;\r\n\r\n        landFiToken.safeTransfer(user, amount);\r\n\r\n        if (rewardAmount > 0) {\r\n            require(rewardToken.balanceOf(address(this)) >= rewardAmount, \"Insufficient reward balance\");\r\n            rewardToken.safeTransfer(user, rewardAmount);\r\n        }\r\n\r\n        emit Withdrawn(user, amount, rewardAmount, block.timestamp);\r\n    }\r\n\r\n    // View functions\r\n    function balanceOf(address user) external view returns (uint256) {\r\n        return stakes[user];\r\n    }\r\n\r\n    function stakeUnlockTime(address user) external view returns (uint256) {\r\n        return depositTimestamps[user] + stakeDuration;\r\n    }\r\n\r\n    // Internal helper: normalize decimals between tokens\r\n    // fromDecimals -> toDecimals conversion\r\n    function _normalizeDecimals(\r\n        uint256 amount,\r\n        uint8 fromDecimals,\r\n        uint8 toDecimals\r\n    ) internal pure returns (uint256) {\r\n        if (fromDecimals == toDecimals) {\r\n            return amount;\r\n        } else if (fromDecimals > toDecimals) {\r\n            return amount / (10**(fromDecimals - toDecimals));\r\n        } else {\r\n            return amount * (10**(toDecimals - fromDecimals));\r\n        }\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/LandFIStake2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/LandFIStake2.sol": {
				"LandFiStakingWithRewards": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_landFiToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_stakeDuration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxStake",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minStake",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_fullUnlock",
									"type": "bool"
								}
							],
							"name": "changeFullUnlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_maxStake",
									"type": "uint256"
								}
							],
							"name": "changeMaxStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minStake",
									"type": "uint256"
								}
							],
							"name": "changeMinStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newDuration",
									"type": "uint256"
								}
							],
							"name": "changeStakeDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "depositTimestamps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fullUnlock",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "landFiDecimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "landFiToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardDecimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "stakeUnlockTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LandFIStake2.sol\":313:6120  contract LandFiStakingWithRewards is Ownable(msg.sender), ReentrancyGuard {... */\n  mstore(0x40, 0x0100)\n    /* \"contracts/LandFIStake2.sol\":1226:2096  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/LandFIStake2.sol\":358:368  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":1439:1440  0 */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":1415:1441  _landFiToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/LandFIStake2.sol\":1415:1427  _landFiToken */\n  dup6\n    /* \"contracts/LandFIStake2.sol\":1415:1441  _landFiToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/LandFIStake2.sol\":1407:1471  require(_landFiToken != address(0), \"LandFi token zero address\") */\n  tag_15\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_16\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_15:\n    /* \"contracts/LandFIStake2.sol\":1514:1515  0 */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":1490:1516  _rewardToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/LandFIStake2.sol\":1490:1502  _rewardToken */\n  dup5\n    /* \"contracts/LandFIStake2.sol\":1490:1516  _rewardToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/LandFIStake2.sol\":1482:1546  require(_rewardToken != address(0), \"Reward token zero address\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"contracts/LandFIStake2.sol\":1582:1583  0 */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":1565:1579  _stakeDuration */\n  dup4\n    /* \"contracts/LandFIStake2.sol\":1565:1583  _stakeDuration > 0 */\n  gt\n    /* \"contracts/LandFIStake2.sol\":1557:1614  require(_stakeDuration > 0, \"Stake duration must be > 0\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"contracts/LandFIStake2.sol\":1645:1646  0 */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":1633:1642  _maxStake */\n  dup3\n    /* \"contracts/LandFIStake2.sol\":1633:1646  _maxStake > 0 */\n  gt\n    /* \"contracts/LandFIStake2.sol\":1625:1672  require(_maxStake > 0, \"Max stake must be > 0\") */\n  tag_24\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_24:\n    /* \"contracts/LandFIStake2.sol\":1703:1704  0 */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":1691:1700  _minStake */\n  dup2\n    /* \"contracts/LandFIStake2.sol\":1691:1704  _minStake > 0 */\n  gt\n    /* \"contracts/LandFIStake2.sol\":1691:1730  _minStake > 0 && _minStake <= _maxStake */\n  dup1\n  iszero\n  tag_27\n  jumpi\n  pop\n    /* \"contracts/LandFIStake2.sol\":1721:1730  _maxStake */\n  dup2\n    /* \"contracts/LandFIStake2.sol\":1708:1717  _minStake */\n  dup2\n    /* \"contracts/LandFIStake2.sol\":1708:1730  _minStake <= _maxStake */\n  gt\n  iszero\n    /* \"contracts/LandFIStake2.sol\":1691:1730  _minStake > 0 && _minStake <= _maxStake */\ntag_27:\n    /* \"contracts/LandFIStake2.sol\":1683:1752  require(_minStake > 0 && _minStake <= _maxStake, \"Invalid min stake\") */\n  tag_28\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_28:\n    /* \"contracts/LandFIStake2.sol\":1786:1798  _landFiToken */\n  dup5\n    /* \"contracts/LandFIStake2.sol\":1765:1799  landFiToken = IERC20(_landFiToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFIStake2.sol\":1831:1843  _rewardToken */\n  dup4\n    /* \"contracts/LandFIStake2.sol\":1810:1844  rewardToken = IERC20(_rewardToken) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFIStake2.sol\":1874:1900  _getDecimals(_landFiToken) */\n  tag_31\n    /* \"contracts/LandFIStake2.sol\":1887:1899  _landFiToken */\n  dup6\n    /* \"contracts/LandFIStake2.sol\":1874:1886  _getDecimals */\n  shl(0x20, tag_32)\n    /* \"contracts/LandFIStake2.sol\":1874:1900  _getDecimals(_landFiToken) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"contracts/LandFIStake2.sol\":1857:1900  landFiDecimals = _getDecimals(_landFiToken) */\n  0xff\n  and\n  0xc0\n  dup2\n  0xff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFIStake2.sol\":1928:1954  _getDecimals(_rewardToken) */\n  tag_33\n    /* \"contracts/LandFIStake2.sol\":1941:1953  _rewardToken */\n  dup5\n    /* \"contracts/LandFIStake2.sol\":1928:1940  _getDecimals */\n  shl(0x20, tag_32)\n    /* \"contracts/LandFIStake2.sol\":1928:1954  _getDecimals(_rewardToken) */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"contracts/LandFIStake2.sol\":1911:1954  rewardDecimals = _getDecimals(_rewardToken) */\n  0xff\n  and\n  0xe0\n  dup2\n  0xff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/LandFIStake2.sol\":1983:1997  _stakeDuration */\n  dup3\n    /* \"contracts/LandFIStake2.sol\":1967:1980  stakeDuration */\n  0x04\n    /* \"contracts/LandFIStake2.sol\":1967:1997  stakeDuration = _stakeDuration */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2019:2028  _maxStake */\n  dup2\n    /* \"contracts/LandFIStake2.sol\":2008:2016  maxStake */\n  0x05\n    /* \"contracts/LandFIStake2.sol\":2008:2028  maxStake = _maxStake */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2050:2059  _minStake */\n  dup1\n    /* \"contracts/LandFIStake2.sol\":2039:2047  minStake */\n  0x06\n    /* \"contracts/LandFIStake2.sol\":2039:2059  minStake = _minStake */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":2083:2088  false */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":2070:2080  fullUnlock */\n  0x07\n  0x00\n    /* \"contracts/LandFIStake2.sol\":2070:2088  fullUnlock = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFIStake2.sol\":1226:2096  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/LandFIStake2.sol\":313:6120  contract LandFiStakingWithRewards is Ownable(msg.sender), ReentrancyGuard {... */\n  jump(tag_34)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/LandFIStake2.sol\":2164:2482  function _getDecimals(address token) internal view returns (uint8) {... */\ntag_32:\n    /* \"contracts/LandFIStake2.sol\":2224:2229  uint8 */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":2243:2255  bool success */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":2257:2274  bytes memory data */\n  0x00\n    /* \"contracts/LandFIStake2.sol\":2278:2283  token */\n  dup4\n    /* \"contracts/LandFIStake2.sol\":2278:2294  token.staticcall */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/LandFIStake2.sol\":2309:2346  abi.encodeWithSignature(\"decimals()\") */\n  add(0x24, mload(0x40))\n  mload(0x40)\n  0x20\n  dup2\n  dup4\n  sub\n  sub\n  dup2\n  mstore\n  swap1\n  0x40\n  mstore\n  and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x313ce56700000000000000000000000000000000000000000000000000000000)\n  0x20\n  dup3\n  add\n  dup1\n  mload\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n  dup4\n  dup2\n  dup4\n  and\n  or\n  dup4\n  mstore\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/LandFIStake2.sol\":2278:2357  token.staticcall(... */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  staticcall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_41\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_40)\ntag_41:\n  0x60\n  swap2\n  pop\ntag_40:\n  pop\n    /* \"contracts/LandFIStake2.sol\":2242:2357  (bool success, bytes memory data) = token.staticcall(... */\n  swap2\n  pop\n  swap2\n  pop\n    /* \"contracts/LandFIStake2.sol\":2376:2383  success */\n  dup2\n    /* \"contracts/LandFIStake2.sol\":2376:2404  success && data.length == 32 */\n  dup1\n  iszero\n  tag_42\n  jumpi\n  pop\n    /* \"contracts/LandFIStake2.sol\":2402:2404  32 */\n  0x20\n    /* \"contracts/LandFIStake2.sol\":2387:2391  data */\n  dup2\n    /* \"contracts/LandFIStake2.sol\":2387:2398  data.length */\n  mload\n    /* \"contracts/LandFIStake2.sol\":2387:2404  data.length == 32 */\n  eq\n    /* \"contracts/LandFIStake2.sol\":2376:2404  success && data.length == 32 */\ntag_42:\n    /* \"contracts/LandFIStake2.sol\":2368:2431  require(success && data.length == 32, \"Failed to get decimals\") */\n  tag_43\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_44\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_43:\n    /* \"contracts/LandFIStake2.sol\":2460:2464  data */\n  dup1\n    /* \"contracts/LandFIStake2.sol\":2449:2474  abi.decode(data, (uint8)) */\n  dup1\n  0x20\n  add\n  swap1\n  mload\n  dup2\n  add\n  swap1\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n    /* \"contracts/LandFIStake2.sol\":2442:2474  return abi.decode(data, (uint8)) */\n  swap3\n  pop\n  pop\n  pop\n    /* \"contracts/LandFIStake2.sol\":2164:2482  function _getDecimals(address token) internal view returns (uint8) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_49:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_51:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_52:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_85\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_51\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_53:\n    /* \"#utility.yul\":641:665   */\n  tag_87\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_52\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_88:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_54:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_90\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_53\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_55:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_56:\n    /* \"#utility.yul\":1001:1025   */\n  tag_93\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_55\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_94:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_57:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_96\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_56\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2182   */\ntag_3:\n    /* \"#utility.yul\":1311:1317   */\n  0x00\n    /* \"#utility.yul\":1319:1325   */\n  0x00\n    /* \"#utility.yul\":1327:1333   */\n  0x00\n    /* \"#utility.yul\":1335:1341   */\n  0x00\n    /* \"#utility.yul\":1343:1349   */\n  0x00\n    /* \"#utility.yul\":1392:1395   */\n  0xa0\n    /* \"#utility.yul\":1380:1389   */\n  dup7\n    /* \"#utility.yul\":1371:1378   */\n  dup9\n    /* \"#utility.yul\":1367:1390   */\n  sub\n    /* \"#utility.yul\":1363:1396   */\n  slt\n    /* \"#utility.yul\":1360:1480   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":1399:1478   */\n  tag_99\n  tag_49\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1360:1480   */\ntag_98:\n    /* \"#utility.yul\":1519:1520   */\n  0x00\n    /* \"#utility.yul\":1544:1608   */\n  tag_100\n    /* \"#utility.yul\":1600:1607   */\n  dup9\n    /* \"#utility.yul\":1591:1597   */\n  dup3\n    /* \"#utility.yul\":1580:1589   */\n  dup10\n    /* \"#utility.yul\":1576:1598   */\n  add\n    /* \"#utility.yul\":1544:1608   */\n  tag_54\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1534:1608   */\n  swap6\n  pop\n    /* \"#utility.yul\":1490:1618   */\n  pop\n    /* \"#utility.yul\":1657:1659   */\n  0x20\n    /* \"#utility.yul\":1683:1747   */\n  tag_101\n    /* \"#utility.yul\":1739:1746   */\n  dup9\n    /* \"#utility.yul\":1730:1736   */\n  dup3\n    /* \"#utility.yul\":1719:1728   */\n  dup10\n    /* \"#utility.yul\":1715:1737   */\n  add\n    /* \"#utility.yul\":1683:1747   */\n  tag_54\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":1673:1747   */\n  swap5\n  pop\n    /* \"#utility.yul\":1628:1757   */\n  pop\n    /* \"#utility.yul\":1796:1798   */\n  0x40\n    /* \"#utility.yul\":1822:1886   */\n  tag_102\n    /* \"#utility.yul\":1878:1885   */\n  dup9\n    /* \"#utility.yul\":1869:1875   */\n  dup3\n    /* \"#utility.yul\":1858:1867   */\n  dup10\n    /* \"#utility.yul\":1854:1876   */\n  add\n    /* \"#utility.yul\":1822:1886   */\n  tag_57\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1812:1886   */\n  swap4\n  pop\n    /* \"#utility.yul\":1767:1896   */\n  pop\n    /* \"#utility.yul\":1935:1937   */\n  0x60\n    /* \"#utility.yul\":1961:2025   */\n  tag_103\n    /* \"#utility.yul\":2017:2024   */\n  dup9\n    /* \"#utility.yul\":2008:2014   */\n  dup3\n    /* \"#utility.yul\":1997:2006   */\n  dup10\n    /* \"#utility.yul\":1993:2015   */\n  add\n    /* \"#utility.yul\":1961:2025   */\n  tag_57\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1951:2025   */\n  swap3\n  pop\n    /* \"#utility.yul\":1906:2035   */\n  pop\n    /* \"#utility.yul\":2074:2077   */\n  0x80\n    /* \"#utility.yul\":2101:2165   */\n  tag_104\n    /* \"#utility.yul\":2157:2164   */\n  dup9\n    /* \"#utility.yul\":2148:2154   */\n  dup3\n    /* \"#utility.yul\":2137:2146   */\n  dup10\n    /* \"#utility.yul\":2133:2155   */\n  add\n    /* \"#utility.yul\":2101:2165   */\n  tag_57\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2091:2165   */\n  swap2\n  pop\n    /* \"#utility.yul\":2045:2175   */\n  pop\n    /* \"#utility.yul\":1205:2182   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2188:2306   */\ntag_58:\n    /* \"#utility.yul\":2275:2299   */\n  tag_106\n    /* \"#utility.yul\":2293:2298   */\n  dup2\n    /* \"#utility.yul\":2275:2299   */\n  tag_52\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2270:2273   */\n  dup3\n    /* \"#utility.yul\":2263:2300   */\n  mstore\n    /* \"#utility.yul\":2188:2306   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2312:2534   */\ntag_10:\n    /* \"#utility.yul\":2405:2409   */\n  0x00\n    /* \"#utility.yul\":2443:2445   */\n  0x20\n    /* \"#utility.yul\":2432:2441   */\n  dup3\n    /* \"#utility.yul\":2428:2446   */\n  add\n    /* \"#utility.yul\":2420:2446   */\n  swap1\n  pop\n    /* \"#utility.yul\":2456:2527   */\n  tag_108\n    /* \"#utility.yul\":2524:2525   */\n  0x00\n    /* \"#utility.yul\":2513:2522   */\n  dup4\n    /* \"#utility.yul\":2509:2526   */\n  add\n    /* \"#utility.yul\":2500:2506   */\n  dup5\n    /* \"#utility.yul\":2456:2527   */\n  tag_58\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2312:2534   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2540:2709   */\ntag_59:\n    /* \"#utility.yul\":2624:2635   */\n  0x00\n    /* \"#utility.yul\":2658:2664   */\n  dup3\n    /* \"#utility.yul\":2653:2656   */\n  dup3\n    /* \"#utility.yul\":2646:2665   */\n  mstore\n    /* \"#utility.yul\":2698:2702   */\n  0x20\n    /* \"#utility.yul\":2693:2696   */\n  dup3\n    /* \"#utility.yul\":2689:2703   */\n  add\n    /* \"#utility.yul\":2674:2703   */\n  swap1\n  pop\n    /* \"#utility.yul\":2540:2709   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2715:2890   */\ntag_60:\n    /* \"#utility.yul\":2855:2882   */\n  0x4c616e64466920746f6b656e207a65726f206164647265737300000000000000\n    /* \"#utility.yul\":2851:2852   */\n  0x00\n    /* \"#utility.yul\":2843:2849   */\n  dup3\n    /* \"#utility.yul\":2839:2853   */\n  add\n    /* \"#utility.yul\":2832:2883   */\n  mstore\n    /* \"#utility.yul\":2715:2890   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2896:3262   */\ntag_61:\n    /* \"#utility.yul\":3038:3041   */\n  0x00\n    /* \"#utility.yul\":3059:3126   */\n  tag_112\n    /* \"#utility.yul\":3123:3125   */\n  0x19\n    /* \"#utility.yul\":3118:3121   */\n  dup4\n    /* \"#utility.yul\":3059:3126   */\n  tag_59\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3052:3126   */\n  swap2\n  pop\n    /* \"#utility.yul\":3135:3228   */\n  tag_113\n    /* \"#utility.yul\":3224:3227   */\n  dup3\n    /* \"#utility.yul\":3135:3228   */\n  tag_60\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3253:3255   */\n  0x20\n    /* \"#utility.yul\":3248:3251   */\n  dup3\n    /* \"#utility.yul\":3244:3256   */\n  add\n    /* \"#utility.yul\":3237:3256   */\n  swap1\n  pop\n    /* \"#utility.yul\":2896:3262   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3268:3687   */\ntag_17:\n    /* \"#utility.yul\":3434:3438   */\n  0x00\n    /* \"#utility.yul\":3472:3474   */\n  0x20\n    /* \"#utility.yul\":3461:3470   */\n  dup3\n    /* \"#utility.yul\":3457:3475   */\n  add\n    /* \"#utility.yul\":3449:3475   */\n  swap1\n  pop\n    /* \"#utility.yul\":3521:3530   */\n  dup2\n    /* \"#utility.yul\":3515:3519   */\n  dup2\n    /* \"#utility.yul\":3511:3531   */\n  sub\n    /* \"#utility.yul\":3507:3508   */\n  0x00\n    /* \"#utility.yul\":3496:3505   */\n  dup4\n    /* \"#utility.yul\":3492:3509   */\n  add\n    /* \"#utility.yul\":3485:3532   */\n  mstore\n    /* \"#utility.yul\":3549:3680   */\n  tag_115\n    /* \"#utility.yul\":3675:3679   */\n  dup2\n    /* \"#utility.yul\":3549:3680   */\n  tag_61\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3541:3680   */\n  swap1\n  pop\n    /* \"#utility.yul\":3268:3687   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3693:3868   */\ntag_62:\n    /* \"#utility.yul\":3833:3860   */\n  0x52657761726420746f6b656e207a65726f206164647265737300000000000000\n    /* \"#utility.yul\":3829:3830   */\n  0x00\n    /* \"#utility.yul\":3821:3827   */\n  dup3\n    /* \"#utility.yul\":3817:3831   */\n  add\n    /* \"#utility.yul\":3810:3861   */\n  mstore\n    /* \"#utility.yul\":3693:3868   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3874:4240   */\ntag_63:\n    /* \"#utility.yul\":4016:4019   */\n  0x00\n    /* \"#utility.yul\":4037:4104   */\n  tag_118\n    /* \"#utility.yul\":4101:4103   */\n  0x19\n    /* \"#utility.yul\":4096:4099   */\n  dup4\n    /* \"#utility.yul\":4037:4104   */\n  tag_59\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":4030:4104   */\n  swap2\n  pop\n    /* \"#utility.yul\":4113:4206   */\n  tag_119\n    /* \"#utility.yul\":4202:4205   */\n  dup3\n    /* \"#utility.yul\":4113:4206   */\n  tag_62\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":4231:4233   */\n  0x20\n    /* \"#utility.yul\":4226:4229   */\n  dup3\n    /* \"#utility.yul\":4222:4234   */\n  add\n    /* \"#utility.yul\":4215:4234   */\n  swap1\n  pop\n    /* \"#utility.yul\":3874:4240   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4246:4665   */\ntag_20:\n    /* \"#utility.yul\":4412:4416   */\n  0x00\n    /* \"#utility.yul\":4450:4452   */\n  0x20\n    /* \"#utility.yul\":4439:4448   */\n  dup3\n    /* \"#utility.yul\":4435:4453   */\n  add\n    /* \"#utility.yul\":4427:4453   */\n  swap1\n  pop\n    /* \"#utility.yul\":4499:4508   */\n  dup2\n    /* \"#utility.yul\":4493:4497   */\n  dup2\n    /* \"#utility.yul\":4489:4509   */\n  sub\n    /* \"#utility.yul\":4485:4486   */\n  0x00\n    /* \"#utility.yul\":4474:4483   */\n  dup4\n    /* \"#utility.yul\":4470:4487   */\n  add\n    /* \"#utility.yul\":4463:4510   */\n  mstore\n    /* \"#utility.yul\":4527:4658   */\n  tag_121\n    /* \"#utility.yul\":4653:4657   */\n  dup2\n    /* \"#utility.yul\":4527:4658   */\n  tag_63\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4519:4658   */\n  swap1\n  pop\n    /* \"#utility.yul\":4246:4665   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4671:4847   */\ntag_64:\n    /* \"#utility.yul\":4811:4839   */\n  0x5374616b65206475726174696f6e206d757374206265203e2030000000000000\n    /* \"#utility.yul\":4807:4808   */\n  0x00\n    /* \"#utility.yul\":4799:4805   */\n  dup3\n    /* \"#utility.yul\":4795:4809   */\n  add\n    /* \"#utility.yul\":4788:4840   */\n  mstore\n    /* \"#utility.yul\":4671:4847   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4853:5219   */\ntag_65:\n    /* \"#utility.yul\":4995:4998   */\n  0x00\n    /* \"#utility.yul\":5016:5083   */\n  tag_124\n    /* \"#utility.yul\":5080:5082   */\n  0x1a\n    /* \"#utility.yul\":5075:5078   */\n  dup4\n    /* \"#utility.yul\":5016:5083   */\n  tag_59\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":5009:5083   */\n  swap2\n  pop\n    /* \"#utility.yul\":5092:5185   */\n  tag_125\n    /* \"#utility.yul\":5181:5184   */\n  dup3\n    /* \"#utility.yul\":5092:5185   */\n  tag_64\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5210:5212   */\n  0x20\n    /* \"#utility.yul\":5205:5208   */\n  dup3\n    /* \"#utility.yul\":5201:5213   */\n  add\n    /* \"#utility.yul\":5194:5213   */\n  swap1\n  pop\n    /* \"#utility.yul\":4853:5219   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5225:5644   */\ntag_23:\n    /* \"#utility.yul\":5391:5395   */\n  0x00\n    /* \"#utility.yul\":5429:5431   */\n  0x20\n    /* \"#utility.yul\":5418:5427   */\n  dup3\n    /* \"#utility.yul\":5414:5432   */\n  add\n    /* \"#utility.yul\":5406:5432   */\n  swap1\n  pop\n    /* \"#utility.yul\":5478:5487   */\n  dup2\n    /* \"#utility.yul\":5472:5476   */\n  dup2\n    /* \"#utility.yul\":5468:5488   */\n  sub\n    /* \"#utility.yul\":5464:5465   */\n  0x00\n    /* \"#utility.yul\":5453:5462   */\n  dup4\n    /* \"#utility.yul\":5449:5466   */\n  add\n    /* \"#utility.yul\":5442:5489   */\n  mstore\n    /* \"#utility.yul\":5506:5637   */\n  tag_127\n    /* \"#utility.yul\":5632:5636   */\n  dup2\n    /* \"#utility.yul\":5506:5637   */\n  tag_65\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":5498:5637   */\n  swap1\n  pop\n    /* \"#utility.yul\":5225:5644   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5650:5821   */\ntag_66:\n    /* \"#utility.yul\":5790:5813   */\n  0x4d6178207374616b65206d757374206265203e20300000000000000000000000\n    /* \"#utility.yul\":5786:5787   */\n  0x00\n    /* \"#utility.yul\":5778:5784   */\n  dup3\n    /* \"#utility.yul\":5774:5788   */\n  add\n    /* \"#utility.yul\":5767:5814   */\n  mstore\n    /* \"#utility.yul\":5650:5821   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5827:6193   */\ntag_67:\n    /* \"#utility.yul\":5969:5972   */\n  0x00\n    /* \"#utility.yul\":5990:6057   */\n  tag_130\n    /* \"#utility.yul\":6054:6056   */\n  0x15\n    /* \"#utility.yul\":6049:6052   */\n  dup4\n    /* \"#utility.yul\":5990:6057   */\n  tag_59\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5983:6057   */\n  swap2\n  pop\n    /* \"#utility.yul\":6066:6159   */\n  tag_131\n    /* \"#utility.yul\":6155:6158   */\n  dup3\n    /* \"#utility.yul\":6066:6159   */\n  tag_66\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6184:6186   */\n  0x20\n    /* \"#utility.yul\":6179:6182   */\n  dup3\n    /* \"#utility.yul\":6175:6187   */\n  add\n    /* \"#utility.yul\":6168:6187   */\n  swap1\n  pop\n    /* \"#utility.yul\":5827:6193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6199:6618   */\ntag_26:\n    /* \"#utility.yul\":6365:6369   */\n  0x00\n    /* \"#utility.yul\":6403:6405   */\n  0x20\n    /* \"#utility.yul\":6392:6401   */\n  dup3\n    /* \"#utility.yul\":6388:6406   */\n  add\n    /* \"#utility.yul\":6380:6406   */\n  swap1\n  pop\n    /* \"#utility.yul\":6452:6461   */\n  dup2\n    /* \"#utility.yul\":6446:6450   */\n  dup2\n    /* \"#utility.yul\":6442:6462   */\n  sub\n    /* \"#utility.yul\":6438:6439   */\n  0x00\n    /* \"#utility.yul\":6427:6436   */\n  dup4\n    /* \"#utility.yul\":6423:6440   */\n  add\n    /* \"#utility.yul\":6416:6463   */\n  mstore\n    /* \"#utility.yul\":6480:6611   */\n  tag_133\n    /* \"#utility.yul\":6606:6610   */\n  dup2\n    /* \"#utility.yul\":6480:6611   */\n  tag_67\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":6472:6611   */\n  swap1\n  pop\n    /* \"#utility.yul\":6199:6618   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6624:6791   */\ntag_68:\n    /* \"#utility.yul\":6764:6783   */\n  0x496e76616c6964206d696e207374616b65000000000000000000000000000000\n    /* \"#utility.yul\":6760:6761   */\n  0x00\n    /* \"#utility.yul\":6752:6758   */\n  dup3\n    /* \"#utility.yul\":6748:6762   */\n  add\n    /* \"#utility.yul\":6741:6784   */\n  mstore\n    /* \"#utility.yul\":6624:6791   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6797:7163   */\ntag_69:\n    /* \"#utility.yul\":6939:6942   */\n  0x00\n    /* \"#utility.yul\":6960:7027   */\n  tag_136\n    /* \"#utility.yul\":7024:7026   */\n  0x11\n    /* \"#utility.yul\":7019:7022   */\n  dup4\n    /* \"#utility.yul\":6960:7027   */\n  tag_59\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":6953:7027   */\n  swap2\n  pop\n    /* \"#utility.yul\":7036:7129   */\n  tag_137\n    /* \"#utility.yul\":7125:7128   */\n  dup3\n    /* \"#utility.yul\":7036:7129   */\n  tag_68\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":7154:7156   */\n  0x20\n    /* \"#utility.yul\":7149:7152   */\n  dup3\n    /* \"#utility.yul\":7145:7157   */\n  add\n    /* \"#utility.yul\":7138:7157   */\n  swap1\n  pop\n    /* \"#utility.yul\":6797:7163   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7169:7588   */\ntag_30:\n    /* \"#utility.yul\":7335:7339   */\n  0x00\n    /* \"#utility.yul\":7373:7375   */\n  0x20\n    /* \"#utility.yul\":7362:7371   */\n  dup3\n    /* \"#utility.yul\":7358:7376   */\n  add\n    /* \"#utility.yul\":7350:7376   */\n  swap1\n  pop\n    /* \"#utility.yul\":7422:7431   */\n  dup2\n    /* \"#utility.yul\":7416:7420   */\n  dup2\n    /* \"#utility.yul\":7412:7432   */\n  sub\n    /* \"#utility.yul\":7408:7409   */\n  0x00\n    /* \"#utility.yul\":7397:7406   */\n  dup4\n    /* \"#utility.yul\":7393:7410   */\n  add\n    /* \"#utility.yul\":7386:7433   */\n  mstore\n    /* \"#utility.yul\":7450:7581   */\n  tag_139\n    /* \"#utility.yul\":7576:7580   */\n  dup2\n    /* \"#utility.yul\":7450:7581   */\n  tag_69\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":7442:7581   */\n  swap1\n  pop\n    /* \"#utility.yul\":7169:7588   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7594:7692   */\ntag_70:\n    /* \"#utility.yul\":7645:7651   */\n  0x00\n    /* \"#utility.yul\":7679:7684   */\n  dup2\n    /* \"#utility.yul\":7673:7685   */\n  mload\n    /* \"#utility.yul\":7663:7685   */\n  swap1\n  pop\n    /* \"#utility.yul\":7594:7692   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7698:7845   */\ntag_71:\n    /* \"#utility.yul\":7799:7810   */\n  0x00\n    /* \"#utility.yul\":7836:7839   */\n  dup2\n    /* \"#utility.yul\":7821:7839   */\n  swap1\n  pop\n    /* \"#utility.yul\":7698:7845   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7851:7990   */\ntag_72:\n    /* \"#utility.yul\":7940:7946   */\n  dup3\n    /* \"#utility.yul\":7935:7938   */\n  dup2\n    /* \"#utility.yul\":7930:7933   */\n  dup4\n    /* \"#utility.yul\":7924:7947   */\n  mcopy\n    /* \"#utility.yul\":7981:7982   */\n  0x00\n    /* \"#utility.yul\":7972:7978   */\n  dup4\n    /* \"#utility.yul\":7967:7970   */\n  dup4\n    /* \"#utility.yul\":7963:7979   */\n  add\n    /* \"#utility.yul\":7956:7983   */\n  mstore\n    /* \"#utility.yul\":7851:7990   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7996:8382   */\ntag_73:\n    /* \"#utility.yul\":8100:8103   */\n  0x00\n    /* \"#utility.yul\":8128:8166   */\n  tag_144\n    /* \"#utility.yul\":8160:8165   */\n  dup3\n    /* \"#utility.yul\":8128:8166   */\n  tag_70\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":8182:8270   */\n  tag_145\n    /* \"#utility.yul\":8263:8269   */\n  dup2\n    /* \"#utility.yul\":8258:8261   */\n  dup6\n    /* \"#utility.yul\":8182:8270   */\n  tag_71\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8175:8270   */\n  swap4\n  pop\n    /* \"#utility.yul\":8279:8344   */\n  tag_146\n    /* \"#utility.yul\":8337:8343   */\n  dup2\n    /* \"#utility.yul\":8332:8335   */\n  dup6\n    /* \"#utility.yul\":8325:8329   */\n  0x20\n    /* \"#utility.yul\":8318:8323   */\n  dup7\n    /* \"#utility.yul\":8314:8330   */\n  add\n    /* \"#utility.yul\":8279:8344   */\n  tag_72\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":8369:8375   */\n  dup1\n    /* \"#utility.yul\":8364:8367   */\n  dup5\n    /* \"#utility.yul\":8360:8376   */\n  add\n    /* \"#utility.yul\":8353:8376   */\n  swap2\n  pop\n    /* \"#utility.yul\":8104:8382   */\n  pop\n    /* \"#utility.yul\":7996:8382   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8388:8659   */\ntag_38:\n    /* \"#utility.yul\":8518:8521   */\n  0x00\n    /* \"#utility.yul\":8540:8633   */\n  tag_148\n    /* \"#utility.yul\":8629:8632   */\n  dup3\n    /* \"#utility.yul\":8620:8626   */\n  dup5\n    /* \"#utility.yul\":8540:8633   */\n  tag_73\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":8533:8633   */\n  swap2\n  pop\n    /* \"#utility.yul\":8650:8653   */\n  dup2\n    /* \"#utility.yul\":8643:8653   */\n  swap1\n  pop\n    /* \"#utility.yul\":8388:8659   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8665:8837   */\ntag_74:\n    /* \"#utility.yul\":8805:8829   */\n  0x4661696c656420746f2067657420646563696d616c7300000000000000000000\n    /* \"#utility.yul\":8801:8802   */\n  0x00\n    /* \"#utility.yul\":8793:8799   */\n  dup3\n    /* \"#utility.yul\":8789:8803   */\n  add\n    /* \"#utility.yul\":8782:8830   */\n  mstore\n    /* \"#utility.yul\":8665:8837   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8843:9209   */\ntag_75:\n    /* \"#utility.yul\":8985:8988   */\n  0x00\n    /* \"#utility.yul\":9006:9073   */\n  tag_151\n    /* \"#utility.yul\":9070:9072   */\n  0x16\n    /* \"#utility.yul\":9065:9068   */\n  dup4\n    /* \"#utility.yul\":9006:9073   */\n  tag_59\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":8999:9073   */\n  swap2\n  pop\n    /* \"#utility.yul\":9082:9175   */\n  tag_152\n    /* \"#utility.yul\":9171:9174   */\n  dup3\n    /* \"#utility.yul\":9082:9175   */\n  tag_74\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":9200:9202   */\n  0x20\n    /* \"#utility.yul\":9195:9198   */\n  dup3\n    /* \"#utility.yul\":9191:9203   */\n  add\n    /* \"#utility.yul\":9184:9203   */\n  swap1\n  pop\n    /* \"#utility.yul\":8843:9209   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9215:9634   */\ntag_45:\n    /* \"#utility.yul\":9381:9385   */\n  0x00\n    /* \"#utility.yul\":9419:9421   */\n  0x20\n    /* \"#utility.yul\":9408:9417   */\n  dup3\n    /* \"#utility.yul\":9404:9422   */\n  add\n    /* \"#utility.yul\":9396:9422   */\n  swap1\n  pop\n    /* \"#utility.yul\":9468:9477   */\n  dup2\n    /* \"#utility.yul\":9462:9466   */\n  dup2\n    /* \"#utility.yul\":9458:9478   */\n  sub\n    /* \"#utility.yul\":9454:9455   */\n  0x00\n    /* \"#utility.yul\":9443:9452   */\n  dup4\n    /* \"#utility.yul\":9439:9456   */\n  add\n    /* \"#utility.yul\":9432:9479   */\n  mstore\n    /* \"#utility.yul\":9496:9627   */\n  tag_154\n    /* \"#utility.yul\":9622:9626   */\n  dup2\n    /* \"#utility.yul\":9496:9627   */\n  tag_75\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":9488:9627   */\n  swap1\n  pop\n    /* \"#utility.yul\":9215:9634   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9640:9726   */\ntag_76:\n    /* \"#utility.yul\":9675:9682   */\n  0x00\n    /* \"#utility.yul\":9715:9719   */\n  0xff\n    /* \"#utility.yul\":9708:9713   */\n  dup3\n    /* \"#utility.yul\":9704:9720   */\n  and\n    /* \"#utility.yul\":9693:9720   */\n  swap1\n  pop\n    /* \"#utility.yul\":9640:9726   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9732:9850   */\ntag_77:\n    /* \"#utility.yul\":9803:9825   */\n  tag_157\n    /* \"#utility.yul\":9819:9824   */\n  dup2\n    /* \"#utility.yul\":9803:9825   */\n  tag_76\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":9796:9801   */\n  dup2\n    /* \"#utility.yul\":9793:9826   */\n  eq\n    /* \"#utility.yul\":9783:9844   */\n  tag_158\n  jumpi\n    /* \"#utility.yul\":9840:9841   */\n  0x00\n    /* \"#utility.yul\":9837:9838   */\n  0x00\n    /* \"#utility.yul\":9830:9842   */\n  revert\n    /* \"#utility.yul\":9783:9844   */\ntag_158:\n    /* \"#utility.yul\":9732:9850   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9856:9995   */\ntag_78:\n    /* \"#utility.yul\":9911:9916   */\n  0x00\n    /* \"#utility.yul\":9942:9948   */\n  dup2\n    /* \"#utility.yul\":9936:9949   */\n  mload\n    /* \"#utility.yul\":9927:9949   */\n  swap1\n  pop\n    /* \"#utility.yul\":9958:9989   */\n  tag_160\n    /* \"#utility.yul\":9983:9988   */\n  dup2\n    /* \"#utility.yul\":9958:9989   */\n  tag_77\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":9856:9995   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10001:10348   */\ntag_47:\n    /* \"#utility.yul\":10069:10075   */\n  0x00\n    /* \"#utility.yul\":10118:10120   */\n  0x20\n    /* \"#utility.yul\":10106:10115   */\n  dup3\n    /* \"#utility.yul\":10097:10104   */\n  dup5\n    /* \"#utility.yul\":10093:10116   */\n  sub\n    /* \"#utility.yul\":10089:10121   */\n  slt\n    /* \"#utility.yul\":10086:10205   */\n  iszero\n  tag_162\n  jumpi\n    /* \"#utility.yul\":10124:10203   */\n  tag_163\n  tag_49\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":10086:10205   */\ntag_162:\n    /* \"#utility.yul\":10244:10245   */\n  0x00\n    /* \"#utility.yul\":10269:10331   */\n  tag_164\n    /* \"#utility.yul\":10323:10330   */\n  dup5\n    /* \"#utility.yul\":10314:10320   */\n  dup3\n    /* \"#utility.yul\":10303:10312   */\n  dup6\n    /* \"#utility.yul\":10299:10321   */\n  add\n    /* \"#utility.yul\":10269:10331   */\n  tag_78\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":10259:10331   */\n  swap2\n  pop\n    /* \"#utility.yul\":10215:10341   */\n  pop\n    /* \"#utility.yul\":10001:10348   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/LandFIStake2.sol\":313:6120  contract LandFiStakingWithRewards is Ownable(msg.sender), ReentrancyGuard {... */\ntag_34:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xafc7867dc682bb65dda0adf82b5845e2c7aff376e8ead2312aa01aa72d90f990\")\n  0x00\n  assignImmutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n  0x00\n  assignImmutable(\"0xd1a451c62408e75aae8057e8f7b01919eee5ed8b15c827ddb321ba273cd9734f\")\n  0x00\n  assignImmutable(\"0x77b0dc9fd928f8353d1f3066ad62ef461cbb1d27eef4cdf4229980ff6e20e02a\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/LandFIStake2.sol\":313:6120  contract LandFiStakingWithRewards is Ownable(msg.sender), ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8dfb2dbc\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xd82e3962\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xd82e3962\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xea1b28e0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf1cddd55\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf908dc13\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x8dfb2dbc\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9aae43f5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb60f75d8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xcd5692ee\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x3ccfd60b\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40f02ab6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6747dd0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x16934fc4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x23dcdb89\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x240be944\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x292a6b19\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x375b3c0a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/LandFIStake2.sol\":663:704  mapping(address => uint256) public stakes */\n    tag_3:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":2872:3052  function changeMinStake(uint256 _minStake) external onlyOwner {... */\n    tag_4:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/LandFIStake2.sol\":711:763  mapping(address => uint256) public depositTimestamps */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":429:464  IERC20 public immutable landFiToken */\n    tag_6:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":866:889  uint256 public minStake */\n    tag_7:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":4552:5293  function withdraw() external nonReentrant {... */\n    tag_8:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/LandFIStake2.sol\":772:800  uint256 public stakeDuration */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":2514:2697  function changeStakeDuration(uint256 _newDuration) external onlyOwner {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/LandFIStake2.sol\":5324:5427  function balanceOf(address user) external view returns (uint256) {... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":5435:5571  function stakeUnlockTime(address user) external view returns (uint256) {... */\n    tag_14:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":573:610  uint8 public immutable landFiDecimals */\n    tag_15:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":3202:3743  function stake(uint256 amount) external nonReentrant {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/LandFIStake2.sol\":617:654  uint8 public immutable rewardDecimals */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":2705:2864  function changeMaxStake(uint256 _maxStake) external onlyOwner {... */\n    tag_18:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/LandFIStake2.sol\":3886:4503  function calculateReward(address user) public view returns (uint256) {... */\n    tag_19:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":836:859  uint256 public maxStake */\n    tag_20:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":3060:3166  function changeFullUnlock(bool _fullUnlock) external onlyOwner {... */\n    tag_21:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/LandFIStake2.sol\":494:529  IERC20 public immutable rewardToken */\n    tag_23:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":896:918  bool public fullUnlock */\n    tag_24:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFIStake2.sol\":663:704  mapping(address => uint256) public stakes */\n    tag_31:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":2872:3052  function changeMinStake(uint256 _minStake) external onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/LandFIStake2.sol\":2965:2966  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":2953:2962  _minStake */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":2953:2966  _minStake > 0 */\n      gt\n        /* \"contracts/LandFIStake2.sol\":2953:2991  _minStake > 0 && _minStake <= maxStake */\n      dup1\n      iszero\n      tag_109\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":2983:2991  maxStake */\n      sload(0x05)\n        /* \"contracts/LandFIStake2.sol\":2970:2979  _minStake */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":2970:2991  _minStake <= maxStake */\n      gt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":2953:2991  _minStake > 0 && _minStake <= maxStake */\n    tag_109:\n        /* \"contracts/LandFIStake2.sol\":2945:3013  require(_minStake > 0 && _minStake <= maxStake, \"Invalid min stake\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"contracts/LandFIStake2.sol\":3035:3044  _minStake */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":3024:3032  minStake */\n      0x06\n        /* \"contracts/LandFIStake2.sol\":3024:3044  minStake = _minStake */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":2872:3052  function changeMinStake(uint256 _minStake) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":711:763  mapping(address => uint256) public depositTimestamps */\n    tag_40:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":429:464  IERC20 public immutable landFiToken */\n    tag_43:\n      immutable(\"0x77b0dc9fd928f8353d1f3066ad62ef461cbb1d27eef4cdf4229980ff6e20e02a\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":866:889  uint256 public minStake */\n    tag_47:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":4552:5293  function withdraw() external nonReentrant {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_114\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_115\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/LandFIStake2.sol\":4605:4617  address user */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4620:4630  msg.sender */\n      caller\n        /* \"contracts/LandFIStake2.sol\":4605:4630  address user = msg.sender */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":4641:4655  uint256 amount */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4658:4664  stakes */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":4658:4670  stakes[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4665:4669  user */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":4658:4670  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":4641:4670  uint256 amount = stakes[user] */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":4698:4699  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4689:4695  amount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":4689:4699  amount > 0 */\n      gt\n        /* \"contracts/LandFIStake2.sol\":4681:4718  require(amount > 0, \"No stake found\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/LandFIStake2.sol\":4737:4747  fullUnlock */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":4737:4809  fullUnlock || block.timestamp >= depositTimestamps[user] + stakeDuration */\n      dup1\n      tag_120\n      jumpi\n      pop\n        /* \"contracts/LandFIStake2.sol\":4796:4809  stakeDuration */\n      sload(0x04)\n        /* \"contracts/LandFIStake2.sol\":4770:4787  depositTimestamps */\n      0x03\n        /* \"contracts/LandFIStake2.sol\":4770:4793  depositTimestamps[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4788:4792  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":4770:4793  depositTimestamps[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":4770:4809  depositTimestamps[user] + stakeDuration */\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"contracts/LandFIStake2.sol\":4751:4766  block.timestamp */\n      timestamp\n        /* \"contracts/LandFIStake2.sol\":4751:4809  block.timestamp >= depositTimestamps[user] + stakeDuration */\n      lt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":4737:4809  fullUnlock || block.timestamp >= depositTimestamps[user] + stakeDuration */\n    tag_120:\n        /* \"contracts/LandFIStake2.sol\":4729:4826  require(fullUnlock || block.timestamp >= depositTimestamps[user] + stakeDuration, \"Stake locked\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/LandFIStake2.sol\":4839:4859  uint256 rewardAmount */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4862:4883  calculateReward(user) */\n      tag_126\n        /* \"contracts/LandFIStake2.sol\":4878:4882  user */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":4862:4877  calculateReward */\n      tag_86\n        /* \"contracts/LandFIStake2.sol\":4862:4883  calculateReward(user) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/LandFIStake2.sol\":4839:4883  uint256 rewardAmount = calculateReward(user) */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":4911:4912  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4896:4902  stakes */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":4896:4908  stakes[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4903:4907  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":4896:4908  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":4896:4912  stakes[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":4949:4950  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4923:4940  depositTimestamps */\n      0x03\n        /* \"contracts/LandFIStake2.sol\":4923:4946  depositTimestamps[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4941:4945  user */\n      dup6\n        /* \"contracts/LandFIStake2.sol\":4923:4946  depositTimestamps[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":4923:4950  depositTimestamps[user] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":4963:5001  landFiToken.safeTransfer(user, amount) */\n      tag_127\n        /* \"contracts/LandFIStake2.sol\":4988:4992  user */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":4994:5000  amount */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":4963:4974  landFiToken */\n      immutable(\"0x77b0dc9fd928f8353d1f3066ad62ef461cbb1d27eef4cdf4229980ff6e20e02a\")\n        /* \"contracts/LandFIStake2.sol\":4963:4987  landFiToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_128\n      swap1\n        /* \"contracts/LandFIStake2.sol\":4963:5001  landFiToken.safeTransfer(user, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"contracts/LandFIStake2.sol\":5033:5034  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5018:5030  rewardAmount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":5018:5034  rewardAmount > 0 */\n      gt\n        /* \"contracts/LandFIStake2.sol\":5014:5214  if (rewardAmount > 0) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":5099:5111  rewardAmount */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":5059:5070  rewardToken */\n      immutable(\"0xd1a451c62408e75aae8057e8f7b01919eee5ed8b15c827ddb321ba273cd9734f\")\n        /* \"contracts/LandFIStake2.sol\":5059:5080  rewardToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/LandFIStake2.sol\":5089:5093  this */\n      address\n        /* \"contracts/LandFIStake2.sol\":5059:5095  rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_130:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_132\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"contracts/LandFIStake2.sol\":5059:5111  rewardToken.balanceOf(address(this)) >= rewardAmount */\n      lt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":5051:5143  require(rewardToken.balanceOf(address(this)) >= rewardAmount, \"Insufficient reward balance\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"contracts/LandFIStake2.sol\":5158:5202  rewardToken.safeTransfer(user, rewardAmount) */\n      tag_138\n        /* \"contracts/LandFIStake2.sol\":5183:5187  user */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":5189:5201  rewardAmount */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":5158:5169  rewardToken */\n      immutable(\"0xd1a451c62408e75aae8057e8f7b01919eee5ed8b15c827ddb321ba273cd9734f\")\n        /* \"contracts/LandFIStake2.sol\":5158:5182  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_128\n      swap1\n        /* \"contracts/LandFIStake2.sol\":5158:5202  rewardToken.safeTransfer(user, rewardAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"contracts/LandFIStake2.sol\":5014:5214  if (rewardAmount > 0) {... */\n    tag_129:\n        /* \"contracts/LandFIStake2.sol\":5241:5245  user */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":5231:5285  Withdrawn(user, amount, rewardAmount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x75e161b3e824b114fc1a33274bd7091918dd4e639cede50b78b15a4eea956a21\n        /* \"contracts/LandFIStake2.sol\":5247:5253  amount */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":5255:5267  rewardAmount */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":5269:5284  block.timestamp */\n      timestamp\n        /* \"contracts/LandFIStake2.sol\":5231:5285  Withdrawn(user, amount, rewardAmount, block.timestamp) */\n      mload(0x40)\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LandFIStake2.sol\":4594:5293  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_141\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_142\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_141:\n        /* \"contracts/LandFIStake2.sol\":4552:5293  function withdraw() external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":772:800  uint256 public stakeDuration */\n    tag_52:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":2514:2697  function changeStakeDuration(uint256 _newDuration) external onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/LandFIStake2.sol\":2618:2619  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":2603:2615  _newDuration */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":2603:2619  _newDuration > 0 */\n      gt\n        /* \"contracts/LandFIStake2.sol\":2595:2650  require(_newDuration > 0, \"Stake duration must be > 0\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/LandFIStake2.sol\":2677:2689  _newDuration */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":2661:2674  stakeDuration */\n      0x04\n        /* \"contracts/LandFIStake2.sol\":2661:2689  stakeDuration = _newDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":2514:2697  function changeStakeDuration(uint256 _newDuration) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":5324:5427  function balanceOf(address user) external view returns (uint256) {... */\n    tag_59:\n        /* \"contracts/LandFIStake2.sol\":5380:5387  uint256 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5407:5413  stakes */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":5407:5419  stakes[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5414:5418  user */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":5407:5419  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":5400:5419  return stakes[user] */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":5324:5427  function balanceOf(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":5435:5571  function stakeUnlockTime(address user) external view returns (uint256) {... */\n    tag_69:\n        /* \"contracts/LandFIStake2.sol\":5497:5504  uint256 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5550:5563  stakeDuration */\n      sload(0x04)\n        /* \"contracts/LandFIStake2.sol\":5524:5541  depositTimestamps */\n      0x03\n        /* \"contracts/LandFIStake2.sol\":5524:5547  depositTimestamps[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5542:5546  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":5524:5547  depositTimestamps[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":5524:5563  depositTimestamps[user] + stakeDuration */\n      tag_157\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_157:\n        /* \"contracts/LandFIStake2.sol\":5517:5563  return depositTimestamps[user] + stakeDuration */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":5435:5571  function stakeUnlockTime(address user) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":573:610  uint8 public immutable landFiDecimals */\n    tag_72:\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":3202:3743  function stake(uint256 amount) external nonReentrant {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_159\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_115\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_159:\n        /* \"contracts/LandFIStake2.sol\":3266:3278  address user */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3281:3291  msg.sender */\n      caller\n        /* \"contracts/LandFIStake2.sol\":3266:3291  address user = msg.sender */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":3326:3327  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3310:3316  stakes */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":3310:3322  stakes[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3317:3321  user */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":3310:3322  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3310:3327  stakes[user] == 0 */\n      eq\n        /* \"contracts/LandFIStake2.sol\":3302:3347  require(stakes[user] == 0, \"Already staking\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/LandFIStake2.sol\":3376:3384  minStake */\n      sload(0x06)\n        /* \"contracts/LandFIStake2.sol\":3366:3372  amount */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":3366:3384  amount >= minStake */\n      lt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":3358:3410  require(amount >= minStake, \"Amount below minStake\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/LandFIStake2.sol\":3439:3447  maxStake */\n      sload(0x05)\n        /* \"contracts/LandFIStake2.sol\":3429:3435  amount */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":3429:3447  amount <= maxStake */\n      gt\n      iszero\n        /* \"contracts/LandFIStake2.sol\":3421:3475  require(amount <= maxStake, \"Amount exceeds maxStake\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"contracts/LandFIStake2.sol\":3495:3505  fullUnlock */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":3494:3505  !fullUnlock */\n      iszero\n        /* \"contracts/LandFIStake2.sol\":3486:3524  require(!fullUnlock, \"Staking locked\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_170:\n        /* \"contracts/LandFIStake2.sol\":3552:3558  amount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":3537:3543  stakes */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":3537:3549  stakes[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3544:3548  user */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":3537:3549  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":3537:3558  stakes[user] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":3595:3610  block.timestamp */\n      timestamp\n        /* \"contracts/LandFIStake2.sol\":3569:3586  depositTimestamps */\n      0x03\n        /* \"contracts/LandFIStake2.sol\":3569:3592  depositTimestamps[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3587:3591  user */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":3569:3592  depositTimestamps[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFIStake2.sol\":3569:3610  depositTimestamps[user] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":3623:3680  landFiToken.safeTransferFrom(user, address(this), amount) */\n      tag_173\n        /* \"contracts/LandFIStake2.sol\":3652:3656  user */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":3666:3670  this */\n      address\n        /* \"contracts/LandFIStake2.sol\":3673:3679  amount */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":3623:3634  landFiToken */\n      immutable(\"0x77b0dc9fd928f8353d1f3066ad62ef461cbb1d27eef4cdf4229980ff6e20e02a\")\n        /* \"contracts/LandFIStake2.sol\":3623:3651  landFiToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_174\n      swap1\n        /* \"contracts/LandFIStake2.sol\":3623:3680  landFiToken.safeTransferFrom(user, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"contracts/LandFIStake2.sol\":3705:3709  user */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":3698:3735  Staked(user, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90\n        /* \"contracts/LandFIStake2.sol\":3711:3717  amount */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":3719:3734  block.timestamp */\n      timestamp\n        /* \"contracts/LandFIStake2.sol\":3698:3735  Staked(user, amount, block.timestamp) */\n      mload(0x40)\n      tag_175\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/LandFIStake2.sol\":3255:3743  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_177\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_142\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/LandFIStake2.sol\":3202:3743  function stake(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":617:654  uint8 public immutable rewardDecimals */\n    tag_79:\n      immutable(\"0xafc7867dc682bb65dda0adf82b5845e2c7aff376e8ead2312aa01aa72d90f990\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":2705:2864  function changeMaxStake(uint256 _maxStake) external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_179:\n        /* \"contracts/LandFIStake2.sol\":2798:2799  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":2786:2795  _maxStake */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":2786:2799  _maxStake > 0 */\n      gt\n        /* \"contracts/LandFIStake2.sol\":2778:2825  require(_maxStake > 0, \"Max stake must be > 0\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"contracts/LandFIStake2.sol\":2847:2856  _maxStake */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":2836:2844  maxStake */\n      0x05\n        /* \"contracts/LandFIStake2.sol\":2836:2856  maxStake = _maxStake */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":2705:2864  function changeMaxStake(uint256 _maxStake) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":3886:4503  function calculateReward(address user) public view returns (uint256) {... */\n    tag_86:\n        /* \"contracts/LandFIStake2.sol\":3946:3953  uint256 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3966:3980  uint256 amount */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3983:3989  stakes */\n      0x02\n        /* \"contracts/LandFIStake2.sol\":3983:3995  stakes[user] */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3990:3994  user */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":3983:3995  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFIStake2.sol\":3966:3995  uint256 amount = stakes[user] */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":4020:4021  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4010:4016  amount */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":4010:4021  amount == 0 */\n      sub\n        /* \"contracts/LandFIStake2.sol\":4006:4031  if (amount == 0) return 0 */\n      tag_185\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":4030:4031  0 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4023:4031  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_184)\n        /* \"contracts/LandFIStake2.sol\":4006:4031  if (amount == 0) return 0 */\n    tag_185:\n        /* \"contracts/LandFIStake2.sol\":4095:4118  uint256 normalizedStake */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4121:4167  _normalizeDecimals(amount, landFiDecimals, 18) */\n      tag_186\n        /* \"contracts/LandFIStake2.sol\":4140:4146  amount */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":4148:4162  landFiDecimals */\n      immutable(\"0x3a2a6f4e0dcd4611e0c200ca45f55d44b54b380ac384ae0bef4a36eff139c211\")\n        /* \"contracts/LandFIStake2.sol\":4164:4166  18 */\n      0x12\n        /* \"contracts/LandFIStake2.sol\":4121:4139  _normalizeDecimals */\n      tag_187\n        /* \"contracts/LandFIStake2.sol\":4121:4167  _normalizeDecimals(amount, landFiDecimals, 18) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/LandFIStake2.sol\":4095:4167  uint256 normalizedStake = _normalizeDecimals(amount, landFiDecimals, 18) */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":4262:4286  uint256 rewardNormalized */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4313:4316  100 */\n      0x64\n        /* \"contracts/LandFIStake2.sol\":4308:4309  5 */\n      0x05\n        /* \"contracts/LandFIStake2.sol\":4290:4305  normalizedStake */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":4290:4309  normalizedStake * 5 */\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"contracts/LandFIStake2.sol\":4289:4316  (normalizedStake * 5) / 100 */\n      tag_190\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n        /* \"contracts/LandFIStake2.sol\":4262:4316  uint256 rewardNormalized = (normalizedStake * 5) / 100 */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":4386:4406  uint256 rewardAmount */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":4409:4465  _normalizeDecimals(rewardNormalized, 18, rewardDecimals) */\n      tag_192\n        /* \"contracts/LandFIStake2.sol\":4428:4444  rewardNormalized */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":4446:4448  18 */\n      0x12\n        /* \"contracts/LandFIStake2.sol\":4450:4464  rewardDecimals */\n      immutable(\"0xafc7867dc682bb65dda0adf82b5845e2c7aff376e8ead2312aa01aa72d90f990\")\n        /* \"contracts/LandFIStake2.sol\":4409:4427  _normalizeDecimals */\n      tag_187\n        /* \"contracts/LandFIStake2.sol\":4409:4465  _normalizeDecimals(rewardNormalized, 18, rewardDecimals) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/LandFIStake2.sol\":4386:4465  uint256 rewardAmount = _normalizeDecimals(rewardNormalized, 18, rewardDecimals) */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":4483:4495  rewardAmount */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":4476:4495  return rewardAmount */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LandFIStake2.sol\":3886:4503  function calculateReward(address user) public view returns (uint256) {... */\n    tag_184:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":836:859  uint256 public maxStake */\n    tag_89:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":3060:3166  function changeFullUnlock(bool _fullUnlock) external onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_194:\n        /* \"contracts/LandFIStake2.sol\":3147:3158  _fullUnlock */\n      dup1\n        /* \"contracts/LandFIStake2.sol\":3134:3144  fullUnlock */\n      0x07\n      0x00\n        /* \"contracts/LandFIStake2.sol\":3134:3158  fullUnlock = _fullUnlock */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFIStake2.sol\":3060:3166  function changeFullUnlock(bool _fullUnlock) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_201\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":494:529  IERC20 public immutable rewardToken */\n    tag_99:\n      immutable(\"0xd1a451c62408e75aae8057e8f7b01919eee5ed8b15c827ddb321ba273cd9734f\")\n      dup2\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":896:918  bool public fullUnlock */\n    tag_102:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_215\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_221\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_222\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LandFIStake2.sol\":5684:6117  function _normalizeDecimals(... */\n    tag_187:\n        /* \"contracts/LandFIStake2.sol\":5823:5830  uint256 */\n      0x00\n        /* \"contracts/LandFIStake2.sol\":5863:5873  toDecimals */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":5847:5873  fromDecimals == toDecimals */\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":5847:5859  fromDecimals */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":5847:5873  fromDecimals == toDecimals */\n      0xff\n      and\n      sub\n        /* \"contracts/LandFIStake2.sol\":5843:6110  if (fromDecimals == toDecimals) {... */\n      tag_225\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":5897:5903  amount */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":5890:5903  return amount */\n      swap1\n      pop\n      jump(tag_224)\n        /* \"contracts/LandFIStake2.sol\":5843:6110  if (fromDecimals == toDecimals) {... */\n    tag_225:\n        /* \"contracts/LandFIStake2.sol\":5940:5950  toDecimals */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":5925:5950  fromDecimals > toDecimals */\n      0xff\n      and\n        /* \"contracts/LandFIStake2.sol\":5925:5937  fromDecimals */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":5925:5950  fromDecimals > toDecimals */\n      0xff\n      and\n      gt\n        /* \"contracts/LandFIStake2.sol\":5921:6110  if (fromDecimals > toDecimals) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"contracts/LandFIStake2.sol\":6004:6014  toDecimals */\n      dup2\n        /* \"contracts/LandFIStake2.sol\":5989:6001  fromDecimals */\n      dup4\n        /* \"contracts/LandFIStake2.sol\":5989:6014  fromDecimals - toDecimals */\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"contracts/LandFIStake2.sol\":5984:5986  10 */\n      0x0a\n        /* \"contracts/LandFIStake2.sol\":5984:6015  10**(fromDecimals - toDecimals) */\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"contracts/LandFIStake2.sol\":5974:5980  amount */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":5974:6016  amount / (10**(fromDecimals - toDecimals)) */\n      tag_232\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_232:\n        /* \"contracts/LandFIStake2.sol\":5967:6016  return amount / (10**(fromDecimals - toDecimals)) */\n      swap1\n      pop\n      jump(tag_224)\n        /* \"contracts/LandFIStake2.sol\":5921:6110  if (fromDecimals > toDecimals) {... */\n    tag_227:\n        /* \"contracts/LandFIStake2.sol\":6084:6096  fromDecimals */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":6071:6081  toDecimals */\n      dup3\n        /* \"contracts/LandFIStake2.sol\":6071:6096  toDecimals - fromDecimals */\n      tag_234\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_234:\n        /* \"contracts/LandFIStake2.sol\":6066:6068  10 */\n      0x0a\n        /* \"contracts/LandFIStake2.sol\":6066:6097  10**(toDecimals - fromDecimals) */\n      tag_235\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_235:\n        /* \"contracts/LandFIStake2.sol\":6056:6062  amount */\n      dup5\n        /* \"contracts/LandFIStake2.sol\":6056:6098  amount * (10**(toDecimals - fromDecimals)) */\n      tag_236\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_236:\n        /* \"contracts/LandFIStake2.sol\":6049:6098  return amount * (10**(toDecimals - fromDecimals)) */\n      swap1\n      pop\n        /* \"contracts/LandFIStake2.sol\":5684:6117  function _normalizeDecimals(... */\n    tag_224:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_241)\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_241:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_245:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_247:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_248:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_302\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_247\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_249:\n        /* \"#utility.yul\":641:665   */\n      tag_304\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_248\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_305:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_250:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_307\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_249\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_30:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_310\n      tag_245\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":917:1036   */\n    tag_309:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_311\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_250\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_251:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_252:\n        /* \"#utility.yul\":1346:1370   */\n      tag_314\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_251\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_33:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_316\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_252\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_253:\n        /* \"#utility.yul\":1684:1708   */\n      tag_318\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_251\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_319:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_254:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_321\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_253\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_36:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_324\n      tag_245\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1960:2079   */\n    tag_323:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_325\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_254\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2279   */\n    tag_255:\n        /* \"#utility.yul\":2247:2250   */\n      0x00\n        /* \"#utility.yul\":2268:2273   */\n      dup2\n        /* \"#utility.yul\":2261:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2285:2427   */\n    tag_256:\n        /* \"#utility.yul\":2335:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2421   */\n      tag_328\n        /* \"#utility.yul\":2386:2420   */\n      tag_329\n        /* \"#utility.yul\":2395:2419   */\n      tag_330\n        /* \"#utility.yul\":2413:2418   */\n      dup5\n        /* \"#utility.yul\":2395:2419   */\n      tag_247\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2386:2420   */\n      tag_255\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2368:2421   */\n      tag_247\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2355:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2559   */\n    tag_257:\n        /* \"#utility.yul\":2483:2492   */\n      0x00\n        /* \"#utility.yul\":2516:2553   */\n      tag_332\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2516:2553   */\n      tag_256\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2503:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2705   */\n    tag_258:\n        /* \"#utility.yul\":2629:2638   */\n      0x00\n        /* \"#utility.yul\":2662:2699   */\n      tag_334\n        /* \"#utility.yul\":2693:2698   */\n      dup3\n        /* \"#utility.yul\":2662:2699   */\n      tag_257\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2649:2699   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:2870   */\n    tag_259:\n        /* \"#utility.yul\":2812:2863   */\n      tag_336\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2812:2863   */\n      tag_258\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":2807:2810   */\n      dup3\n        /* \"#utility.yul\":2800:2864   */\n      mstore\n        /* \"#utility.yul\":2711:2870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:3126   */\n    tag_45:\n        /* \"#utility.yul\":2983:2987   */\n      0x00\n        /* \"#utility.yul\":3021:3023   */\n      0x20\n        /* \"#utility.yul\":3010:3019   */\n      dup3\n        /* \"#utility.yul\":3006:3024   */\n      add\n        /* \"#utility.yul\":2998:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3119   */\n      tag_338\n        /* \"#utility.yul\":3116:3117   */\n      0x00\n        /* \"#utility.yul\":3105:3114   */\n      dup4\n        /* \"#utility.yul\":3101:3118   */\n      add\n        /* \"#utility.yul\":3092:3098   */\n      dup5\n        /* \"#utility.yul\":3034:3119   */\n      tag_259\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":2876:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3250   */\n    tag_260:\n        /* \"#utility.yul\":3219:3243   */\n      tag_340\n        /* \"#utility.yul\":3237:3242   */\n      dup2\n        /* \"#utility.yul\":3219:3243   */\n      tag_248\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3214:3217   */\n      dup3\n        /* \"#utility.yul\":3207:3244   */\n      mstore\n        /* \"#utility.yul\":3132:3250   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3256:3478   */\n    tag_66:\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3376:3385   */\n      dup3\n        /* \"#utility.yul\":3372:3390   */\n      add\n        /* \"#utility.yul\":3364:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3471   */\n      tag_342\n        /* \"#utility.yul\":3468:3469   */\n      0x00\n        /* \"#utility.yul\":3457:3466   */\n      dup4\n        /* \"#utility.yul\":3453:3470   */\n      add\n        /* \"#utility.yul\":3444:3450   */\n      dup5\n        /* \"#utility.yul\":3400:3471   */\n      tag_260\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":3256:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3570   */\n    tag_261:\n        /* \"#utility.yul\":3519:3526   */\n      0x00\n        /* \"#utility.yul\":3559:3563   */\n      0xff\n        /* \"#utility.yul\":3552:3557   */\n      dup3\n        /* \"#utility.yul\":3548:3564   */\n      and\n        /* \"#utility.yul\":3537:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3484:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3688   */\n    tag_262:\n        /* \"#utility.yul\":3659:3681   */\n      tag_345\n        /* \"#utility.yul\":3675:3680   */\n      dup2\n        /* \"#utility.yul\":3659:3681   */\n      tag_261\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3654:3657   */\n      dup3\n        /* \"#utility.yul\":3647:3682   */\n      mstore\n        /* \"#utility.yul\":3576:3688   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3694:3908   */\n    tag_74:\n        /* \"#utility.yul\":3783:3787   */\n      0x00\n        /* \"#utility.yul\":3821:3823   */\n      0x20\n        /* \"#utility.yul\":3810:3819   */\n      dup3\n        /* \"#utility.yul\":3806:3824   */\n      add\n        /* \"#utility.yul\":3798:3824   */\n      swap1\n      pop\n        /* \"#utility.yul\":3834:3901   */\n      tag_347\n        /* \"#utility.yul\":3898:3899   */\n      0x00\n        /* \"#utility.yul\":3887:3896   */\n      dup4\n        /* \"#utility.yul\":3883:3900   */\n      add\n        /* \"#utility.yul\":3874:3880   */\n      dup5\n        /* \"#utility.yul\":3834:3901   */\n      tag_262\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":3694:3908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3914:4004   */\n    tag_263:\n        /* \"#utility.yul\":3948:3955   */\n      0x00\n        /* \"#utility.yul\":3991:3996   */\n      dup2\n        /* \"#utility.yul\":3984:3997   */\n      iszero\n        /* \"#utility.yul\":3977:3998   */\n      iszero\n        /* \"#utility.yul\":3966:3998   */\n      swap1\n      pop\n        /* \"#utility.yul\":3914:4004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4010:4126   */\n    tag_264:\n        /* \"#utility.yul\":4080:4101   */\n      tag_350\n        /* \"#utility.yul\":4095:4100   */\n      dup2\n        /* \"#utility.yul\":4080:4101   */\n      tag_263\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4073:4078   */\n      dup2\n        /* \"#utility.yul\":4070:4102   */\n      eq\n        /* \"#utility.yul\":4060:4120   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":4116:4117   */\n      0x00\n        /* \"#utility.yul\":4113:4114   */\n      0x00\n        /* \"#utility.yul\":4106:4118   */\n      revert\n        /* \"#utility.yul\":4060:4120   */\n    tag_351:\n        /* \"#utility.yul\":4010:4126   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4132:4265   */\n    tag_265:\n        /* \"#utility.yul\":4175:4180   */\n      0x00\n        /* \"#utility.yul\":4213:4219   */\n      dup2\n        /* \"#utility.yul\":4200:4220   */\n      calldataload\n        /* \"#utility.yul\":4191:4220   */\n      swap1\n      pop\n        /* \"#utility.yul\":4229:4259   */\n      tag_353\n        /* \"#utility.yul\":4253:4258   */\n      dup2\n        /* \"#utility.yul\":4229:4259   */\n      tag_264\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4132:4265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4271:4594   */\n    tag_93:\n        /* \"#utility.yul\":4327:4333   */\n      0x00\n        /* \"#utility.yul\":4376:4378   */\n      0x20\n        /* \"#utility.yul\":4364:4373   */\n      dup3\n        /* \"#utility.yul\":4355:4362   */\n      dup5\n        /* \"#utility.yul\":4351:4374   */\n      sub\n        /* \"#utility.yul\":4347:4379   */\n      slt\n        /* \"#utility.yul\":4344:4463   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":4382:4461   */\n      tag_356\n      tag_245\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4344:4463   */\n    tag_355:\n        /* \"#utility.yul\":4502:4503   */\n      0x00\n        /* \"#utility.yul\":4527:4577   */\n      tag_357\n        /* \"#utility.yul\":4569:4576   */\n      dup5\n        /* \"#utility.yul\":4560:4566   */\n      dup3\n        /* \"#utility.yul\":4549:4558   */\n      dup6\n        /* \"#utility.yul\":4545:4567   */\n      add\n        /* \"#utility.yul\":4527:4577   */\n      tag_265\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4517:4577   */\n      swap2\n      pop\n        /* \"#utility.yul\":4473:4587   */\n      pop\n        /* \"#utility.yul\":4271:4594   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4600:4709   */\n    tag_266:\n        /* \"#utility.yul\":4681:4702   */\n      tag_359\n        /* \"#utility.yul\":4696:4701   */\n      dup2\n        /* \"#utility.yul\":4681:4702   */\n      tag_263\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4676:4679   */\n      dup3\n        /* \"#utility.yul\":4669:4703   */\n      mstore\n        /* \"#utility.yul\":4600:4709   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4715:4925   */\n    tag_104:\n        /* \"#utility.yul\":4802:4806   */\n      0x00\n        /* \"#utility.yul\":4840:4842   */\n      0x20\n        /* \"#utility.yul\":4829:4838   */\n      dup3\n        /* \"#utility.yul\":4825:4843   */\n      add\n        /* \"#utility.yul\":4817:4843   */\n      swap1\n      pop\n        /* \"#utility.yul\":4853:4918   */\n      tag_361\n        /* \"#utility.yul\":4915:4916   */\n      0x00\n        /* \"#utility.yul\":4904:4913   */\n      dup4\n        /* \"#utility.yul\":4900:4917   */\n      add\n        /* \"#utility.yul\":4891:4897   */\n      dup5\n        /* \"#utility.yul\":4853:4918   */\n      tag_266\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":4715:4925   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4931:5100   */\n    tag_267:\n        /* \"#utility.yul\":5015:5026   */\n      0x00\n        /* \"#utility.yul\":5049:5055   */\n      dup3\n        /* \"#utility.yul\":5044:5047   */\n      dup3\n        /* \"#utility.yul\":5037:5056   */\n      mstore\n        /* \"#utility.yul\":5089:5093   */\n      0x20\n        /* \"#utility.yul\":5084:5087   */\n      dup3\n        /* \"#utility.yul\":5080:5094   */\n      add\n        /* \"#utility.yul\":5065:5094   */\n      swap1\n      pop\n        /* \"#utility.yul\":4931:5100   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5106:5273   */\n    tag_268:\n        /* \"#utility.yul\":5246:5265   */\n      0x496e76616c6964206d696e207374616b65000000000000000000000000000000\n        /* \"#utility.yul\":5242:5243   */\n      0x00\n        /* \"#utility.yul\":5234:5240   */\n      dup3\n        /* \"#utility.yul\":5230:5244   */\n      add\n        /* \"#utility.yul\":5223:5266   */\n      mstore\n        /* \"#utility.yul\":5106:5273   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5279:5645   */\n    tag_269:\n        /* \"#utility.yul\":5421:5424   */\n      0x00\n        /* \"#utility.yul\":5442:5509   */\n      tag_365\n        /* \"#utility.yul\":5506:5508   */\n      0x11\n        /* \"#utility.yul\":5501:5504   */\n      dup4\n        /* \"#utility.yul\":5442:5509   */\n      tag_267\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5435:5509   */\n      swap2\n      pop\n        /* \"#utility.yul\":5518:5611   */\n      tag_366\n        /* \"#utility.yul\":5607:5610   */\n      dup3\n        /* \"#utility.yul\":5518:5611   */\n      tag_268\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5636:5638   */\n      0x20\n        /* \"#utility.yul\":5631:5634   */\n      dup3\n        /* \"#utility.yul\":5627:5639   */\n      add\n        /* \"#utility.yul\":5620:5639   */\n      swap1\n      pop\n        /* \"#utility.yul\":5279:5645   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5651:6070   */\n    tag_112:\n        /* \"#utility.yul\":5817:5821   */\n      0x00\n        /* \"#utility.yul\":5855:5857   */\n      0x20\n        /* \"#utility.yul\":5844:5853   */\n      dup3\n        /* \"#utility.yul\":5840:5858   */\n      add\n        /* \"#utility.yul\":5832:5858   */\n      swap1\n      pop\n        /* \"#utility.yul\":5904:5913   */\n      dup2\n        /* \"#utility.yul\":5898:5902   */\n      dup2\n        /* \"#utility.yul\":5894:5914   */\n      sub\n        /* \"#utility.yul\":5890:5891   */\n      0x00\n        /* \"#utility.yul\":5879:5888   */\n      dup4\n        /* \"#utility.yul\":5875:5892   */\n      add\n        /* \"#utility.yul\":5868:5915   */\n      mstore\n        /* \"#utility.yul\":5932:6063   */\n      tag_368\n        /* \"#utility.yul\":6058:6062   */\n      dup2\n        /* \"#utility.yul\":5932:6063   */\n      tag_269\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5924:6063   */\n      swap1\n      pop\n        /* \"#utility.yul\":5651:6070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6076:6240   */\n    tag_270:\n        /* \"#utility.yul\":6216:6232   */\n      0x4e6f207374616b6520666f756e64000000000000000000000000000000000000\n        /* \"#utility.yul\":6212:6213   */\n      0x00\n        /* \"#utility.yul\":6204:6210   */\n      dup3\n        /* \"#utility.yul\":6200:6214   */\n      add\n        /* \"#utility.yul\":6193:6233   */\n      mstore\n        /* \"#utility.yul\":6076:6240   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6246:6612   */\n    tag_271:\n        /* \"#utility.yul\":6388:6391   */\n      0x00\n        /* \"#utility.yul\":6409:6476   */\n      tag_371\n        /* \"#utility.yul\":6473:6475   */\n      0x0e\n        /* \"#utility.yul\":6468:6471   */\n      dup4\n        /* \"#utility.yul\":6409:6476   */\n      tag_267\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6402:6476   */\n      swap2\n      pop\n        /* \"#utility.yul\":6485:6578   */\n      tag_372\n        /* \"#utility.yul\":6574:6577   */\n      dup3\n        /* \"#utility.yul\":6485:6578   */\n      tag_270\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6603:6605   */\n      0x20\n        /* \"#utility.yul\":6598:6601   */\n      dup3\n        /* \"#utility.yul\":6594:6606   */\n      add\n        /* \"#utility.yul\":6587:6606   */\n      swap1\n      pop\n        /* \"#utility.yul\":6246:6612   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6618:7037   */\n    tag_119:\n        /* \"#utility.yul\":6784:6788   */\n      0x00\n        /* \"#utility.yul\":6822:6824   */\n      0x20\n        /* \"#utility.yul\":6811:6820   */\n      dup3\n        /* \"#utility.yul\":6807:6825   */\n      add\n        /* \"#utility.yul\":6799:6825   */\n      swap1\n      pop\n        /* \"#utility.yul\":6871:6880   */\n      dup2\n        /* \"#utility.yul\":6865:6869   */\n      dup2\n        /* \"#utility.yul\":6861:6881   */\n      sub\n        /* \"#utility.yul\":6857:6858   */\n      0x00\n        /* \"#utility.yul\":6846:6855   */\n      dup4\n        /* \"#utility.yul\":6842:6859   */\n      add\n        /* \"#utility.yul\":6835:6882   */\n      mstore\n        /* \"#utility.yul\":6899:7030   */\n      tag_374\n        /* \"#utility.yul\":7025:7029   */\n      dup2\n        /* \"#utility.yul\":6899:7030   */\n      tag_271\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":6891:7030   */\n      swap1\n      pop\n        /* \"#utility.yul\":6618:7037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7043:7223   */\n    tag_272:\n        /* \"#utility.yul\":7091:7168   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7088:7089   */\n      0x00\n        /* \"#utility.yul\":7081:7169   */\n      mstore\n        /* \"#utility.yul\":7188:7192   */\n      0x11\n        /* \"#utility.yul\":7185:7186   */\n      0x04\n        /* \"#utility.yul\":7178:7193   */\n      mstore\n        /* \"#utility.yul\":7212:7216   */\n      0x24\n        /* \"#utility.yul\":7209:7210   */\n      0x00\n        /* \"#utility.yul\":7202:7217   */\n      revert\n        /* \"#utility.yul\":7229:7420   */\n    tag_122:\n        /* \"#utility.yul\":7269:7272   */\n      0x00\n        /* \"#utility.yul\":7288:7308   */\n      tag_377\n        /* \"#utility.yul\":7306:7307   */\n      dup3\n        /* \"#utility.yul\":7288:7308   */\n      tag_251\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7283:7308   */\n      swap2\n      pop\n        /* \"#utility.yul\":7322:7342   */\n      tag_378\n        /* \"#utility.yul\":7340:7341   */\n      dup4\n        /* \"#utility.yul\":7322:7342   */\n      tag_251\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":7317:7342   */\n      swap3\n      pop\n        /* \"#utility.yul\":7365:7366   */\n      dup3\n        /* \"#utility.yul\":7362:7363   */\n      dup3\n        /* \"#utility.yul\":7358:7367   */\n      add\n        /* \"#utility.yul\":7351:7367   */\n      swap1\n      pop\n        /* \"#utility.yul\":7386:7389   */\n      dup1\n        /* \"#utility.yul\":7383:7384   */\n      dup3\n        /* \"#utility.yul\":7380:7390   */\n      gt\n        /* \"#utility.yul\":7377:7413   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":7393:7411   */\n      tag_380\n      tag_272\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7377:7413   */\n    tag_379:\n        /* \"#utility.yul\":7229:7420   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7426:7588   */\n    tag_273:\n        /* \"#utility.yul\":7566:7580   */\n      0x5374616b65206c6f636b65640000000000000000000000000000000000000000\n        /* \"#utility.yul\":7562:7563   */\n      0x00\n        /* \"#utility.yul\":7554:7560   */\n      dup3\n        /* \"#utility.yul\":7550:7564   */\n      add\n        /* \"#utility.yul\":7543:7581   */\n      mstore\n        /* \"#utility.yul\":7426:7588   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7594:7960   */\n    tag_274:\n        /* \"#utility.yul\":7736:7739   */\n      0x00\n        /* \"#utility.yul\":7757:7824   */\n      tag_383\n        /* \"#utility.yul\":7821:7823   */\n      0x0c\n        /* \"#utility.yul\":7816:7819   */\n      dup4\n        /* \"#utility.yul\":7757:7824   */\n      tag_267\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":7750:7824   */\n      swap2\n      pop\n        /* \"#utility.yul\":7833:7926   */\n      tag_384\n        /* \"#utility.yul\":7922:7925   */\n      dup3\n        /* \"#utility.yul\":7833:7926   */\n      tag_273\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7951:7953   */\n      0x20\n        /* \"#utility.yul\":7946:7949   */\n      dup3\n        /* \"#utility.yul\":7942:7954   */\n      add\n        /* \"#utility.yul\":7935:7954   */\n      swap1\n      pop\n        /* \"#utility.yul\":7594:7960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7966:8385   */\n    tag_125:\n        /* \"#utility.yul\":8132:8136   */\n      0x00\n        /* \"#utility.yul\":8170:8172   */\n      0x20\n        /* \"#utility.yul\":8159:8168   */\n      dup3\n        /* \"#utility.yul\":8155:8173   */\n      add\n        /* \"#utility.yul\":8147:8173   */\n      swap1\n      pop\n        /* \"#utility.yul\":8219:8228   */\n      dup2\n        /* \"#utility.yul\":8213:8217   */\n      dup2\n        /* \"#utility.yul\":8209:8229   */\n      sub\n        /* \"#utility.yul\":8205:8206   */\n      0x00\n        /* \"#utility.yul\":8194:8203   */\n      dup4\n        /* \"#utility.yul\":8190:8207   */\n      add\n        /* \"#utility.yul\":8183:8230   */\n      mstore\n        /* \"#utility.yul\":8247:8378   */\n      tag_386\n        /* \"#utility.yul\":8373:8377   */\n      dup2\n        /* \"#utility.yul\":8247:8378   */\n      tag_274\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":8239:8378   */\n      swap1\n      pop\n        /* \"#utility.yul\":7966:8385   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8391:8534   */\n    tag_275:\n        /* \"#utility.yul\":8448:8453   */\n      0x00\n        /* \"#utility.yul\":8479:8485   */\n      dup2\n        /* \"#utility.yul\":8473:8486   */\n      mload\n        /* \"#utility.yul\":8464:8486   */\n      swap1\n      pop\n        /* \"#utility.yul\":8495:8528   */\n      tag_388\n        /* \"#utility.yul\":8522:8527   */\n      dup2\n        /* \"#utility.yul\":8495:8528   */\n      tag_253\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8391:8534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8540:8891   */\n    tag_134:\n        /* \"#utility.yul\":8610:8616   */\n      0x00\n        /* \"#utility.yul\":8659:8661   */\n      0x20\n        /* \"#utility.yul\":8647:8656   */\n      dup3\n        /* \"#utility.yul\":8638:8645   */\n      dup5\n        /* \"#utility.yul\":8634:8657   */\n      sub\n        /* \"#utility.yul\":8630:8662   */\n      slt\n        /* \"#utility.yul\":8627:8746   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":8665:8744   */\n      tag_391\n      tag_245\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8627:8746   */\n    tag_390:\n        /* \"#utility.yul\":8785:8786   */\n      0x00\n        /* \"#utility.yul\":8810:8874   */\n      tag_392\n        /* \"#utility.yul\":8866:8873   */\n      dup5\n        /* \"#utility.yul\":8857:8863   */\n      dup3\n        /* \"#utility.yul\":8846:8855   */\n      dup6\n        /* \"#utility.yul\":8842:8864   */\n      add\n        /* \"#utility.yul\":8810:8874   */\n      tag_275\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":8800:8874   */\n      swap2\n      pop\n        /* \"#utility.yul\":8756:8884   */\n      pop\n        /* \"#utility.yul\":8540:8891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8897:9074   */\n    tag_276:\n        /* \"#utility.yul\":9037:9066   */\n      0x496e73756666696369656e74207265776172642062616c616e63650000000000\n        /* \"#utility.yul\":9033:9034   */\n      0x00\n        /* \"#utility.yul\":9025:9031   */\n      dup3\n        /* \"#utility.yul\":9021:9035   */\n      add\n        /* \"#utility.yul\":9014:9067   */\n      mstore\n        /* \"#utility.yul\":8897:9074   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9080:9446   */\n    tag_277:\n        /* \"#utility.yul\":9222:9225   */\n      0x00\n        /* \"#utility.yul\":9243:9310   */\n      tag_395\n        /* \"#utility.yul\":9307:9309   */\n      0x1b\n        /* \"#utility.yul\":9302:9305   */\n      dup4\n        /* \"#utility.yul\":9243:9310   */\n      tag_267\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9236:9310   */\n      swap2\n      pop\n        /* \"#utility.yul\":9319:9412   */\n      tag_396\n        /* \"#utility.yul\":9408:9411   */\n      dup3\n        /* \"#utility.yul\":9319:9412   */\n      tag_276\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":9437:9439   */\n      0x20\n        /* \"#utility.yul\":9432:9435   */\n      dup3\n        /* \"#utility.yul\":9428:9440   */\n      add\n        /* \"#utility.yul\":9421:9440   */\n      swap1\n      pop\n        /* \"#utility.yul\":9080:9446   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9452:9871   */\n    tag_137:\n        /* \"#utility.yul\":9618:9622   */\n      0x00\n        /* \"#utility.yul\":9656:9658   */\n      0x20\n        /* \"#utility.yul\":9645:9654   */\n      dup3\n        /* \"#utility.yul\":9641:9659   */\n      add\n        /* \"#utility.yul\":9633:9659   */\n      swap1\n      pop\n        /* \"#utility.yul\":9705:9714   */\n      dup2\n        /* \"#utility.yul\":9699:9703   */\n      dup2\n        /* \"#utility.yul\":9695:9715   */\n      sub\n        /* \"#utility.yul\":9691:9692   */\n      0x00\n        /* \"#utility.yul\":9680:9689   */\n      dup4\n        /* \"#utility.yul\":9676:9693   */\n      add\n        /* \"#utility.yul\":9669:9716   */\n      mstore\n        /* \"#utility.yul\":9733:9864   */\n      tag_398\n        /* \"#utility.yul\":9859:9863   */\n      dup2\n        /* \"#utility.yul\":9733:9864   */\n      tag_277\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":9725:9864   */\n      swap1\n      pop\n        /* \"#utility.yul\":9452:9871   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9877:10319   */\n    tag_140:\n        /* \"#utility.yul\":10026:10030   */\n      0x00\n        /* \"#utility.yul\":10064:10066   */\n      0x60\n        /* \"#utility.yul\":10053:10062   */\n      dup3\n        /* \"#utility.yul\":10049:10067   */\n      add\n        /* \"#utility.yul\":10041:10067   */\n      swap1\n      pop\n        /* \"#utility.yul\":10077:10148   */\n      tag_400\n        /* \"#utility.yul\":10145:10146   */\n      0x00\n        /* \"#utility.yul\":10134:10143   */\n      dup4\n        /* \"#utility.yul\":10130:10147   */\n      add\n        /* \"#utility.yul\":10121:10127   */\n      dup7\n        /* \"#utility.yul\":10077:10148   */\n      tag_252\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":10158:10230   */\n      tag_401\n        /* \"#utility.yul\":10226:10228   */\n      0x20\n        /* \"#utility.yul\":10215:10224   */\n      dup4\n        /* \"#utility.yul\":10211:10229   */\n      add\n        /* \"#utility.yul\":10202:10208   */\n      dup6\n        /* \"#utility.yul\":10158:10230   */\n      tag_252\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":10240:10312   */\n      tag_402\n        /* \"#utility.yul\":10308:10310   */\n      0x40\n        /* \"#utility.yul\":10297:10306   */\n      dup4\n        /* \"#utility.yul\":10293:10311   */\n      add\n        /* \"#utility.yul\":10284:10290   */\n      dup5\n        /* \"#utility.yul\":10240:10312   */\n      tag_252\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9877:10319   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10325:10501   */\n    tag_278:\n        /* \"#utility.yul\":10465:10493   */\n      0x5374616b65206475726174696f6e206d757374206265203e2030000000000000\n        /* \"#utility.yul\":10461:10462   */\n      0x00\n        /* \"#utility.yul\":10453:10459   */\n      dup3\n        /* \"#utility.yul\":10449:10463   */\n      add\n        /* \"#utility.yul\":10442:10494   */\n      mstore\n        /* \"#utility.yul\":10325:10501   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10507:10873   */\n    tag_279:\n        /* \"#utility.yul\":10649:10652   */\n      0x00\n        /* \"#utility.yul\":10670:10737   */\n      tag_405\n        /* \"#utility.yul\":10734:10736   */\n      0x1a\n        /* \"#utility.yul\":10729:10732   */\n      dup4\n        /* \"#utility.yul\":10670:10737   */\n      tag_267\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":10663:10737   */\n      swap2\n      pop\n        /* \"#utility.yul\":10746:10839   */\n      tag_406\n        /* \"#utility.yul\":10835:10838   */\n      dup3\n        /* \"#utility.yul\":10746:10839   */\n      tag_278\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10864:10866   */\n      0x20\n        /* \"#utility.yul\":10859:10862   */\n      dup3\n        /* \"#utility.yul\":10855:10867   */\n      add\n        /* \"#utility.yul\":10848:10867   */\n      swap1\n      pop\n        /* \"#utility.yul\":10507:10873   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10879:11298   */\n    tag_148:\n        /* \"#utility.yul\":11045:11049   */\n      0x00\n        /* \"#utility.yul\":11083:11085   */\n      0x20\n        /* \"#utility.yul\":11072:11081   */\n      dup3\n        /* \"#utility.yul\":11068:11086   */\n      add\n        /* \"#utility.yul\":11060:11086   */\n      swap1\n      pop\n        /* \"#utility.yul\":11132:11141   */\n      dup2\n        /* \"#utility.yul\":11126:11130   */\n      dup2\n        /* \"#utility.yul\":11122:11142   */\n      sub\n        /* \"#utility.yul\":11118:11119   */\n      0x00\n        /* \"#utility.yul\":11107:11116   */\n      dup4\n        /* \"#utility.yul\":11103:11120   */\n      add\n        /* \"#utility.yul\":11096:11143   */\n      mstore\n        /* \"#utility.yul\":11160:11291   */\n      tag_408\n        /* \"#utility.yul\":11286:11290   */\n      dup2\n        /* \"#utility.yul\":11160:11291   */\n      tag_279\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11152:11291   */\n      swap1\n      pop\n        /* \"#utility.yul\":10879:11298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11304:11469   */\n    tag_280:\n        /* \"#utility.yul\":11444:11461   */\n      0x416c7265616479207374616b696e670000000000000000000000000000000000\n        /* \"#utility.yul\":11440:11441   */\n      0x00\n        /* \"#utility.yul\":11432:11438   */\n      dup3\n        /* \"#utility.yul\":11428:11442   */\n      add\n        /* \"#utility.yul\":11421:11462   */\n      mstore\n        /* \"#utility.yul\":11304:11469   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11475:11841   */\n    tag_281:\n        /* \"#utility.yul\":11617:11620   */\n      0x00\n        /* \"#utility.yul\":11638:11705   */\n      tag_411\n        /* \"#utility.yul\":11702:11704   */\n      0x0f\n        /* \"#utility.yul\":11697:11700   */\n      dup4\n        /* \"#utility.yul\":11638:11705   */\n      tag_267\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11631:11705   */\n      swap2\n      pop\n        /* \"#utility.yul\":11714:11807   */\n      tag_412\n        /* \"#utility.yul\":11803:11806   */\n      dup3\n        /* \"#utility.yul\":11714:11807   */\n      tag_280\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11832:11834   */\n      0x20\n        /* \"#utility.yul\":11827:11830   */\n      dup3\n        /* \"#utility.yul\":11823:11835   */\n      add\n        /* \"#utility.yul\":11816:11835   */\n      swap1\n      pop\n        /* \"#utility.yul\":11475:11841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11847:12266   */\n    tag_163:\n        /* \"#utility.yul\":12013:12017   */\n      0x00\n        /* \"#utility.yul\":12051:12053   */\n      0x20\n        /* \"#utility.yul\":12040:12049   */\n      dup3\n        /* \"#utility.yul\":12036:12054   */\n      add\n        /* \"#utility.yul\":12028:12054   */\n      swap1\n      pop\n        /* \"#utility.yul\":12100:12109   */\n      dup2\n        /* \"#utility.yul\":12094:12098   */\n      dup2\n        /* \"#utility.yul\":12090:12110   */\n      sub\n        /* \"#utility.yul\":12086:12087   */\n      0x00\n        /* \"#utility.yul\":12075:12084   */\n      dup4\n        /* \"#utility.yul\":12071:12088   */\n      add\n        /* \"#utility.yul\":12064:12111   */\n      mstore\n        /* \"#utility.yul\":12128:12259   */\n      tag_414\n        /* \"#utility.yul\":12254:12258   */\n      dup2\n        /* \"#utility.yul\":12128:12259   */\n      tag_281\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":12120:12259   */\n      swap1\n      pop\n        /* \"#utility.yul\":11847:12266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12272:12443   */\n    tag_282:\n        /* \"#utility.yul\":12412:12435   */\n      0x416d6f756e742062656c6f77206d696e5374616b650000000000000000000000\n        /* \"#utility.yul\":12408:12409   */\n      0x00\n        /* \"#utility.yul\":12400:12406   */\n      dup3\n        /* \"#utility.yul\":12396:12410   */\n      add\n        /* \"#utility.yul\":12389:12436   */\n      mstore\n        /* \"#utility.yul\":12272:12443   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12449:12815   */\n    tag_283:\n        /* \"#utility.yul\":12591:12594   */\n      0x00\n        /* \"#utility.yul\":12612:12679   */\n      tag_417\n        /* \"#utility.yul\":12676:12678   */\n      0x15\n        /* \"#utility.yul\":12671:12674   */\n      dup4\n        /* \"#utility.yul\":12612:12679   */\n      tag_267\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":12605:12679   */\n      swap2\n      pop\n        /* \"#utility.yul\":12688:12781   */\n      tag_418\n        /* \"#utility.yul\":12777:12780   */\n      dup3\n        /* \"#utility.yul\":12688:12781   */\n      tag_282\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":12806:12808   */\n      0x20\n        /* \"#utility.yul\":12801:12804   */\n      dup3\n        /* \"#utility.yul\":12797:12809   */\n      add\n        /* \"#utility.yul\":12790:12809   */\n      swap1\n      pop\n        /* \"#utility.yul\":12449:12815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12821:13240   */\n    tag_166:\n        /* \"#utility.yul\":12987:12991   */\n      0x00\n        /* \"#utility.yul\":13025:13027   */\n      0x20\n        /* \"#utility.yul\":13014:13023   */\n      dup3\n        /* \"#utility.yul\":13010:13028   */\n      add\n        /* \"#utility.yul\":13002:13028   */\n      swap1\n      pop\n        /* \"#utility.yul\":13074:13083   */\n      dup2\n        /* \"#utility.yul\":13068:13072   */\n      dup2\n        /* \"#utility.yul\":13064:13084   */\n      sub\n        /* \"#utility.yul\":13060:13061   */\n      0x00\n        /* \"#utility.yul\":13049:13058   */\n      dup4\n        /* \"#utility.yul\":13045:13062   */\n      add\n        /* \"#utility.yul\":13038:13085   */\n      mstore\n        /* \"#utility.yul\":13102:13233   */\n      tag_420\n        /* \"#utility.yul\":13228:13232   */\n      dup2\n        /* \"#utility.yul\":13102:13233   */\n      tag_283\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":13094:13233   */\n      swap1\n      pop\n        /* \"#utility.yul\":12821:13240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13246:13419   */\n    tag_284:\n        /* \"#utility.yul\":13386:13411   */\n      0x416d6f756e742065786365656473206d61785374616b65000000000000000000\n        /* \"#utility.yul\":13382:13383   */\n      0x00\n        /* \"#utility.yul\":13374:13380   */\n      dup3\n        /* \"#utility.yul\":13370:13384   */\n      add\n        /* \"#utility.yul\":13363:13412   */\n      mstore\n        /* \"#utility.yul\":13246:13419   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13425:13791   */\n    tag_285:\n        /* \"#utility.yul\":13567:13570   */\n      0x00\n        /* \"#utility.yul\":13588:13655   */\n      tag_423\n        /* \"#utility.yul\":13652:13654   */\n      0x17\n        /* \"#utility.yul\":13647:13650   */\n      dup4\n        /* \"#utility.yul\":13588:13655   */\n      tag_267\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":13581:13655   */\n      swap2\n      pop\n        /* \"#utility.yul\":13664:13757   */\n      tag_424\n        /* \"#utility.yul\":13753:13756   */\n      dup3\n        /* \"#utility.yul\":13664:13757   */\n      tag_284\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":13782:13784   */\n      0x20\n        /* \"#utility.yul\":13777:13780   */\n      dup3\n        /* \"#utility.yul\":13773:13785   */\n      add\n        /* \"#utility.yul\":13766:13785   */\n      swap1\n      pop\n        /* \"#utility.yul\":13425:13791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13797:14216   */\n    tag_169:\n        /* \"#utility.yul\":13963:13967   */\n      0x00\n        /* \"#utility.yul\":14001:14003   */\n      0x20\n        /* \"#utility.yul\":13990:13999   */\n      dup3\n        /* \"#utility.yul\":13986:14004   */\n      add\n        /* \"#utility.yul\":13978:14004   */\n      swap1\n      pop\n        /* \"#utility.yul\":14050:14059   */\n      dup2\n        /* \"#utility.yul\":14044:14048   */\n      dup2\n        /* \"#utility.yul\":14040:14060   */\n      sub\n        /* \"#utility.yul\":14036:14037   */\n      0x00\n        /* \"#utility.yul\":14025:14034   */\n      dup4\n        /* \"#utility.yul\":14021:14038   */\n      add\n        /* \"#utility.yul\":14014:14061   */\n      mstore\n        /* \"#utility.yul\":14078:14209   */\n      tag_426\n        /* \"#utility.yul\":14204:14208   */\n      dup2\n        /* \"#utility.yul\":14078:14209   */\n      tag_285\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":14070:14209   */\n      swap1\n      pop\n        /* \"#utility.yul\":13797:14216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14222:14386   */\n    tag_286:\n        /* \"#utility.yul\":14362:14378   */\n      0x5374616b696e67206c6f636b6564000000000000000000000000000000000000\n        /* \"#utility.yul\":14358:14359   */\n      0x00\n        /* \"#utility.yul\":14350:14356   */\n      dup3\n        /* \"#utility.yul\":14346:14360   */\n      add\n        /* \"#utility.yul\":14339:14379   */\n      mstore\n        /* \"#utility.yul\":14222:14386   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14392:14758   */\n    tag_287:\n        /* \"#utility.yul\":14534:14537   */\n      0x00\n        /* \"#utility.yul\":14555:14622   */\n      tag_429\n        /* \"#utility.yul\":14619:14621   */\n      0x0e\n        /* \"#utility.yul\":14614:14617   */\n      dup4\n        /* \"#utility.yul\":14555:14622   */\n      tag_267\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":14548:14622   */\n      swap2\n      pop\n        /* \"#utility.yul\":14631:14724   */\n      tag_430\n        /* \"#utility.yul\":14720:14723   */\n      dup3\n        /* \"#utility.yul\":14631:14724   */\n      tag_286\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":14749:14751   */\n      0x20\n        /* \"#utility.yul\":14744:14747   */\n      dup3\n        /* \"#utility.yul\":14740:14752   */\n      add\n        /* \"#utility.yul\":14733:14752   */\n      swap1\n      pop\n        /* \"#utility.yul\":14392:14758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14764:15183   */\n    tag_172:\n        /* \"#utility.yul\":14930:14934   */\n      0x00\n        /* \"#utility.yul\":14968:14970   */\n      0x20\n        /* \"#utility.yul\":14957:14966   */\n      dup3\n        /* \"#utility.yul\":14953:14971   */\n      add\n        /* \"#utility.yul\":14945:14971   */\n      swap1\n      pop\n        /* \"#utility.yul\":15017:15026   */\n      dup2\n        /* \"#utility.yul\":15011:15015   */\n      dup2\n        /* \"#utility.yul\":15007:15027   */\n      sub\n        /* \"#utility.yul\":15003:15004   */\n      0x00\n        /* \"#utility.yul\":14992:15001   */\n      dup4\n        /* \"#utility.yul\":14988:15005   */\n      add\n        /* \"#utility.yul\":14981:15028   */\n      mstore\n        /* \"#utility.yul\":15045:15176   */\n      tag_432\n        /* \"#utility.yul\":15171:15175   */\n      dup2\n        /* \"#utility.yul\":15045:15176   */\n      tag_287\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":15037:15176   */\n      swap1\n      pop\n        /* \"#utility.yul\":14764:15183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15189:15521   */\n    tag_176:\n        /* \"#utility.yul\":15310:15314   */\n      0x00\n        /* \"#utility.yul\":15348:15350   */\n      0x40\n        /* \"#utility.yul\":15337:15346   */\n      dup3\n        /* \"#utility.yul\":15333:15351   */\n      add\n        /* \"#utility.yul\":15325:15351   */\n      swap1\n      pop\n        /* \"#utility.yul\":15361:15432   */\n      tag_434\n        /* \"#utility.yul\":15429:15430   */\n      0x00\n        /* \"#utility.yul\":15418:15427   */\n      dup4\n        /* \"#utility.yul\":15414:15431   */\n      add\n        /* \"#utility.yul\":15405:15411   */\n      dup6\n        /* \"#utility.yul\":15361:15432   */\n      tag_252\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":15442:15514   */\n      tag_435\n        /* \"#utility.yul\":15510:15512   */\n      0x20\n        /* \"#utility.yul\":15499:15508   */\n      dup4\n        /* \"#utility.yul\":15495:15513   */\n      add\n        /* \"#utility.yul\":15486:15492   */\n      dup5\n        /* \"#utility.yul\":15442:15514   */\n      tag_252\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":15189:15521   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15527:15698   */\n    tag_288:\n        /* \"#utility.yul\":15667:15690   */\n      0x4d6178207374616b65206d757374206265203e20300000000000000000000000\n        /* \"#utility.yul\":15663:15664   */\n      0x00\n        /* \"#utility.yul\":15655:15661   */\n      dup3\n        /* \"#utility.yul\":15651:15665   */\n      add\n        /* \"#utility.yul\":15644:15691   */\n      mstore\n        /* \"#utility.yul\":15527:15698   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15704:16070   */\n    tag_289:\n        /* \"#utility.yul\":15846:15849   */\n      0x00\n        /* \"#utility.yul\":15867:15934   */\n      tag_438\n        /* \"#utility.yul\":15931:15933   */\n      0x15\n        /* \"#utility.yul\":15926:15929   */\n      dup4\n        /* \"#utility.yul\":15867:15934   */\n      tag_267\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":15860:15934   */\n      swap2\n      pop\n        /* \"#utility.yul\":15943:16036   */\n      tag_439\n        /* \"#utility.yul\":16032:16035   */\n      dup3\n        /* \"#utility.yul\":15943:16036   */\n      tag_288\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":16061:16063   */\n      0x20\n        /* \"#utility.yul\":16056:16059   */\n      dup3\n        /* \"#utility.yul\":16052:16064   */\n      add\n        /* \"#utility.yul\":16045:16064   */\n      swap1\n      pop\n        /* \"#utility.yul\":15704:16070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16076:16495   */\n    tag_183:\n        /* \"#utility.yul\":16242:16246   */\n      0x00\n        /* \"#utility.yul\":16280:16282   */\n      0x20\n        /* \"#utility.yul\":16269:16278   */\n      dup3\n        /* \"#utility.yul\":16265:16283   */\n      add\n        /* \"#utility.yul\":16257:16283   */\n      swap1\n      pop\n        /* \"#utility.yul\":16329:16338   */\n      dup2\n        /* \"#utility.yul\":16323:16327   */\n      dup2\n        /* \"#utility.yul\":16319:16339   */\n      sub\n        /* \"#utility.yul\":16315:16316   */\n      0x00\n        /* \"#utility.yul\":16304:16313   */\n      dup4\n        /* \"#utility.yul\":16300:16317   */\n      add\n        /* \"#utility.yul\":16293:16340   */\n      mstore\n        /* \"#utility.yul\":16357:16488   */\n      tag_441\n        /* \"#utility.yul\":16483:16487   */\n      dup2\n        /* \"#utility.yul\":16357:16488   */\n      tag_289\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":16349:16488   */\n      swap1\n      pop\n        /* \"#utility.yul\":16076:16495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16501:16911   */\n    tag_189:\n        /* \"#utility.yul\":16541:16548   */\n      0x00\n        /* \"#utility.yul\":16564:16584   */\n      tag_443\n        /* \"#utility.yul\":16582:16583   */\n      dup3\n        /* \"#utility.yul\":16564:16584   */\n      tag_251\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":16559:16584   */\n      swap2\n      pop\n        /* \"#utility.yul\":16598:16618   */\n      tag_444\n        /* \"#utility.yul\":16616:16617   */\n      dup4\n        /* \"#utility.yul\":16598:16618   */\n      tag_251\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":16593:16618   */\n      swap3\n      pop\n        /* \"#utility.yul\":16653:16654   */\n      dup3\n        /* \"#utility.yul\":16650:16651   */\n      dup3\n        /* \"#utility.yul\":16646:16655   */\n      mul\n        /* \"#utility.yul\":16675:16705   */\n      tag_445\n        /* \"#utility.yul\":16693:16704   */\n      dup2\n        /* \"#utility.yul\":16675:16705   */\n      tag_251\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":16664:16705   */\n      swap2\n      pop\n        /* \"#utility.yul\":16854:16855   */\n      dup3\n        /* \"#utility.yul\":16845:16852   */\n      dup3\n        /* \"#utility.yul\":16841:16856   */\n      div\n        /* \"#utility.yul\":16838:16839   */\n      dup5\n        /* \"#utility.yul\":16835:16857   */\n      eq\n        /* \"#utility.yul\":16815:16816   */\n      dup4\n        /* \"#utility.yul\":16808:16817   */\n      iszero\n        /* \"#utility.yul\":16788:16871   */\n      or\n        /* \"#utility.yul\":16765:16904   */\n      tag_446\n      jumpi\n        /* \"#utility.yul\":16884:16902   */\n      tag_447\n      tag_272\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":16765:16904   */\n    tag_446:\n        /* \"#utility.yul\":16549:16911   */\n      pop\n        /* \"#utility.yul\":16501:16911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16917:17097   */\n    tag_290:\n        /* \"#utility.yul\":16965:17042   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16962:16963   */\n      0x00\n        /* \"#utility.yul\":16955:17043   */\n      mstore\n        /* \"#utility.yul\":17062:17066   */\n      0x12\n        /* \"#utility.yul\":17059:17060   */\n      0x04\n        /* \"#utility.yul\":17052:17067   */\n      mstore\n        /* \"#utility.yul\":17086:17090   */\n      0x24\n        /* \"#utility.yul\":17083:17084   */\n      0x00\n        /* \"#utility.yul\":17076:17091   */\n      revert\n        /* \"#utility.yul\":17103:17288   */\n    tag_191:\n        /* \"#utility.yul\":17143:17144   */\n      0x00\n        /* \"#utility.yul\":17160:17180   */\n      tag_450\n        /* \"#utility.yul\":17178:17179   */\n      dup3\n        /* \"#utility.yul\":17160:17180   */\n      tag_251\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":17155:17180   */\n      swap2\n      pop\n        /* \"#utility.yul\":17194:17214   */\n      tag_451\n        /* \"#utility.yul\":17212:17213   */\n      dup4\n        /* \"#utility.yul\":17194:17214   */\n      tag_251\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":17189:17214   */\n      swap3\n      pop\n        /* \"#utility.yul\":17233:17234   */\n      dup3\n        /* \"#utility.yul\":17223:17258   */\n      tag_452\n      jumpi\n        /* \"#utility.yul\":17238:17256   */\n      tag_453\n      tag_290\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":17223:17258   */\n    tag_452:\n        /* \"#utility.yul\":17280:17281   */\n      dup3\n        /* \"#utility.yul\":17277:17278   */\n      dup3\n        /* \"#utility.yul\":17273:17282   */\n      div\n        /* \"#utility.yul\":17268:17282   */\n      swap1\n      pop\n        /* \"#utility.yul\":17103:17288   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17294:17475   */\n    tag_291:\n        /* \"#utility.yul\":17434:17467   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":17430:17431   */\n      0x00\n        /* \"#utility.yul\":17422:17428   */\n      dup3\n        /* \"#utility.yul\":17418:17432   */\n      add\n        /* \"#utility.yul\":17411:17468   */\n      mstore\n        /* \"#utility.yul\":17294:17475   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17481:17847   */\n    tag_292:\n        /* \"#utility.yul\":17623:17626   */\n      0x00\n        /* \"#utility.yul\":17644:17711   */\n      tag_456\n        /* \"#utility.yul\":17708:17710   */\n      0x1f\n        /* \"#utility.yul\":17703:17706   */\n      dup4\n        /* \"#utility.yul\":17644:17711   */\n      tag_267\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":17637:17711   */\n      swap2\n      pop\n        /* \"#utility.yul\":17720:17813   */\n      tag_457\n        /* \"#utility.yul\":17809:17812   */\n      dup3\n        /* \"#utility.yul\":17720:17813   */\n      tag_291\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":17838:17840   */\n      0x20\n        /* \"#utility.yul\":17833:17836   */\n      dup3\n        /* \"#utility.yul\":17829:17841   */\n      add\n        /* \"#utility.yul\":17822:17841   */\n      swap1\n      pop\n        /* \"#utility.yul\":17481:17847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17853:18272   */\n    tag_212:\n        /* \"#utility.yul\":18019:18023   */\n      0x00\n        /* \"#utility.yul\":18057:18059   */\n      0x20\n        /* \"#utility.yul\":18046:18055   */\n      dup3\n        /* \"#utility.yul\":18042:18060   */\n      add\n        /* \"#utility.yul\":18034:18060   */\n      swap1\n      pop\n        /* \"#utility.yul\":18106:18115   */\n      dup2\n        /* \"#utility.yul\":18100:18104   */\n      dup2\n        /* \"#utility.yul\":18096:18116   */\n      sub\n        /* \"#utility.yul\":18092:18093   */\n      0x00\n        /* \"#utility.yul\":18081:18090   */\n      dup4\n        /* \"#utility.yul\":18077:18094   */\n      add\n        /* \"#utility.yul\":18070:18117   */\n      mstore\n        /* \"#utility.yul\":18134:18265   */\n      tag_459\n        /* \"#utility.yul\":18260:18264   */\n      dup2\n        /* \"#utility.yul\":18134:18265   */\n      tag_292\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":18126:18265   */\n      swap1\n      pop\n        /* \"#utility.yul\":17853:18272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18278:18610   */\n    tag_216:\n        /* \"#utility.yul\":18399:18403   */\n      0x00\n        /* \"#utility.yul\":18437:18439   */\n      0x40\n        /* \"#utility.yul\":18426:18435   */\n      dup3\n        /* \"#utility.yul\":18422:18440   */\n      add\n        /* \"#utility.yul\":18414:18440   */\n      swap1\n      pop\n        /* \"#utility.yul\":18450:18521   */\n      tag_461\n        /* \"#utility.yul\":18518:18519   */\n      0x00\n        /* \"#utility.yul\":18507:18516   */\n      dup4\n        /* \"#utility.yul\":18503:18520   */\n      add\n        /* \"#utility.yul\":18494:18500   */\n      dup6\n        /* \"#utility.yul\":18450:18521   */\n      tag_260\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":18531:18603   */\n      tag_462\n        /* \"#utility.yul\":18599:18601   */\n      0x20\n        /* \"#utility.yul\":18588:18597   */\n      dup4\n        /* \"#utility.yul\":18584:18602   */\n      add\n        /* \"#utility.yul\":18575:18581   */\n      dup5\n        /* \"#utility.yul\":18531:18603   */\n      tag_252\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":18278:18610   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18616:19058   */\n    tag_223:\n        /* \"#utility.yul\":18765:18769   */\n      0x00\n        /* \"#utility.yul\":18803:18805   */\n      0x60\n        /* \"#utility.yul\":18792:18801   */\n      dup3\n        /* \"#utility.yul\":18788:18806   */\n      add\n        /* \"#utility.yul\":18780:18806   */\n      swap1\n      pop\n        /* \"#utility.yul\":18816:18887   */\n      tag_464\n        /* \"#utility.yul\":18884:18885   */\n      0x00\n        /* \"#utility.yul\":18873:18882   */\n      dup4\n        /* \"#utility.yul\":18869:18886   */\n      add\n        /* \"#utility.yul\":18860:18866   */\n      dup7\n        /* \"#utility.yul\":18816:18887   */\n      tag_260\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":18897:18969   */\n      tag_465\n        /* \"#utility.yul\":18965:18967   */\n      0x20\n        /* \"#utility.yul\":18954:18963   */\n      dup4\n        /* \"#utility.yul\":18950:18968   */\n      add\n        /* \"#utility.yul\":18941:18947   */\n      dup6\n        /* \"#utility.yul\":18897:18969   */\n      tag_260\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":18979:19051   */\n      tag_466\n        /* \"#utility.yul\":19047:19049   */\n      0x40\n        /* \"#utility.yul\":19036:19045   */\n      dup4\n        /* \"#utility.yul\":19032:19050   */\n      add\n        /* \"#utility.yul\":19023:19029   */\n      dup5\n        /* \"#utility.yul\":18979:19051   */\n      tag_252\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":18616:19058   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19064:19255   */\n    tag_229:\n        /* \"#utility.yul\":19102:19106   */\n      0x00\n        /* \"#utility.yul\":19122:19140   */\n      tag_468\n        /* \"#utility.yul\":19138:19139   */\n      dup3\n        /* \"#utility.yul\":19122:19140   */\n      tag_261\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":19117:19140   */\n      swap2\n      pop\n        /* \"#utility.yul\":19154:19172   */\n      tag_469\n        /* \"#utility.yul\":19170:19171   */\n      dup4\n        /* \"#utility.yul\":19154:19172   */\n      tag_261\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":19149:19172   */\n      swap3\n      pop\n        /* \"#utility.yul\":19196:19197   */\n      dup3\n        /* \"#utility.yul\":19193:19194   */\n      dup3\n        /* \"#utility.yul\":19189:19198   */\n      sub\n        /* \"#utility.yul\":19181:19198   */\n      swap1\n      pop\n        /* \"#utility.yul\":19220:19224   */\n      0xff\n        /* \"#utility.yul\":19214:19218   */\n      dup2\n        /* \"#utility.yul\":19211:19225   */\n      gt\n        /* \"#utility.yul\":19208:19248   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":19228:19246   */\n      tag_471\n      tag_272\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":19208:19248   */\n    tag_470:\n        /* \"#utility.yul\":19064:19255   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19261:19363   */\n    tag_293:\n        /* \"#utility.yul\":19303:19311   */\n      0x00\n        /* \"#utility.yul\":19350:19355   */\n      dup2\n        /* \"#utility.yul\":19347:19348   */\n      0x01\n        /* \"#utility.yul\":19343:19356   */\n      shr\n        /* \"#utility.yul\":19322:19356   */\n      swap1\n      pop\n        /* \"#utility.yul\":19261:19363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19369:20217   */\n    tag_294:\n        /* \"#utility.yul\":19430:19435   */\n      0x00\n        /* \"#utility.yul\":19437:19441   */\n      0x00\n        /* \"#utility.yul\":19461:19467   */\n      dup3\n        /* \"#utility.yul\":19452:19467   */\n      swap2\n      pop\n        /* \"#utility.yul\":19485:19490   */\n      dup4\n        /* \"#utility.yul\":19476:19490   */\n      swap1\n      pop\n        /* \"#utility.yul\":19499:20211   */\n    tag_474:\n        /* \"#utility.yul\":19520:19521   */\n      0x01\n        /* \"#utility.yul\":19510:19518   */\n      dup6\n        /* \"#utility.yul\":19507:19522   */\n      gt\n        /* \"#utility.yul\":19499:20211   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":19615:19619   */\n      dup1\n        /* \"#utility.yul\":19610:19613   */\n      dup7\n        /* \"#utility.yul\":19606:19620   */\n      div\n        /* \"#utility.yul\":19600:19604   */\n      dup2\n        /* \"#utility.yul\":19597:19621   */\n      gt\n        /* \"#utility.yul\":19594:19644   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":19624:19642   */\n      tag_478\n      tag_272\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":19594:19644   */\n    tag_477:\n        /* \"#utility.yul\":19674:19675   */\n      0x01\n        /* \"#utility.yul\":19664:19672   */\n      dup6\n        /* \"#utility.yul\":19660:19676   */\n      and\n        /* \"#utility.yul\":19657:20108   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":20089:20093   */\n      dup1\n        /* \"#utility.yul\":20082:20087   */\n      dup3\n        /* \"#utility.yul\":20078:20094   */\n      mul\n        /* \"#utility.yul\":20069:20094   */\n      swap2\n      pop\n        /* \"#utility.yul\":19657:20108   */\n    tag_479:\n        /* \"#utility.yul\":20139:20143   */\n      dup1\n        /* \"#utility.yul\":20133:20137   */\n      dup2\n        /* \"#utility.yul\":20129:20144   */\n      mul\n        /* \"#utility.yul\":20121:20144   */\n      swap1\n      pop\n        /* \"#utility.yul\":20169:20201   */\n      tag_480\n        /* \"#utility.yul\":20192:20200   */\n      dup6\n        /* \"#utility.yul\":20169:20201   */\n      tag_293\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":20157:20201   */\n      swap5\n      pop\n        /* \"#utility.yul\":19499:20211   */\n      jump(tag_474)\n    tag_476:\n        /* \"#utility.yul\":19369:20217   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20223:21296   */\n    tag_295:\n        /* \"#utility.yul\":20277:20282   */\n      0x00\n        /* \"#utility.yul\":20468:20476   */\n      dup3\n        /* \"#utility.yul\":20458:20498   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":20489:20490   */\n      0x01\n        /* \"#utility.yul\":20480:20490   */\n      swap1\n      pop\n        /* \"#utility.yul\":20491:20496   */\n      jump(tag_481)\n        /* \"#utility.yul\":20458:20498   */\n    tag_482:\n        /* \"#utility.yul\":20517:20521   */\n      dup2\n        /* \"#utility.yul\":20507:20543   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":20534:20535   */\n      0x00\n        /* \"#utility.yul\":20525:20535   */\n      swap1\n      pop\n        /* \"#utility.yul\":20536:20541   */\n      jump(tag_481)\n        /* \"#utility.yul\":20507:20543   */\n    tag_483:\n        /* \"#utility.yul\":20603:20607   */\n      dup2\n        /* \"#utility.yul\":20651:20652   */\n      0x01\n        /* \"#utility.yul\":20646:20673   */\n      dup2\n      eq\n      tag_485\n      jumpi\n        /* \"#utility.yul\":20687:20688   */\n      0x02\n        /* \"#utility.yul\":20682:20873   */\n      dup2\n      eq\n      tag_486\n      jumpi\n        /* \"#utility.yul\":20596:20873   */\n      jump(tag_484)\n        /* \"#utility.yul\":20646:20673   */\n    tag_485:\n        /* \"#utility.yul\":20664:20665   */\n      0x01\n        /* \"#utility.yul\":20655:20665   */\n      swap2\n      pop\n        /* \"#utility.yul\":20666:20671   */\n      pop\n      jump(tag_481)\n        /* \"#utility.yul\":20682:20873   */\n    tag_486:\n        /* \"#utility.yul\":20727:20730   */\n      0xff\n        /* \"#utility.yul\":20717:20725   */\n      dup5\n        /* \"#utility.yul\":20714:20731   */\n      gt\n        /* \"#utility.yul\":20711:20754   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":20734:20752   */\n      tag_488\n      tag_272\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":20711:20754   */\n    tag_487:\n        /* \"#utility.yul\":20783:20791   */\n      dup4\n        /* \"#utility.yul\":20780:20781   */\n      0x02\n        /* \"#utility.yul\":20776:20792   */\n      exp\n        /* \"#utility.yul\":20767:20792   */\n      swap2\n      pop\n        /* \"#utility.yul\":20818:20821   */\n      dup5\n        /* \"#utility.yul\":20811:20816   */\n      dup3\n        /* \"#utility.yul\":20808:20822   */\n      gt\n        /* \"#utility.yul\":20805:20845   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":20825:20843   */\n      tag_490\n      tag_272\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":20805:20845   */\n    tag_489:\n        /* \"#utility.yul\":20858:20863   */\n      pop\n      jump(tag_481)\n        /* \"#utility.yul\":20596:20873   */\n    tag_484:\n      pop\n        /* \"#utility.yul\":20982:20984   */\n      0x20\n        /* \"#utility.yul\":20972:20980   */\n      dup4\n        /* \"#utility.yul\":20969:20985   */\n      lt\n        /* \"#utility.yul\":20963:20966   */\n      0x0133\n        /* \"#utility.yul\":20957:20961   */\n      dup4\n        /* \"#utility.yul\":20954:20967   */\n      lt\n        /* \"#utility.yul\":20950:20986   */\n      and\n        /* \"#utility.yul\":20932:20934   */\n      0x4e\n        /* \"#utility.yul\":20922:20930   */\n      dup5\n        /* \"#utility.yul\":20919:20935   */\n      lt\n        /* \"#utility.yul\":20914:20916   */\n      0x0b\n        /* \"#utility.yul\":20908:20912   */\n      dup5\n        /* \"#utility.yul\":20905:20917   */\n      lt\n        /* \"#utility.yul\":20901:20936   */\n      and\n        /* \"#utility.yul\":20885:20996   */\n      or\n        /* \"#utility.yul\":20882:21128   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":21038:21046   */\n      dup3\n        /* \"#utility.yul\":21032:21036   */\n      dup3\n        /* \"#utility.yul\":21028:21047   */\n      exp\n        /* \"#utility.yul\":21019:21047   */\n      swap1\n      pop\n        /* \"#utility.yul\":21073:21076   */\n      dup4\n        /* \"#utility.yul\":21066:21071   */\n      dup2\n        /* \"#utility.yul\":21063:21077   */\n      gt\n        /* \"#utility.yul\":21060:21100   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":21080:21098   */\n      tag_493\n      tag_272\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":21060:21100   */\n    tag_492:\n        /* \"#utility.yul\":21113:21118   */\n      jump(tag_481)\n        /* \"#utility.yul\":20882:21128   */\n    tag_491:\n        /* \"#utility.yul\":21153:21195   */\n      tag_494\n        /* \"#utility.yul\":21191:21194   */\n      dup5\n        /* \"#utility.yul\":21181:21189   */\n      dup5\n        /* \"#utility.yul\":21175:21179   */\n      dup5\n        /* \"#utility.yul\":21172:21173   */\n      0x01\n        /* \"#utility.yul\":21153:21195   */\n      tag_294\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":21138:21195   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":21227:21231   */\n      dup2\n        /* \"#utility.yul\":21222:21225   */\n      dup5\n        /* \"#utility.yul\":21218:21232   */\n      div\n        /* \"#utility.yul\":21211:21216   */\n      dup2\n        /* \"#utility.yul\":21208:21233   */\n      gt\n        /* \"#utility.yul\":21205:21256   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":21236:21254   */\n      tag_496\n      tag_272\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":21205:21256   */\n    tag_495:\n        /* \"#utility.yul\":21285:21289   */\n      dup2\n        /* \"#utility.yul\":21278:21283   */\n      dup2\n        /* \"#utility.yul\":21274:21290   */\n      mul\n        /* \"#utility.yul\":21265:21290   */\n      swap1\n      pop\n        /* \"#utility.yul\":20223:21296   */\n    tag_481:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21302:21583   */\n    tag_231:\n        /* \"#utility.yul\":21360:21365   */\n      0x00\n        /* \"#utility.yul\":21384:21407   */\n      tag_498\n        /* \"#utility.yul\":21402:21406   */\n      dup3\n        /* \"#utility.yul\":21384:21407   */\n      tag_251\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":21376:21407   */\n      swap2\n      pop\n        /* \"#utility.yul\":21428:21453   */\n      tag_499\n        /* \"#utility.yul\":21444:21452   */\n      dup4\n        /* \"#utility.yul\":21428:21453   */\n      tag_261\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":21416:21453   */\n      swap3\n      pop\n        /* \"#utility.yul\":21472:21576   */\n      tag_500\n        /* \"#utility.yul\":21509:21575   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21499:21507   */\n      dup5\n        /* \"#utility.yul\":21493:21497   */\n      dup5\n        /* \"#utility.yul\":21472:21576   */\n      tag_295\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":21463:21576   */\n      swap1\n      pop\n        /* \"#utility.yul\":21302:21583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c06c700e0fad9dbffae1d9b28ccc751f7dd4c76ad30b9fe7fc0327bd81ef18eb64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1047": {
									"entryPoint": null,
									"id": 1047,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_getDecimals_1085": {
									"entryPoint": 1025,
									"id": 1085,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 832,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 2449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 1512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 2469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2227,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d": {
									"entryPoint": 1687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af": {
									"entryPoint": 2311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2": {
									"entryPoint": 1791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126": {
									"entryPoint": 2103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 2427,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10351:10",
										"nodeType": "YulBlock",
										"src": "0:10351:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "890:32:10",
													"nodeType": "YulBlock",
													"src": "890:32:10",
													"statements": [
														{
															"nativeSrc": "900:16:10",
															"nodeType": "YulAssignment",
															"src": "900:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:10",
																"nodeType": "YulIdentifier",
																"src": "911:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:10",
														"nodeType": "YulTypedName",
														"src": "872:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:10",
														"nodeType": "YulTypedName",
														"src": "882:7:10",
														"type": ""
													}
												],
												"src": "845:77:10"
											},
											{
												"body": {
													"nativeSrc": "971:79:10",
													"nodeType": "YulBlock",
													"src": "971:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:10",
																"nodeType": "YulBlock",
																"src": "1028:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:10"
																			},
																			"nativeSrc": "1030:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:10"
																		},
																		"nativeSrc": "1030:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:10"
																				},
																				"nativeSrc": "1001:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:10"
																		},
																		"nativeSrc": "991:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:10"
																},
																"nativeSrc": "984:43:10",
																"nodeType": "YulFunctionCall",
																"src": "984:43:10"
															},
															"nativeSrc": "981:63:10",
															"nodeType": "YulIf",
															"src": "981:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:10",
														"nodeType": "YulTypedName",
														"src": "964:5:10",
														"type": ""
													}
												],
												"src": "928:122:10"
											},
											{
												"body": {
													"nativeSrc": "1119:80:10",
													"nodeType": "YulBlock",
													"src": "1119:80:10",
													"statements": [
														{
															"nativeSrc": "1129:22:10",
															"nodeType": "YulAssignment",
															"src": "1129:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:10"
																},
																"nativeSrc": "1138:13:10",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:10"
																},
																"nativeSrc": "1160:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:10"
															},
															"nativeSrc": "1160:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:10",
														"nodeType": "YulTypedName",
														"src": "1097:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:10",
														"nodeType": "YulTypedName",
														"src": "1105:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:10",
														"nodeType": "YulTypedName",
														"src": "1113:5:10",
														"type": ""
													}
												],
												"src": "1056:143:10"
											},
											{
												"body": {
													"nativeSrc": "1350:832:10",
													"nodeType": "YulBlock",
													"src": "1350:832:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1397:83:10",
																"nodeType": "YulBlock",
																"src": "1397:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1399:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1399:77:10"
																			},
																			"nativeSrc": "1399:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1399:79:10"
																		},
																		"nativeSrc": "1399:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1399:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1371:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1380:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1380:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1367:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1367:3:10"
																		},
																		"nativeSrc": "1367:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1367:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1392:3:10",
																		"nodeType": "YulLiteral",
																		"src": "1392:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1363:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1363:3:10"
																},
																"nativeSrc": "1363:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1363:33:10"
															},
															"nativeSrc": "1360:120:10",
															"nodeType": "YulIf",
															"src": "1360:120:10"
														},
														{
															"nativeSrc": "1490:128:10",
															"nodeType": "YulBlock",
															"src": "1490:128:10",
															"statements": [
																{
																	"nativeSrc": "1505:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1505:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1519:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1519:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1509:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1509:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1534:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1534:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1580:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1580:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1591:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1591:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1576:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1576:3:10"
																				},
																				"nativeSrc": "1576:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1576:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1600:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1600:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1544:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1544:31:10"
																		},
																		"nativeSrc": "1544:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1544:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1534:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1534:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1628:129:10",
															"nodeType": "YulBlock",
															"src": "1628:129:10",
															"statements": [
																{
																	"nativeSrc": "1643:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1643:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1657:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1647:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1647:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1673:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1673:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1719:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1719:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1730:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1730:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1715:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1715:3:10"
																				},
																				"nativeSrc": "1715:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1715:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1739:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1739:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1683:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1683:31:10"
																		},
																		"nativeSrc": "1683:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1683:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1673:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1673:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1767:129:10",
															"nodeType": "YulBlock",
															"src": "1767:129:10",
															"statements": [
																{
																	"nativeSrc": "1782:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1782:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1796:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1796:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1786:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1786:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1812:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1812:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1858:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1858:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1869:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1869:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1854:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1854:3:10"
																				},
																				"nativeSrc": "1854:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1854:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1878:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1878:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1822:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1822:31:10"
																		},
																		"nativeSrc": "1822:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1822:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1812:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1812:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1906:129:10",
															"nodeType": "YulBlock",
															"src": "1906:129:10",
															"statements": [
																{
																	"nativeSrc": "1921:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1921:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1935:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1935:2:10",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1925:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1925:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1951:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1951:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1997:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1997:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2008:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2008:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1993:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1993:3:10"
																				},
																				"nativeSrc": "1993:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1993:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2017:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2017:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1961:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1961:31:10"
																		},
																		"nativeSrc": "1961:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1961:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1951:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1951:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2045:130:10",
															"nodeType": "YulBlock",
															"src": "2045:130:10",
															"statements": [
																{
																	"nativeSrc": "2060:17:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2060:17:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2074:3:10",
																		"nodeType": "YulLiteral",
																		"src": "2074:3:10",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2064:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2064:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2091:74:10",
																	"nodeType": "YulAssignment",
																	"src": "2091:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2137:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2137:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2148:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2148:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2133:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2133:3:10"
																				},
																				"nativeSrc": "2133:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2133:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2157:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2157:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2101:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "2101:31:10"
																		},
																		"nativeSrc": "2101:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2101:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2091:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2091:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "1205:977:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1288:9:10",
														"nodeType": "YulTypedName",
														"src": "1288:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1299:7:10",
														"nodeType": "YulTypedName",
														"src": "1299:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1311:6:10",
														"nodeType": "YulTypedName",
														"src": "1311:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1319:6:10",
														"nodeType": "YulTypedName",
														"src": "1319:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1327:6:10",
														"nodeType": "YulTypedName",
														"src": "1327:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1335:6:10",
														"nodeType": "YulTypedName",
														"src": "1335:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1343:6:10",
														"nodeType": "YulTypedName",
														"src": "1343:6:10",
														"type": ""
													}
												],
												"src": "1205:977:10"
											},
											{
												"body": {
													"nativeSrc": "2253:53:10",
													"nodeType": "YulBlock",
													"src": "2253:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2270:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2270:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2293:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2293:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2275:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2275:17:10"
																		},
																		"nativeSrc": "2275:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2275:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2263:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2263:6:10"
																},
																"nativeSrc": "2263:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2263:37:10"
															},
															"nativeSrc": "2263:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2263:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2188:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2241:5:10",
														"nodeType": "YulTypedName",
														"src": "2241:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2248:3:10",
														"nodeType": "YulTypedName",
														"src": "2248:3:10",
														"type": ""
													}
												],
												"src": "2188:118:10"
											},
											{
												"body": {
													"nativeSrc": "2410:124:10",
													"nodeType": "YulBlock",
													"src": "2410:124:10",
													"statements": [
														{
															"nativeSrc": "2420:26:10",
															"nodeType": "YulAssignment",
															"src": "2420:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2432:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2432:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2443:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2443:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2428:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2428:3:10"
																},
																"nativeSrc": "2428:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2428:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2420:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2420:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2500:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2500:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2513:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2513:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2524:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2524:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2509:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2509:3:10"
																		},
																		"nativeSrc": "2509:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2509:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2456:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2456:43:10"
																},
																"nativeSrc": "2456:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2456:71:10"
															},
															"nativeSrc": "2456:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2456:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2312:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2382:9:10",
														"nodeType": "YulTypedName",
														"src": "2382:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2394:6:10",
														"nodeType": "YulTypedName",
														"src": "2394:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2405:4:10",
														"nodeType": "YulTypedName",
														"src": "2405:4:10",
														"type": ""
													}
												],
												"src": "2312:222:10"
											},
											{
												"body": {
													"nativeSrc": "2636:73:10",
													"nodeType": "YulBlock",
													"src": "2636:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2653:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2653:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2658:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2658:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2646:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2646:6:10"
																},
																"nativeSrc": "2646:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2646:19:10"
															},
															"nativeSrc": "2646:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "2646:19:10"
														},
														{
															"nativeSrc": "2674:29:10",
															"nodeType": "YulAssignment",
															"src": "2674:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2693:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2693:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2698:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2689:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2689:3:10"
																},
																"nativeSrc": "2689:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2689:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2674:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "2674:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2540:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2608:3:10",
														"nodeType": "YulTypedName",
														"src": "2608:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2613:6:10",
														"nodeType": "YulTypedName",
														"src": "2613:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2624:11:10",
														"nodeType": "YulTypedName",
														"src": "2624:11:10",
														"type": ""
													}
												],
												"src": "2540:169:10"
											},
											{
												"body": {
													"nativeSrc": "2821:69:10",
													"nodeType": "YulBlock",
													"src": "2821:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2843:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2843:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2851:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2851:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2839:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2839:3:10"
																		},
																		"nativeSrc": "2839:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2839:14:10"
																	},
																	{
																		"hexValue": "4c616e64466920746f6b656e207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "2855:27:10",
																		"nodeType": "YulLiteral",
																		"src": "2855:27:10",
																		"type": "",
																		"value": "LandFi token zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2832:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:10"
																},
																"nativeSrc": "2832:51:10",
																"nodeType": "YulFunctionCall",
																"src": "2832:51:10"
															},
															"nativeSrc": "2832:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "2832:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d",
												"nativeSrc": "2715:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2813:6:10",
														"nodeType": "YulTypedName",
														"src": "2813:6:10",
														"type": ""
													}
												],
												"src": "2715:175:10"
											},
											{
												"body": {
													"nativeSrc": "3042:220:10",
													"nodeType": "YulBlock",
													"src": "3042:220:10",
													"statements": [
														{
															"nativeSrc": "3052:74:10",
															"nodeType": "YulAssignment",
															"src": "3052:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3118:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3118:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3123:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3123:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3059:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3059:58:10"
																},
																"nativeSrc": "3059:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3059:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3052:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3052:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3224:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3224:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d",
																	"nativeSrc": "3135:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "3135:88:10"
																},
																"nativeSrc": "3135:93:10",
																"nodeType": "YulFunctionCall",
																"src": "3135:93:10"
															},
															"nativeSrc": "3135:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "3135:93:10"
														},
														{
															"nativeSrc": "3237:19:10",
															"nodeType": "YulAssignment",
															"src": "3237:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3248:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3248:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3253:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3253:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3244:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3244:3:10"
																},
																"nativeSrc": "3244:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3244:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3237:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3237:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2896:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3030:3:10",
														"nodeType": "YulTypedName",
														"src": "3030:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3038:3:10",
														"nodeType": "YulTypedName",
														"src": "3038:3:10",
														"type": ""
													}
												],
												"src": "2896:366:10"
											},
											{
												"body": {
													"nativeSrc": "3439:248:10",
													"nodeType": "YulBlock",
													"src": "3439:248:10",
													"statements": [
														{
															"nativeSrc": "3449:26:10",
															"nodeType": "YulAssignment",
															"src": "3449:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3461:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3461:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3472:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3472:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3457:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3457:3:10"
																},
																"nativeSrc": "3457:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3457:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3449:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3449:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3496:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3496:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3507:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3507:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3492:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3492:3:10"
																		},
																		"nativeSrc": "3492:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3492:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3515:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3515:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3521:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3521:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3511:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3511:3:10"
																		},
																		"nativeSrc": "3511:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3511:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3485:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3485:6:10"
																},
																"nativeSrc": "3485:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3485:47:10"
															},
															"nativeSrc": "3485:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3485:47:10"
														},
														{
															"nativeSrc": "3541:139:10",
															"nodeType": "YulAssignment",
															"src": "3541:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3675:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3675:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3549:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3549:124:10"
																},
																"nativeSrc": "3549:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3549:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3541:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3541:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3268:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3419:9:10",
														"nodeType": "YulTypedName",
														"src": "3419:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3434:4:10",
														"nodeType": "YulTypedName",
														"src": "3434:4:10",
														"type": ""
													}
												],
												"src": "3268:419:10"
											},
											{
												"body": {
													"nativeSrc": "3799:69:10",
													"nodeType": "YulBlock",
													"src": "3799:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3821:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3821:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3829:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3829:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3817:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3817:3:10"
																		},
																		"nativeSrc": "3817:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3817:14:10"
																	},
																	{
																		"hexValue": "52657761726420746f6b656e207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "3833:27:10",
																		"nodeType": "YulLiteral",
																		"src": "3833:27:10",
																		"type": "",
																		"value": "Reward token zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3810:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3810:6:10"
																},
																"nativeSrc": "3810:51:10",
																"nodeType": "YulFunctionCall",
																"src": "3810:51:10"
															},
															"nativeSrc": "3810:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "3810:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2",
												"nativeSrc": "3693:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3791:6:10",
														"nodeType": "YulTypedName",
														"src": "3791:6:10",
														"type": ""
													}
												],
												"src": "3693:175:10"
											},
											{
												"body": {
													"nativeSrc": "4020:220:10",
													"nodeType": "YulBlock",
													"src": "4020:220:10",
													"statements": [
														{
															"nativeSrc": "4030:74:10",
															"nodeType": "YulAssignment",
															"src": "4030:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4096:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4096:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4101:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4037:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4037:58:10"
																},
																"nativeSrc": "4037:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4037:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4030:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4030:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4202:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4202:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2",
																	"nativeSrc": "4113:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4113:88:10"
																},
																"nativeSrc": "4113:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4113:93:10"
															},
															"nativeSrc": "4113:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4113:93:10"
														},
														{
															"nativeSrc": "4215:19:10",
															"nodeType": "YulAssignment",
															"src": "4215:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4226:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4226:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4231:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4231:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4222:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4222:3:10"
																},
																"nativeSrc": "4222:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4222:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4215:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4215:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3874:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4008:3:10",
														"nodeType": "YulTypedName",
														"src": "4008:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4016:3:10",
														"nodeType": "YulTypedName",
														"src": "4016:3:10",
														"type": ""
													}
												],
												"src": "3874:366:10"
											},
											{
												"body": {
													"nativeSrc": "4417:248:10",
													"nodeType": "YulBlock",
													"src": "4417:248:10",
													"statements": [
														{
															"nativeSrc": "4427:26:10",
															"nodeType": "YulAssignment",
															"src": "4427:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4439:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4439:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4450:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4450:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4435:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4435:3:10"
																},
																"nativeSrc": "4435:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4435:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4427:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4427:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4474:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4474:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4485:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4485:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4470:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4470:3:10"
																		},
																		"nativeSrc": "4470:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4470:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4493:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4493:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4499:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4499:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4489:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4489:3:10"
																		},
																		"nativeSrc": "4489:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4489:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4463:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4463:6:10"
																},
																"nativeSrc": "4463:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4463:47:10"
															},
															"nativeSrc": "4463:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4463:47:10"
														},
														{
															"nativeSrc": "4519:139:10",
															"nodeType": "YulAssignment",
															"src": "4519:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4653:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4653:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4527:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4527:124:10"
																},
																"nativeSrc": "4527:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4527:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4519:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4519:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4246:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4397:9:10",
														"nodeType": "YulTypedName",
														"src": "4397:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4412:4:10",
														"nodeType": "YulTypedName",
														"src": "4412:4:10",
														"type": ""
													}
												],
												"src": "4246:419:10"
											},
											{
												"body": {
													"nativeSrc": "4777:70:10",
													"nodeType": "YulBlock",
													"src": "4777:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4799:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4799:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4807:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4807:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4795:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4795:3:10"
																		},
																		"nativeSrc": "4795:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4795:14:10"
																	},
																	{
																		"hexValue": "5374616b65206475726174696f6e206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "4811:28:10",
																		"nodeType": "YulLiteral",
																		"src": "4811:28:10",
																		"type": "",
																		"value": "Stake duration must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4788:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4788:6:10"
																},
																"nativeSrc": "4788:52:10",
																"nodeType": "YulFunctionCall",
																"src": "4788:52:10"
															},
															"nativeSrc": "4788:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "4788:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b",
												"nativeSrc": "4671:176:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4769:6:10",
														"nodeType": "YulTypedName",
														"src": "4769:6:10",
														"type": ""
													}
												],
												"src": "4671:176:10"
											},
											{
												"body": {
													"nativeSrc": "4999:220:10",
													"nodeType": "YulBlock",
													"src": "4999:220:10",
													"statements": [
														{
															"nativeSrc": "5009:74:10",
															"nodeType": "YulAssignment",
															"src": "5009:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5075:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5075:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5080:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5080:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5016:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5016:58:10"
																},
																"nativeSrc": "5016:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5016:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5009:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5009:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5181:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5181:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b",
																	"nativeSrc": "5092:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5092:88:10"
																},
																"nativeSrc": "5092:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5092:93:10"
															},
															"nativeSrc": "5092:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5092:93:10"
														},
														{
															"nativeSrc": "5194:19:10",
															"nodeType": "YulAssignment",
															"src": "5194:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5205:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5205:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5210:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5210:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5201:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5201:3:10"
																},
																"nativeSrc": "5201:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5201:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5194:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5194:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4853:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4987:3:10",
														"nodeType": "YulTypedName",
														"src": "4987:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4995:3:10",
														"nodeType": "YulTypedName",
														"src": "4995:3:10",
														"type": ""
													}
												],
												"src": "4853:366:10"
											},
											{
												"body": {
													"nativeSrc": "5396:248:10",
													"nodeType": "YulBlock",
													"src": "5396:248:10",
													"statements": [
														{
															"nativeSrc": "5406:26:10",
															"nodeType": "YulAssignment",
															"src": "5406:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5418:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5418:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5429:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5429:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5414:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5414:3:10"
																},
																"nativeSrc": "5414:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5414:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5406:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5406:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5453:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5453:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5464:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5464:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5449:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5449:3:10"
																		},
																		"nativeSrc": "5449:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5449:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5472:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5472:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5478:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5478:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5468:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5468:3:10"
																		},
																		"nativeSrc": "5468:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5468:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5442:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5442:6:10"
																},
																"nativeSrc": "5442:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5442:47:10"
															},
															"nativeSrc": "5442:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5442:47:10"
														},
														{
															"nativeSrc": "5498:139:10",
															"nodeType": "YulAssignment",
															"src": "5498:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5632:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5632:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5506:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "5506:124:10"
																},
																"nativeSrc": "5506:131:10",
																"nodeType": "YulFunctionCall",
																"src": "5506:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5498:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5498:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5225:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5376:9:10",
														"nodeType": "YulTypedName",
														"src": "5376:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5391:4:10",
														"nodeType": "YulTypedName",
														"src": "5391:4:10",
														"type": ""
													}
												],
												"src": "5225:419:10"
											},
											{
												"body": {
													"nativeSrc": "5756:65:10",
													"nodeType": "YulBlock",
													"src": "5756:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5778:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5778:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5786:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5786:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5774:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5774:3:10"
																		},
																		"nativeSrc": "5774:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:14:10"
																	},
																	{
																		"hexValue": "4d6178207374616b65206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "5790:23:10",
																		"nodeType": "YulLiteral",
																		"src": "5790:23:10",
																		"type": "",
																		"value": "Max stake must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5767:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5767:6:10"
																},
																"nativeSrc": "5767:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5767:47:10"
															},
															"nativeSrc": "5767:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5767:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a",
												"nativeSrc": "5650:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5748:6:10",
														"nodeType": "YulTypedName",
														"src": "5748:6:10",
														"type": ""
													}
												],
												"src": "5650:171:10"
											},
											{
												"body": {
													"nativeSrc": "5973:220:10",
													"nodeType": "YulBlock",
													"src": "5973:220:10",
													"statements": [
														{
															"nativeSrc": "5983:74:10",
															"nodeType": "YulAssignment",
															"src": "5983:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6049:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6049:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6054:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6054:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5990:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5990:58:10"
																},
																"nativeSrc": "5990:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5990:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5983:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6155:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6155:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a",
																	"nativeSrc": "6066:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6066:88:10"
																},
																"nativeSrc": "6066:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6066:93:10"
															},
															"nativeSrc": "6066:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6066:93:10"
														},
														{
															"nativeSrc": "6168:19:10",
															"nodeType": "YulAssignment",
															"src": "6168:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6179:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6179:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6184:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6184:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6175:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6175:3:10"
																},
																"nativeSrc": "6175:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6175:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6168:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6168:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5827:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5961:3:10",
														"nodeType": "YulTypedName",
														"src": "5961:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5969:3:10",
														"nodeType": "YulTypedName",
														"src": "5969:3:10",
														"type": ""
													}
												],
												"src": "5827:366:10"
											},
											{
												"body": {
													"nativeSrc": "6370:248:10",
													"nodeType": "YulBlock",
													"src": "6370:248:10",
													"statements": [
														{
															"nativeSrc": "6380:26:10",
															"nodeType": "YulAssignment",
															"src": "6380:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6392:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6392:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6403:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6403:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6388:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6388:3:10"
																},
																"nativeSrc": "6388:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6388:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6380:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6380:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6427:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6427:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6438:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6438:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6423:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6423:3:10"
																		},
																		"nativeSrc": "6423:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6423:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6446:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6446:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6452:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6452:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6442:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6442:3:10"
																		},
																		"nativeSrc": "6442:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6442:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6416:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6416:6:10"
																},
																"nativeSrc": "6416:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6416:47:10"
															},
															"nativeSrc": "6416:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6416:47:10"
														},
														{
															"nativeSrc": "6472:139:10",
															"nodeType": "YulAssignment",
															"src": "6472:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6606:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6606:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6480:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6480:124:10"
																},
																"nativeSrc": "6480:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6480:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6472:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6472:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6199:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6350:9:10",
														"nodeType": "YulTypedName",
														"src": "6350:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6365:4:10",
														"nodeType": "YulTypedName",
														"src": "6365:4:10",
														"type": ""
													}
												],
												"src": "6199:419:10"
											},
											{
												"body": {
													"nativeSrc": "6730:61:10",
													"nodeType": "YulBlock",
													"src": "6730:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6752:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6752:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6760:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6760:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6748:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6748:3:10"
																		},
																		"nativeSrc": "6748:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6748:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964206d696e207374616b65",
																		"kind": "string",
																		"nativeSrc": "6764:19:10",
																		"nodeType": "YulLiteral",
																		"src": "6764:19:10",
																		"type": "",
																		"value": "Invalid min stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6741:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6741:6:10"
																},
																"nativeSrc": "6741:43:10",
																"nodeType": "YulFunctionCall",
																"src": "6741:43:10"
															},
															"nativeSrc": "6741:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "6741:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126",
												"nativeSrc": "6624:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6722:6:10",
														"nodeType": "YulTypedName",
														"src": "6722:6:10",
														"type": ""
													}
												],
												"src": "6624:167:10"
											},
											{
												"body": {
													"nativeSrc": "6943:220:10",
													"nodeType": "YulBlock",
													"src": "6943:220:10",
													"statements": [
														{
															"nativeSrc": "6953:74:10",
															"nodeType": "YulAssignment",
															"src": "6953:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7019:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7019:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7024:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7024:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6960:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6960:58:10"
																},
																"nativeSrc": "6960:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6960:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6953:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6953:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7125:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7125:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126",
																	"nativeSrc": "7036:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7036:88:10"
																},
																"nativeSrc": "7036:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7036:93:10"
															},
															"nativeSrc": "7036:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7036:93:10"
														},
														{
															"nativeSrc": "7138:19:10",
															"nodeType": "YulAssignment",
															"src": "7138:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7149:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7149:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7154:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7154:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7145:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7145:3:10"
																},
																"nativeSrc": "7145:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7145:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7138:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7138:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6797:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6931:3:10",
														"nodeType": "YulTypedName",
														"src": "6931:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6939:3:10",
														"nodeType": "YulTypedName",
														"src": "6939:3:10",
														"type": ""
													}
												],
												"src": "6797:366:10"
											},
											{
												"body": {
													"nativeSrc": "7340:248:10",
													"nodeType": "YulBlock",
													"src": "7340:248:10",
													"statements": [
														{
															"nativeSrc": "7350:26:10",
															"nodeType": "YulAssignment",
															"src": "7350:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7362:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7362:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7373:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7373:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7358:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7358:3:10"
																},
																"nativeSrc": "7358:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7358:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7350:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7350:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7397:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7397:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7408:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7408:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7393:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7393:3:10"
																		},
																		"nativeSrc": "7393:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7393:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7416:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "7416:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7422:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7422:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7412:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7412:3:10"
																		},
																		"nativeSrc": "7412:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7412:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7386:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7386:6:10"
																},
																"nativeSrc": "7386:47:10",
																"nodeType": "YulFunctionCall",
																"src": "7386:47:10"
															},
															"nativeSrc": "7386:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "7386:47:10"
														},
														{
															"nativeSrc": "7442:139:10",
															"nodeType": "YulAssignment",
															"src": "7442:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7576:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7576:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7450:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "7450:124:10"
																},
																"nativeSrc": "7450:131:10",
																"nodeType": "YulFunctionCall",
																"src": "7450:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7442:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7442:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7169:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7320:9:10",
														"nodeType": "YulTypedName",
														"src": "7320:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7335:4:10",
														"nodeType": "YulTypedName",
														"src": "7335:4:10",
														"type": ""
													}
												],
												"src": "7169:419:10"
											},
											{
												"body": {
													"nativeSrc": "7652:40:10",
													"nodeType": "YulBlock",
													"src": "7652:40:10",
													"statements": [
														{
															"nativeSrc": "7663:22:10",
															"nodeType": "YulAssignment",
															"src": "7663:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7679:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7679:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7673:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7673:5:10"
																},
																"nativeSrc": "7673:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7673:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7663:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7663:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "7594:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7635:5:10",
														"nodeType": "YulTypedName",
														"src": "7635:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7645:6:10",
														"nodeType": "YulTypedName",
														"src": "7645:6:10",
														"type": ""
													}
												],
												"src": "7594:98:10"
											},
											{
												"body": {
													"nativeSrc": "7811:34:10",
													"nodeType": "YulBlock",
													"src": "7811:34:10",
													"statements": [
														{
															"nativeSrc": "7821:18:10",
															"nodeType": "YulAssignment",
															"src": "7821:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "7836:3:10",
																"nodeType": "YulIdentifier",
																"src": "7836:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7821:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "7821:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7698:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7783:3:10",
														"nodeType": "YulTypedName",
														"src": "7783:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7788:6:10",
														"nodeType": "YulTypedName",
														"src": "7788:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7799:11:10",
														"nodeType": "YulTypedName",
														"src": "7799:11:10",
														"type": ""
													}
												],
												"src": "7698:147:10"
											},
											{
												"body": {
													"nativeSrc": "7913:77:10",
													"nodeType": "YulBlock",
													"src": "7913:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7930:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7930:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7935:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7935:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7940:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7940:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7924:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "7924:5:10"
																},
																"nativeSrc": "7924:23:10",
																"nodeType": "YulFunctionCall",
																"src": "7924:23:10"
															},
															"nativeSrc": "7924:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "7924:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7967:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7967:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7972:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7972:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7963:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7963:3:10"
																		},
																		"nativeSrc": "7963:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7963:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7956:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7956:6:10"
																},
																"nativeSrc": "7956:27:10",
																"nodeType": "YulFunctionCall",
																"src": "7956:27:10"
															},
															"nativeSrc": "7956:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "7956:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "7851:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7895:3:10",
														"nodeType": "YulTypedName",
														"src": "7895:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7900:3:10",
														"nodeType": "YulTypedName",
														"src": "7900:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7905:6:10",
														"nodeType": "YulTypedName",
														"src": "7905:6:10",
														"type": ""
													}
												],
												"src": "7851:139:10"
											},
											{
												"body": {
													"nativeSrc": "8104:278:10",
													"nodeType": "YulBlock",
													"src": "8104:278:10",
													"statements": [
														{
															"nativeSrc": "8114:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "8114:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8160:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8160:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "8128:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "8128:31:10"
																},
																"nativeSrc": "8128:38:10",
																"nodeType": "YulFunctionCall",
																"src": "8128:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8118:6:10",
																	"nodeType": "YulTypedName",
																	"src": "8118:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8175:95:10",
															"nodeType": "YulAssignment",
															"src": "8175:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8258:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8258:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8263:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8263:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8182:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "8182:75:10"
																},
																"nativeSrc": "8182:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8182:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8175:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8175:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8318:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "8318:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8325:4:10",
																				"nodeType": "YulLiteral",
																				"src": "8325:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8314:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8314:3:10"
																		},
																		"nativeSrc": "8314:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8314:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8332:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8332:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8337:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8337:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8279:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "8279:34:10"
																},
																"nativeSrc": "8279:65:10",
																"nodeType": "YulFunctionCall",
																"src": "8279:65:10"
															},
															"nativeSrc": "8279:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "8279:65:10"
														},
														{
															"nativeSrc": "8353:23:10",
															"nodeType": "YulAssignment",
															"src": "8353:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8364:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8364:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8369:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8369:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8360:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8360:3:10"
																},
																"nativeSrc": "8360:16:10",
																"nodeType": "YulFunctionCall",
																"src": "8360:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8353:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8353:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7996:386:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8085:5:10",
														"nodeType": "YulTypedName",
														"src": "8085:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8092:3:10",
														"nodeType": "YulTypedName",
														"src": "8092:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8100:3:10",
														"nodeType": "YulTypedName",
														"src": "8100:3:10",
														"type": ""
													}
												],
												"src": "7996:386:10"
											},
											{
												"body": {
													"nativeSrc": "8522:137:10",
													"nodeType": "YulBlock",
													"src": "8522:137:10",
													"statements": [
														{
															"nativeSrc": "8533:100:10",
															"nodeType": "YulAssignment",
															"src": "8533:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8620:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8620:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8629:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8629:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8540:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "8540:79:10"
																},
																"nativeSrc": "8540:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8540:93:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8533:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8533:3:10"
																}
															]
														},
														{
															"nativeSrc": "8643:10:10",
															"nodeType": "YulAssignment",
															"src": "8643:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "8650:3:10",
																"nodeType": "YulIdentifier",
																"src": "8650:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8643:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8643:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8388:271:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8501:3:10",
														"nodeType": "YulTypedName",
														"src": "8501:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8507:6:10",
														"nodeType": "YulTypedName",
														"src": "8507:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8518:3:10",
														"nodeType": "YulTypedName",
														"src": "8518:3:10",
														"type": ""
													}
												],
												"src": "8388:271:10"
											},
											{
												"body": {
													"nativeSrc": "8771:66:10",
													"nodeType": "YulBlock",
													"src": "8771:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8793:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "8793:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8801:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8801:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8789:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8789:3:10"
																		},
																		"nativeSrc": "8789:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8789:14:10"
																	},
																	{
																		"hexValue": "4661696c656420746f2067657420646563696d616c73",
																		"kind": "string",
																		"nativeSrc": "8805:24:10",
																		"nodeType": "YulLiteral",
																		"src": "8805:24:10",
																		"type": "",
																		"value": "Failed to get decimals"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8782:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8782:6:10"
																},
																"nativeSrc": "8782:48:10",
																"nodeType": "YulFunctionCall",
																"src": "8782:48:10"
															},
															"nativeSrc": "8782:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "8782:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af",
												"nativeSrc": "8665:172:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8763:6:10",
														"nodeType": "YulTypedName",
														"src": "8763:6:10",
														"type": ""
													}
												],
												"src": "8665:172:10"
											},
											{
												"body": {
													"nativeSrc": "8989:220:10",
													"nodeType": "YulBlock",
													"src": "8989:220:10",
													"statements": [
														{
															"nativeSrc": "8999:74:10",
															"nodeType": "YulAssignment",
															"src": "8999:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9065:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9065:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9070:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9070:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9006:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9006:58:10"
																},
																"nativeSrc": "9006:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9006:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8999:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8999:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9171:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9171:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af",
																	"nativeSrc": "9082:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9082:88:10"
																},
																"nativeSrc": "9082:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9082:93:10"
															},
															"nativeSrc": "9082:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9082:93:10"
														},
														{
															"nativeSrc": "9184:19:10",
															"nodeType": "YulAssignment",
															"src": "9184:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9195:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9195:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9200:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9200:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9191:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9191:3:10"
																},
																"nativeSrc": "9191:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9191:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9184:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9184:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8843:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8977:3:10",
														"nodeType": "YulTypedName",
														"src": "8977:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8985:3:10",
														"nodeType": "YulTypedName",
														"src": "8985:3:10",
														"type": ""
													}
												],
												"src": "8843:366:10"
											},
											{
												"body": {
													"nativeSrc": "9386:248:10",
													"nodeType": "YulBlock",
													"src": "9386:248:10",
													"statements": [
														{
															"nativeSrc": "9396:26:10",
															"nodeType": "YulAssignment",
															"src": "9396:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9408:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9408:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9419:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9419:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9404:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9404:3:10"
																},
																"nativeSrc": "9404:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9404:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9396:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9396:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9443:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9443:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9454:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9454:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9439:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:10"
																		},
																		"nativeSrc": "9439:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9439:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9462:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9462:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9468:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9468:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9458:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:10"
																		},
																		"nativeSrc": "9458:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9458:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9432:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9432:6:10"
																},
																"nativeSrc": "9432:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9432:47:10"
															},
															"nativeSrc": "9432:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9432:47:10"
														},
														{
															"nativeSrc": "9488:139:10",
															"nodeType": "YulAssignment",
															"src": "9488:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9622:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9622:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9496:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9496:124:10"
																},
																"nativeSrc": "9496:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9496:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9488:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9488:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9215:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9366:9:10",
														"nodeType": "YulTypedName",
														"src": "9366:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9381:4:10",
														"nodeType": "YulTypedName",
														"src": "9381:4:10",
														"type": ""
													}
												],
												"src": "9215:419:10"
											},
											{
												"body": {
													"nativeSrc": "9683:43:10",
													"nodeType": "YulBlock",
													"src": "9683:43:10",
													"statements": [
														{
															"nativeSrc": "9693:27:10",
															"nodeType": "YulAssignment",
															"src": "9693:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9708:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9708:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9715:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9715:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9704:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9704:3:10"
																},
																"nativeSrc": "9704:16:10",
																"nodeType": "YulFunctionCall",
																"src": "9704:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9693:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "9693:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9640:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9665:5:10",
														"nodeType": "YulTypedName",
														"src": "9665:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9675:7:10",
														"nodeType": "YulTypedName",
														"src": "9675:7:10",
														"type": ""
													}
												],
												"src": "9640:86:10"
											},
											{
												"body": {
													"nativeSrc": "9773:77:10",
													"nodeType": "YulBlock",
													"src": "9773:77:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9828:16:10",
																"nodeType": "YulBlock",
																"src": "9828:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9837:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9837:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9840:1:10",
																					"nodeType": "YulLiteral",
																					"src": "9840:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9830:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9830:6:10"
																			},
																			"nativeSrc": "9830:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9830:12:10"
																		},
																		"nativeSrc": "9830:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9830:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9796:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9796:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9819:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "9819:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "9803:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "9803:15:10"
																				},
																				"nativeSrc": "9803:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9803:22:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9793:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9793:2:10"
																		},
																		"nativeSrc": "9793:33:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9793:33:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9786:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9786:6:10"
																},
																"nativeSrc": "9786:41:10",
																"nodeType": "YulFunctionCall",
																"src": "9786:41:10"
															},
															"nativeSrc": "9783:61:10",
															"nodeType": "YulIf",
															"src": "9783:61:10"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "9732:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9766:5:10",
														"nodeType": "YulTypedName",
														"src": "9766:5:10",
														"type": ""
													}
												],
												"src": "9732:118:10"
											},
											{
												"body": {
													"nativeSrc": "9917:78:10",
													"nodeType": "YulBlock",
													"src": "9917:78:10",
													"statements": [
														{
															"nativeSrc": "9927:22:10",
															"nodeType": "YulAssignment",
															"src": "9927:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9942:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9942:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9936:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9936:5:10"
																},
																"nativeSrc": "9936:13:10",
																"nodeType": "YulFunctionCall",
																"src": "9936:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9927:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9927:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9983:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9983:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "9958:24:10",
																	"nodeType": "YulIdentifier",
																	"src": "9958:24:10"
																},
																"nativeSrc": "9958:31:10",
																"nodeType": "YulFunctionCall",
																"src": "9958:31:10"
															},
															"nativeSrc": "9958:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "9958:31:10"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "9856:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9895:6:10",
														"nodeType": "YulTypedName",
														"src": "9895:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9903:3:10",
														"nodeType": "YulTypedName",
														"src": "9903:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9911:5:10",
														"nodeType": "YulTypedName",
														"src": "9911:5:10",
														"type": ""
													}
												],
												"src": "9856:139:10"
											},
											{
												"body": {
													"nativeSrc": "10076:272:10",
													"nodeType": "YulBlock",
													"src": "10076:272:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "10122:83:10",
																"nodeType": "YulBlock",
																"src": "10122:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10124:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "10124:77:10"
																			},
																			"nativeSrc": "10124:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10124:79:10"
																		},
																		"nativeSrc": "10124:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10124:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10097:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10097:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10106:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10106:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10093:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10093:3:10"
																		},
																		"nativeSrc": "10093:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10093:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10118:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10118:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10089:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10089:3:10"
																},
																"nativeSrc": "10089:32:10",
																"nodeType": "YulFunctionCall",
																"src": "10089:32:10"
															},
															"nativeSrc": "10086:119:10",
															"nodeType": "YulIf",
															"src": "10086:119:10"
														},
														{
															"nativeSrc": "10215:126:10",
															"nodeType": "YulBlock",
															"src": "10215:126:10",
															"statements": [
																{
																	"nativeSrc": "10230:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10230:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10244:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10244:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10234:6:10",
																			"nodeType": "YulTypedName",
																			"src": "10234:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10259:72:10",
																	"nodeType": "YulAssignment",
																	"src": "10259:72:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10303:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "10303:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10314:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "10314:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10299:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "10299:3:10"
																				},
																				"nativeSrc": "10299:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "10299:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10323:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "10323:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "10269:29:10",
																			"nodeType": "YulIdentifier",
																			"src": "10269:29:10"
																		},
																		"nativeSrc": "10269:62:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10269:62:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10259:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "10259:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "10001:347:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10046:9:10",
														"nodeType": "YulTypedName",
														"src": "10046:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10057:7:10",
														"nodeType": "YulTypedName",
														"src": "10057:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10069:6:10",
														"nodeType": "YulTypedName",
														"src": "10069:6:10",
														"type": ""
													}
												],
												"src": "10001:347:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d(memPtr) {\n\n        mstore(add(memPtr, 0), \"LandFi token zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Reward token zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake duration must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Max stake must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid min stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to get decimals\")\n\n    }\n\n    function abi_encode_t_stringliteral_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2717 CODESIZE SUB DUP1 PUSH2 0x2717 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x5E8 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x66E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB2 DUP2 PUSH2 0x340 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x128 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F SWAP1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x196 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D SWAP1 PUSH2 0x749 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CF SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x21A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x211 SWAP1 PUSH2 0x819 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x229 JUMPI POP DUP2 DUP2 GT ISZERO JUMPDEST PUSH2 0x268 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25F SWAP1 PUSH2 0x881 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH2 0x2DF DUP6 PUSH2 0x401 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xC0 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP PUSH2 0x2FB DUP5 PUSH2 0x401 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xE0 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP DUP3 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0x9D0 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x313CE56700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x4AB SWAP2 SWAP1 PUSH2 0x8F1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x4FB JUMPI POP PUSH1 0x20 DUP2 MLOAD EQ JUMPDEST PUSH2 0x53A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP1 PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x584 DUP3 PUSH2 0x55B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x594 DUP2 PUSH2 0x57A JUMP JUMPDEST DUP2 EQ PUSH2 0x59E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5AF DUP2 PUSH2 0x58B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5C7 DUP2 PUSH2 0x5B5 JUMP JUMPDEST DUP2 EQ PUSH2 0x5D1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5E2 DUP2 PUSH2 0x5BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x601 JUMPI PUSH2 0x600 PUSH2 0x557 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x60E DUP9 DUP3 DUP10 ADD PUSH2 0x5A1 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x61F DUP9 DUP3 DUP10 ADD PUSH2 0x5A1 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x630 DUP9 DUP3 DUP10 ADD PUSH2 0x5D4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x641 DUP9 DUP3 DUP10 ADD PUSH2 0x5D4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x652 DUP9 DUP3 DUP10 ADD PUSH2 0x5D4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x668 DUP2 PUSH2 0x57A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x681 PUSH0 DUP4 ADD DUP5 PUSH2 0x65F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C616E64466920746F6B656E207A65726F206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x6CB PUSH1 0x19 DUP4 PUSH2 0x687 JUMP JUMPDEST SWAP2 POP PUSH2 0x6D6 DUP3 PUSH2 0x697 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6F8 DUP2 PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52657761726420746F6B656E207A65726F206164647265737300000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x733 PUSH1 0x19 DUP4 PUSH2 0x687 JUMP JUMPDEST SWAP2 POP PUSH2 0x73E DUP3 PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x760 DUP2 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B65206475726174696F6E206D757374206265203E2030000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x79B PUSH1 0x1A DUP4 PUSH2 0x687 JUMP JUMPDEST SWAP2 POP PUSH2 0x7A6 DUP3 PUSH2 0x767 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x7C8 DUP2 PUSH2 0x78F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D6178207374616B65206D757374206265203E20300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x803 PUSH1 0x15 DUP4 PUSH2 0x687 JUMP JUMPDEST SWAP2 POP PUSH2 0x80E DUP3 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x830 DUP2 PUSH2 0x7F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206D696E207374616B65000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x86B PUSH1 0x11 DUP4 PUSH2 0x687 JUMP JUMPDEST SWAP2 POP PUSH2 0x876 DUP3 PUSH2 0x837 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x898 DUP2 PUSH2 0x85F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CB DUP3 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x8D5 DUP2 DUP6 PUSH2 0x8A9 JUMP JUMPDEST SWAP4 POP PUSH2 0x8E5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8B3 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8FC DUP3 DUP5 PUSH2 0x8C1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F2067657420646563696D616C7300000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x93B PUSH1 0x16 DUP4 PUSH2 0x687 JUMP JUMPDEST SWAP2 POP PUSH2 0x946 DUP3 PUSH2 0x907 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x968 DUP2 PUSH2 0x92F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x984 DUP2 PUSH2 0x96F JUMP JUMPDEST DUP2 EQ PUSH2 0x98E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x99F DUP2 PUSH2 0x97B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9BA JUMPI PUSH2 0x9B9 PUSH2 0x557 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9C7 DUP5 DUP3 DUP6 ADD PUSH2 0x991 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x1CEA PUSH2 0xA2D PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xC32 ADD MSTORE PUSH2 0xD4E ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x97D ADD MSTORE PUSH2 0xD01 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x6CC ADD MSTORE DUP2 DUP2 PUSH2 0x7AA ADD MSTORE PUSH2 0xE31 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x48C ADD MSTORE DUP2 DUP2 PUSH2 0x67D ADD MSTORE PUSH2 0xB8F ADD MSTORE PUSH2 0x1CEA PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DFB2DBC GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD82E3962 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xEA1B28E0 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xF1CDDD55 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xF908DC13 EQ PUSH2 0x3E0 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x8DFB2DBC EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x9AAE43F5 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xB60F75D8 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xCD5692EE EQ PUSH2 0x320 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x40F02AB6 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6747DD0E EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27A JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x23DCDB89 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x240BE944 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x292A6B19 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x375B3C0A EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x4B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x8EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x282 PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xC54 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xD87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CA PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x41B PUSH2 0xE65 JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x42C JUMPI POP PUSH1 0x5 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x46B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x462 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4BC PUSH2 0xEEC JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53A SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x5A7 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DD SWAP1 PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5F0 DUP4 PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6C1 DUP4 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF3B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x7EF JUMPI DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x1646 JUMP JUMPDEST LT ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79A SWAP1 PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7EE DUP4 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF3B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x75E161B3E824B114FC1A33274BD7091918DD4E639CEDE50B78B15A4EEA956A21 DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x839 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x84C PUSH2 0xFBA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x85C PUSH2 0xE65 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x895 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F6 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x8FF PUSH0 PUSH2 0xFC3 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x9A7 PUSH2 0xEEC JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0xA6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA66 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD DUP3 GT ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAB SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFA SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xBD4 DUP2 ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1084 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xC1C SWAP3 SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xC2D PUSH2 0xFBA JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xC5C PUSH2 0xE65 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xC9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC95 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xCFA JUMPI PUSH0 SWAP2 POP POP PUSH2 0xD7C JUMP JUMPDEST PUSH0 PUSH2 0xD27 DUP3 PUSH32 0x0 PUSH1 0x12 PUSH2 0x1106 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x5 DUP4 PUSH2 0xD39 SWAP2 SWAP1 PUSH2 0x19A5 JUMP JUMPDEST PUSH2 0xD43 SWAP2 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD72 DUP3 PUSH1 0x12 PUSH32 0x0 PUSH2 0x1106 JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD8F PUSH2 0xE65 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xDB3 PUSH2 0xE65 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE23 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1A SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2C DUP2 PUSH2 0xFC3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xE6D PUSH2 0x1181 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE8B PUSH2 0x901 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEEA JUMPI PUSH2 0xEAE PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xF31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF28 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xFB5 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF6E SWAP3 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1188 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1100 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10B9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1188 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x111C JUMPI DUP4 SWAP1 POP PUSH2 0x117A JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO PUSH2 0x1154 JUMPI DUP2 DUP4 PUSH2 0x1136 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1142 SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST DUP5 PUSH2 0x114D SWAP2 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST SWAP1 POP PUSH2 0x117A JUMP JUMPDEST DUP3 DUP3 PUSH2 0x1160 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0xA PUSH2 0x116C SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST DUP5 PUSH2 0x1177 SWAP2 SWAP1 PUSH2 0x19A5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x11C0 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x11DB JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x121D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1250 DUP3 PUSH2 0x1227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1260 DUP2 PUSH2 0x1246 JUMP JUMPDEST DUP2 EQ PUSH2 0x126A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127B DUP2 PUSH2 0x1257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1296 JUMPI PUSH2 0x1295 PUSH2 0x1223 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12A3 DUP5 DUP3 DUP6 ADD PUSH2 0x126D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BE DUP2 PUSH2 0x12AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12D7 PUSH0 DUP4 ADD DUP5 PUSH2 0x12B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12E6 DUP2 PUSH2 0x12AC JUMP JUMPDEST DUP2 EQ PUSH2 0x12F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1301 DUP2 PUSH2 0x12DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131C JUMPI PUSH2 0x131B PUSH2 0x1223 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1329 DUP5 DUP3 DUP6 ADD PUSH2 0x12F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1355 PUSH2 0x1350 PUSH2 0x134B DUP5 PUSH2 0x1227 JUMP JUMPDEST PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x1227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1366 DUP3 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1377 DUP3 PUSH2 0x135C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH2 0x136D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x137E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13AF DUP2 PUSH2 0x1246 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E3 DUP2 PUSH2 0x13CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13FC PUSH0 DUP4 ADD DUP5 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1416 DUP2 PUSH2 0x1402 JUMP JUMPDEST DUP2 EQ PUSH2 0x1420 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1431 DUP2 PUSH2 0x140D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144C JUMPI PUSH2 0x144B PUSH2 0x1223 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1459 DUP5 DUP3 DUP6 ADD PUSH2 0x1423 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x146B DUP2 PUSH2 0x1402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1484 PUSH0 DUP4 ADD DUP5 PUSH2 0x1462 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964206D696E207374616B65000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14CE PUSH1 0x11 DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x14D9 DUP3 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14FB DUP2 PUSH2 0x14C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207374616B6520666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1536 PUSH1 0xE DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x1541 DUP3 PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1563 DUP2 PUSH2 0x152A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15A1 DUP3 PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP PUSH2 0x15AC DUP4 PUSH2 0x12AC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15C3 PUSH2 0x156A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B65206C6F636B65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15FE PUSH1 0xC DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x1609 DUP3 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x162B DUP2 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1640 DUP2 PUSH2 0x12DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x165B JUMPI PUSH2 0x165A PUSH2 0x1223 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1668 DUP5 DUP3 DUP6 ADD PUSH2 0x1632 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207265776172642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16A5 PUSH1 0x1B DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x16B0 DUP3 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16D2 DUP2 PUSH2 0x1699 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16EC PUSH0 DUP4 ADD DUP7 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x16F9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x1706 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5374616B65206475726174696F6E206D757374206265203E2030000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1742 PUSH1 0x1A DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x174D DUP3 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x176F DUP2 PUSH2 0x1736 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479207374616B696E670000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17AA PUSH1 0xF DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x17B5 DUP3 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17D7 DUP2 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742062656C6F77206D696E5374616B650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1812 PUSH1 0x15 DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x181D DUP3 PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183F DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742065786365656473206D61785374616B65000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x187A PUSH1 0x17 DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x1885 DUP3 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18A7 DUP2 PUSH2 0x186E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E67206C6F636B6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18E2 PUSH1 0xE DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x18ED DUP3 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x190F DUP2 PUSH2 0x18D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1929 PUSH0 DUP4 ADD DUP6 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x1936 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4D6178207374616B65206D757374206265203E20300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1971 PUSH1 0x15 DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x197C DUP3 PUSH2 0x193D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x199E DUP2 PUSH2 0x1965 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19AF DUP3 PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP PUSH2 0x19BA DUP4 PUSH2 0x12AC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19C8 DUP2 PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x19DF JUMPI PUSH2 0x19DE PUSH2 0x156A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A1D DUP3 PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1A28 DUP4 PUSH2 0x12AC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A38 JUMPI PUSH2 0x1A37 PUSH2 0x19E6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A77 PUSH1 0x1F DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A82 DUP3 PUSH2 0x1A43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA4 DUP2 PUSH2 0x1A6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1ABE PUSH0 DUP4 ADD DUP6 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x1ACB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AE5 PUSH0 DUP4 ADD DUP7 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x1AF2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x1AFF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B11 DUP3 PUSH2 0x13CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1C DUP4 PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x1B35 JUMPI PUSH2 0x1B34 PUSH2 0x156A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1B90 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1B6C JUMPI PUSH2 0x1B6B PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1B7B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1B89 DUP6 PUSH2 0x1B3B JUMP JUMPDEST SWAP5 POP PUSH2 0x1B50 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1BA8 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1C63 JUMP JUMPDEST DUP2 PUSH2 0x1BB5 JUMPI PUSH0 SWAP1 POP PUSH2 0x1C63 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1BCB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1BD5 JUMPI PUSH2 0x1C04 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1BE7 JUMPI PUSH2 0x1BE6 PUSH2 0x156A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1BFE JUMPI PUSH2 0x1BFD PUSH2 0x156A JUMP JUMPDEST JUMPDEST POP PUSH2 0x1C63 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1C39 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x1C46 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1B47 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1C5D JUMPI PUSH2 0x1C5C PUSH2 0x156A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C74 DUP3 PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C7F DUP4 PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP PUSH2 0x1CAC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 PUSH13 0x700E0FAD9DBFFAE1D9B28CCC75 0x1F PUSH30 0xD4C76AD30B9FE7FC0327BD81EF18EB64736F6C634300081E003300000000 ",
							"sourceMap": "313:5807:9:-:0;;;1226:870;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;358:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;1439:1:9;1415:26;;:12;:26;;;1407:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1514:1;1490:26;;:12;:26;;;1482:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;1582:1;1565:14;:18;1557:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;1645:1;1633:9;:13;1625:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;1703:1;1691:9;:13;:39;;;;;1721:9;1708;:22;;1691:39;1683:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1786:12;1765:34;;;;;;;;;;1831:12;1810:34;;;;;;;;;;1874:26;1887:12;1874;;;:26;;:::i;:::-;1857:43;;;;;;;;;;1928:26;1941:12;1928;;;:26;;:::i;:::-;1911:43;;;;;;;;;;1983:14;1967:13;:30;;;;2019:9;2008:8;:20;;;;2050:9;2039:8;:20;;;;2083:5;2070:10;;:18;;;;;;;;;;;;;;;;;;1226:870;;;;;313:5807;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2164:318:9:-;2224:5;2243:12;2257:17;2278:5;:16;;2309:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2278:79;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2242:115;;;;2376:7;:28;;;;;2402:2;2387:4;:11;:17;2376:28;2368:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2460:4;2449:25;;;;;;;;;;;;:::i;:::-;2442:32;;;;2164:318;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:977::-;1311:6;1319;1327;1335;1343;1392:3;1380:9;1371:7;1367:23;1363:33;1360:120;;;1399:79;;:::i;:::-;1360:120;1519:1;1544:64;1600:7;1591:6;1580:9;1576:22;1544:64;:::i;:::-;1534:74;;1490:128;1657:2;1683:64;1739:7;1730:6;1719:9;1715:22;1683:64;:::i;:::-;1673:74;;1628:129;1796:2;1822:64;1878:7;1869:6;1858:9;1854:22;1822:64;:::i;:::-;1812:74;;1767:129;1935:2;1961:64;2017:7;2008:6;1997:9;1993:22;1961:64;:::i;:::-;1951:74;;1906:129;2074:3;2101:64;2157:7;2148:6;2137:9;2133:22;2101:64;:::i;:::-;2091:74;;2045:130;1205:977;;;;;;;;:::o;2188:118::-;2275:24;2293:5;2275:24;:::i;:::-;2270:3;2263:37;2188:118;;:::o;2312:222::-;2405:4;2443:2;2432:9;2428:18;2420:26;;2456:71;2524:1;2513:9;2509:17;2500:6;2456:71;:::i;:::-;2312:222;;;;:::o;2540:169::-;2624:11;2658:6;2653:3;2646:19;2698:4;2693:3;2689:14;2674:29;;2540:169;;;;:::o;2715:175::-;2855:27;2851:1;2843:6;2839:14;2832:51;2715:175;:::o;2896:366::-;3038:3;3059:67;3123:2;3118:3;3059:67;:::i;:::-;3052:74;;3135:93;3224:3;3135:93;:::i;:::-;3253:2;3248:3;3244:12;3237:19;;2896:366;;;:::o;3268:419::-;3434:4;3472:2;3461:9;3457:18;3449:26;;3521:9;3515:4;3511:20;3507:1;3496:9;3492:17;3485:47;3549:131;3675:4;3549:131;:::i;:::-;3541:139;;3268:419;;;:::o;3693:175::-;3833:27;3829:1;3821:6;3817:14;3810:51;3693:175;:::o;3874:366::-;4016:3;4037:67;4101:2;4096:3;4037:67;:::i;:::-;4030:74;;4113:93;4202:3;4113:93;:::i;:::-;4231:2;4226:3;4222:12;4215:19;;3874:366;;;:::o;4246:419::-;4412:4;4450:2;4439:9;4435:18;4427:26;;4499:9;4493:4;4489:20;4485:1;4474:9;4470:17;4463:47;4527:131;4653:4;4527:131;:::i;:::-;4519:139;;4246:419;;;:::o;4671:176::-;4811:28;4807:1;4799:6;4795:14;4788:52;4671:176;:::o;4853:366::-;4995:3;5016:67;5080:2;5075:3;5016:67;:::i;:::-;5009:74;;5092:93;5181:3;5092:93;:::i;:::-;5210:2;5205:3;5201:12;5194:19;;4853:366;;;:::o;5225:419::-;5391:4;5429:2;5418:9;5414:18;5406:26;;5478:9;5472:4;5468:20;5464:1;5453:9;5449:17;5442:47;5506:131;5632:4;5506:131;:::i;:::-;5498:139;;5225:419;;;:::o;5650:171::-;5790:23;5786:1;5778:6;5774:14;5767:47;5650:171;:::o;5827:366::-;5969:3;5990:67;6054:2;6049:3;5990:67;:::i;:::-;5983:74;;6066:93;6155:3;6066:93;:::i;:::-;6184:2;6179:3;6175:12;6168:19;;5827:366;;;:::o;6199:419::-;6365:4;6403:2;6392:9;6388:18;6380:26;;6452:9;6446:4;6442:20;6438:1;6427:9;6423:17;6416:47;6480:131;6606:4;6480:131;:::i;:::-;6472:139;;6199:419;;;:::o;6624:167::-;6764:19;6760:1;6752:6;6748:14;6741:43;6624:167;:::o;6797:366::-;6939:3;6960:67;7024:2;7019:3;6960:67;:::i;:::-;6953:74;;7036:93;7125:3;7036:93;:::i;:::-;7154:2;7149:3;7145:12;7138:19;;6797:366;;;:::o;7169:419::-;7335:4;7373:2;7362:9;7358:18;7350:26;;7422:9;7416:4;7412:20;7408:1;7397:9;7393:17;7386:47;7450:131;7576:4;7450:131;:::i;:::-;7442:139;;7169:419;;;:::o;7594:98::-;7645:6;7679:5;7673:12;7663:22;;7594:98;;;:::o;7698:147::-;7799:11;7836:3;7821:18;;7698:147;;;;:::o;7851:139::-;7940:6;7935:3;7930;7924:23;7981:1;7972:6;7967:3;7963:16;7956:27;7851:139;;;:::o;7996:386::-;8100:3;8128:38;8160:5;8128:38;:::i;:::-;8182:88;8263:6;8258:3;8182:88;:::i;:::-;8175:95;;8279:65;8337:6;8332:3;8325:4;8318:5;8314:16;8279:65;:::i;:::-;8369:6;8364:3;8360:16;8353:23;;8104:278;7996:386;;;;:::o;8388:271::-;8518:3;8540:93;8629:3;8620:6;8540:93;:::i;:::-;8533:100;;8650:3;8643:10;;8388:271;;;;:::o;8665:172::-;8805:24;8801:1;8793:6;8789:14;8782:48;8665:172;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o;9640:86::-;9675:7;9715:4;9708:5;9704:16;9693:27;;9640:86;;;:::o;9732:118::-;9803:22;9819:5;9803:22;:::i;:::-;9796:5;9793:33;9783:61;;9840:1;9837;9830:12;9783:61;9732:118;:::o;9856:139::-;9911:5;9942:6;9936:13;9927:22;;9958:31;9983:5;9958:31;:::i;:::-;9856:139;;;;:::o;10001:347::-;10069:6;10118:2;10106:9;10097:7;10093:23;10089:32;10086:119;;;10124:79;;:::i;:::-;10086:119;10244:1;10269:62;10323:7;10314:6;10303:9;10299:22;10269:62;:::i;:::-;10259:72;;10215:126;10001:347;;;;:::o;313:5807:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_802": {
									"entryPoint": 4488,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3685,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_856": {
									"entryPoint": 4481,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 4026,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 3820,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_normalizeDecimals_1445": {
									"entryPoint": 4358,
									"id": 1445,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 4035,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@balanceOf_1386": {
									"entryPoint": 2216,
									"id": 1386,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateReward_1278": {
									"entryPoint": 3240,
									"id": 1278,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@changeFullUnlock_1158": {
									"entryPoint": 3463,
									"id": 1158,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMaxStake_1123": {
									"entryPoint": 3156,
									"id": 1123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMinStake_1146": {
									"entryPoint": 1043,
									"id": 1146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeStakeDuration_1104": {
									"entryPoint": 2132,
									"id": 1104,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@depositTimestamps_920": {
									"entryPoint": 1141,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fullUnlock_928": {
									"entryPoint": 3667,
									"id": 928,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@landFiDecimals_910": {
									"entryPoint": 2427,
									"id": 910,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@landFiToken_905": {
									"entryPoint": 1162,
									"id": 905,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxStake_924": {
									"entryPoint": 3457,
									"id": 924,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minStake_926": {
									"entryPoint": 1198,
									"id": 926,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2305,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2286,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardDecimals_912": {
									"entryPoint": 3120,
									"id": 912,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_908": {
									"entryPoint": 3631,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 4228,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 3899,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakeDuration_922": {
									"entryPoint": 2126,
									"id": 922,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeUnlockTime_1400": {
									"entryPoint": 2344,
									"id": 1400,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@stake_1231": {
									"entryPoint": 2463,
									"id": 1231,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_916": {
									"entryPoint": 1022,
									"id": 916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3499,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1374": {
									"entryPoint": 1204,
									"id": 1374,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 5175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 4990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6866,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6827,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5233,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 5005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6288,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6422,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5849,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 6983,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 7274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7065,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint8": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 4973,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6630,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4643,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b": {
									"entryPoint": 5902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04": {
									"entryPoint": 6110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041": {
									"entryPoint": 6318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433": {
									"entryPoint": 6214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717": {
									"entryPoint": 5578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a": {
									"entryPoint": 6461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21586:10",
										"nodeType": "YulBlock",
										"src": "0:21586:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "748:87:10",
													"nodeType": "YulBlock",
													"src": "748:87:10",
													"statements": [
														{
															"nativeSrc": "758:29:10",
															"nodeType": "YulAssignment",
															"src": "758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:10"
																},
																"nativeSrc": "767:20:10",
																"nodeType": "YulFunctionCall",
																"src": "767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:10"
																},
																"nativeSrc": "796:33:10",
																"nodeType": "YulFunctionCall",
																"src": "796:33:10"
															},
															"nativeSrc": "796:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:10",
														"nodeType": "YulTypedName",
														"src": "726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:10",
														"nodeType": "YulTypedName",
														"src": "734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:10",
														"nodeType": "YulTypedName",
														"src": "742:5:10",
														"type": ""
													}
												],
												"src": "696:139:10"
											},
											{
												"body": {
													"nativeSrc": "907:263:10",
													"nodeType": "YulBlock",
													"src": "907:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:10",
																"nodeType": "YulBlock",
																"src": "953:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:10"
																			},
																			"nativeSrc": "955:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:10"
																		},
																		"nativeSrc": "955:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:10"
																		},
																		"nativeSrc": "924:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:10",
																		"nodeType": "YulLiteral",
																		"src": "949:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:10"
																},
																"nativeSrc": "920:32:10",
																"nodeType": "YulFunctionCall",
																"src": "920:32:10"
															},
															"nativeSrc": "917:119:10",
															"nodeType": "YulIf",
															"src": "917:119:10"
														},
														{
															"nativeSrc": "1046:117:10",
															"nodeType": "YulBlock",
															"src": "1046:117:10",
															"statements": [
																{
																	"nativeSrc": "1061:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:10"
																				},
																				"nativeSrc": "1121:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:10"
																		},
																		"nativeSrc": "1100:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:10",
														"nodeType": "YulTypedName",
														"src": "877:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:10",
														"nodeType": "YulTypedName",
														"src": "888:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:10",
														"nodeType": "YulTypedName",
														"src": "900:6:10",
														"type": ""
													}
												],
												"src": "841:329:10"
											},
											{
												"body": {
													"nativeSrc": "1221:32:10",
													"nodeType": "YulBlock",
													"src": "1221:32:10",
													"statements": [
														{
															"nativeSrc": "1231:16:10",
															"nodeType": "YulAssignment",
															"src": "1231:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:10",
																"nodeType": "YulIdentifier",
																"src": "1242:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:10",
														"nodeType": "YulTypedName",
														"src": "1203:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:10",
														"nodeType": "YulTypedName",
														"src": "1213:7:10",
														"type": ""
													}
												],
												"src": "1176:77:10"
											},
											{
												"body": {
													"nativeSrc": "1324:53:10",
													"nodeType": "YulBlock",
													"src": "1324:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:10"
																		},
																		"nativeSrc": "1346:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:10"
																},
																"nativeSrc": "1334:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:10"
															},
															"nativeSrc": "1334:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:10",
														"nodeType": "YulTypedName",
														"src": "1312:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:10",
														"nodeType": "YulTypedName",
														"src": "1319:3:10",
														"type": ""
													}
												],
												"src": "1259:118:10"
											},
											{
												"body": {
													"nativeSrc": "1481:124:10",
													"nodeType": "YulBlock",
													"src": "1481:124:10",
													"statements": [
														{
															"nativeSrc": "1491:26:10",
															"nodeType": "YulAssignment",
															"src": "1491:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:10"
																},
																"nativeSrc": "1499:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:10"
																		},
																		"nativeSrc": "1580:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:10"
																},
																"nativeSrc": "1527:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:10"
															},
															"nativeSrc": "1527:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:10",
														"nodeType": "YulTypedName",
														"src": "1453:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:10",
														"nodeType": "YulTypedName",
														"src": "1465:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:10",
														"nodeType": "YulTypedName",
														"src": "1476:4:10",
														"type": ""
													}
												],
												"src": "1383:222:10"
											},
											{
												"body": {
													"nativeSrc": "1654:79:10",
													"nodeType": "YulBlock",
													"src": "1654:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:10",
																"nodeType": "YulBlock",
																"src": "1711:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:10"
																			},
																			"nativeSrc": "1713:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:10"
																		},
																		"nativeSrc": "1713:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:10"
																				},
																				"nativeSrc": "1684:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:10"
																		},
																		"nativeSrc": "1674:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:10"
																},
																"nativeSrc": "1667:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:10"
															},
															"nativeSrc": "1664:63:10",
															"nodeType": "YulIf",
															"src": "1664:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:10",
														"nodeType": "YulTypedName",
														"src": "1647:5:10",
														"type": ""
													}
												],
												"src": "1611:122:10"
											},
											{
												"body": {
													"nativeSrc": "1791:87:10",
													"nodeType": "YulBlock",
													"src": "1791:87:10",
													"statements": [
														{
															"nativeSrc": "1801:29:10",
															"nodeType": "YulAssignment",
															"src": "1801:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:10"
																},
																"nativeSrc": "1810:20:10",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:10"
																},
																"nativeSrc": "1839:33:10",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:10"
															},
															"nativeSrc": "1839:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:10",
														"nodeType": "YulTypedName",
														"src": "1769:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:10",
														"nodeType": "YulTypedName",
														"src": "1777:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:10",
														"nodeType": "YulTypedName",
														"src": "1785:5:10",
														"type": ""
													}
												],
												"src": "1739:139:10"
											},
											{
												"body": {
													"nativeSrc": "1950:263:10",
													"nodeType": "YulBlock",
													"src": "1950:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:10",
																"nodeType": "YulBlock",
																"src": "1996:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:10"
																			},
																			"nativeSrc": "1998:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:10"
																		},
																		"nativeSrc": "1998:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:10"
																		},
																		"nativeSrc": "1967:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:10"
																},
																"nativeSrc": "1963:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:10"
															},
															"nativeSrc": "1960:119:10",
															"nodeType": "YulIf",
															"src": "1960:119:10"
														},
														{
															"nativeSrc": "2089:117:10",
															"nodeType": "YulBlock",
															"src": "2089:117:10",
															"statements": [
																{
																	"nativeSrc": "2104:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:10"
																				},
																				"nativeSrc": "2164:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:10"
																		},
																		"nativeSrc": "2143:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:10",
														"nodeType": "YulTypedName",
														"src": "1920:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:10",
														"nodeType": "YulTypedName",
														"src": "1931:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:10",
														"nodeType": "YulTypedName",
														"src": "1943:6:10",
														"type": ""
													}
												],
												"src": "1884:329:10"
											},
											{
												"body": {
													"nativeSrc": "2251:28:10",
													"nodeType": "YulBlock",
													"src": "2251:28:10",
													"statements": [
														{
															"nativeSrc": "2261:12:10",
															"nodeType": "YulAssignment",
															"src": "2261:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "2268:5:10",
																"nodeType": "YulIdentifier",
																"src": "2268:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2219:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2237:5:10",
														"nodeType": "YulTypedName",
														"src": "2237:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2247:3:10",
														"nodeType": "YulTypedName",
														"src": "2247:3:10",
														"type": ""
													}
												],
												"src": "2219:60:10"
											},
											{
												"body": {
													"nativeSrc": "2345:82:10",
													"nodeType": "YulBlock",
													"src": "2345:82:10",
													"statements": [
														{
															"nativeSrc": "2355:66:10",
															"nodeType": "YulAssignment",
															"src": "2355:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2413:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2395:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2395:17:10"
																				},
																				"nativeSrc": "2395:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2395:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2386:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "2386:8:10"
																		},
																		"nativeSrc": "2386:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2368:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "2368:17:10"
																},
																"nativeSrc": "2368:53:10",
																"nodeType": "YulFunctionCall",
																"src": "2368:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2355:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2355:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2285:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2325:5:10",
														"nodeType": "YulTypedName",
														"src": "2325:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2335:9:10",
														"nodeType": "YulTypedName",
														"src": "2335:9:10",
														"type": ""
													}
												],
												"src": "2285:142:10"
											},
											{
												"body": {
													"nativeSrc": "2493:66:10",
													"nodeType": "YulBlock",
													"src": "2493:66:10",
													"statements": [
														{
															"nativeSrc": "2503:50:10",
															"nodeType": "YulAssignment",
															"src": "2503:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2547:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2516:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2516:30:10"
																},
																"nativeSrc": "2516:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2516:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2503:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2503:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2433:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2473:5:10",
														"nodeType": "YulTypedName",
														"src": "2473:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2483:9:10",
														"nodeType": "YulTypedName",
														"src": "2483:9:10",
														"type": ""
													}
												],
												"src": "2433:126:10"
											},
											{
												"body": {
													"nativeSrc": "2639:66:10",
													"nodeType": "YulBlock",
													"src": "2639:66:10",
													"statements": [
														{
															"nativeSrc": "2649:50:10",
															"nodeType": "YulAssignment",
															"src": "2649:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2693:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2693:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2662:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2662:30:10"
																},
																"nativeSrc": "2662:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2662:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2649:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2649:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nativeSrc": "2565:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2619:5:10",
														"nodeType": "YulTypedName",
														"src": "2619:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2629:9:10",
														"nodeType": "YulTypedName",
														"src": "2629:9:10",
														"type": ""
													}
												],
												"src": "2565:140:10"
											},
											{
												"body": {
													"nativeSrc": "2790:80:10",
													"nodeType": "YulBlock",
													"src": "2790:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2807:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2807:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2857:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2857:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nativeSrc": "2812:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "2812:44:10"
																		},
																		"nativeSrc": "2812:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2812:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2800:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:10"
																},
																"nativeSrc": "2800:64:10",
																"nodeType": "YulFunctionCall",
																"src": "2800:64:10"
															},
															"nativeSrc": "2800:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "2800:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nativeSrc": "2711:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2778:5:10",
														"nodeType": "YulTypedName",
														"src": "2778:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2785:3:10",
														"nodeType": "YulTypedName",
														"src": "2785:3:10",
														"type": ""
													}
												],
												"src": "2711:159:10"
											},
											{
												"body": {
													"nativeSrc": "2988:138:10",
													"nodeType": "YulBlock",
													"src": "2988:138:10",
													"statements": [
														{
															"nativeSrc": "2998:26:10",
															"nodeType": "YulAssignment",
															"src": "2998:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3010:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3010:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3021:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3006:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3006:3:10"
																},
																"nativeSrc": "3006:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3006:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2998:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2998:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3092:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3092:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3105:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3116:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3116:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3101:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:10"
																		},
																		"nativeSrc": "3101:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3101:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nativeSrc": "3034:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "3034:57:10"
																},
																"nativeSrc": "3034:85:10",
																"nodeType": "YulFunctionCall",
																"src": "3034:85:10"
															},
															"nativeSrc": "3034:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "3034:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nativeSrc": "2876:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2960:9:10",
														"nodeType": "YulTypedName",
														"src": "2960:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2972:6:10",
														"nodeType": "YulTypedName",
														"src": "2972:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2983:4:10",
														"nodeType": "YulTypedName",
														"src": "2983:4:10",
														"type": ""
													}
												],
												"src": "2876:250:10"
											},
											{
												"body": {
													"nativeSrc": "3197:53:10",
													"nodeType": "YulBlock",
													"src": "3197:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3214:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3214:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3237:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3237:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3219:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "3219:17:10"
																		},
																		"nativeSrc": "3219:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3207:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3207:6:10"
																},
																"nativeSrc": "3207:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3207:37:10"
															},
															"nativeSrc": "3207:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "3207:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3132:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3185:5:10",
														"nodeType": "YulTypedName",
														"src": "3185:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3192:3:10",
														"nodeType": "YulTypedName",
														"src": "3192:3:10",
														"type": ""
													}
												],
												"src": "3132:118:10"
											},
											{
												"body": {
													"nativeSrc": "3354:124:10",
													"nodeType": "YulBlock",
													"src": "3354:124:10",
													"statements": [
														{
															"nativeSrc": "3364:26:10",
															"nodeType": "YulAssignment",
															"src": "3364:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3376:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3387:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3372:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:10"
																},
																"nativeSrc": "3372:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3372:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3364:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3364:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3444:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3444:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3457:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3468:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3468:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3453:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:10"
																		},
																		"nativeSrc": "3453:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3453:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3400:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3400:43:10"
																},
																"nativeSrc": "3400:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3400:71:10"
															},
															"nativeSrc": "3400:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3400:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3256:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3326:9:10",
														"nodeType": "YulTypedName",
														"src": "3326:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3338:6:10",
														"nodeType": "YulTypedName",
														"src": "3338:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3349:4:10",
														"nodeType": "YulTypedName",
														"src": "3349:4:10",
														"type": ""
													}
												],
												"src": "3256:222:10"
											},
											{
												"body": {
													"nativeSrc": "3527:43:10",
													"nodeType": "YulBlock",
													"src": "3527:43:10",
													"statements": [
														{
															"nativeSrc": "3537:27:10",
															"nodeType": "YulAssignment",
															"src": "3537:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3552:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3552:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3559:4:10",
																		"nodeType": "YulLiteral",
																		"src": "3559:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3548:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3548:3:10"
																},
																"nativeSrc": "3548:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3548:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3537:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3537:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "3484:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3509:5:10",
														"nodeType": "YulTypedName",
														"src": "3509:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3519:7:10",
														"nodeType": "YulTypedName",
														"src": "3519:7:10",
														"type": ""
													}
												],
												"src": "3484:86:10"
											},
											{
												"body": {
													"nativeSrc": "3637:51:10",
													"nodeType": "YulBlock",
													"src": "3637:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3654:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3654:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3675:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3675:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "3659:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "3659:15:10"
																		},
																		"nativeSrc": "3659:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3659:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3647:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3647:6:10"
																},
																"nativeSrc": "3647:35:10",
																"nodeType": "YulFunctionCall",
																"src": "3647:35:10"
															},
															"nativeSrc": "3647:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "3647:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "3576:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3625:5:10",
														"nodeType": "YulTypedName",
														"src": "3625:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3632:3:10",
														"nodeType": "YulTypedName",
														"src": "3632:3:10",
														"type": ""
													}
												],
												"src": "3576:112:10"
											},
											{
												"body": {
													"nativeSrc": "3788:120:10",
													"nodeType": "YulBlock",
													"src": "3788:120:10",
													"statements": [
														{
															"nativeSrc": "3798:26:10",
															"nodeType": "YulAssignment",
															"src": "3798:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3810:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3810:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3821:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3821:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3806:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3806:3:10"
																},
																"nativeSrc": "3806:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3806:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3798:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3798:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3874:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3874:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3887:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3887:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3898:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3898:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3883:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3883:3:10"
																		},
																		"nativeSrc": "3883:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3883:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "3834:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "3834:39:10"
																},
																"nativeSrc": "3834:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3834:67:10"
															},
															"nativeSrc": "3834:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "3834:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "3694:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3760:9:10",
														"nodeType": "YulTypedName",
														"src": "3760:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3772:6:10",
														"nodeType": "YulTypedName",
														"src": "3772:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3783:4:10",
														"nodeType": "YulTypedName",
														"src": "3783:4:10",
														"type": ""
													}
												],
												"src": "3694:214:10"
											},
											{
												"body": {
													"nativeSrc": "3956:48:10",
													"nodeType": "YulBlock",
													"src": "3956:48:10",
													"statements": [
														{
															"nativeSrc": "3966:32:10",
															"nodeType": "YulAssignment",
															"src": "3966:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3991:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3991:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3984:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3984:6:10"
																		},
																		"nativeSrc": "3984:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3977:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:10"
																},
																"nativeSrc": "3977:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3977:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3966:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3966:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3914:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3938:5:10",
														"nodeType": "YulTypedName",
														"src": "3938:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3948:7:10",
														"nodeType": "YulTypedName",
														"src": "3948:7:10",
														"type": ""
													}
												],
												"src": "3914:90:10"
											},
											{
												"body": {
													"nativeSrc": "4050:76:10",
													"nodeType": "YulBlock",
													"src": "4050:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4104:16:10",
																"nodeType": "YulBlock",
																"src": "4104:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4113:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4113:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4116:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4116:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4106:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4106:6:10"
																			},
																			"nativeSrc": "4106:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4106:12:10"
																		},
																		"nativeSrc": "4106:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4106:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4073:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4073:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4095:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4095:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "4080:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "4080:14:10"
																				},
																				"nativeSrc": "4080:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4080:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4070:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4070:2:10"
																		},
																		"nativeSrc": "4070:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4070:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4063:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4063:6:10"
																},
																"nativeSrc": "4063:40:10",
																"nodeType": "YulFunctionCall",
																"src": "4063:40:10"
															},
															"nativeSrc": "4060:60:10",
															"nodeType": "YulIf",
															"src": "4060:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "4010:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4043:5:10",
														"nodeType": "YulTypedName",
														"src": "4043:5:10",
														"type": ""
													}
												],
												"src": "4010:116:10"
											},
											{
												"body": {
													"nativeSrc": "4181:84:10",
													"nodeType": "YulBlock",
													"src": "4181:84:10",
													"statements": [
														{
															"nativeSrc": "4191:29:10",
															"nodeType": "YulAssignment",
															"src": "4191:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4213:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4213:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4200:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4200:12:10"
																},
																"nativeSrc": "4200:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4200:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4191:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4191:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4253:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4253:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "4229:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "4229:23:10"
																},
																"nativeSrc": "4229:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4229:30:10"
															},
															"nativeSrc": "4229:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4229:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "4132:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4159:6:10",
														"nodeType": "YulTypedName",
														"src": "4159:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4167:3:10",
														"nodeType": "YulTypedName",
														"src": "4167:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4175:5:10",
														"nodeType": "YulTypedName",
														"src": "4175:5:10",
														"type": ""
													}
												],
												"src": "4132:133:10"
											},
											{
												"body": {
													"nativeSrc": "4334:260:10",
													"nodeType": "YulBlock",
													"src": "4334:260:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4380:83:10",
																"nodeType": "YulBlock",
																"src": "4380:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4382:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4382:77:10"
																			},
																			"nativeSrc": "4382:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4382:79:10"
																		},
																		"nativeSrc": "4382:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4382:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4355:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4355:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4364:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4364:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4351:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4351:3:10"
																		},
																		"nativeSrc": "4351:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4351:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4376:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4376:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4347:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4347:3:10"
																},
																"nativeSrc": "4347:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4347:32:10"
															},
															"nativeSrc": "4344:119:10",
															"nodeType": "YulIf",
															"src": "4344:119:10"
														},
														{
															"nativeSrc": "4473:114:10",
															"nodeType": "YulBlock",
															"src": "4473:114:10",
															"statements": [
																{
																	"nativeSrc": "4488:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4488:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4502:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4502:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4492:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4492:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4517:60:10",
																	"nodeType": "YulAssignment",
																	"src": "4517:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4549:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4549:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4560:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4560:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4545:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4545:3:10"
																				},
																				"nativeSrc": "4545:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4545:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4569:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4527:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "4527:17:10"
																		},
																		"nativeSrc": "4527:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4527:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4517:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4517:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "4271:323:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4304:9:10",
														"nodeType": "YulTypedName",
														"src": "4304:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4315:7:10",
														"nodeType": "YulTypedName",
														"src": "4315:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4327:6:10",
														"nodeType": "YulTypedName",
														"src": "4327:6:10",
														"type": ""
													}
												],
												"src": "4271:323:10"
											},
											{
												"body": {
													"nativeSrc": "4659:50:10",
													"nodeType": "YulBlock",
													"src": "4659:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4676:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4676:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4696:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4696:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4681:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "4681:14:10"
																		},
																		"nativeSrc": "4681:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4681:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4669:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:10"
																},
																"nativeSrc": "4669:34:10",
																"nodeType": "YulFunctionCall",
																"src": "4669:34:10"
															},
															"nativeSrc": "4669:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "4669:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4600:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4647:5:10",
														"nodeType": "YulTypedName",
														"src": "4647:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4654:3:10",
														"nodeType": "YulTypedName",
														"src": "4654:3:10",
														"type": ""
													}
												],
												"src": "4600:109:10"
											},
											{
												"body": {
													"nativeSrc": "4807:118:10",
													"nodeType": "YulBlock",
													"src": "4807:118:10",
													"statements": [
														{
															"nativeSrc": "4817:26:10",
															"nodeType": "YulAssignment",
															"src": "4817:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4829:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4829:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4840:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4840:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4825:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:10"
																},
																"nativeSrc": "4825:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4825:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4817:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4817:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4891:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4891:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4904:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4904:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4915:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4915:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4900:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:10"
																		},
																		"nativeSrc": "4900:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4853:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "4853:37:10"
																},
																"nativeSrc": "4853:65:10",
																"nodeType": "YulFunctionCall",
																"src": "4853:65:10"
															},
															"nativeSrc": "4853:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "4853:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4715:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4779:9:10",
														"nodeType": "YulTypedName",
														"src": "4779:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4791:6:10",
														"nodeType": "YulTypedName",
														"src": "4791:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4802:4:10",
														"nodeType": "YulTypedName",
														"src": "4802:4:10",
														"type": ""
													}
												],
												"src": "4715:210:10"
											},
											{
												"body": {
													"nativeSrc": "5027:73:10",
													"nodeType": "YulBlock",
													"src": "5027:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5044:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5044:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5049:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5049:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5037:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5037:6:10"
																},
																"nativeSrc": "5037:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5037:19:10"
															},
															"nativeSrc": "5037:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "5037:19:10"
														},
														{
															"nativeSrc": "5065:29:10",
															"nodeType": "YulAssignment",
															"src": "5065:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5084:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5084:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5089:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5089:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5080:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5080:3:10"
																},
																"nativeSrc": "5080:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5080:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5065:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "5065:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4931:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4999:3:10",
														"nodeType": "YulTypedName",
														"src": "4999:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5004:6:10",
														"nodeType": "YulTypedName",
														"src": "5004:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5015:11:10",
														"nodeType": "YulTypedName",
														"src": "5015:11:10",
														"type": ""
													}
												],
												"src": "4931:169:10"
											},
											{
												"body": {
													"nativeSrc": "5212:61:10",
													"nodeType": "YulBlock",
													"src": "5212:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5234:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5234:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5242:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5242:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5230:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5230:3:10"
																		},
																		"nativeSrc": "5230:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5230:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964206d696e207374616b65",
																		"kind": "string",
																		"nativeSrc": "5246:19:10",
																		"nodeType": "YulLiteral",
																		"src": "5246:19:10",
																		"type": "",
																		"value": "Invalid min stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5223:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5223:6:10"
																},
																"nativeSrc": "5223:43:10",
																"nodeType": "YulFunctionCall",
																"src": "5223:43:10"
															},
															"nativeSrc": "5223:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "5223:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126",
												"nativeSrc": "5106:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5204:6:10",
														"nodeType": "YulTypedName",
														"src": "5204:6:10",
														"type": ""
													}
												],
												"src": "5106:167:10"
											},
											{
												"body": {
													"nativeSrc": "5425:220:10",
													"nodeType": "YulBlock",
													"src": "5425:220:10",
													"statements": [
														{
															"nativeSrc": "5435:74:10",
															"nodeType": "YulAssignment",
															"src": "5435:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5501:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5501:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5506:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5506:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5442:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "5442:58:10"
																},
																"nativeSrc": "5442:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5442:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5435:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5435:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5607:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5607:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126",
																	"nativeSrc": "5518:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "5518:88:10"
																},
																"nativeSrc": "5518:93:10",
																"nodeType": "YulFunctionCall",
																"src": "5518:93:10"
															},
															"nativeSrc": "5518:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "5518:93:10"
														},
														{
															"nativeSrc": "5620:19:10",
															"nodeType": "YulAssignment",
															"src": "5620:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5631:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5631:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5636:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5636:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5627:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5627:3:10"
																},
																"nativeSrc": "5627:12:10",
																"nodeType": "YulFunctionCall",
																"src": "5627:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5620:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5620:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5279:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5413:3:10",
														"nodeType": "YulTypedName",
														"src": "5413:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5421:3:10",
														"nodeType": "YulTypedName",
														"src": "5421:3:10",
														"type": ""
													}
												],
												"src": "5279:366:10"
											},
											{
												"body": {
													"nativeSrc": "5822:248:10",
													"nodeType": "YulBlock",
													"src": "5822:248:10",
													"statements": [
														{
															"nativeSrc": "5832:26:10",
															"nodeType": "YulAssignment",
															"src": "5832:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5844:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5844:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5855:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5855:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5840:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5840:3:10"
																},
																"nativeSrc": "5840:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5840:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5832:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5832:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5879:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5879:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5890:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5890:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5875:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5875:3:10"
																		},
																		"nativeSrc": "5875:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5875:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5898:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5898:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5904:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5904:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5894:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5894:3:10"
																		},
																		"nativeSrc": "5894:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5894:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5868:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5868:6:10"
																},
																"nativeSrc": "5868:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5868:47:10"
															},
															"nativeSrc": "5868:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5868:47:10"
														},
														{
															"nativeSrc": "5924:139:10",
															"nodeType": "YulAssignment",
															"src": "5924:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6058:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "6058:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5932:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "5932:124:10"
																},
																"nativeSrc": "5932:131:10",
																"nodeType": "YulFunctionCall",
																"src": "5932:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5924:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5924:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5651:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5802:9:10",
														"nodeType": "YulTypedName",
														"src": "5802:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5817:4:10",
														"nodeType": "YulTypedName",
														"src": "5817:4:10",
														"type": ""
													}
												],
												"src": "5651:419:10"
											},
											{
												"body": {
													"nativeSrc": "6182:58:10",
													"nodeType": "YulBlock",
													"src": "6182:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6204:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6204:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6212:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6212:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6200:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6200:3:10"
																		},
																		"nativeSrc": "6200:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6200:14:10"
																	},
																	{
																		"hexValue": "4e6f207374616b6520666f756e64",
																		"kind": "string",
																		"nativeSrc": "6216:16:10",
																		"nodeType": "YulLiteral",
																		"src": "6216:16:10",
																		"type": "",
																		"value": "No stake found"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6193:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6193:6:10"
																},
																"nativeSrc": "6193:40:10",
																"nodeType": "YulFunctionCall",
																"src": "6193:40:10"
															},
															"nativeSrc": "6193:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "6193:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
												"nativeSrc": "6076:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6174:6:10",
														"nodeType": "YulTypedName",
														"src": "6174:6:10",
														"type": ""
													}
												],
												"src": "6076:164:10"
											},
											{
												"body": {
													"nativeSrc": "6392:220:10",
													"nodeType": "YulBlock",
													"src": "6392:220:10",
													"statements": [
														{
															"nativeSrc": "6402:74:10",
															"nodeType": "YulAssignment",
															"src": "6402:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6468:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6468:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6473:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6473:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6409:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "6409:58:10"
																},
																"nativeSrc": "6409:67:10",
																"nodeType": "YulFunctionCall",
																"src": "6409:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6402:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6402:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6574:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6574:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																	"nativeSrc": "6485:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "6485:88:10"
																},
																"nativeSrc": "6485:93:10",
																"nodeType": "YulFunctionCall",
																"src": "6485:93:10"
															},
															"nativeSrc": "6485:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "6485:93:10"
														},
														{
															"nativeSrc": "6587:19:10",
															"nodeType": "YulAssignment",
															"src": "6587:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6598:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6598:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6603:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6603:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6594:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6594:3:10"
																},
																"nativeSrc": "6594:12:10",
																"nodeType": "YulFunctionCall",
																"src": "6594:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6587:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6587:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6246:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6380:3:10",
														"nodeType": "YulTypedName",
														"src": "6380:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6388:3:10",
														"nodeType": "YulTypedName",
														"src": "6388:3:10",
														"type": ""
													}
												],
												"src": "6246:366:10"
											},
											{
												"body": {
													"nativeSrc": "6789:248:10",
													"nodeType": "YulBlock",
													"src": "6789:248:10",
													"statements": [
														{
															"nativeSrc": "6799:26:10",
															"nodeType": "YulAssignment",
															"src": "6799:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6811:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6811:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6822:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6822:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6807:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6807:3:10"
																},
																"nativeSrc": "6807:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6807:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6799:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6799:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6846:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6846:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6857:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6857:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6842:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6842:3:10"
																		},
																		"nativeSrc": "6842:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6842:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6865:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "6865:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6871:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6871:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6861:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6861:3:10"
																		},
																		"nativeSrc": "6861:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6861:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6835:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6835:6:10"
																},
																"nativeSrc": "6835:47:10",
																"nodeType": "YulFunctionCall",
																"src": "6835:47:10"
															},
															"nativeSrc": "6835:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "6835:47:10"
														},
														{
															"nativeSrc": "6891:139:10",
															"nodeType": "YulAssignment",
															"src": "6891:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7025:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7025:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6899:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "6899:124:10"
																},
																"nativeSrc": "6899:131:10",
																"nodeType": "YulFunctionCall",
																"src": "6899:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6891:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6891:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6618:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6769:9:10",
														"nodeType": "YulTypedName",
														"src": "6769:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6784:4:10",
														"nodeType": "YulTypedName",
														"src": "6784:4:10",
														"type": ""
													}
												],
												"src": "6618:419:10"
											},
											{
												"body": {
													"nativeSrc": "7071:152:10",
													"nodeType": "YulBlock",
													"src": "7071:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7088:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7088:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7091:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7091:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7081:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7081:6:10"
																},
																"nativeSrc": "7081:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7081:88:10"
															},
															"nativeSrc": "7081:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7081:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7185:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7185:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7188:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7188:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7178:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7178:6:10"
																},
																"nativeSrc": "7178:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7178:15:10"
															},
															"nativeSrc": "7178:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7178:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7209:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7209:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7212:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7212:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7202:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7202:6:10"
																},
																"nativeSrc": "7202:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7202:15:10"
															},
															"nativeSrc": "7202:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7202:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7043:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7043:180:10"
											},
											{
												"body": {
													"nativeSrc": "7273:147:10",
													"nodeType": "YulBlock",
													"src": "7273:147:10",
													"statements": [
														{
															"nativeSrc": "7283:25:10",
															"nodeType": "YulAssignment",
															"src": "7283:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7306:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7306:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7288:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7288:17:10"
																},
																"nativeSrc": "7288:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7288:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7283:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7283:1:10"
																}
															]
														},
														{
															"nativeSrc": "7317:25:10",
															"nodeType": "YulAssignment",
															"src": "7317:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7340:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7340:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7322:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "7322:17:10"
																},
																"nativeSrc": "7322:20:10",
																"nodeType": "YulFunctionCall",
																"src": "7322:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7317:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "7317:1:10"
																}
															]
														},
														{
															"nativeSrc": "7351:16:10",
															"nodeType": "YulAssignment",
															"src": "7351:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7362:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7362:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7365:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7365:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7358:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7358:3:10"
																},
																"nativeSrc": "7358:9:10",
																"nodeType": "YulFunctionCall",
																"src": "7358:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7351:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7351:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7391:22:10",
																"nodeType": "YulBlock",
																"src": "7391:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7393:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7393:16:10"
																			},
																			"nativeSrc": "7393:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7393:18:10"
																		},
																		"nativeSrc": "7393:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7393:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7383:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "7383:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7386:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7386:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7380:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7380:2:10"
																},
																"nativeSrc": "7380:10:10",
																"nodeType": "YulFunctionCall",
																"src": "7380:10:10"
															},
															"nativeSrc": "7377:36:10",
															"nodeType": "YulIf",
															"src": "7377:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7229:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7260:1:10",
														"nodeType": "YulTypedName",
														"src": "7260:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7263:1:10",
														"nodeType": "YulTypedName",
														"src": "7263:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7269:3:10",
														"nodeType": "YulTypedName",
														"src": "7269:3:10",
														"type": ""
													}
												],
												"src": "7229:191:10"
											},
											{
												"body": {
													"nativeSrc": "7532:56:10",
													"nodeType": "YulBlock",
													"src": "7532:56:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7554:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7554:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7562:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7562:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7550:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7550:3:10"
																		},
																		"nativeSrc": "7550:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7550:14:10"
																	},
																	{
																		"hexValue": "5374616b65206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "7566:14:10",
																		"nodeType": "YulLiteral",
																		"src": "7566:14:10",
																		"type": "",
																		"value": "Stake locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7543:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7543:6:10"
																},
																"nativeSrc": "7543:38:10",
																"nodeType": "YulFunctionCall",
																"src": "7543:38:10"
															},
															"nativeSrc": "7543:38:10",
															"nodeType": "YulExpressionStatement",
															"src": "7543:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717",
												"nativeSrc": "7426:162:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7524:6:10",
														"nodeType": "YulTypedName",
														"src": "7524:6:10",
														"type": ""
													}
												],
												"src": "7426:162:10"
											},
											{
												"body": {
													"nativeSrc": "7740:220:10",
													"nodeType": "YulBlock",
													"src": "7740:220:10",
													"statements": [
														{
															"nativeSrc": "7750:74:10",
															"nodeType": "YulAssignment",
															"src": "7750:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7816:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7816:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7821:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7821:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7757:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7757:58:10"
																},
																"nativeSrc": "7757:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7757:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7750:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7750:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7922:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7922:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717",
																	"nativeSrc": "7833:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "7833:88:10"
																},
																"nativeSrc": "7833:93:10",
																"nodeType": "YulFunctionCall",
																"src": "7833:93:10"
															},
															"nativeSrc": "7833:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "7833:93:10"
														},
														{
															"nativeSrc": "7935:19:10",
															"nodeType": "YulAssignment",
															"src": "7935:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7946:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7946:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7951:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7951:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7942:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7942:3:10"
																},
																"nativeSrc": "7942:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7942:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7935:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7594:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7728:3:10",
														"nodeType": "YulTypedName",
														"src": "7728:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7736:3:10",
														"nodeType": "YulTypedName",
														"src": "7736:3:10",
														"type": ""
													}
												],
												"src": "7594:366:10"
											},
											{
												"body": {
													"nativeSrc": "8137:248:10",
													"nodeType": "YulBlock",
													"src": "8137:248:10",
													"statements": [
														{
															"nativeSrc": "8147:26:10",
															"nodeType": "YulAssignment",
															"src": "8147:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8159:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8159:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8170:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8170:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8155:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8155:3:10"
																},
																"nativeSrc": "8155:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8155:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8147:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8147:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8194:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8194:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8205:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8205:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8190:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8190:3:10"
																		},
																		"nativeSrc": "8190:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8190:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8213:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8213:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8219:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8219:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8209:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8209:3:10"
																		},
																		"nativeSrc": "8209:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8209:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8183:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8183:6:10"
																},
																"nativeSrc": "8183:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8183:47:10"
															},
															"nativeSrc": "8183:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8183:47:10"
														},
														{
															"nativeSrc": "8239:139:10",
															"nodeType": "YulAssignment",
															"src": "8239:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8373:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8373:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8247:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8247:124:10"
																},
																"nativeSrc": "8247:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8247:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8239:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8239:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7966:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8117:9:10",
														"nodeType": "YulTypedName",
														"src": "8117:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8132:4:10",
														"nodeType": "YulTypedName",
														"src": "8132:4:10",
														"type": ""
													}
												],
												"src": "7966:419:10"
											},
											{
												"body": {
													"nativeSrc": "8454:80:10",
													"nodeType": "YulBlock",
													"src": "8454:80:10",
													"statements": [
														{
															"nativeSrc": "8464:22:10",
															"nodeType": "YulAssignment",
															"src": "8464:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8479:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8479:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8473:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8473:5:10"
																},
																"nativeSrc": "8473:13:10",
																"nodeType": "YulFunctionCall",
																"src": "8473:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8464:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "8464:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8522:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "8522:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "8495:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "8495:26:10"
																},
																"nativeSrc": "8495:33:10",
																"nodeType": "YulFunctionCall",
																"src": "8495:33:10"
															},
															"nativeSrc": "8495:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "8495:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "8391:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8432:6:10",
														"nodeType": "YulTypedName",
														"src": "8432:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8440:3:10",
														"nodeType": "YulTypedName",
														"src": "8440:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8448:5:10",
														"nodeType": "YulTypedName",
														"src": "8448:5:10",
														"type": ""
													}
												],
												"src": "8391:143:10"
											},
											{
												"body": {
													"nativeSrc": "8617:274:10",
													"nodeType": "YulBlock",
													"src": "8617:274:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8663:83:10",
																"nodeType": "YulBlock",
																"src": "8663:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8665:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8665:77:10"
																			},
																			"nativeSrc": "8665:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8665:79:10"
																		},
																		"nativeSrc": "8665:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8665:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8638:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8638:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8647:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8647:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8634:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8634:3:10"
																		},
																		"nativeSrc": "8634:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8634:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8659:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8659:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8630:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8630:3:10"
																},
																"nativeSrc": "8630:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8630:32:10"
															},
															"nativeSrc": "8627:119:10",
															"nodeType": "YulIf",
															"src": "8627:119:10"
														},
														{
															"nativeSrc": "8756:128:10",
															"nodeType": "YulBlock",
															"src": "8756:128:10",
															"statements": [
																{
																	"nativeSrc": "8771:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8771:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8785:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8785:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8775:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8775:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8800:74:10",
																	"nodeType": "YulAssignment",
																	"src": "8800:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8846:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8846:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8857:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8857:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8842:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8842:3:10"
																				},
																				"nativeSrc": "8842:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8842:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8866:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8866:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "8810:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "8810:31:10"
																		},
																		"nativeSrc": "8810:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8810:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8800:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8800:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "8540:351:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8587:9:10",
														"nodeType": "YulTypedName",
														"src": "8587:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8598:7:10",
														"nodeType": "YulTypedName",
														"src": "8598:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8610:6:10",
														"nodeType": "YulTypedName",
														"src": "8610:6:10",
														"type": ""
													}
												],
												"src": "8540:351:10"
											},
											{
												"body": {
													"nativeSrc": "9003:71:10",
													"nodeType": "YulBlock",
													"src": "9003:71:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9025:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9025:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9033:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9033:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9021:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9021:3:10"
																		},
																		"nativeSrc": "9021:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9021:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207265776172642062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "9037:29:10",
																		"nodeType": "YulLiteral",
																		"src": "9037:29:10",
																		"type": "",
																		"value": "Insufficient reward balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9014:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9014:6:10"
																},
																"nativeSrc": "9014:53:10",
																"nodeType": "YulFunctionCall",
																"src": "9014:53:10"
															},
															"nativeSrc": "9014:53:10",
															"nodeType": "YulExpressionStatement",
															"src": "9014:53:10"
														}
													]
												},
												"name": "store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0",
												"nativeSrc": "8897:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8995:6:10",
														"nodeType": "YulTypedName",
														"src": "8995:6:10",
														"type": ""
													}
												],
												"src": "8897:177:10"
											},
											{
												"body": {
													"nativeSrc": "9226:220:10",
													"nodeType": "YulBlock",
													"src": "9226:220:10",
													"statements": [
														{
															"nativeSrc": "9236:74:10",
															"nodeType": "YulAssignment",
															"src": "9236:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9302:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9302:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9307:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9307:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9243:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "9243:58:10"
																},
																"nativeSrc": "9243:67:10",
																"nodeType": "YulFunctionCall",
																"src": "9243:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9236:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9236:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9408:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9408:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0",
																	"nativeSrc": "9319:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "9319:88:10"
																},
																"nativeSrc": "9319:93:10",
																"nodeType": "YulFunctionCall",
																"src": "9319:93:10"
															},
															"nativeSrc": "9319:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "9319:93:10"
														},
														{
															"nativeSrc": "9421:19:10",
															"nodeType": "YulAssignment",
															"src": "9421:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9432:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9432:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9437:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9437:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9428:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9428:3:10"
																},
																"nativeSrc": "9428:12:10",
																"nodeType": "YulFunctionCall",
																"src": "9428:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9421:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9421:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9080:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9214:3:10",
														"nodeType": "YulTypedName",
														"src": "9214:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9222:3:10",
														"nodeType": "YulTypedName",
														"src": "9222:3:10",
														"type": ""
													}
												],
												"src": "9080:366:10"
											},
											{
												"body": {
													"nativeSrc": "9623:248:10",
													"nodeType": "YulBlock",
													"src": "9623:248:10",
													"statements": [
														{
															"nativeSrc": "9633:26:10",
															"nodeType": "YulAssignment",
															"src": "9633:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9645:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9645:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9656:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9656:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9641:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9641:3:10"
																},
																"nativeSrc": "9641:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9641:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9633:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9633:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9680:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9680:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9691:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9691:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9676:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9676:3:10"
																		},
																		"nativeSrc": "9676:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9676:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9699:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "9699:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9705:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9705:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9695:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9695:3:10"
																		},
																		"nativeSrc": "9695:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9695:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9669:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9669:6:10"
																},
																"nativeSrc": "9669:47:10",
																"nodeType": "YulFunctionCall",
																"src": "9669:47:10"
															},
															"nativeSrc": "9669:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "9669:47:10"
														},
														{
															"nativeSrc": "9725:139:10",
															"nodeType": "YulAssignment",
															"src": "9725:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9859:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "9859:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9733:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "9733:124:10"
																},
																"nativeSrc": "9733:131:10",
																"nodeType": "YulFunctionCall",
																"src": "9733:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9725:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9725:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9452:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9603:9:10",
														"nodeType": "YulTypedName",
														"src": "9603:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9618:4:10",
														"nodeType": "YulTypedName",
														"src": "9618:4:10",
														"type": ""
													}
												],
												"src": "9452:419:10"
											},
											{
												"body": {
													"nativeSrc": "10031:288:10",
													"nodeType": "YulBlock",
													"src": "10031:288:10",
													"statements": [
														{
															"nativeSrc": "10041:26:10",
															"nodeType": "YulAssignment",
															"src": "10041:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10053:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10053:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10064:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10064:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10049:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10049:3:10"
																},
																"nativeSrc": "10049:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10049:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10041:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10041:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10121:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10121:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10134:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10134:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10145:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10145:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10130:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10130:3:10"
																		},
																		"nativeSrc": "10130:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10130:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10077:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10077:43:10"
																},
																"nativeSrc": "10077:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10077:71:10"
															},
															"nativeSrc": "10077:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10077:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10202:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10202:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10215:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10215:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10226:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10226:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10211:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10211:3:10"
																		},
																		"nativeSrc": "10211:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10211:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10158:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10158:43:10"
																},
																"nativeSrc": "10158:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10158:72:10"
															},
															"nativeSrc": "10158:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10158:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10284:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10284:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10297:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10297:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10308:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10308:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10293:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10293:3:10"
																		},
																		"nativeSrc": "10293:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10293:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10240:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10240:43:10"
																},
																"nativeSrc": "10240:72:10",
																"nodeType": "YulFunctionCall",
																"src": "10240:72:10"
															},
															"nativeSrc": "10240:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "10240:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9877:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9987:9:10",
														"nodeType": "YulTypedName",
														"src": "9987:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9999:6:10",
														"nodeType": "YulTypedName",
														"src": "9999:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10007:6:10",
														"nodeType": "YulTypedName",
														"src": "10007:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10015:6:10",
														"nodeType": "YulTypedName",
														"src": "10015:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10026:4:10",
														"nodeType": "YulTypedName",
														"src": "10026:4:10",
														"type": ""
													}
												],
												"src": "9877:442:10"
											},
											{
												"body": {
													"nativeSrc": "10431:70:10",
													"nodeType": "YulBlock",
													"src": "10431:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10453:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10453:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10461:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10461:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10449:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10449:3:10"
																		},
																		"nativeSrc": "10449:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10449:14:10"
																	},
																	{
																		"hexValue": "5374616b65206475726174696f6e206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "10465:28:10",
																		"nodeType": "YulLiteral",
																		"src": "10465:28:10",
																		"type": "",
																		"value": "Stake duration must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10442:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10442:6:10"
																},
																"nativeSrc": "10442:52:10",
																"nodeType": "YulFunctionCall",
																"src": "10442:52:10"
															},
															"nativeSrc": "10442:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "10442:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b",
												"nativeSrc": "10325:176:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10423:6:10",
														"nodeType": "YulTypedName",
														"src": "10423:6:10",
														"type": ""
													}
												],
												"src": "10325:176:10"
											},
											{
												"body": {
													"nativeSrc": "10653:220:10",
													"nodeType": "YulBlock",
													"src": "10653:220:10",
													"statements": [
														{
															"nativeSrc": "10663:74:10",
															"nodeType": "YulAssignment",
															"src": "10663:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10729:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10729:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10734:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10734:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10670:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10670:58:10"
																},
																"nativeSrc": "10670:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10670:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10663:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10663:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10835:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10835:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b",
																	"nativeSrc": "10746:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10746:88:10"
																},
																"nativeSrc": "10746:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10746:93:10"
															},
															"nativeSrc": "10746:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10746:93:10"
														},
														{
															"nativeSrc": "10848:19:10",
															"nodeType": "YulAssignment",
															"src": "10848:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10859:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10859:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10864:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10864:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10855:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10855:3:10"
																},
																"nativeSrc": "10855:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10855:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10848:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10848:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10507:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10641:3:10",
														"nodeType": "YulTypedName",
														"src": "10641:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10649:3:10",
														"nodeType": "YulTypedName",
														"src": "10649:3:10",
														"type": ""
													}
												],
												"src": "10507:366:10"
											},
											{
												"body": {
													"nativeSrc": "11050:248:10",
													"nodeType": "YulBlock",
													"src": "11050:248:10",
													"statements": [
														{
															"nativeSrc": "11060:26:10",
															"nodeType": "YulAssignment",
															"src": "11060:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11072:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11072:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11083:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11083:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11068:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11068:3:10"
																},
																"nativeSrc": "11068:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11068:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11060:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11060:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11107:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11107:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11118:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11118:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11103:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11103:3:10"
																		},
																		"nativeSrc": "11103:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11103:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11126:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11126:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11132:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11132:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11122:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11122:3:10"
																		},
																		"nativeSrc": "11122:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11122:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11096:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11096:6:10"
																},
																"nativeSrc": "11096:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11096:47:10"
															},
															"nativeSrc": "11096:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11096:47:10"
														},
														{
															"nativeSrc": "11152:139:10",
															"nodeType": "YulAssignment",
															"src": "11152:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11286:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11286:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11160:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11160:124:10"
																},
																"nativeSrc": "11160:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11160:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11152:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11152:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10879:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11030:9:10",
														"nodeType": "YulTypedName",
														"src": "11030:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11045:4:10",
														"nodeType": "YulTypedName",
														"src": "11045:4:10",
														"type": ""
													}
												],
												"src": "10879:419:10"
											},
											{
												"body": {
													"nativeSrc": "11410:59:10",
													"nodeType": "YulBlock",
													"src": "11410:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11432:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11432:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11440:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11440:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11428:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11428:3:10"
																		},
																		"nativeSrc": "11428:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11428:14:10"
																	},
																	{
																		"hexValue": "416c7265616479207374616b696e67",
																		"kind": "string",
																		"nativeSrc": "11444:17:10",
																		"nodeType": "YulLiteral",
																		"src": "11444:17:10",
																		"type": "",
																		"value": "Already staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11421:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11421:6:10"
																},
																"nativeSrc": "11421:41:10",
																"nodeType": "YulFunctionCall",
																"src": "11421:41:10"
															},
															"nativeSrc": "11421:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "11421:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe",
												"nativeSrc": "11304:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11402:6:10",
														"nodeType": "YulTypedName",
														"src": "11402:6:10",
														"type": ""
													}
												],
												"src": "11304:165:10"
											},
											{
												"body": {
													"nativeSrc": "11621:220:10",
													"nodeType": "YulBlock",
													"src": "11621:220:10",
													"statements": [
														{
															"nativeSrc": "11631:74:10",
															"nodeType": "YulAssignment",
															"src": "11631:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11697:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11697:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11702:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11702:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11638:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11638:58:10"
																},
																"nativeSrc": "11638:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11638:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11631:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11631:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11803:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11803:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe",
																	"nativeSrc": "11714:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11714:88:10"
																},
																"nativeSrc": "11714:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11714:93:10"
															},
															"nativeSrc": "11714:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11714:93:10"
														},
														{
															"nativeSrc": "11816:19:10",
															"nodeType": "YulAssignment",
															"src": "11816:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11827:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11827:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11832:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11832:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11823:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11823:3:10"
																},
																"nativeSrc": "11823:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11823:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11816:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11816:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11475:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11609:3:10",
														"nodeType": "YulTypedName",
														"src": "11609:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11617:3:10",
														"nodeType": "YulTypedName",
														"src": "11617:3:10",
														"type": ""
													}
												],
												"src": "11475:366:10"
											},
											{
												"body": {
													"nativeSrc": "12018:248:10",
													"nodeType": "YulBlock",
													"src": "12018:248:10",
													"statements": [
														{
															"nativeSrc": "12028:26:10",
															"nodeType": "YulAssignment",
															"src": "12028:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12040:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12040:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12051:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12051:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12036:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12036:3:10"
																},
																"nativeSrc": "12036:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12036:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12028:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12028:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12075:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12075:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12086:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12086:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12071:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12071:3:10"
																		},
																		"nativeSrc": "12071:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12071:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12094:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12094:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12100:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12100:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12090:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12090:3:10"
																		},
																		"nativeSrc": "12090:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12090:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12064:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12064:6:10"
																},
																"nativeSrc": "12064:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12064:47:10"
															},
															"nativeSrc": "12064:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12064:47:10"
														},
														{
															"nativeSrc": "12120:139:10",
															"nodeType": "YulAssignment",
															"src": "12120:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12254:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12254:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12128:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12128:124:10"
																},
																"nativeSrc": "12128:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12128:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12120:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12120:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11847:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11998:9:10",
														"nodeType": "YulTypedName",
														"src": "11998:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12013:4:10",
														"nodeType": "YulTypedName",
														"src": "12013:4:10",
														"type": ""
													}
												],
												"src": "11847:419:10"
											},
											{
												"body": {
													"nativeSrc": "12378:65:10",
													"nodeType": "YulBlock",
													"src": "12378:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12400:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12400:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12408:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12408:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12396:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12396:3:10"
																		},
																		"nativeSrc": "12396:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12396:14:10"
																	},
																	{
																		"hexValue": "416d6f756e742062656c6f77206d696e5374616b65",
																		"kind": "string",
																		"nativeSrc": "12412:23:10",
																		"nodeType": "YulLiteral",
																		"src": "12412:23:10",
																		"type": "",
																		"value": "Amount below minStake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12389:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12389:6:10"
																},
																"nativeSrc": "12389:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12389:47:10"
															},
															"nativeSrc": "12389:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12389:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04",
												"nativeSrc": "12272:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12370:6:10",
														"nodeType": "YulTypedName",
														"src": "12370:6:10",
														"type": ""
													}
												],
												"src": "12272:171:10"
											},
											{
												"body": {
													"nativeSrc": "12595:220:10",
													"nodeType": "YulBlock",
													"src": "12595:220:10",
													"statements": [
														{
															"nativeSrc": "12605:74:10",
															"nodeType": "YulAssignment",
															"src": "12605:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12671:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12671:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12676:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12676:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12612:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12612:58:10"
																},
																"nativeSrc": "12612:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12612:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12605:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12605:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12777:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12777:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04",
																	"nativeSrc": "12688:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12688:88:10"
																},
																"nativeSrc": "12688:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12688:93:10"
															},
															"nativeSrc": "12688:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12688:93:10"
														},
														{
															"nativeSrc": "12790:19:10",
															"nodeType": "YulAssignment",
															"src": "12790:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12801:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12801:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12806:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12806:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12797:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12797:3:10"
																},
																"nativeSrc": "12797:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12797:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12790:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12790:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12449:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12583:3:10",
														"nodeType": "YulTypedName",
														"src": "12583:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12591:3:10",
														"nodeType": "YulTypedName",
														"src": "12591:3:10",
														"type": ""
													}
												],
												"src": "12449:366:10"
											},
											{
												"body": {
													"nativeSrc": "12992:248:10",
													"nodeType": "YulBlock",
													"src": "12992:248:10",
													"statements": [
														{
															"nativeSrc": "13002:26:10",
															"nodeType": "YulAssignment",
															"src": "13002:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13014:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13014:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13025:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13025:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13010:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13010:3:10"
																},
																"nativeSrc": "13010:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13010:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13002:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13002:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13049:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13049:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13060:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13060:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13045:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13045:3:10"
																		},
																		"nativeSrc": "13045:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13045:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13068:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13068:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13074:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13074:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13064:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13064:3:10"
																		},
																		"nativeSrc": "13064:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13064:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13038:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13038:6:10"
																},
																"nativeSrc": "13038:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13038:47:10"
															},
															"nativeSrc": "13038:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13038:47:10"
														},
														{
															"nativeSrc": "13094:139:10",
															"nodeType": "YulAssignment",
															"src": "13094:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13228:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13228:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13102:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13102:124:10"
																},
																"nativeSrc": "13102:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13102:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13094:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13094:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12821:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12972:9:10",
														"nodeType": "YulTypedName",
														"src": "12972:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12987:4:10",
														"nodeType": "YulTypedName",
														"src": "12987:4:10",
														"type": ""
													}
												],
												"src": "12821:419:10"
											},
											{
												"body": {
													"nativeSrc": "13352:67:10",
													"nodeType": "YulBlock",
													"src": "13352:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13374:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13374:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13382:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13382:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13370:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13370:3:10"
																		},
																		"nativeSrc": "13370:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13370:14:10"
																	},
																	{
																		"hexValue": "416d6f756e742065786365656473206d61785374616b65",
																		"kind": "string",
																		"nativeSrc": "13386:25:10",
																		"nodeType": "YulLiteral",
																		"src": "13386:25:10",
																		"type": "",
																		"value": "Amount exceeds maxStake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13363:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13363:6:10"
																},
																"nativeSrc": "13363:49:10",
																"nodeType": "YulFunctionCall",
																"src": "13363:49:10"
															},
															"nativeSrc": "13363:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "13363:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433",
												"nativeSrc": "13246:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13344:6:10",
														"nodeType": "YulTypedName",
														"src": "13344:6:10",
														"type": ""
													}
												],
												"src": "13246:173:10"
											},
											{
												"body": {
													"nativeSrc": "13571:220:10",
													"nodeType": "YulBlock",
													"src": "13571:220:10",
													"statements": [
														{
															"nativeSrc": "13581:74:10",
															"nodeType": "YulAssignment",
															"src": "13581:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13647:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13647:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13652:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13652:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13588:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13588:58:10"
																},
																"nativeSrc": "13588:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13588:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13581:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13581:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13753:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13753:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433",
																	"nativeSrc": "13664:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13664:88:10"
																},
																"nativeSrc": "13664:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13664:93:10"
															},
															"nativeSrc": "13664:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13664:93:10"
														},
														{
															"nativeSrc": "13766:19:10",
															"nodeType": "YulAssignment",
															"src": "13766:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13777:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13777:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13782:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13782:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13773:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13773:3:10"
																},
																"nativeSrc": "13773:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13773:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13766:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13766:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13425:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13559:3:10",
														"nodeType": "YulTypedName",
														"src": "13559:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13567:3:10",
														"nodeType": "YulTypedName",
														"src": "13567:3:10",
														"type": ""
													}
												],
												"src": "13425:366:10"
											},
											{
												"body": {
													"nativeSrc": "13968:248:10",
													"nodeType": "YulBlock",
													"src": "13968:248:10",
													"statements": [
														{
															"nativeSrc": "13978:26:10",
															"nodeType": "YulAssignment",
															"src": "13978:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13990:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13990:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14001:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14001:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13986:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13986:3:10"
																},
																"nativeSrc": "13986:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13986:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13978:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13978:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14025:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14025:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14036:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14036:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14021:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14021:3:10"
																		},
																		"nativeSrc": "14021:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14021:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14044:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14044:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14050:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14050:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14040:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14040:3:10"
																		},
																		"nativeSrc": "14040:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14040:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14014:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14014:6:10"
																},
																"nativeSrc": "14014:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14014:47:10"
															},
															"nativeSrc": "14014:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14014:47:10"
														},
														{
															"nativeSrc": "14070:139:10",
															"nodeType": "YulAssignment",
															"src": "14070:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14204:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14204:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14078:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14078:124:10"
																},
																"nativeSrc": "14078:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14078:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14070:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14070:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13797:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13948:9:10",
														"nodeType": "YulTypedName",
														"src": "13948:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13963:4:10",
														"nodeType": "YulTypedName",
														"src": "13963:4:10",
														"type": ""
													}
												],
												"src": "13797:419:10"
											},
											{
												"body": {
													"nativeSrc": "14328:58:10",
													"nodeType": "YulBlock",
													"src": "14328:58:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14350:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14350:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14358:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14358:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14346:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14346:3:10"
																		},
																		"nativeSrc": "14346:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14346:14:10"
																	},
																	{
																		"hexValue": "5374616b696e67206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "14362:16:10",
																		"nodeType": "YulLiteral",
																		"src": "14362:16:10",
																		"type": "",
																		"value": "Staking locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14339:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14339:6:10"
																},
																"nativeSrc": "14339:40:10",
																"nodeType": "YulFunctionCall",
																"src": "14339:40:10"
															},
															"nativeSrc": "14339:40:10",
															"nodeType": "YulExpressionStatement",
															"src": "14339:40:10"
														}
													]
												},
												"name": "store_literal_in_memory_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041",
												"nativeSrc": "14222:164:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14320:6:10",
														"nodeType": "YulTypedName",
														"src": "14320:6:10",
														"type": ""
													}
												],
												"src": "14222:164:10"
											},
											{
												"body": {
													"nativeSrc": "14538:220:10",
													"nodeType": "YulBlock",
													"src": "14538:220:10",
													"statements": [
														{
															"nativeSrc": "14548:74:10",
															"nodeType": "YulAssignment",
															"src": "14548:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14614:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14614:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14619:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14619:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14555:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14555:58:10"
																},
																"nativeSrc": "14555:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14555:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14548:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14548:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14720:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14720:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041",
																	"nativeSrc": "14631:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14631:88:10"
																},
																"nativeSrc": "14631:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14631:93:10"
															},
															"nativeSrc": "14631:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14631:93:10"
														},
														{
															"nativeSrc": "14733:19:10",
															"nodeType": "YulAssignment",
															"src": "14733:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14744:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14744:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14749:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14749:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14740:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14740:3:10"
																},
																"nativeSrc": "14740:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14740:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14733:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14733:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14392:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14526:3:10",
														"nodeType": "YulTypedName",
														"src": "14526:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14534:3:10",
														"nodeType": "YulTypedName",
														"src": "14534:3:10",
														"type": ""
													}
												],
												"src": "14392:366:10"
											},
											{
												"body": {
													"nativeSrc": "14935:248:10",
													"nodeType": "YulBlock",
													"src": "14935:248:10",
													"statements": [
														{
															"nativeSrc": "14945:26:10",
															"nodeType": "YulAssignment",
															"src": "14945:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14957:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14957:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14968:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14968:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14953:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14953:3:10"
																},
																"nativeSrc": "14953:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14953:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14945:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14945:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14992:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14992:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15003:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15003:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14988:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14988:3:10"
																		},
																		"nativeSrc": "14988:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14988:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15011:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15011:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15017:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15017:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15007:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15007:3:10"
																		},
																		"nativeSrc": "15007:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15007:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14981:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14981:6:10"
																},
																"nativeSrc": "14981:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14981:47:10"
															},
															"nativeSrc": "14981:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14981:47:10"
														},
														{
															"nativeSrc": "15037:139:10",
															"nodeType": "YulAssignment",
															"src": "15037:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15171:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15171:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15045:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15045:124:10"
																},
																"nativeSrc": "15045:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15045:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15037:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15037:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14764:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14915:9:10",
														"nodeType": "YulTypedName",
														"src": "14915:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14930:4:10",
														"nodeType": "YulTypedName",
														"src": "14930:4:10",
														"type": ""
													}
												],
												"src": "14764:419:10"
											},
											{
												"body": {
													"nativeSrc": "15315:206:10",
													"nodeType": "YulBlock",
													"src": "15315:206:10",
													"statements": [
														{
															"nativeSrc": "15325:26:10",
															"nodeType": "YulAssignment",
															"src": "15325:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15337:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15337:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15348:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15348:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15333:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15333:3:10"
																},
																"nativeSrc": "15333:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15333:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15325:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15325:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15405:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15405:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15418:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15418:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15429:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15429:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15414:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15414:3:10"
																		},
																		"nativeSrc": "15414:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15414:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15361:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15361:43:10"
																},
																"nativeSrc": "15361:71:10",
																"nodeType": "YulFunctionCall",
																"src": "15361:71:10"
															},
															"nativeSrc": "15361:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "15361:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15486:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "15486:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15499:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15499:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15510:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15510:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15495:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15495:3:10"
																		},
																		"nativeSrc": "15495:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15495:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15442:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "15442:43:10"
																},
																"nativeSrc": "15442:72:10",
																"nodeType": "YulFunctionCall",
																"src": "15442:72:10"
															},
															"nativeSrc": "15442:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "15442:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15189:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15279:9:10",
														"nodeType": "YulTypedName",
														"src": "15279:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15291:6:10",
														"nodeType": "YulTypedName",
														"src": "15291:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15299:6:10",
														"nodeType": "YulTypedName",
														"src": "15299:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15310:4:10",
														"nodeType": "YulTypedName",
														"src": "15310:4:10",
														"type": ""
													}
												],
												"src": "15189:332:10"
											},
											{
												"body": {
													"nativeSrc": "15633:65:10",
													"nodeType": "YulBlock",
													"src": "15633:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15655:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15655:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15663:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15663:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15651:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15651:3:10"
																		},
																		"nativeSrc": "15651:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15651:14:10"
																	},
																	{
																		"hexValue": "4d6178207374616b65206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "15667:23:10",
																		"nodeType": "YulLiteral",
																		"src": "15667:23:10",
																		"type": "",
																		"value": "Max stake must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15644:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15644:6:10"
																},
																"nativeSrc": "15644:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15644:47:10"
															},
															"nativeSrc": "15644:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15644:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a",
												"nativeSrc": "15527:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15625:6:10",
														"nodeType": "YulTypedName",
														"src": "15625:6:10",
														"type": ""
													}
												],
												"src": "15527:171:10"
											},
											{
												"body": {
													"nativeSrc": "15850:220:10",
													"nodeType": "YulBlock",
													"src": "15850:220:10",
													"statements": [
														{
															"nativeSrc": "15860:74:10",
															"nodeType": "YulAssignment",
															"src": "15860:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15926:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15926:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15931:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15931:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15867:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15867:58:10"
																},
																"nativeSrc": "15867:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15867:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15860:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15860:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16032:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16032:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a",
																	"nativeSrc": "15943:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15943:88:10"
																},
																"nativeSrc": "15943:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15943:93:10"
															},
															"nativeSrc": "15943:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15943:93:10"
														},
														{
															"nativeSrc": "16045:19:10",
															"nodeType": "YulAssignment",
															"src": "16045:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16056:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16056:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16061:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16061:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16052:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16052:3:10"
																},
																"nativeSrc": "16052:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16052:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16045:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16045:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15704:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15838:3:10",
														"nodeType": "YulTypedName",
														"src": "15838:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15846:3:10",
														"nodeType": "YulTypedName",
														"src": "15846:3:10",
														"type": ""
													}
												],
												"src": "15704:366:10"
											},
											{
												"body": {
													"nativeSrc": "16247:248:10",
													"nodeType": "YulBlock",
													"src": "16247:248:10",
													"statements": [
														{
															"nativeSrc": "16257:26:10",
															"nodeType": "YulAssignment",
															"src": "16257:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16269:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16269:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16280:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16280:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16265:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16265:3:10"
																},
																"nativeSrc": "16265:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16265:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16257:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16257:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16304:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16304:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16315:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16315:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16300:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16300:3:10"
																		},
																		"nativeSrc": "16300:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16300:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16323:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16323:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16329:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16329:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16319:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16319:3:10"
																		},
																		"nativeSrc": "16319:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16319:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16293:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16293:6:10"
																},
																"nativeSrc": "16293:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16293:47:10"
															},
															"nativeSrc": "16293:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16293:47:10"
														},
														{
															"nativeSrc": "16349:139:10",
															"nodeType": "YulAssignment",
															"src": "16349:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16483:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16483:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16357:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16357:124:10"
																},
																"nativeSrc": "16357:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16357:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16349:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16349:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16076:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16227:9:10",
														"nodeType": "YulTypedName",
														"src": "16227:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16242:4:10",
														"nodeType": "YulTypedName",
														"src": "16242:4:10",
														"type": ""
													}
												],
												"src": "16076:419:10"
											},
											{
												"body": {
													"nativeSrc": "16549:362:10",
													"nodeType": "YulBlock",
													"src": "16549:362:10",
													"statements": [
														{
															"nativeSrc": "16559:25:10",
															"nodeType": "YulAssignment",
															"src": "16559:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16582:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16582:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16564:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16564:17:10"
																},
																"nativeSrc": "16564:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16564:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16559:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "16559:1:10"
																}
															]
														},
														{
															"nativeSrc": "16593:25:10",
															"nodeType": "YulAssignment",
															"src": "16593:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16616:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16616:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16598:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16598:17:10"
																},
																"nativeSrc": "16598:20:10",
																"nodeType": "YulFunctionCall",
																"src": "16598:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16593:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "16593:1:10"
																}
															]
														},
														{
															"nativeSrc": "16627:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "16627:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16650:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16650:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16653:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "16653:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16646:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16646:3:10"
																},
																"nativeSrc": "16646:9:10",
																"nodeType": "YulFunctionCall",
																"src": "16646:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "16631:11:10",
																	"nodeType": "YulTypedName",
																	"src": "16631:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16664:41:10",
															"nodeType": "YulAssignment",
															"src": "16664:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "16693:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "16693:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16675:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "16675:17:10"
																},
																"nativeSrc": "16675:30:10",
																"nodeType": "YulFunctionCall",
																"src": "16675:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "16664:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "16664:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16882:22:10",
																"nodeType": "YulBlock",
																"src": "16882:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16884:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "16884:16:10"
																			},
																			"nativeSrc": "16884:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "16884:18:10"
																		},
																		"nativeSrc": "16884:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "16884:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "16815:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "16815:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "16808:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "16808:6:10"
																				},
																				"nativeSrc": "16808:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "16808:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "16838:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "16838:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "16845:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "16845:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "16854:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "16854:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "16841:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "16841:3:10"
																						},
																						"nativeSrc": "16841:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "16841:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "16835:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "16835:2:10"
																				},
																				"nativeSrc": "16835:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "16835:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "16788:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "16788:2:10"
																		},
																		"nativeSrc": "16788:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16788:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "16768:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16768:6:10"
																},
																"nativeSrc": "16768:113:10",
																"nodeType": "YulFunctionCall",
																"src": "16768:113:10"
															},
															"nativeSrc": "16765:139:10",
															"nodeType": "YulIf",
															"src": "16765:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "16501:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16532:1:10",
														"nodeType": "YulTypedName",
														"src": "16532:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16535:1:10",
														"nodeType": "YulTypedName",
														"src": "16535:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "16541:7:10",
														"nodeType": "YulTypedName",
														"src": "16541:7:10",
														"type": ""
													}
												],
												"src": "16501:410:10"
											},
											{
												"body": {
													"nativeSrc": "16945:152:10",
													"nodeType": "YulBlock",
													"src": "16945:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16962:1:10",
																		"nodeType": "YulLiteral",
																		"src": "16962:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16965:77:10",
																		"nodeType": "YulLiteral",
																		"src": "16965:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16955:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16955:6:10"
																},
																"nativeSrc": "16955:88:10",
																"nodeType": "YulFunctionCall",
																"src": "16955:88:10"
															},
															"nativeSrc": "16955:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "16955:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17059:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17059:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17062:4:10",
																		"nodeType": "YulLiteral",
																		"src": "17062:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17052:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17052:6:10"
																},
																"nativeSrc": "17052:15:10",
																"nodeType": "YulFunctionCall",
																"src": "17052:15:10"
															},
															"nativeSrc": "17052:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "17052:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17083:1:10",
																		"nodeType": "YulLiteral",
																		"src": "17083:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17086:4:10",
																		"nodeType": "YulLiteral",
																		"src": "17086:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17076:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17076:6:10"
																},
																"nativeSrc": "17076:15:10",
																"nodeType": "YulFunctionCall",
																"src": "17076:15:10"
															},
															"nativeSrc": "17076:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "17076:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "16917:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "16917:180:10"
											},
											{
												"body": {
													"nativeSrc": "17145:143:10",
													"nodeType": "YulBlock",
													"src": "17145:143:10",
													"statements": [
														{
															"nativeSrc": "17155:25:10",
															"nodeType": "YulAssignment",
															"src": "17155:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17178:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17178:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17160:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17160:17:10"
																},
																"nativeSrc": "17160:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17160:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17155:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17155:1:10"
																}
															]
														},
														{
															"nativeSrc": "17189:25:10",
															"nodeType": "YulAssignment",
															"src": "17189:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17212:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17212:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17194:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "17194:17:10"
																},
																"nativeSrc": "17194:20:10",
																"nodeType": "YulFunctionCall",
																"src": "17194:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17189:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17189:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17236:22:10",
																"nodeType": "YulBlock",
																"src": "17236:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "17238:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "17238:16:10"
																			},
																			"nativeSrc": "17238:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "17238:18:10"
																		},
																		"nativeSrc": "17238:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "17238:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17233:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17233:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17226:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17226:6:10"
																},
																"nativeSrc": "17226:9:10",
																"nodeType": "YulFunctionCall",
																"src": "17226:9:10"
															},
															"nativeSrc": "17223:35:10",
															"nodeType": "YulIf",
															"src": "17223:35:10"
														},
														{
															"nativeSrc": "17268:14:10",
															"nodeType": "YulAssignment",
															"src": "17268:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17277:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17277:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17280:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "17280:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17273:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17273:3:10"
																},
																"nativeSrc": "17273:9:10",
																"nodeType": "YulFunctionCall",
																"src": "17273:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "17268:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "17268:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "17103:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17134:1:10",
														"nodeType": "YulTypedName",
														"src": "17134:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17137:1:10",
														"nodeType": "YulTypedName",
														"src": "17137:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17143:1:10",
														"nodeType": "YulTypedName",
														"src": "17143:1:10",
														"type": ""
													}
												],
												"src": "17103:185:10"
											},
											{
												"body": {
													"nativeSrc": "17400:75:10",
													"nodeType": "YulBlock",
													"src": "17400:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17422:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17422:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17430:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17430:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17418:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17418:3:10"
																		},
																		"nativeSrc": "17418:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17418:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "17434:33:10",
																		"nodeType": "YulLiteral",
																		"src": "17434:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17411:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17411:6:10"
																},
																"nativeSrc": "17411:57:10",
																"nodeType": "YulFunctionCall",
																"src": "17411:57:10"
															},
															"nativeSrc": "17411:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "17411:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "17294:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17392:6:10",
														"nodeType": "YulTypedName",
														"src": "17392:6:10",
														"type": ""
													}
												],
												"src": "17294:181:10"
											},
											{
												"body": {
													"nativeSrc": "17627:220:10",
													"nodeType": "YulBlock",
													"src": "17627:220:10",
													"statements": [
														{
															"nativeSrc": "17637:74:10",
															"nodeType": "YulAssignment",
															"src": "17637:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17703:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17703:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17708:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17708:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17644:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17644:58:10"
																},
																"nativeSrc": "17644:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17644:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17637:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17637:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17809:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17809:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "17720:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17720:88:10"
																},
																"nativeSrc": "17720:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17720:93:10"
															},
															"nativeSrc": "17720:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17720:93:10"
														},
														{
															"nativeSrc": "17822:19:10",
															"nodeType": "YulAssignment",
															"src": "17822:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17833:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17833:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17838:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17838:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17829:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17829:3:10"
																},
																"nativeSrc": "17829:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17829:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17822:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17822:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17481:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17615:3:10",
														"nodeType": "YulTypedName",
														"src": "17615:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17623:3:10",
														"nodeType": "YulTypedName",
														"src": "17623:3:10",
														"type": ""
													}
												],
												"src": "17481:366:10"
											},
											{
												"body": {
													"nativeSrc": "18024:248:10",
													"nodeType": "YulBlock",
													"src": "18024:248:10",
													"statements": [
														{
															"nativeSrc": "18034:26:10",
															"nodeType": "YulAssignment",
															"src": "18034:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18046:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18046:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18057:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18057:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18042:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18042:3:10"
																},
																"nativeSrc": "18042:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18042:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18034:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18034:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18081:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18081:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18092:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18092:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18077:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18077:3:10"
																		},
																		"nativeSrc": "18077:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18077:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18100:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18100:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18106:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18106:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18096:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18096:3:10"
																		},
																		"nativeSrc": "18096:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18096:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18070:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18070:6:10"
																},
																"nativeSrc": "18070:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18070:47:10"
															},
															"nativeSrc": "18070:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18070:47:10"
														},
														{
															"nativeSrc": "18126:139:10",
															"nodeType": "YulAssignment",
															"src": "18126:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18260:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18260:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18134:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18134:124:10"
																},
																"nativeSrc": "18134:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18134:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18126:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18126:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17853:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18004:9:10",
														"nodeType": "YulTypedName",
														"src": "18004:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18019:4:10",
														"nodeType": "YulTypedName",
														"src": "18019:4:10",
														"type": ""
													}
												],
												"src": "17853:419:10"
											},
											{
												"body": {
													"nativeSrc": "18404:206:10",
													"nodeType": "YulBlock",
													"src": "18404:206:10",
													"statements": [
														{
															"nativeSrc": "18414:26:10",
															"nodeType": "YulAssignment",
															"src": "18414:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18426:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18426:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18437:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18437:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18422:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18422:3:10"
																},
																"nativeSrc": "18422:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18422:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18414:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18414:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18494:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18494:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18507:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18507:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18518:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18518:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18503:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18503:3:10"
																		},
																		"nativeSrc": "18503:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18503:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18450:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18450:43:10"
																},
																"nativeSrc": "18450:71:10",
																"nodeType": "YulFunctionCall",
																"src": "18450:71:10"
															},
															"nativeSrc": "18450:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "18450:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18575:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18575:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18588:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18588:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18599:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18599:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18584:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18584:3:10"
																		},
																		"nativeSrc": "18584:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18584:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18531:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18531:43:10"
																},
																"nativeSrc": "18531:72:10",
																"nodeType": "YulFunctionCall",
																"src": "18531:72:10"
															},
															"nativeSrc": "18531:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "18531:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18278:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18368:9:10",
														"nodeType": "YulTypedName",
														"src": "18368:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18380:6:10",
														"nodeType": "YulTypedName",
														"src": "18380:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18388:6:10",
														"nodeType": "YulTypedName",
														"src": "18388:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18399:4:10",
														"nodeType": "YulTypedName",
														"src": "18399:4:10",
														"type": ""
													}
												],
												"src": "18278:332:10"
											},
											{
												"body": {
													"nativeSrc": "18770:288:10",
													"nodeType": "YulBlock",
													"src": "18770:288:10",
													"statements": [
														{
															"nativeSrc": "18780:26:10",
															"nodeType": "YulAssignment",
															"src": "18780:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18792:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18792:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18803:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18803:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18788:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18788:3:10"
																},
																"nativeSrc": "18788:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18788:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18780:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18780:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18860:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18860:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18873:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18873:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18884:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18884:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18869:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18869:3:10"
																		},
																		"nativeSrc": "18869:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18869:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18816:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18816:43:10"
																},
																"nativeSrc": "18816:71:10",
																"nodeType": "YulFunctionCall",
																"src": "18816:71:10"
															},
															"nativeSrc": "18816:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "18816:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18941:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18941:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18954:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18954:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18965:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18965:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18950:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18950:3:10"
																		},
																		"nativeSrc": "18950:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18950:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18897:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18897:43:10"
																},
																"nativeSrc": "18897:72:10",
																"nodeType": "YulFunctionCall",
																"src": "18897:72:10"
															},
															"nativeSrc": "18897:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "18897:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19023:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "19023:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19036:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19036:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19047:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19047:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19032:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19032:3:10"
																		},
																		"nativeSrc": "19032:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19032:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18979:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18979:43:10"
																},
																"nativeSrc": "18979:72:10",
																"nodeType": "YulFunctionCall",
																"src": "18979:72:10"
															},
															"nativeSrc": "18979:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "18979:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18616:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18726:9:10",
														"nodeType": "YulTypedName",
														"src": "18726:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18738:6:10",
														"nodeType": "YulTypedName",
														"src": "18738:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18746:6:10",
														"nodeType": "YulTypedName",
														"src": "18746:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18754:6:10",
														"nodeType": "YulTypedName",
														"src": "18754:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18765:4:10",
														"nodeType": "YulTypedName",
														"src": "18765:4:10",
														"type": ""
													}
												],
												"src": "18616:442:10"
											},
											{
												"body": {
													"nativeSrc": "19107:148:10",
													"nodeType": "YulBlock",
													"src": "19107:148:10",
													"statements": [
														{
															"nativeSrc": "19117:23:10",
															"nodeType": "YulAssignment",
															"src": "19117:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19138:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19138:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "19122:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "19122:15:10"
																},
																"nativeSrc": "19122:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19122:18:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19117:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "19117:1:10"
																}
															]
														},
														{
															"nativeSrc": "19149:23:10",
															"nodeType": "YulAssignment",
															"src": "19149:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19170:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19170:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "19154:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "19154:15:10"
																},
																"nativeSrc": "19154:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19154:18:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19149:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "19149:1:10"
																}
															]
														},
														{
															"nativeSrc": "19181:17:10",
															"nodeType": "YulAssignment",
															"src": "19181:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19193:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19193:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19196:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "19196:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "19189:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19189:3:10"
																},
																"nativeSrc": "19189:9:10",
																"nodeType": "YulFunctionCall",
																"src": "19189:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "19181:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19181:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19226:22:10",
																"nodeType": "YulBlock",
																"src": "19226:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19228:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "19228:16:10"
																			},
																			"nativeSrc": "19228:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "19228:18:10"
																		},
																		"nativeSrc": "19228:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "19228:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "19214:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19214:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19220:4:10",
																		"nodeType": "YulLiteral",
																		"src": "19220:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19211:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "19211:2:10"
																},
																"nativeSrc": "19211:14:10",
																"nodeType": "YulFunctionCall",
																"src": "19211:14:10"
															},
															"nativeSrc": "19208:40:10",
															"nodeType": "YulIf",
															"src": "19208:40:10"
														}
													]
												},
												"name": "checked_sub_t_uint8",
												"nativeSrc": "19064:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19093:1:10",
														"nodeType": "YulTypedName",
														"src": "19093:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19096:1:10",
														"nodeType": "YulTypedName",
														"src": "19096:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "19102:4:10",
														"nodeType": "YulTypedName",
														"src": "19102:4:10",
														"type": ""
													}
												],
												"src": "19064:191:10"
											},
											{
												"body": {
													"nativeSrc": "19312:51:10",
													"nodeType": "YulBlock",
													"src": "19312:51:10",
													"statements": [
														{
															"nativeSrc": "19322:34:10",
															"nodeType": "YulAssignment",
															"src": "19322:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19347:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19347:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "19350:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "19350:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "19343:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19343:3:10"
																},
																"nativeSrc": "19343:13:10",
																"nodeType": "YulFunctionCall",
																"src": "19343:13:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "19322:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "19322:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "19261:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19293:5:10",
														"nodeType": "YulTypedName",
														"src": "19293:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "19303:8:10",
														"nodeType": "YulTypedName",
														"src": "19303:8:10",
														"type": ""
													}
												],
												"src": "19261:102:10"
											},
											{
												"body": {
													"nativeSrc": "19442:775:10",
													"nodeType": "YulBlock",
													"src": "19442:775:10",
													"statements": [
														{
															"nativeSrc": "19452:15:10",
															"nodeType": "YulAssignment",
															"src": "19452:15:10",
															"value": {
																"name": "_power",
																"nativeSrc": "19461:6:10",
																"nodeType": "YulIdentifier",
																"src": "19461:6:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "19452:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "19452:5:10"
																}
															]
														},
														{
															"nativeSrc": "19476:14:10",
															"nodeType": "YulAssignment",
															"src": "19476:14:10",
															"value": {
																"name": "_base",
																"nativeSrc": "19485:5:10",
																"nodeType": "YulIdentifier",
																"src": "19485:5:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "19476:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19476:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19534:677:10",
																"nodeType": "YulBlock",
																"src": "19534:677:10",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "19622:22:10",
																			"nodeType": "YulBlock",
																			"src": "19622:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "19624:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "19624:16:10"
																						},
																						"nativeSrc": "19624:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "19624:18:10"
																					},
																					"nativeSrc": "19624:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "19624:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "19600:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "19600:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "19610:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "19610:3:10"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "19615:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "19615:4:10"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "19606:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "19606:3:10"
																					},
																					"nativeSrc": "19606:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "19606:14:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "19597:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "19597:2:10"
																			},
																			"nativeSrc": "19597:24:10",
																			"nodeType": "YulFunctionCall",
																			"src": "19597:24:10"
																		},
																		"nativeSrc": "19594:50:10",
																		"nodeType": "YulIf",
																		"src": "19594:50:10"
																	},
																	{
																		"body": {
																			"nativeSrc": "19689:419:10",
																			"nodeType": "YulBlock",
																			"src": "19689:419:10",
																			"statements": [
																				{
																					"nativeSrc": "20069:25:10",
																					"nodeType": "YulAssignment",
																					"src": "20069:25:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "20082:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "20082:5:10"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "20089:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "20089:4:10"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "20078:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "20078:3:10"
																						},
																						"nativeSrc": "20078:16:10",
																						"nodeType": "YulFunctionCall",
																						"src": "20078:16:10"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "20069:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "20069:5:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "19664:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "19664:8:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19674:1:10",
																					"nodeType": "YulLiteral",
																					"src": "19674:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "19660:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "19660:3:10"
																			},
																			"nativeSrc": "19660:16:10",
																			"nodeType": "YulFunctionCall",
																			"src": "19660:16:10"
																		},
																		"nativeSrc": "19657:451:10",
																		"nodeType": "YulIf",
																		"src": "19657:451:10"
																	},
																	{
																		"nativeSrc": "20121:23:10",
																		"nodeType": "YulAssignment",
																		"src": "20121:23:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "20133:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "20133:4:10"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "20139:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "20139:4:10"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "20129:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "20129:3:10"
																			},
																			"nativeSrc": "20129:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20129:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "20121:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20121:4:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "20157:44:10",
																		"nodeType": "YulAssignment",
																		"src": "20157:44:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "20192:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "20192:8:10"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "20169:22:10",
																				"nodeType": "YulIdentifier",
																				"src": "20169:22:10"
																			},
																			"nativeSrc": "20169:32:10",
																			"nodeType": "YulFunctionCall",
																			"src": "20169:32:10"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "20157:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "20157:8:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "19510:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "19510:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19520:1:10",
																		"nodeType": "YulLiteral",
																		"src": "19520:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19507:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "19507:2:10"
																},
																"nativeSrc": "19507:15:10",
																"nodeType": "YulFunctionCall",
																"src": "19507:15:10"
															},
															"nativeSrc": "19499:712:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "19523:2:10",
																"nodeType": "YulBlock",
																"src": "19523:2:10",
																"statements": []
															},
															"pre": {
																"nativeSrc": "19503:3:10",
																"nodeType": "YulBlock",
																"src": "19503:3:10",
																"statements": []
															},
															"src": "19499:712:10"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "19369:848:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "19397:6:10",
														"nodeType": "YulTypedName",
														"src": "19397:6:10",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "19405:5:10",
														"nodeType": "YulTypedName",
														"src": "19405:5:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "19412:8:10",
														"nodeType": "YulTypedName",
														"src": "19412:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "19422:3:10",
														"nodeType": "YulTypedName",
														"src": "19422:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "19430:5:10",
														"nodeType": "YulTypedName",
														"src": "19430:5:10",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "19437:4:10",
														"nodeType": "YulTypedName",
														"src": "19437:4:10",
														"type": ""
													}
												],
												"src": "19369:848:10"
											},
											{
												"body": {
													"nativeSrc": "20283:1013:10",
													"nodeType": "YulBlock",
													"src": "20283:1013:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "20478:20:10",
																"nodeType": "YulBlock",
																"src": "20478:20:10",
																"statements": [
																	{
																		"nativeSrc": "20480:10:10",
																		"nodeType": "YulAssignment",
																		"src": "20480:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "20489:1:10",
																			"nodeType": "YulLiteral",
																			"src": "20489:1:10",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "20480:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "20480:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "20491:5:10",
																		"nodeType": "YulLeave",
																		"src": "20491:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "20468:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "20468:8:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20461:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20461:6:10"
																},
																"nativeSrc": "20461:16:10",
																"nodeType": "YulFunctionCall",
																"src": "20461:16:10"
															},
															"nativeSrc": "20458:40:10",
															"nodeType": "YulIf",
															"src": "20458:40:10"
														},
														{
															"body": {
																"nativeSrc": "20523:20:10",
																"nodeType": "YulBlock",
																"src": "20523:20:10",
																"statements": [
																	{
																		"nativeSrc": "20525:10:10",
																		"nodeType": "YulAssignment",
																		"src": "20525:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "20534:1:10",
																			"nodeType": "YulLiteral",
																			"src": "20534:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "20525:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "20525:5:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "20536:5:10",
																		"nodeType": "YulLeave",
																		"src": "20536:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "20517:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20517:4:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20510:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20510:6:10"
																},
																"nativeSrc": "20510:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20510:12:10"
															},
															"nativeSrc": "20507:36:10",
															"nodeType": "YulIf",
															"src": "20507:36:10"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "20653:20:10",
																		"nodeType": "YulBlock",
																		"src": "20653:20:10",
																		"statements": [
																			{
																				"nativeSrc": "20655:10:10",
																				"nodeType": "YulAssignment",
																				"src": "20655:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20664:1:10",
																					"nodeType": "YulLiteral",
																					"src": "20664:1:10",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "20655:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "20655:5:10"
																					}
																				]
																			},
																			{
																				"nativeSrc": "20666:5:10",
																				"nodeType": "YulLeave",
																				"src": "20666:5:10"
																			}
																		]
																	},
																	"nativeSrc": "20646:27:10",
																	"nodeType": "YulCase",
																	"src": "20646:27:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20651:1:10",
																		"nodeType": "YulLiteral",
																		"src": "20651:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20697:176:10",
																		"nodeType": "YulBlock",
																		"src": "20697:176:10",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "20732:22:10",
																					"nodeType": "YulBlock",
																					"src": "20732:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "20734:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "20734:16:10"
																								},
																								"nativeSrc": "20734:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "20734:18:10"
																							},
																							"nativeSrc": "20734:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "20734:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "20717:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "20717:8:10"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "20727:3:10",
																							"nodeType": "YulLiteral",
																							"src": "20727:3:10",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "20714:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "20714:2:10"
																					},
																					"nativeSrc": "20714:17:10",
																					"nodeType": "YulFunctionCall",
																					"src": "20714:17:10"
																				},
																				"nativeSrc": "20711:43:10",
																				"nodeType": "YulIf",
																				"src": "20711:43:10"
																			},
																			{
																				"nativeSrc": "20767:25:10",
																				"nodeType": "YulAssignment",
																				"src": "20767:25:10",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "20780:1:10",
																							"nodeType": "YulLiteral",
																							"src": "20780:1:10",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "20783:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "20783:8:10"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "20776:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "20776:3:10"
																					},
																					"nativeSrc": "20776:16:10",
																					"nodeType": "YulFunctionCall",
																					"src": "20776:16:10"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "20767:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "20767:5:10"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20823:22:10",
																					"nodeType": "YulBlock",
																					"src": "20823:22:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "20825:16:10",
																									"nodeType": "YulIdentifier",
																									"src": "20825:16:10"
																								},
																								"nativeSrc": "20825:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "20825:18:10"
																							},
																							"nativeSrc": "20825:18:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "20825:18:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "20811:5:10",
																							"nodeType": "YulIdentifier",
																							"src": "20811:5:10"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "20818:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "20818:3:10"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "20808:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "20808:2:10"
																					},
																					"nativeSrc": "20808:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "20808:14:10"
																				},
																				"nativeSrc": "20805:40:10",
																				"nodeType": "YulIf",
																				"src": "20805:40:10"
																			},
																			{
																				"nativeSrc": "20858:5:10",
																				"nodeType": "YulLeave",
																				"src": "20858:5:10"
																			}
																		]
																	},
																	"nativeSrc": "20682:191:10",
																	"nodeType": "YulCase",
																	"src": "20682:191:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20687:1:10",
																		"nodeType": "YulLiteral",
																		"src": "20687:1:10",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "20603:4:10",
																"nodeType": "YulIdentifier",
																"src": "20603:4:10"
															},
															"nativeSrc": "20596:277:10",
															"nodeType": "YulSwitch",
															"src": "20596:277:10"
														},
														{
															"body": {
																"nativeSrc": "21005:123:10",
																"nodeType": "YulBlock",
																"src": "21005:123:10",
																"statements": [
																	{
																		"nativeSrc": "21019:28:10",
																		"nodeType": "YulAssignment",
																		"src": "21019:28:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "21032:4:10",
																					"nodeType": "YulIdentifier",
																					"src": "21032:4:10"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "21038:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "21038:8:10"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "21028:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "21028:3:10"
																			},
																			"nativeSrc": "21028:19:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21028:19:10"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "21019:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "21019:5:10"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "21078:22:10",
																			"nodeType": "YulBlock",
																			"src": "21078:22:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "21080:16:10",
																							"nodeType": "YulIdentifier",
																							"src": "21080:16:10"
																						},
																						"nativeSrc": "21080:18:10",
																						"nodeType": "YulFunctionCall",
																						"src": "21080:18:10"
																					},
																					"nativeSrc": "21080:18:10",
																					"nodeType": "YulExpressionStatement",
																					"src": "21080:18:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "21066:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "21066:5:10"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "21073:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "21073:3:10"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "21063:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "21063:2:10"
																			},
																			"nativeSrc": "21063:14:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21063:14:10"
																		},
																		"nativeSrc": "21060:40:10",
																		"nodeType": "YulIf",
																		"src": "21060:40:10"
																	},
																	{
																		"nativeSrc": "21113:5:10",
																		"nodeType": "YulLeave",
																		"src": "21113:5:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "20908:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "20908:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "20914:2:10",
																						"nodeType": "YulLiteral",
																						"src": "20914:2:10",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "20905:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "20905:2:10"
																				},
																				"nativeSrc": "20905:12:10",
																				"nodeType": "YulFunctionCall",
																				"src": "20905:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "20922:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "20922:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "20932:2:10",
																						"nodeType": "YulLiteral",
																						"src": "20932:2:10",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "20919:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "20919:2:10"
																				},
																				"nativeSrc": "20919:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "20919:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20901:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20901:3:10"
																		},
																		"nativeSrc": "20901:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20901:35:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "20957:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "20957:4:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "20963:3:10",
																						"nodeType": "YulLiteral",
																						"src": "20963:3:10",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "20954:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "20954:2:10"
																				},
																				"nativeSrc": "20954:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "20954:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "20972:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "20972:8:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "20982:2:10",
																						"nodeType": "YulLiteral",
																						"src": "20982:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "20969:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "20969:2:10"
																				},
																				"nativeSrc": "20969:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "20969:16:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "20950:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20950:3:10"
																		},
																		"nativeSrc": "20950:36:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20950:36:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "20885:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "20885:2:10"
																},
																"nativeSrc": "20885:111:10",
																"nodeType": "YulFunctionCall",
																"src": "20885:111:10"
															},
															"nativeSrc": "20882:246:10",
															"nodeType": "YulIf",
															"src": "20882:246:10"
														},
														{
															"nativeSrc": "21138:57:10",
															"nodeType": "YulAssignment",
															"src": "21138:57:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21172:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21172:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "21175:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21175:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "21181:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "21181:8:10"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "21191:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21191:3:10"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "21153:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "21153:18:10"
																},
																"nativeSrc": "21153:42:10",
																"nodeType": "YulFunctionCall",
																"src": "21153:42:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "21138:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "21138:5:10"
																},
																{
																	"name": "base",
																	"nativeSrc": "21145:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21145:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21234:22:10",
																"nodeType": "YulBlock",
																"src": "21234:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21236:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "21236:16:10"
																			},
																			"nativeSrc": "21236:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "21236:18:10"
																		},
																		"nativeSrc": "21236:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "21236:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "21211:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21211:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "21222:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "21222:3:10"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "21227:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "21227:4:10"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "21218:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21218:3:10"
																		},
																		"nativeSrc": "21218:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21218:14:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21208:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "21208:2:10"
																},
																"nativeSrc": "21208:25:10",
																"nodeType": "YulFunctionCall",
																"src": "21208:25:10"
															},
															"nativeSrc": "21205:51:10",
															"nodeType": "YulIf",
															"src": "21205:51:10"
														},
														{
															"nativeSrc": "21265:25:10",
															"nodeType": "YulAssignment",
															"src": "21265:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "21278:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "21278:5:10"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "21285:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21285:4:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "21274:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21274:3:10"
																},
																"nativeSrc": "21274:16:10",
																"nodeType": "YulFunctionCall",
																"src": "21274:16:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "21265:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "21265:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "20223:1073:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "20253:4:10",
														"nodeType": "YulTypedName",
														"src": "20253:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "20259:8:10",
														"nodeType": "YulTypedName",
														"src": "20259:8:10",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "20269:3:10",
														"nodeType": "YulTypedName",
														"src": "20269:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "20277:5:10",
														"nodeType": "YulTypedName",
														"src": "20277:5:10",
														"type": ""
													}
												],
												"src": "20223:1073:10"
											},
											{
												"body": {
													"nativeSrc": "21366:217:10",
													"nodeType": "YulBlock",
													"src": "21366:217:10",
													"statements": [
														{
															"nativeSrc": "21376:31:10",
															"nodeType": "YulAssignment",
															"src": "21376:31:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "21402:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21402:4:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21384:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "21384:17:10"
																},
																"nativeSrc": "21384:23:10",
																"nodeType": "YulFunctionCall",
																"src": "21384:23:10"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "21376:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21376:4:10"
																}
															]
														},
														{
															"nativeSrc": "21416:37:10",
															"nodeType": "YulAssignment",
															"src": "21416:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "21444:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "21444:8:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "21428:15:10",
																	"nodeType": "YulIdentifier",
																	"src": "21428:15:10"
																},
																"nativeSrc": "21428:25:10",
																"nodeType": "YulFunctionCall",
																"src": "21428:25:10"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "21416:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "21416:8:10"
																}
															]
														},
														{
															"nativeSrc": "21463:113:10",
															"nodeType": "YulAssignment",
															"src": "21463:113:10",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "21493:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21493:4:10"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "21499:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "21499:8:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21509:66:10",
																		"nodeType": "YulLiteral",
																		"src": "21509:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "21472:20:10",
																	"nodeType": "YulIdentifier",
																	"src": "21472:20:10"
																},
																"nativeSrc": "21472:104:10",
																"nodeType": "YulFunctionCall",
																"src": "21472:104:10"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "21463:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "21463:5:10"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "21302:281:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "21341:4:10",
														"nodeType": "YulTypedName",
														"src": "21341:4:10",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "21347:8:10",
														"nodeType": "YulTypedName",
														"src": "21347:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "21360:5:10",
														"nodeType": "YulTypedName",
														"src": "21360:5:10",
														"type": ""
													}
												],
												"src": "21302:281:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid min stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a(memPtr) {\n\n        mstore(add(memPtr, 0), \"No stake found\")\n\n    }\n\n    function abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient reward balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake duration must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already staking\")\n\n    }\n\n    function abi_encode_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount below minStake\")\n\n    }\n\n    function abi_encode_t_stringliteral_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount exceeds maxStake\")\n\n    }\n\n    function abi_encode_t_stringliteral_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Max stake must be > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint8(x, y) -> diff {\n        x := cleanup_t_uint8(x)\n        y := cleanup_t_uint8(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xff) { panic_error_0x11() }\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"905": [
									{
										"length": 32,
										"start": 1164
									},
									{
										"length": 32,
										"start": 1661
									},
									{
										"length": 32,
										"start": 2959
									}
								],
								"908": [
									{
										"length": 32,
										"start": 1740
									},
									{
										"length": 32,
										"start": 1962
									},
									{
										"length": 32,
										"start": 3633
									}
								],
								"910": [
									{
										"length": 32,
										"start": 2429
									},
									{
										"length": 32,
										"start": 3329
									}
								],
								"912": [
									{
										"length": 32,
										"start": 3122
									},
									{
										"length": 32,
										"start": 3406
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610140575f3560e01c80638dfb2dbc116100b6578063d82e39621161007a578063d82e39621461033c578063ea1b28e01461036c578063f1cddd551461038a578063f2fde38b146103a6578063f7c618c1146103c2578063f908dc13146103e057610140565b80638dfb2dbc146102985780639aae43f5146102c8578063a694fc3a146102e6578063b60f75d814610302578063cd5692ee1461032057610140565b80633ccfd60b116101085780633ccfd60b146101fc57806340f02ab6146102065780636747dd0e1461022457806370a0823114610240578063715018a6146102705780638da5cb5b1461027a57610140565b806316934fc41461014457806323dcdb8914610174578063240be94414610190578063292a6b19146101c0578063375b3c0a146101de575b5f5ffd5b61015e60048036038101906101599190611281565b6103fe565b60405161016b91906112c4565b60405180910390f35b61018e60048036038101906101899190611307565b610413565b005b6101aa60048036038101906101a59190611281565b610475565b6040516101b791906112c4565b60405180910390f35b6101c861048a565b6040516101d5919061138d565b60405180910390f35b6101e66104ae565b6040516101f391906112c4565b60405180910390f35b6102046104b4565b005b61020e61084e565b60405161021b91906112c4565b60405180910390f35b61023e60048036038101906102399190611307565b610854565b005b61025a60048036038101906102559190611281565b6108a8565b60405161026791906112c4565b60405180910390f35b6102786108ee565b005b610282610901565b60405161028f91906113b5565b60405180910390f35b6102b260048036038101906102ad9190611281565b610928565b6040516102bf91906112c4565b60405180910390f35b6102d061097b565b6040516102dd91906113e9565b60405180910390f35b61030060048036038101906102fb9190611307565b61099f565b005b61030a610c30565b60405161031791906113e9565b60405180910390f35b61033a60048036038101906103359190611307565b610c54565b005b61035660048036038101906103519190611281565b610ca8565b60405161036391906112c4565b60405180910390f35b610374610d81565b60405161038191906112c4565b60405180910390f35b6103a4600480360381019061039f9190611437565b610d87565b005b6103c060048036038101906103bb9190611281565b610dab565b005b6103ca610e2f565b6040516103d7919061138d565b60405180910390f35b6103e8610e53565b6040516103f59190611471565b60405180910390f35b6002602052805f5260405f205f915090505481565b61041b610e65565b5f8111801561042c57506005548111155b61046b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610462906114e4565b60405180910390fd5b8060068190555050565b6003602052805f5260405f205f915090505481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60065481565b6104bc610eec565b5f3390505f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610543576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053a9061154c565b60405180910390fd5b60075f9054906101000a900460ff16806105a7575060045460035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546105a39190611597565b4210155b6105e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dd90611614565b60405180910390fd5b5f6105f083610ca8565b90505f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60035f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506106c183837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610f3b9092919063ffffffff16565b5f8111156107ef57807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161072391906113b5565b602060405180830381865afa15801561073e573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107629190611646565b10156107a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079a906116bb565b60405180910390fd5b6107ee83827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610f3b9092919063ffffffff16565b5b8273ffffffffffffffffffffffffffffffffffffffff167f75e161b3e824b114fc1a33274bd7091918dd4e639cede50b78b15a4eea956a21838342604051610839939291906116d9565b60405180910390a250505061084c610fba565b565b60045481565b61085c610e65565b5f811161089e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089590611758565b60405180910390fd5b8060048190555050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6108f6610e65565b6108ff5f610fc3565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f60045460035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109749190611597565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6109a7610eec565b5f3390505f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414610a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a21906117c0565b60405180910390fd5b600654821015610a6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6690611828565b60405180910390fd5b600554821115610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aab90611890565b60405180910390fd5b60075f9054906101000a900460ff1615610b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afa906118f8565b60405180910390fd5b8160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055504260035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610bd48130847f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611084909392919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee908342604051610c1c929190611916565b60405180910390a250610c2d610fba565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b610c5c610e65565b5f8111610c9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9590611987565b60405180910390fd5b8060058190555050565b5f5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8103610cfa575f915050610d7c565b5f610d27827f00000000000000000000000000000000000000000000000000000000000000006012611106565b90505f6064600583610d3991906119a5565b610d439190611a13565b90505f610d728260127f0000000000000000000000000000000000000000000000000000000000000000611106565b9050809450505050505b919050565b60055481565b610d8f610e65565b8060075f6101000a81548160ff02191690831515021790555050565b610db3610e65565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e23575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e1a91906113b5565b60405180910390fd5b610e2c81610fc3565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60075f9054906101000a900460ff1681565b610e6d611181565b73ffffffffffffffffffffffffffffffffffffffff16610e8b610901565b73ffffffffffffffffffffffffffffffffffffffff1614610eea57610eae611181565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ee191906113b5565b60405180910390fd5b565b600260015403610f31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2890611a8d565b60405180910390fd5b6002600181905550565b610fb5838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610f6e929190611aab565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611188565b505050565b60018081905550565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611100848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016110b993929190611ad2565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611188565b50505050565b5f8160ff168360ff160361111c5783905061117a565b8160ff168360ff1611156111545781836111369190611b07565b600a6111429190611c6a565b8461114d9190611a13565b905061117a565b82826111609190611b07565b600a61116c9190611c6a565b8461117791906119a5565b90505b9392505050565b5f33905090565b5f5f60205f8451602086015f885af1806111a7576040513d5f823e3d81fd5b3d92505f519150505f82146111c05760018114156111db565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561121d57836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161121491906113b5565b60405180910390fd5b50505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61125082611227565b9050919050565b61126081611246565b811461126a575f5ffd5b50565b5f8135905061127b81611257565b92915050565b5f6020828403121561129657611295611223565b5b5f6112a38482850161126d565b91505092915050565b5f819050919050565b6112be816112ac565b82525050565b5f6020820190506112d75f8301846112b5565b92915050565b6112e6816112ac565b81146112f0575f5ffd5b50565b5f81359050611301816112dd565b92915050565b5f6020828403121561131c5761131b611223565b5b5f611329848285016112f3565b91505092915050565b5f819050919050565b5f61135561135061134b84611227565b611332565b611227565b9050919050565b5f6113668261133b565b9050919050565b5f6113778261135c565b9050919050565b6113878161136d565b82525050565b5f6020820190506113a05f83018461137e565b92915050565b6113af81611246565b82525050565b5f6020820190506113c85f8301846113a6565b92915050565b5f60ff82169050919050565b6113e3816113ce565b82525050565b5f6020820190506113fc5f8301846113da565b92915050565b5f8115159050919050565b61141681611402565b8114611420575f5ffd5b50565b5f813590506114318161140d565b92915050565b5f6020828403121561144c5761144b611223565b5b5f61145984828501611423565b91505092915050565b61146b81611402565b82525050565b5f6020820190506114845f830184611462565b92915050565b5f82825260208201905092915050565b7f496e76616c6964206d696e207374616b650000000000000000000000000000005f82015250565b5f6114ce60118361148a565b91506114d98261149a565b602082019050919050565b5f6020820190508181035f8301526114fb816114c2565b9050919050565b7f4e6f207374616b6520666f756e640000000000000000000000000000000000005f82015250565b5f611536600e8361148a565b915061154182611502565b602082019050919050565b5f6020820190508181035f8301526115638161152a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115a1826112ac565b91506115ac836112ac565b92508282019050808211156115c4576115c361156a565b5b92915050565b7f5374616b65206c6f636b656400000000000000000000000000000000000000005f82015250565b5f6115fe600c8361148a565b9150611609826115ca565b602082019050919050565b5f6020820190508181035f83015261162b816115f2565b9050919050565b5f81519050611640816112dd565b92915050565b5f6020828403121561165b5761165a611223565b5b5f61166884828501611632565b91505092915050565b7f496e73756666696369656e74207265776172642062616c616e636500000000005f82015250565b5f6116a5601b8361148a565b91506116b082611671565b602082019050919050565b5f6020820190508181035f8301526116d281611699565b9050919050565b5f6060820190506116ec5f8301866112b5565b6116f960208301856112b5565b61170660408301846112b5565b949350505050565b7f5374616b65206475726174696f6e206d757374206265203e20300000000000005f82015250565b5f611742601a8361148a565b915061174d8261170e565b602082019050919050565b5f6020820190508181035f83015261176f81611736565b9050919050565b7f416c7265616479207374616b696e6700000000000000000000000000000000005f82015250565b5f6117aa600f8361148a565b91506117b582611776565b602082019050919050565b5f6020820190508181035f8301526117d78161179e565b9050919050565b7f416d6f756e742062656c6f77206d696e5374616b6500000000000000000000005f82015250565b5f61181260158361148a565b915061181d826117de565b602082019050919050565b5f6020820190508181035f83015261183f81611806565b9050919050565b7f416d6f756e742065786365656473206d61785374616b650000000000000000005f82015250565b5f61187a60178361148a565b915061188582611846565b602082019050919050565b5f6020820190508181035f8301526118a78161186e565b9050919050565b7f5374616b696e67206c6f636b65640000000000000000000000000000000000005f82015250565b5f6118e2600e8361148a565b91506118ed826118ae565b602082019050919050565b5f6020820190508181035f83015261190f816118d6565b9050919050565b5f6040820190506119295f8301856112b5565b61193660208301846112b5565b9392505050565b7f4d6178207374616b65206d757374206265203e203000000000000000000000005f82015250565b5f61197160158361148a565b915061197c8261193d565b602082019050919050565b5f6020820190508181035f83015261199e81611965565b9050919050565b5f6119af826112ac565b91506119ba836112ac565b92508282026119c8816112ac565b915082820484148315176119df576119de61156a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611a1d826112ac565b9150611a28836112ac565b925082611a3857611a376119e6565b5b828204905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611a77601f8361148a565b9150611a8282611a43565b602082019050919050565b5f6020820190508181035f830152611aa481611a6b565b9050919050565b5f604082019050611abe5f8301856113a6565b611acb60208301846112b5565b9392505050565b5f606082019050611ae55f8301866113a6565b611af260208301856113a6565b611aff60408301846112b5565b949350505050565b5f611b11826113ce565b9150611b1c836113ce565b9250828203905060ff811115611b3557611b3461156a565b5b92915050565b5f8160011c9050919050565b5f5f8291508390505b6001851115611b9057808604811115611b6c57611b6b61156a565b5b6001851615611b7b5780820291505b8081029050611b8985611b3b565b9450611b50565b94509492505050565b5f82611ba85760019050611c63565b81611bb5575f9050611c63565b8160018114611bcb5760028114611bd557611c04565b6001915050611c63565b60ff841115611be757611be661156a565b5b8360020a915084821115611bfe57611bfd61156a565b5b50611c63565b5060208310610133831016604e8410600b8410161715611c395782820a905083811115611c3457611c3361156a565b5b611c63565b611c468484846001611b47565b92509050818404811115611c5d57611c5c61156a565b5b81810290505b9392505050565b5f611c74826112ac565b9150611c7f836113ce565b9250611cac7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484611b99565b90509291505056fea2646970667358221220c06c700e0fad9dbffae1d9b28ccc751f7dd4c76ad30b9fe7fc0327bd81ef18eb64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x140 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DFB2DBC GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xD82E3962 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xD82E3962 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0xEA1B28E0 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xF1CDDD55 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x3C2 JUMPI DUP1 PUSH4 0xF908DC13 EQ PUSH2 0x3E0 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x8DFB2DBC EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x9AAE43F5 EQ PUSH2 0x2C8 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xB60F75D8 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xCD5692EE EQ PUSH2 0x320 JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x40F02AB6 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x6747DD0E EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x27A JUMPI PUSH2 0x140 JUMP JUMPDEST DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x23DCDB89 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x240BE944 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x292A6B19 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x375B3C0A EQ PUSH2 0x1DE JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x159 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x413 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH2 0x48A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x4B4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x278 PUSH2 0x8EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x282 PUSH2 0x901 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0x928 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH2 0x97B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x300 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0x99F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH2 0xC30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x13E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x1307 JUMP JUMPDEST PUSH2 0xC54 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x351 SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0xCA8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x374 PUSH2 0xD81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x12C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x1437 JUMP JUMPDEST PUSH2 0xD87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH2 0xDAB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CA PUSH2 0xE2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D7 SWAP2 SWAP1 PUSH2 0x138D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E8 PUSH2 0xE53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x1471 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x41B PUSH2 0xE65 JUMP JUMPDEST PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x42C JUMPI POP PUSH1 0x5 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x46B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x462 SWAP1 PUSH2 0x14E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4BC PUSH2 0xEEC JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x543 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53A SWAP1 PUSH2 0x154C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x5A7 JUMPI POP PUSH1 0x4 SLOAD PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST TIMESTAMP LT ISZERO JUMPDEST PUSH2 0x5E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DD SWAP1 PUSH2 0x1614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x5F0 DUP4 PUSH2 0xCA8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x6C1 DUP4 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF3B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP2 GT ISZERO PUSH2 0x7EF JUMPI DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x723 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73E JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x762 SWAP2 SWAP1 PUSH2 0x1646 JUMP JUMPDEST LT ISZERO PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79A SWAP1 PUSH2 0x16BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7EE DUP4 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF3B SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x75E161B3E824B114FC1A33274BD7091918DD4E639CEDE50B78B15A4EEA956A21 DUP4 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x839 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x84C PUSH2 0xFBA JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x85C PUSH2 0xE65 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x895 SWAP1 PUSH2 0x1758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F6 PUSH2 0xE65 JUMP JUMPDEST PUSH2 0x8FF PUSH0 PUSH2 0xFC3 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x974 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x9A7 PUSH2 0xEEC JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0xA2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA21 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0xA6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA66 SWAP1 PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD DUP3 GT ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAB SWAP1 PUSH2 0x1890 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAFA SWAP1 PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xBD4 DUP2 ADDRESS DUP5 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1084 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 DUP4 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xC1C SWAP3 SWAP2 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xC2D PUSH2 0xFBA JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xC5C PUSH2 0xE65 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xC9E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC95 SWAP1 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xCFA JUMPI PUSH0 SWAP2 POP POP PUSH2 0xD7C JUMP JUMPDEST PUSH0 PUSH2 0xD27 DUP3 PUSH32 0x0 PUSH1 0x12 PUSH2 0x1106 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x5 DUP4 PUSH2 0xD39 SWAP2 SWAP1 PUSH2 0x19A5 JUMP JUMPDEST PUSH2 0xD43 SWAP2 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD72 DUP3 PUSH1 0x12 PUSH32 0x0 PUSH2 0x1106 JUMP JUMPDEST SWAP1 POP DUP1 SWAP5 POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD8F PUSH2 0xE65 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xDB3 PUSH2 0xE65 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE23 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE1A SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE2C DUP2 PUSH2 0xFC3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xE6D PUSH2 0x1181 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE8B PUSH2 0x901 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEEA JUMPI PUSH2 0xEAE PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xF31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF28 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xFB5 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF6E SWAP3 SWAP2 SWAP1 PUSH2 0x1AAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1188 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1100 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x10B9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1188 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND SUB PUSH2 0x111C JUMPI DUP4 SWAP1 POP PUSH2 0x117A JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO PUSH2 0x1154 JUMPI DUP2 DUP4 PUSH2 0x1136 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0xA PUSH2 0x1142 SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST DUP5 PUSH2 0x114D SWAP2 SWAP1 PUSH2 0x1A13 JUMP JUMPDEST SWAP1 POP PUSH2 0x117A JUMP JUMPDEST DUP3 DUP3 PUSH2 0x1160 SWAP2 SWAP1 PUSH2 0x1B07 JUMP JUMPDEST PUSH1 0xA PUSH2 0x116C SWAP2 SWAP1 PUSH2 0x1C6A JUMP JUMPDEST DUP5 PUSH2 0x1177 SWAP2 SWAP1 PUSH2 0x19A5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x11A7 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x11C0 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x11DB JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x121D JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1214 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1250 DUP3 PUSH2 0x1227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1260 DUP2 PUSH2 0x1246 JUMP JUMPDEST DUP2 EQ PUSH2 0x126A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x127B DUP2 PUSH2 0x1257 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1296 JUMPI PUSH2 0x1295 PUSH2 0x1223 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12A3 DUP5 DUP3 DUP6 ADD PUSH2 0x126D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BE DUP2 PUSH2 0x12AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12D7 PUSH0 DUP4 ADD DUP5 PUSH2 0x12B5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12E6 DUP2 PUSH2 0x12AC JUMP JUMPDEST DUP2 EQ PUSH2 0x12F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1301 DUP2 PUSH2 0x12DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131C JUMPI PUSH2 0x131B PUSH2 0x1223 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1329 DUP5 DUP3 DUP6 ADD PUSH2 0x12F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1355 PUSH2 0x1350 PUSH2 0x134B DUP5 PUSH2 0x1227 JUMP JUMPDEST PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x1227 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1366 DUP3 PUSH2 0x133B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1377 DUP3 PUSH2 0x135C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1387 DUP2 PUSH2 0x136D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x137E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13AF DUP2 PUSH2 0x1246 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13E3 DUP2 PUSH2 0x13CE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13FC PUSH0 DUP4 ADD DUP5 PUSH2 0x13DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1416 DUP2 PUSH2 0x1402 JUMP JUMPDEST DUP2 EQ PUSH2 0x1420 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1431 DUP2 PUSH2 0x140D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x144C JUMPI PUSH2 0x144B PUSH2 0x1223 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1459 DUP5 DUP3 DUP6 ADD PUSH2 0x1423 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x146B DUP2 PUSH2 0x1402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1484 PUSH0 DUP4 ADD DUP5 PUSH2 0x1462 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964206D696E207374616B65000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14CE PUSH1 0x11 DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x14D9 DUP3 PUSH2 0x149A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14FB DUP2 PUSH2 0x14C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207374616B6520666F756E64000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1536 PUSH1 0xE DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x1541 DUP3 PUSH2 0x1502 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1563 DUP2 PUSH2 0x152A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15A1 DUP3 PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP PUSH2 0x15AC DUP4 PUSH2 0x12AC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15C3 PUSH2 0x156A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B65206C6F636B65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15FE PUSH1 0xC DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x1609 DUP3 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x162B DUP2 PUSH2 0x15F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1640 DUP2 PUSH2 0x12DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x165B JUMPI PUSH2 0x165A PUSH2 0x1223 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1668 DUP5 DUP3 DUP6 ADD PUSH2 0x1632 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207265776172642062616C616E63650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16A5 PUSH1 0x1B DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x16B0 DUP3 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16D2 DUP2 PUSH2 0x1699 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16EC PUSH0 DUP4 ADD DUP7 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x16F9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x1706 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5374616B65206475726174696F6E206D757374206265203E2030000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1742 PUSH1 0x1A DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x174D DUP3 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x176F DUP2 PUSH2 0x1736 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C7265616479207374616B696E670000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17AA PUSH1 0xF DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x17B5 DUP3 PUSH2 0x1776 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17D7 DUP2 PUSH2 0x179E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742062656C6F77206D696E5374616B650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1812 PUSH1 0x15 DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x181D DUP3 PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183F DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E742065786365656473206D61785374616B65000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x187A PUSH1 0x17 DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x1885 DUP3 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18A7 DUP2 PUSH2 0x186E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E67206C6F636B6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18E2 PUSH1 0xE DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x18ED DUP3 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x190F DUP2 PUSH2 0x18D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1929 PUSH0 DUP4 ADD DUP6 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x1936 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4D6178207374616B65206D757374206265203E20300000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1971 PUSH1 0x15 DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x197C DUP3 PUSH2 0x193D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x199E DUP2 PUSH2 0x1965 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19AF DUP3 PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP PUSH2 0x19BA DUP4 PUSH2 0x12AC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x19C8 DUP2 PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x19DF JUMPI PUSH2 0x19DE PUSH2 0x156A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1A1D DUP3 PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1A28 DUP4 PUSH2 0x12AC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1A38 JUMPI PUSH2 0x1A37 PUSH2 0x19E6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A77 PUSH1 0x1F DUP4 PUSH2 0x148A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A82 DUP3 PUSH2 0x1A43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA4 DUP2 PUSH2 0x1A6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1ABE PUSH0 DUP4 ADD DUP6 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x1ACB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AE5 PUSH0 DUP4 ADD DUP7 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x1AF2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x13A6 JUMP JUMPDEST PUSH2 0x1AFF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12B5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1B11 DUP3 PUSH2 0x13CE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B1C DUP4 PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x1B35 JUMPI PUSH2 0x1B34 PUSH2 0x156A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x1B90 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x1B6C JUMPI PUSH2 0x1B6B PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x1B7B JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x1B89 DUP6 PUSH2 0x1B3B JUMP JUMPDEST SWAP5 POP PUSH2 0x1B50 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1BA8 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x1C63 JUMP JUMPDEST DUP2 PUSH2 0x1BB5 JUMPI PUSH0 SWAP1 POP PUSH2 0x1C63 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1BCB JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1BD5 JUMPI PUSH2 0x1C04 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1C63 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1BE7 JUMPI PUSH2 0x1BE6 PUSH2 0x156A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x1BFE JUMPI PUSH2 0x1BFD PUSH2 0x156A JUMP JUMPDEST JUMPDEST POP PUSH2 0x1C63 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1C39 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x1C34 JUMPI PUSH2 0x1C33 PUSH2 0x156A JUMP JUMPDEST JUMPDEST PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x1C46 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1B47 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x1C5D JUMPI PUSH2 0x1C5C PUSH2 0x156A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C74 DUP3 PUSH2 0x12AC JUMP JUMPDEST SWAP2 POP PUSH2 0x1C7F DUP4 PUSH2 0x13CE JUMP JUMPDEST SWAP3 POP PUSH2 0x1CAC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x1B99 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 PUSH13 0x700E0FAD9DBFFAE1D9B28CCC75 0x1F PUSH30 0xD4C76AD30B9FE7FC0327BD81EF18EB64736F6C634300081E003300000000 ",
							"sourceMap": "313:5807:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;663:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2872:180;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;711:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;429:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;866:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4552:741;;;:::i;:::-;;772:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2514:183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5324:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5435:136:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;573:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3202:541;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;617:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2705:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3886:617;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;836:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3060:106;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;494:35:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;896:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;663:41;;;;;;;;;;;;;;;;;:::o;2872:180::-;1531:13:0;:11;:13::i;:::-;2965:1:9::1;2953:9;:13;:38;;;;;2983:8;;2970:9;:21;;2953:38;2945:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3035:9;3024:8;:20;;;;2872:180:::0;:::o;711:52::-;;;;;;;;;;;;;;;;;:::o;429:35::-;;;:::o;866:23::-;;;;:::o;4552:741::-;2261:21:4;:19;:21::i;:::-;4605:12:9::1;4620:10;4605:25;;4641:14;4658:6;:12;4665:4;4658:12;;;;;;;;;;;;;;;;4641:29;;4698:1;4689:6;:10;4681:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;4737:10;;;;;;;;;;;:72;;;;4796:13;;4770:17;:23;4788:4;4770:23;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;4751:15;:58;;4737:72;4729:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;4839:20;4862:21;4878:4;4862:15;:21::i;:::-;4839:44;;4911:1;4896:6;:12;4903:4;4896:12;;;;;;;;;;;;;;;:16;;;;4949:1;4923:17;:23;4941:4;4923:23;;;;;;;;;;;;;;;:27;;;;4963:38;4988:4;4994:6;4963:11;:24;;;;:38;;;;;:::i;:::-;5033:1;5018:12;:16;5014:200;;;5099:12;5059:11;:21;;;5089:4;5059:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;5051:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;5158:44;5183:4;5189:12;5158:11;:24;;;;:44;;;;;:::i;:::-;5014:200;5241:4;5231:54;;;5247:6;5255:12;5269:15;5231:54;;;;;;;;:::i;:::-;;;;;;;;4594:699;;;2303:20:4::0;:18;:20::i;:::-;4552:741:9:o;772:28::-;;;;:::o;2514:183::-;1531:13:0;:11;:13::i;:::-;2618:1:9::1;2603:12;:16;2595:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2677:12;2661:13;:28;;;;2514:183:::0;:::o;5324:103::-;5380:7;5407:6;:12;5414:4;5407:12;;;;;;;;;;;;;;;;5400:19;;5324:103;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;5435:136:9:-;5497:7;5550:13;;5524:17;:23;5542:4;5524:23;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;5517:46;;5435:136;;;:::o;573:37::-;;;:::o;3202:541::-;2261:21:4;:19;:21::i;:::-;3266:12:9::1;3281:10;3266:25;;3326:1;3310:6;:12;3317:4;3310:12;;;;;;;;;;;;;;;;:17;3302:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;3376:8;;3366:6;:18;;3358:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3439:8;;3429:6;:18;;3421:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3495:10;;;;;;;;;;;3494:11;3486:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;3552:6;3537;:12;3544:4;3537:12;;;;;;;;;;;;;;;:21;;;;3595:15;3569:17;:23;3587:4;3569:23;;;;;;;;;;;;;;;:41;;;;3623:57;3652:4;3666;3673:6;3623:11;:28;;;;:57;;;;;;:::i;:::-;3705:4;3698:37;;;3711:6;3719:15;3698:37;;;;;;;:::i;:::-;;;;;;;;3255:488;2303:20:4::0;:18;:20::i;:::-;3202:541:9;:::o;617:37::-;;;:::o;2705:159::-;1531:13:0;:11;:13::i;:::-;2798:1:9::1;2786:9;:13;2778:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;2847:9;2836:8;:20;;;;2705:159:::0;:::o;3886:617::-;3946:7;3966:14;3983:6;:12;3990:4;3983:12;;;;;;;;;;;;;;;;3966:29;;4020:1;4010:6;:11;4006:25;;4030:1;4023:8;;;;;4006:25;4095:23;4121:46;4140:6;4148:14;4164:2;4121:18;:46::i;:::-;4095:72;;4262:24;4313:3;4308:1;4290:15;:19;;;;:::i;:::-;4289:27;;;;:::i;:::-;4262:54;;4386:20;4409:56;4428:16;4446:2;4450:14;4409:18;:56::i;:::-;4386:79;;4483:12;4476:19;;;;;;3886:617;;;;:::o;836:23::-;;;;:::o;3060:106::-;1531:13:0;:11;:13::i;:::-;3147:11:9::1;3134:10;;:24;;;;;;;;;;;;;;;;;;3060:106:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;494:35:9:-;;;:::o;896:22::-;;;;;;;;;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;5684:433:9:-;5823:7;5863:10;5847:26;;:12;:26;;;5843:267;;5897:6;5890:13;;;;5843:267;5940:10;5925:25;;:12;:25;;;5921:189;;;6004:10;5989:12;:25;;;;:::i;:::-;5984:2;:31;;;;:::i;:::-;5974:6;:42;;;;:::i;:::-;5967:49;;;;5921:189;6084:12;6071:10;:25;;;;:::i;:::-;6066:2;:31;;;;:::i;:::-;6056:6;:42;;;;:::i;:::-;6049:49;;5684:433;;;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8370:720:6:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:140::-;2629:9;2662:37;2693:5;2662:37;:::i;:::-;2649:50;;2565:140;;;:::o;2711:159::-;2812:51;2857:5;2812:51;:::i;:::-;2807:3;2800:64;2711:159;;:::o;2876:250::-;2983:4;3021:2;3010:9;3006:18;2998:26;;3034:85;3116:1;3105:9;3101:17;3092:6;3034:85;:::i;:::-;2876:250;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:86::-;3519:7;3559:4;3552:5;3548:16;3537:27;;3484:86;;;:::o;3576:112::-;3659:22;3675:5;3659:22;:::i;:::-;3654:3;3647:35;3576:112;;:::o;3694:214::-;3783:4;3821:2;3810:9;3806:18;3798:26;;3834:67;3898:1;3887:9;3883:17;3874:6;3834:67;:::i;:::-;3694:214;;;;:::o;3914:90::-;3948:7;3991:5;3984:13;3977:21;3966:32;;3914:90;;;:::o;4010:116::-;4080:21;4095:5;4080:21;:::i;:::-;4073:5;4070:32;4060:60;;4116:1;4113;4106:12;4060:60;4010:116;:::o;4132:133::-;4175:5;4213:6;4200:20;4191:29;;4229:30;4253:5;4229:30;:::i;:::-;4132:133;;;;:::o;4271:323::-;4327:6;4376:2;4364:9;4355:7;4351:23;4347:32;4344:119;;;4382:79;;:::i;:::-;4344:119;4502:1;4527:50;4569:7;4560:6;4549:9;4545:22;4527:50;:::i;:::-;4517:60;;4473:114;4271:323;;;;:::o;4600:109::-;4681:21;4696:5;4681:21;:::i;:::-;4676:3;4669:34;4600:109;;:::o;4715:210::-;4802:4;4840:2;4829:9;4825:18;4817:26;;4853:65;4915:1;4904:9;4900:17;4891:6;4853:65;:::i;:::-;4715:210;;;;:::o;4931:169::-;5015:11;5049:6;5044:3;5037:19;5089:4;5084:3;5080:14;5065:29;;4931:169;;;;:::o;5106:167::-;5246:19;5242:1;5234:6;5230:14;5223:43;5106:167;:::o;5279:366::-;5421:3;5442:67;5506:2;5501:3;5442:67;:::i;:::-;5435:74;;5518:93;5607:3;5518:93;:::i;:::-;5636:2;5631:3;5627:12;5620:19;;5279:366;;;:::o;5651:419::-;5817:4;5855:2;5844:9;5840:18;5832:26;;5904:9;5898:4;5894:20;5890:1;5879:9;5875:17;5868:47;5932:131;6058:4;5932:131;:::i;:::-;5924:139;;5651:419;;;:::o;6076:164::-;6216:16;6212:1;6204:6;6200:14;6193:40;6076:164;:::o;6246:366::-;6388:3;6409:67;6473:2;6468:3;6409:67;:::i;:::-;6402:74;;6485:93;6574:3;6485:93;:::i;:::-;6603:2;6598:3;6594:12;6587:19;;6246:366;;;:::o;6618:419::-;6784:4;6822:2;6811:9;6807:18;6799:26;;6871:9;6865:4;6861:20;6857:1;6846:9;6842:17;6835:47;6899:131;7025:4;6899:131;:::i;:::-;6891:139;;6618:419;;;:::o;7043:180::-;7091:77;7088:1;7081:88;7188:4;7185:1;7178:15;7212:4;7209:1;7202:15;7229:191;7269:3;7288:20;7306:1;7288:20;:::i;:::-;7283:25;;7322:20;7340:1;7322:20;:::i;:::-;7317:25;;7365:1;7362;7358:9;7351:16;;7386:3;7383:1;7380:10;7377:36;;;7393:18;;:::i;:::-;7377:36;7229:191;;;;:::o;7426:162::-;7566:14;7562:1;7554:6;7550:14;7543:38;7426:162;:::o;7594:366::-;7736:3;7757:67;7821:2;7816:3;7757:67;:::i;:::-;7750:74;;7833:93;7922:3;7833:93;:::i;:::-;7951:2;7946:3;7942:12;7935:19;;7594:366;;;:::o;7966:419::-;8132:4;8170:2;8159:9;8155:18;8147:26;;8219:9;8213:4;8209:20;8205:1;8194:9;8190:17;8183:47;8247:131;8373:4;8247:131;:::i;:::-;8239:139;;7966:419;;;:::o;8391:143::-;8448:5;8479:6;8473:13;8464:22;;8495:33;8522:5;8495:33;:::i;:::-;8391:143;;;;:::o;8540:351::-;8610:6;8659:2;8647:9;8638:7;8634:23;8630:32;8627:119;;;8665:79;;:::i;:::-;8627:119;8785:1;8810:64;8866:7;8857:6;8846:9;8842:22;8810:64;:::i;:::-;8800:74;;8756:128;8540:351;;;;:::o;8897:177::-;9037:29;9033:1;9025:6;9021:14;9014:53;8897:177;:::o;9080:366::-;9222:3;9243:67;9307:2;9302:3;9243:67;:::i;:::-;9236:74;;9319:93;9408:3;9319:93;:::i;:::-;9437:2;9432:3;9428:12;9421:19;;9080:366;;;:::o;9452:419::-;9618:4;9656:2;9645:9;9641:18;9633:26;;9705:9;9699:4;9695:20;9691:1;9680:9;9676:17;9669:47;9733:131;9859:4;9733:131;:::i;:::-;9725:139;;9452:419;;;:::o;9877:442::-;10026:4;10064:2;10053:9;10049:18;10041:26;;10077:71;10145:1;10134:9;10130:17;10121:6;10077:71;:::i;:::-;10158:72;10226:2;10215:9;10211:18;10202:6;10158:72;:::i;:::-;10240;10308:2;10297:9;10293:18;10284:6;10240:72;:::i;:::-;9877:442;;;;;;:::o;10325:176::-;10465:28;10461:1;10453:6;10449:14;10442:52;10325:176;:::o;10507:366::-;10649:3;10670:67;10734:2;10729:3;10670:67;:::i;:::-;10663:74;;10746:93;10835:3;10746:93;:::i;:::-;10864:2;10859:3;10855:12;10848:19;;10507:366;;;:::o;10879:419::-;11045:4;11083:2;11072:9;11068:18;11060:26;;11132:9;11126:4;11122:20;11118:1;11107:9;11103:17;11096:47;11160:131;11286:4;11160:131;:::i;:::-;11152:139;;10879:419;;;:::o;11304:165::-;11444:17;11440:1;11432:6;11428:14;11421:41;11304:165;:::o;11475:366::-;11617:3;11638:67;11702:2;11697:3;11638:67;:::i;:::-;11631:74;;11714:93;11803:3;11714:93;:::i;:::-;11832:2;11827:3;11823:12;11816:19;;11475:366;;;:::o;11847:419::-;12013:4;12051:2;12040:9;12036:18;12028:26;;12100:9;12094:4;12090:20;12086:1;12075:9;12071:17;12064:47;12128:131;12254:4;12128:131;:::i;:::-;12120:139;;11847:419;;;:::o;12272:171::-;12412:23;12408:1;12400:6;12396:14;12389:47;12272:171;:::o;12449:366::-;12591:3;12612:67;12676:2;12671:3;12612:67;:::i;:::-;12605:74;;12688:93;12777:3;12688:93;:::i;:::-;12806:2;12801:3;12797:12;12790:19;;12449:366;;;:::o;12821:419::-;12987:4;13025:2;13014:9;13010:18;13002:26;;13074:9;13068:4;13064:20;13060:1;13049:9;13045:17;13038:47;13102:131;13228:4;13102:131;:::i;:::-;13094:139;;12821:419;;;:::o;13246:173::-;13386:25;13382:1;13374:6;13370:14;13363:49;13246:173;:::o;13425:366::-;13567:3;13588:67;13652:2;13647:3;13588:67;:::i;:::-;13581:74;;13664:93;13753:3;13664:93;:::i;:::-;13782:2;13777:3;13773:12;13766:19;;13425:366;;;:::o;13797:419::-;13963:4;14001:2;13990:9;13986:18;13978:26;;14050:9;14044:4;14040:20;14036:1;14025:9;14021:17;14014:47;14078:131;14204:4;14078:131;:::i;:::-;14070:139;;13797:419;;;:::o;14222:164::-;14362:16;14358:1;14350:6;14346:14;14339:40;14222:164;:::o;14392:366::-;14534:3;14555:67;14619:2;14614:3;14555:67;:::i;:::-;14548:74;;14631:93;14720:3;14631:93;:::i;:::-;14749:2;14744:3;14740:12;14733:19;;14392:366;;;:::o;14764:419::-;14930:4;14968:2;14957:9;14953:18;14945:26;;15017:9;15011:4;15007:20;15003:1;14992:9;14988:17;14981:47;15045:131;15171:4;15045:131;:::i;:::-;15037:139;;14764:419;;;:::o;15189:332::-;15310:4;15348:2;15337:9;15333:18;15325:26;;15361:71;15429:1;15418:9;15414:17;15405:6;15361:71;:::i;:::-;15442:72;15510:2;15499:9;15495:18;15486:6;15442:72;:::i;:::-;15189:332;;;;;:::o;15527:171::-;15667:23;15663:1;15655:6;15651:14;15644:47;15527:171;:::o;15704:366::-;15846:3;15867:67;15931:2;15926:3;15867:67;:::i;:::-;15860:74;;15943:93;16032:3;15943:93;:::i;:::-;16061:2;16056:3;16052:12;16045:19;;15704:366;;;:::o;16076:419::-;16242:4;16280:2;16269:9;16265:18;16257:26;;16329:9;16323:4;16319:20;16315:1;16304:9;16300:17;16293:47;16357:131;16483:4;16357:131;:::i;:::-;16349:139;;16076:419;;;:::o;16501:410::-;16541:7;16564:20;16582:1;16564:20;:::i;:::-;16559:25;;16598:20;16616:1;16598:20;:::i;:::-;16593:25;;16653:1;16650;16646:9;16675:30;16693:11;16675:30;:::i;:::-;16664:41;;16854:1;16845:7;16841:15;16838:1;16835:22;16815:1;16808:9;16788:83;16765:139;;16884:18;;:::i;:::-;16765:139;16549:362;16501:410;;;;:::o;16917:180::-;16965:77;16962:1;16955:88;17062:4;17059:1;17052:15;17086:4;17083:1;17076:15;17103:185;17143:1;17160:20;17178:1;17160:20;:::i;:::-;17155:25;;17194:20;17212:1;17194:20;:::i;:::-;17189:25;;17233:1;17223:35;;17238:18;;:::i;:::-;17223:35;17280:1;17277;17273:9;17268:14;;17103:185;;;;:::o;17294:181::-;17434:33;17430:1;17422:6;17418:14;17411:57;17294:181;:::o;17481:366::-;17623:3;17644:67;17708:2;17703:3;17644:67;:::i;:::-;17637:74;;17720:93;17809:3;17720:93;:::i;:::-;17838:2;17833:3;17829:12;17822:19;;17481:366;;;:::o;17853:419::-;18019:4;18057:2;18046:9;18042:18;18034:26;;18106:9;18100:4;18096:20;18092:1;18081:9;18077:17;18070:47;18134:131;18260:4;18134:131;:::i;:::-;18126:139;;17853:419;;;:::o;18278:332::-;18399:4;18437:2;18426:9;18422:18;18414:26;;18450:71;18518:1;18507:9;18503:17;18494:6;18450:71;:::i;:::-;18531:72;18599:2;18588:9;18584:18;18575:6;18531:72;:::i;:::-;18278:332;;;;;:::o;18616:442::-;18765:4;18803:2;18792:9;18788:18;18780:26;;18816:71;18884:1;18873:9;18869:17;18860:6;18816:71;:::i;:::-;18897:72;18965:2;18954:9;18950:18;18941:6;18897:72;:::i;:::-;18979;19047:2;19036:9;19032:18;19023:6;18979:72;:::i;:::-;18616:442;;;;;;:::o;19064:191::-;19102:4;19122:18;19138:1;19122:18;:::i;:::-;19117:23;;19154:18;19170:1;19154:18;:::i;:::-;19149:23;;19196:1;19193;19189:9;19181:17;;19220:4;19214;19211:14;19208:40;;;19228:18;;:::i;:::-;19208:40;19064:191;;;;:::o;19261:102::-;19303:8;19350:5;19347:1;19343:13;19322:34;;19261:102;;;:::o;19369:848::-;19430:5;19437:4;19461:6;19452:15;;19485:5;19476:14;;19499:712;19520:1;19510:8;19507:15;19499:712;;;19615:4;19610:3;19606:14;19600:4;19597:24;19594:50;;;19624:18;;:::i;:::-;19594:50;19674:1;19664:8;19660:16;19657:451;;;20089:4;20082:5;20078:16;20069:25;;19657:451;20139:4;20133;20129:15;20121:23;;20169:32;20192:8;20169:32;:::i;:::-;20157:44;;19499:712;;;19369:848;;;;;;;:::o;20223:1073::-;20277:5;20468:8;20458:40;;20489:1;20480:10;;20491:5;;20458:40;20517:4;20507:36;;20534:1;20525:10;;20536:5;;20507:36;20603:4;20651:1;20646:27;;;;20687:1;20682:191;;;;20596:277;;20646:27;20664:1;20655:10;;20666:5;;;20682:191;20727:3;20717:8;20714:17;20711:43;;;20734:18;;:::i;:::-;20711:43;20783:8;20780:1;20776:16;20767:25;;20818:3;20811:5;20808:14;20805:40;;;20825:18;;:::i;:::-;20805:40;20858:5;;;20596:277;;20982:2;20972:8;20969:16;20963:3;20957:4;20954:13;20950:36;20932:2;20922:8;20919:16;20914:2;20908:4;20905:12;20901:35;20885:111;20882:246;;;21038:8;21032:4;21028:19;21019:28;;21073:3;21066:5;21063:14;21060:40;;;21080:18;;:::i;:::-;21060:40;21113:5;;20882:246;21153:42;21191:3;21181:8;21175:4;21172:1;21153:42;:::i;:::-;21138:57;;;;21227:4;21222:3;21218:14;21211:5;21208:25;21205:51;;;21236:18;;:::i;:::-;21205:51;21285:4;21278:5;21274:16;21265:25;;20223:1073;;;;;;:::o;21302:281::-;21360:5;21384:23;21402:4;21384:23;:::i;:::-;21376:31;;21428:25;21444:8;21428:25;:::i;:::-;21416:37;;21472:104;21509:66;21499:8;21493:4;21472:104;:::i;:::-;21463:113;;21302:281;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1480400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "2918",
								"calculateReward(address)": "infinite",
								"changeFullUnlock(bool)": "infinite",
								"changeMaxStake(uint256)": "infinite",
								"changeMinStake(uint256)": "infinite",
								"changeStakeDuration(uint256)": "infinite",
								"depositTimestamps(address)": "2870",
								"fullUnlock()": "2598",
								"landFiDecimals()": "infinite",
								"landFiToken()": "infinite",
								"maxStake()": "2469",
								"minStake()": "2537",
								"owner()": "2647",
								"renounceOwnership()": "infinite",
								"rewardDecimals()": "infinite",
								"rewardToken()": "infinite",
								"stake(uint256)": "infinite",
								"stakeDuration()": "2470",
								"stakeUnlockTime(address)": "infinite",
								"stakes(address)": "2826",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							},
							"internal": {
								"_getDecimals(address)": "infinite",
								"_normalizeDecimals(uint256,uint8,uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1226,
									"end": 2096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 358,
									"end": 368,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1439,
									"end": 1440,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1415,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1415,
									"end": 1441,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1415,
									"end": 1427,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1415,
									"end": 1441,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1415,
									"end": 1441,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1415,
									"end": 1441,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1407,
									"end": 1471,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1407,
									"end": 1471,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1514,
									"end": 1515,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1490,
									"end": 1516,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1490,
									"end": 1516,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1490,
									"end": 1502,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1490,
									"end": 1516,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1490,
									"end": 1516,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1490,
									"end": 1516,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1482,
									"end": 1546,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1482,
									"end": 1546,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1583,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1565,
									"end": 1579,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1565,
									"end": 1583,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1557,
									"end": 1614,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1557,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1645,
									"end": 1646,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1633,
									"end": 1642,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1633,
									"end": 1646,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1625,
									"end": 1672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1625,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1703,
									"end": 1704,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1691,
									"end": 1700,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1691,
									"end": 1704,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1691,
									"end": 1730,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1691,
									"end": 1730,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1691,
									"end": 1730,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1691,
									"end": 1730,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1691,
									"end": 1730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1721,
									"end": 1730,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1708,
									"end": 1717,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1708,
									"end": 1730,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1708,
									"end": 1730,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1691,
									"end": 1730,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1691,
									"end": 1730,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1683,
									"end": 1752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1683,
									"end": 1752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1786,
									"end": 1798,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1765,
									"end": 1799,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1765,
									"end": 1799,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1765,
									"end": 1799,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1765,
									"end": 1799,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1765,
									"end": 1799,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1765,
									"end": 1799,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1765,
									"end": 1799,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1765,
									"end": 1799,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1765,
									"end": 1799,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1765,
									"end": 1799,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1831,
									"end": 1843,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1844,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1810,
									"end": 1844,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1844,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 1810,
									"end": 1844,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1844,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1810,
									"end": 1844,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1844,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1844,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1844,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 1844,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1874,
									"end": 1900,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1887,
									"end": 1899,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1874,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1874,
									"end": 1886,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1874,
									"end": 1886,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1874,
									"end": 1900,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1874,
									"end": 1900,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1874,
									"end": 1900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1874,
									"end": 1900,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1874,
									"end": 1900,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1900,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1857,
									"end": 1900,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1900,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 1857,
									"end": 1900,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1900,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1857,
									"end": 1900,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1900,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1900,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1900,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1857,
									"end": 1900,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1928,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1941,
									"end": 1953,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1940,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1928,
									"end": 1954,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1928,
									"end": 1954,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1928,
									"end": 1954,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1928,
									"end": 1954,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1928,
									"end": 1954,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1911,
									"end": 1954,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1911,
									"end": 1954,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1911,
									"end": 1954,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1911,
									"end": 1954,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1911,
									"end": 1954,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1911,
									"end": 1954,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1911,
									"end": 1954,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1911,
									"end": 1954,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1911,
									"end": 1954,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1911,
									"end": 1954,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1983,
									"end": 1997,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1967,
									"end": 1980,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1967,
									"end": 1997,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1967,
									"end": 1997,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1967,
									"end": 1997,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1967,
									"end": 1997,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2019,
									"end": 2028,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2008,
									"end": 2016,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2008,
									"end": 2028,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2008,
									"end": 2028,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2008,
									"end": 2028,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2008,
									"end": 2028,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2050,
									"end": 2059,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2039,
									"end": 2047,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2039,
									"end": 2059,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2039,
									"end": 2059,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2039,
									"end": 2059,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2039,
									"end": 2059,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2083,
									"end": 2088,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2070,
									"end": 2080,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2070,
									"end": 2080,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2070,
									"end": 2088,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1226,
									"end": 2096,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2164,
									"end": 2482,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 2164,
									"end": 2482,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2243,
									"end": 2255,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2257,
									"end": 2274,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2278,
									"end": 2283,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2294,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2278,
									"end": 2294,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "PUSH",
									"source": 9,
									"value": "313CE56700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2309,
									"end": 2346,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 2278,
									"end": 2357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "GAS",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "STATICCALL",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "RETURNDATASIZE",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "RETURNDATACOPY",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2357,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2242,
									"end": 2357,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2242,
									"end": 2357,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2242,
									"end": 2357,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2242,
									"end": 2357,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2376,
									"end": 2383,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2376,
									"end": 2404,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2376,
									"end": 2404,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2376,
									"end": 2404,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 2376,
									"end": 2404,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2376,
									"end": 2404,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2402,
									"end": 2404,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2391,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2387,
									"end": 2398,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2387,
									"end": 2404,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 2376,
									"end": 2404,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 2376,
									"end": 2404,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 2368,
									"end": 2431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 2368,
									"end": 2431,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2460,
									"end": 2464,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2449,
									"end": 2474,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 2449,
									"end": 2474,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2442,
									"end": 2474,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2442,
									"end": 2474,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2442,
									"end": 2474,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2442,
									"end": 2474,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2164,
									"end": 2482,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2164,
									"end": 2482,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2164,
									"end": 2482,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2164,
									"end": 2482,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1317,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1327,
									"end": 1333,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1343,
									"end": 1349,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1392,
									"end": 1395,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 1380,
									"end": 1389,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1371,
									"end": 1378,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 1367,
									"end": 1390,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1363,
									"end": 1396,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1399,
									"end": 1478,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 1399,
									"end": 1478,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 1360,
									"end": 1480,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1519,
									"end": 1520,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1600,
									"end": 1607,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 1591,
									"end": 1597,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1580,
									"end": 1589,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 1576,
									"end": 1598,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1544,
									"end": 1608,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "tag",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 1544,
									"end": 1608,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1534,
									"end": 1608,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1618,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1657,
									"end": 1659,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 1739,
									"end": 1746,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 1730,
									"end": 1736,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1719,
									"end": 1728,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 1715,
									"end": 1737,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 1683,
									"end": 1747,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 1683,
									"end": 1747,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 1673,
									"end": 1747,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1628,
									"end": 1757,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 1798,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 1878,
									"end": 1885,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 1869,
									"end": 1875,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1858,
									"end": 1867,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 1854,
									"end": 1876,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1822,
									"end": 1886,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 1822,
									"end": 1886,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1812,
									"end": 1886,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1767,
									"end": 1896,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1935,
									"end": 1937,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 2017,
									"end": 2024,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2008,
									"end": 2014,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1997,
									"end": 2006,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 1993,
									"end": 2015,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1961,
									"end": 2025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 1961,
									"end": 2025,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1951,
									"end": 2025,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 2035,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2074,
									"end": 2077,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 2157,
									"end": 2164,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 2148,
									"end": 2154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2137,
									"end": 2146,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 2133,
									"end": 2155,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 2101,
									"end": 2165,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "tag",
									"source": 10,
									"value": "104"
								},
								{
									"begin": 2101,
									"end": 2165,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2091,
									"end": 2165,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2045,
									"end": 2175,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2182,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 2182,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 2293,
									"end": 2298,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 2275,
									"end": 2299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 2275,
									"end": 2299,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2270,
									"end": 2273,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2263,
									"end": 2300,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2188,
									"end": 2306,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2188,
									"end": 2306,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2405,
									"end": 2409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2443,
									"end": 2445,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2432,
									"end": 2441,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2428,
									"end": 2446,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2420,
									"end": 2446,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2420,
									"end": 2446,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2513,
									"end": 2522,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2509,
									"end": 2526,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2500,
									"end": 2506,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 2456,
									"end": 2527,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 2456,
									"end": 2527,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2312,
									"end": 2534,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2312,
									"end": 2534,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2540,
									"end": 2709,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 2540,
									"end": 2709,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2624,
									"end": 2635,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2658,
									"end": 2664,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2653,
									"end": 2656,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2646,
									"end": 2665,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2698,
									"end": 2702,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2693,
									"end": 2696,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2689,
									"end": 2703,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2674,
									"end": 2703,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2674,
									"end": 2703,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2540,
									"end": 2709,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2540,
									"end": 2709,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2540,
									"end": 2709,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2540,
									"end": 2709,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2540,
									"end": 2709,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2715,
									"end": 2890,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2715,
									"end": 2890,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2855,
									"end": 2882,
									"name": "PUSH",
									"source": 10,
									"value": "4C616E64466920746F6B656E207A65726F206164647265737300000000000000"
								},
								{
									"begin": 2851,
									"end": 2852,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2843,
									"end": 2849,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2839,
									"end": 2853,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2832,
									"end": 2883,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2715,
									"end": 2890,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2715,
									"end": 2890,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 3262,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2896,
									"end": 3262,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3038,
									"end": 3041,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3059,
									"end": 3126,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 3123,
									"end": 3125,
									"name": "PUSH",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 3118,
									"end": 3121,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3059,
									"end": 3126,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 3059,
									"end": 3126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3059,
									"end": 3126,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 3059,
									"end": 3126,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3052,
									"end": 3126,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3052,
									"end": 3126,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3228,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 3224,
									"end": 3227,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3228,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 3135,
									"end": 3228,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3135,
									"end": 3228,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 3135,
									"end": 3228,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3253,
									"end": 3255,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3248,
									"end": 3251,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3244,
									"end": 3256,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3237,
									"end": 3256,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3237,
									"end": 3256,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 3262,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 3262,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 3262,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 3262,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3268,
									"end": 3687,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 3268,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3434,
									"end": 3438,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3472,
									"end": 3474,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3461,
									"end": 3470,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3457,
									"end": 3475,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3449,
									"end": 3475,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3449,
									"end": 3475,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3521,
									"end": 3530,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3515,
									"end": 3519,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3511,
									"end": 3531,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3507,
									"end": 3508,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3496,
									"end": 3505,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3492,
									"end": 3509,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3485,
									"end": 3532,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3549,
									"end": 3680,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 3675,
									"end": 3679,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3549,
									"end": 3680,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 3549,
									"end": 3680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3549,
									"end": 3680,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 3549,
									"end": 3680,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3541,
									"end": 3680,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3541,
									"end": 3680,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3268,
									"end": 3687,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3268,
									"end": 3687,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3268,
									"end": 3687,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3268,
									"end": 3687,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3693,
									"end": 3868,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 3693,
									"end": 3868,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 3860,
									"name": "PUSH",
									"source": 10,
									"value": "52657761726420746F6B656E207A65726F206164647265737300000000000000"
								},
								{
									"begin": 3829,
									"end": 3830,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3821,
									"end": 3827,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3817,
									"end": 3831,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3810,
									"end": 3861,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3693,
									"end": 3868,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3693,
									"end": 3868,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3874,
									"end": 4240,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 3874,
									"end": 4240,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4016,
									"end": 4019,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4037,
									"end": 4104,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 4101,
									"end": 4103,
									"name": "PUSH",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 4096,
									"end": 4099,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4037,
									"end": 4104,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 4037,
									"end": 4104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4037,
									"end": 4104,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 4037,
									"end": 4104,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4030,
									"end": 4104,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4030,
									"end": 4104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4206,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 4202,
									"end": 4205,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4206,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 4113,
									"end": 4206,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4113,
									"end": 4206,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 4113,
									"end": 4206,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4231,
									"end": 4233,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4226,
									"end": 4229,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4222,
									"end": 4234,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4215,
									"end": 4234,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4215,
									"end": 4234,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3874,
									"end": 4240,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3874,
									"end": 4240,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3874,
									"end": 4240,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3874,
									"end": 4240,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4246,
									"end": 4665,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4246,
									"end": 4665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4412,
									"end": 4416,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4450,
									"end": 4452,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4439,
									"end": 4448,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4435,
									"end": 4453,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4427,
									"end": 4453,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4427,
									"end": 4453,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4499,
									"end": 4508,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4493,
									"end": 4497,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4489,
									"end": 4509,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4485,
									"end": 4486,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4474,
									"end": 4483,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4470,
									"end": 4487,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4463,
									"end": 4510,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4527,
									"end": 4658,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 4653,
									"end": 4657,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4527,
									"end": 4658,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 4527,
									"end": 4658,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4527,
									"end": 4658,
									"name": "tag",
									"source": 10,
									"value": "121"
								},
								{
									"begin": 4527,
									"end": 4658,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4519,
									"end": 4658,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4519,
									"end": 4658,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4246,
									"end": 4665,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4246,
									"end": 4665,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4246,
									"end": 4665,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4246,
									"end": 4665,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4671,
									"end": 4847,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 4671,
									"end": 4847,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4811,
									"end": 4839,
									"name": "PUSH",
									"source": 10,
									"value": "5374616B65206475726174696F6E206D757374206265203E2030000000000000"
								},
								{
									"begin": 4807,
									"end": 4808,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4799,
									"end": 4805,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4795,
									"end": 4809,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4788,
									"end": 4840,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4671,
									"end": 4847,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4671,
									"end": 4847,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 5219,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 4853,
									"end": 5219,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4995,
									"end": 4998,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5016,
									"end": 5083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 5080,
									"end": 5082,
									"name": "PUSH",
									"source": 10,
									"value": "1A"
								},
								{
									"begin": 5075,
									"end": 5078,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5016,
									"end": 5083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 5016,
									"end": 5083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5016,
									"end": 5083,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 5016,
									"end": 5083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5009,
									"end": 5083,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5009,
									"end": 5083,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5092,
									"end": 5185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 5181,
									"end": 5184,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5092,
									"end": 5185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 5092,
									"end": 5185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5092,
									"end": 5185,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 5092,
									"end": 5185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5210,
									"end": 5212,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5205,
									"end": 5208,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5201,
									"end": 5213,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5194,
									"end": 5213,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5194,
									"end": 5213,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 5219,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 5219,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 5219,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 5219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5225,
									"end": 5644,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 5225,
									"end": 5644,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5391,
									"end": 5395,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5429,
									"end": 5431,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5418,
									"end": 5427,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5414,
									"end": 5432,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5406,
									"end": 5432,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5406,
									"end": 5432,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5478,
									"end": 5487,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5472,
									"end": 5476,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5488,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 5464,
									"end": 5465,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5453,
									"end": 5462,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5449,
									"end": 5466,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5442,
									"end": 5489,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5506,
									"end": 5637,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 5632,
									"end": 5636,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5506,
									"end": 5637,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 5506,
									"end": 5637,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5506,
									"end": 5637,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 5506,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5498,
									"end": 5637,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5498,
									"end": 5637,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5225,
									"end": 5644,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5225,
									"end": 5644,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5225,
									"end": 5644,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5225,
									"end": 5644,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5650,
									"end": 5821,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 5650,
									"end": 5821,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5790,
									"end": 5813,
									"name": "PUSH",
									"source": 10,
									"value": "4D6178207374616B65206D757374206265203E20300000000000000000000000"
								},
								{
									"begin": 5786,
									"end": 5787,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5778,
									"end": 5784,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5774,
									"end": 5788,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5767,
									"end": 5814,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5650,
									"end": 5821,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5650,
									"end": 5821,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5827,
									"end": 6193,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 5827,
									"end": 6193,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5969,
									"end": 5972,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5990,
									"end": 6057,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 6054,
									"end": 6056,
									"name": "PUSH",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5990,
									"end": 6057,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 5990,
									"end": 6057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5990,
									"end": 6057,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 5990,
									"end": 6057,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5983,
									"end": 6057,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5983,
									"end": 6057,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6066,
									"end": 6159,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 6155,
									"end": 6158,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6066,
									"end": 6159,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 6066,
									"end": 6159,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6066,
									"end": 6159,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 6066,
									"end": 6159,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6184,
									"end": 6186,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6179,
									"end": 6182,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6175,
									"end": 6187,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6168,
									"end": 6187,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6168,
									"end": 6187,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5827,
									"end": 6193,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5827,
									"end": 6193,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5827,
									"end": 6193,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5827,
									"end": 6193,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6199,
									"end": 6618,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 6199,
									"end": 6618,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6365,
									"end": 6369,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6403,
									"end": 6405,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6392,
									"end": 6401,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6388,
									"end": 6406,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6380,
									"end": 6406,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6380,
									"end": 6406,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6452,
									"end": 6461,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6446,
									"end": 6450,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6442,
									"end": 6462,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 6438,
									"end": 6439,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6427,
									"end": 6436,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6423,
									"end": 6440,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6416,
									"end": 6463,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6480,
									"end": 6611,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 6606,
									"end": 6610,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6480,
									"end": 6611,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 6480,
									"end": 6611,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6480,
									"end": 6611,
									"name": "tag",
									"source": 10,
									"value": "133"
								},
								{
									"begin": 6480,
									"end": 6611,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6472,
									"end": 6611,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6472,
									"end": 6611,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6199,
									"end": 6618,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6199,
									"end": 6618,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6199,
									"end": 6618,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6199,
									"end": 6618,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6624,
									"end": 6791,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 6624,
									"end": 6791,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6764,
									"end": 6783,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C6964206D696E207374616B65000000000000000000000000000000"
								},
								{
									"begin": 6760,
									"end": 6761,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6752,
									"end": 6758,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6748,
									"end": 6762,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6741,
									"end": 6784,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6624,
									"end": 6791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6624,
									"end": 6791,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6797,
									"end": 7163,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 6797,
									"end": 7163,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6939,
									"end": 6942,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6960,
									"end": 7027,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 7024,
									"end": 7026,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 7019,
									"end": 7022,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6960,
									"end": 7027,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 6960,
									"end": 7027,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6960,
									"end": 7027,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 6960,
									"end": 7027,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6953,
									"end": 7027,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6953,
									"end": 7027,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7036,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 7125,
									"end": 7128,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7036,
									"end": 7129,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 7036,
									"end": 7129,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7036,
									"end": 7129,
									"name": "tag",
									"source": 10,
									"value": "137"
								},
								{
									"begin": 7036,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7154,
									"end": 7156,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7149,
									"end": 7152,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7145,
									"end": 7157,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7138,
									"end": 7157,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7138,
									"end": 7157,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6797,
									"end": 7163,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6797,
									"end": 7163,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6797,
									"end": 7163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6797,
									"end": 7163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7169,
									"end": 7588,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 7169,
									"end": 7588,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7335,
									"end": 7339,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7373,
									"end": 7375,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7362,
									"end": 7371,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7358,
									"end": 7376,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7350,
									"end": 7376,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7350,
									"end": 7376,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7422,
									"end": 7431,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7416,
									"end": 7420,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7412,
									"end": 7432,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 7408,
									"end": 7409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7397,
									"end": 7406,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7393,
									"end": 7410,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7386,
									"end": 7433,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7450,
									"end": 7581,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 7576,
									"end": 7580,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7450,
									"end": 7581,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 7450,
									"end": 7581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7450,
									"end": 7581,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 7450,
									"end": 7581,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7442,
									"end": 7581,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7442,
									"end": 7581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7169,
									"end": 7588,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7169,
									"end": 7588,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7169,
									"end": 7588,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7169,
									"end": 7588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7594,
									"end": 7692,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 7594,
									"end": 7692,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7645,
									"end": 7651,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7679,
									"end": 7684,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7673,
									"end": 7685,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 7663,
									"end": 7685,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7663,
									"end": 7685,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7594,
									"end": 7692,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7594,
									"end": 7692,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7594,
									"end": 7692,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7594,
									"end": 7692,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7698,
									"end": 7845,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 7698,
									"end": 7845,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7799,
									"end": 7810,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7836,
									"end": 7839,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7821,
									"end": 7839,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7821,
									"end": 7839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7698,
									"end": 7845,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7698,
									"end": 7845,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7698,
									"end": 7845,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7698,
									"end": 7845,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7698,
									"end": 7845,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7851,
									"end": 7990,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 7851,
									"end": 7990,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7940,
									"end": 7946,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7935,
									"end": 7938,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7930,
									"end": 7933,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7924,
									"end": 7947,
									"name": "MCOPY",
									"source": 10
								},
								{
									"begin": 7981,
									"end": 7982,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7972,
									"end": 7978,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7967,
									"end": 7970,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7963,
									"end": 7979,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7956,
									"end": 7983,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 7851,
									"end": 7990,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7851,
									"end": 7990,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7851,
									"end": 7990,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7851,
									"end": 7990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7996,
									"end": 8382,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 7996,
									"end": 8382,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8100,
									"end": 8103,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8128,
									"end": 8166,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 8160,
									"end": 8165,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8128,
									"end": 8166,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 8128,
									"end": 8166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8128,
									"end": 8166,
									"name": "tag",
									"source": 10,
									"value": "144"
								},
								{
									"begin": 8128,
									"end": 8166,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8182,
									"end": 8270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 8263,
									"end": 8269,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8258,
									"end": 8261,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8182,
									"end": 8270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 8182,
									"end": 8270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8182,
									"end": 8270,
									"name": "tag",
									"source": 10,
									"value": "145"
								},
								{
									"begin": 8182,
									"end": 8270,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8175,
									"end": 8270,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 8175,
									"end": 8270,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8279,
									"end": 8344,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 8337,
									"end": 8343,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8332,
									"end": 8335,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 8325,
									"end": 8329,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 8318,
									"end": 8323,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 8314,
									"end": 8330,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8279,
									"end": 8344,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 8279,
									"end": 8344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8279,
									"end": 8344,
									"name": "tag",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 8279,
									"end": 8344,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8369,
									"end": 8375,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 8364,
									"end": 8367,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8360,
									"end": 8376,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8353,
									"end": 8376,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8353,
									"end": 8376,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8104,
									"end": 8382,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7996,
									"end": 8382,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7996,
									"end": 8382,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7996,
									"end": 8382,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7996,
									"end": 8382,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7996,
									"end": 8382,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8388,
									"end": 8659,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 8388,
									"end": 8659,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8518,
									"end": 8521,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8540,
									"end": 8633,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 8629,
									"end": 8632,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8620,
									"end": 8626,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 8540,
									"end": 8633,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 8540,
									"end": 8633,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8540,
									"end": 8633,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 8540,
									"end": 8633,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8533,
									"end": 8633,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8533,
									"end": 8633,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8650,
									"end": 8653,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 8643,
									"end": 8653,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8643,
									"end": 8653,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8388,
									"end": 8659,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 8388,
									"end": 8659,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8388,
									"end": 8659,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8388,
									"end": 8659,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8388,
									"end": 8659,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8665,
									"end": 8837,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 8665,
									"end": 8837,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8805,
									"end": 8829,
									"name": "PUSH",
									"source": 10,
									"value": "4661696C656420746F2067657420646563696D616C7300000000000000000000"
								},
								{
									"begin": 8801,
									"end": 8802,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 8793,
									"end": 8799,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 8789,
									"end": 8803,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 8782,
									"end": 8830,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 8665,
									"end": 8837,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8665,
									"end": 8837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 8843,
									"end": 9209,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 8843,
									"end": 9209,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8985,
									"end": 8988,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9006,
									"end": 9073,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 9070,
									"end": 9072,
									"name": "PUSH",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 9065,
									"end": 9068,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9006,
									"end": 9073,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 9006,
									"end": 9073,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9006,
									"end": 9073,
									"name": "tag",
									"source": 10,
									"value": "151"
								},
								{
									"begin": 9006,
									"end": 9073,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 8999,
									"end": 9073,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8999,
									"end": 9073,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9082,
									"end": 9175,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 9171,
									"end": 9174,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9082,
									"end": 9175,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 9082,
									"end": 9175,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9082,
									"end": 9175,
									"name": "tag",
									"source": 10,
									"value": "152"
								},
								{
									"begin": 9082,
									"end": 9175,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9200,
									"end": 9202,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9195,
									"end": 9198,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9191,
									"end": 9203,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9184,
									"end": 9203,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9184,
									"end": 9203,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8843,
									"end": 9209,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 8843,
									"end": 9209,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 8843,
									"end": 9209,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 8843,
									"end": 9209,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9215,
									"end": 9634,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 9215,
									"end": 9634,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9381,
									"end": 9385,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9419,
									"end": 9421,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 9408,
									"end": 9417,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9404,
									"end": 9422,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9396,
									"end": 9422,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9396,
									"end": 9422,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9468,
									"end": 9477,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9462,
									"end": 9466,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9458,
									"end": 9478,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 9454,
									"end": 9455,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9443,
									"end": 9452,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 9439,
									"end": 9456,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 9432,
									"end": 9479,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 9496,
									"end": 9627,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 9622,
									"end": 9626,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9496,
									"end": 9627,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 9496,
									"end": 9627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9496,
									"end": 9627,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 9496,
									"end": 9627,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9488,
									"end": 9627,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9488,
									"end": 9627,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9215,
									"end": 9634,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9215,
									"end": 9634,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9215,
									"end": 9634,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9215,
									"end": 9634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9640,
									"end": 9726,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 9640,
									"end": 9726,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9675,
									"end": 9682,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9715,
									"end": 9719,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 9708,
									"end": 9713,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 9704,
									"end": 9720,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 9693,
									"end": 9720,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9693,
									"end": 9720,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9640,
									"end": 9726,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9640,
									"end": 9726,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9640,
									"end": 9726,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9640,
									"end": 9726,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9732,
									"end": 9850,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 9732,
									"end": 9850,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9803,
									"end": 9825,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 9819,
									"end": 9824,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9803,
									"end": 9825,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 9803,
									"end": 9825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9803,
									"end": 9825,
									"name": "tag",
									"source": 10,
									"value": "157"
								},
								{
									"begin": 9803,
									"end": 9825,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9796,
									"end": 9801,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9793,
									"end": 9826,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 9783,
									"end": 9844,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 9783,
									"end": 9844,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 9840,
									"end": 9841,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9837,
									"end": 9838,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9830,
									"end": 9842,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 9783,
									"end": 9844,
									"name": "tag",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 9783,
									"end": 9844,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9732,
									"end": 9850,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9732,
									"end": 9850,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9856,
									"end": 9995,
									"name": "tag",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 9856,
									"end": 9995,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9911,
									"end": 9916,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 9942,
									"end": 9948,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9936,
									"end": 9949,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 9927,
									"end": 9949,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 9927,
									"end": 9949,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9958,
									"end": 9989,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 9983,
									"end": 9988,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 9958,
									"end": 9989,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 9958,
									"end": 9989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 9958,
									"end": 9989,
									"name": "tag",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 9958,
									"end": 9989,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 9856,
									"end": 9995,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 9856,
									"end": 9995,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 9856,
									"end": 9995,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9856,
									"end": 9995,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 9856,
									"end": 9995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10001,
									"end": 10348,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 10001,
									"end": 10348,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10069,
									"end": 10075,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10118,
									"end": 10120,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 10106,
									"end": 10115,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10097,
									"end": 10104,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10093,
									"end": 10116,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 10089,
									"end": 10121,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 10086,
									"end": 10205,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 10086,
									"end": 10205,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 10086,
									"end": 10205,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 10124,
									"end": 10203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 10124,
									"end": 10203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 10124,
									"end": 10203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10124,
									"end": 10203,
									"name": "tag",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 10124,
									"end": 10203,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10086,
									"end": 10205,
									"name": "tag",
									"source": 10,
									"value": "162"
								},
								{
									"begin": 10086,
									"end": 10205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10244,
									"end": 10245,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 10269,
									"end": 10331,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 10323,
									"end": 10330,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 10314,
									"end": 10320,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 10303,
									"end": 10312,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 10299,
									"end": 10321,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 10269,
									"end": 10331,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "78"
								},
								{
									"begin": 10269,
									"end": 10331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 10269,
									"end": 10331,
									"name": "tag",
									"source": 10,
									"value": "164"
								},
								{
									"begin": 10269,
									"end": 10331,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 10259,
									"end": 10331,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10259,
									"end": 10331,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10215,
									"end": 10341,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10001,
									"end": 10348,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 10001,
									"end": 10348,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 10001,
									"end": 10348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10001,
									"end": 10348,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 10001,
									"end": 10348,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH",
									"source": 9,
									"value": "C0"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "912"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "910"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "908"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "905"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 6120,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c06c700e0fad9dbffae1d9b28ccc751f7dd4c76ad30b9fe7fc0327bd81ef18eb64736f6c634300081e0033",
									".code": [
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "8DFB2DBC"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "D82E3962"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "D82E3962"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "EA1B28E0"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "F1CDDD55"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "F7C618C1"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "F908DC13"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "8DFB2DBC"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "9AAE43F5"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "A694FC3A"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "B60F75D8"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "CD5692EE"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "3CCFD60B"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "3CCFD60B"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "40F02AB6"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "6747DD0E"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "16934FC4"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "23DCDB89"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "240BE944"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "292A6B19"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "375B3C0A"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 6120,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 663,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 663,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 663,
											"end": 704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2872,
											"end": 3052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2872,
											"end": 3052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 711,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 711,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 429,
											"end": 464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 429,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 429,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 429,
											"end": 464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 464,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 429,
											"end": 464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 429,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 429,
											"end": 464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 429,
											"end": 464,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 866,
											"end": 889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 866,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 866,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 866,
											"end": 889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 866,
											"end": 889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 866,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 866,
											"end": 889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 866,
											"end": 889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4552,
											"end": 5293,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4552,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4552,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4552,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 4552,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4552,
											"end": 5293,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4552,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4552,
											"end": 5293,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 772,
											"end": 800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 772,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 772,
											"end": 800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 772,
											"end": 800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 800,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 772,
											"end": 800,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 772,
											"end": 800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 772,
											"end": 800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 772,
											"end": 800,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2514,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2514,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 5324,
											"end": 5427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 5324,
											"end": 5427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 5324,
											"end": 5427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 5435,
											"end": 5571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5435,
											"end": 5571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 5435,
											"end": 5571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 573,
											"end": 610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 573,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 573,
											"end": 610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 573,
											"end": 610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 610,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 573,
											"end": 610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 573,
											"end": 610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 573,
											"end": 610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 610,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3202,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3202,
											"end": 3743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 617,
											"end": 654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 617,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 617,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 617,
											"end": 654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 654,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 617,
											"end": 654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 617,
											"end": 654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 617,
											"end": 654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 617,
											"end": 654,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 2705,
											"end": 2864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 2705,
											"end": 2864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3886,
											"end": 4503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 3886,
											"end": 4503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 3886,
											"end": 4503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 836,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 836,
											"end": 859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 3060,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3060,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 529,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 494,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 494,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 896,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 896,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 896,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 896,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 918,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 896,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 896,
											"end": 918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 896,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 896,
											"end": 918,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 663,
											"end": 704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2965,
											"end": 2966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2962,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2966,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2991,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2991,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2953,
											"end": 2991,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2991,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 2991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2983,
											"end": 2991,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2991,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2991,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 2953,
											"end": 2991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 2945,
											"end": 3013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2945,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3035,
											"end": 3044,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3032,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3024,
											"end": 3044,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3044,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3044,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3024,
											"end": 3044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2872,
											"end": 3052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 763,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 711,
											"end": 763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 429,
											"end": 464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "905"
										},
										{
											"begin": 429,
											"end": 464,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 429,
											"end": 464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 866,
											"end": 889,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 866,
											"end": 889,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 866,
											"end": 889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4552,
											"end": 5293,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 4552,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4605,
											"end": 4617,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4620,
											"end": 4630,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4605,
											"end": 4630,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4605,
											"end": 4630,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4641,
											"end": 4655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4658,
											"end": 4664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4669,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4658,
											"end": 4670,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4641,
											"end": 4670,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4641,
											"end": 4670,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4698,
											"end": 4699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4695,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4689,
											"end": 4699,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 4681,
											"end": 4718,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 4681,
											"end": 4718,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4737,
											"end": 4747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4747,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4737,
											"end": 4747,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4747,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4747,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4747,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4737,
											"end": 4747,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4737,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4796,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4796,
											"end": 4809,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4792,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4793,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4770,
											"end": 4809,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 4770,
											"end": 4809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 4770,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4751,
											"end": 4766,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4751,
											"end": 4809,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4751,
											"end": 4809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4737,
											"end": 4809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4737,
											"end": 4809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 4729,
											"end": 4826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4729,
											"end": 4826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 4878,
											"end": 4882,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4862,
											"end": 4877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4862,
											"end": 4883,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4862,
											"end": 4883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 4862,
											"end": 4883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4883,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4883,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4911,
											"end": 4912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4902,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4903,
											"end": 4907,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4908,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4912,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4896,
											"end": 4912,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4949,
											"end": 4950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4945,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4946,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4950,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4950,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4950,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5001,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 4988,
											"end": 4992,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4994,
											"end": 5000,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "905"
										},
										{
											"begin": 4963,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4963,
											"end": 4987,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 4963,
											"end": 4987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5001,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5001,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5001,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4963,
											"end": 5001,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5001,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4963,
											"end": 5001,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 4963,
											"end": 5001,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5033,
											"end": 5034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5018,
											"end": 5030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5018,
											"end": 5034,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5214,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5214,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5014,
											"end": 5214,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5111,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5070,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "908"
										},
										{
											"begin": 5059,
											"end": 5080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5059,
											"end": 5080,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5080,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 5089,
											"end": 5093,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 5059,
											"end": 5095,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 5059,
											"end": 5095,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 5059,
											"end": 5095,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5111,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5059,
											"end": 5111,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 5051,
											"end": 5143,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 5051,
											"end": 5143,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 5183,
											"end": 5187,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5189,
											"end": 5201,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5169,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "908"
										},
										{
											"begin": 5158,
											"end": 5182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5158,
											"end": 5182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 5158,
											"end": 5182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5202,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5202,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5202,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5158,
											"end": 5202,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5202,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5202,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 5158,
											"end": 5202,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5014,
											"end": 5214,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 5014,
											"end": 5214,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5241,
											"end": 5245,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "75E161B3E824B114FC1A33274BD7091918DD4E639CEDE50B78B15A4EEA956A21"
										},
										{
											"begin": 5247,
											"end": 5253,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5255,
											"end": 5267,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5269,
											"end": 5284,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 5231,
											"end": 5285,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5231,
											"end": 5285,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 5293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 5293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4594,
											"end": 5293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 5293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 772,
											"end": 800,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 772,
											"end": 800,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 772,
											"end": 800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2618,
											"end": 2619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2603,
											"end": 2619,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2595,
											"end": 2650,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2595,
											"end": 2650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2677,
											"end": 2689,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2661,
											"end": 2689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2689,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2661,
											"end": 2689,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2514,
											"end": 2697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5380,
											"end": 5387,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5413,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5419,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5400,
											"end": 5419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5324,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5497,
											"end": 5504,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5563,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5550,
											"end": 5563,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5541,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5542,
											"end": 5546,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5547,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 5524,
											"end": 5563,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5563,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 5524,
											"end": 5563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5563,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 5524,
											"end": 5563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5563,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5563,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 573,
											"end": 610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "910"
										},
										{
											"begin": 573,
											"end": 610,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 573,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3266,
											"end": 3278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3281,
											"end": 3291,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3266,
											"end": 3291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3266,
											"end": 3291,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3326,
											"end": 3327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3322,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3310,
											"end": 3327,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 3302,
											"end": 3347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 3302,
											"end": 3347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3376,
											"end": 3384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3376,
											"end": 3384,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3372,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3384,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3366,
											"end": 3384,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3358,
											"end": 3410,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3358,
											"end": 3410,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3439,
											"end": 3447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3439,
											"end": 3447,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3435,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3447,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3429,
											"end": 3447,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 3421,
											"end": 3475,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 3421,
											"end": 3475,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3495,
											"end": 3505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3495,
											"end": 3505,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3505,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3505,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3495,
											"end": 3505,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3505,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3505,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3495,
											"end": 3505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3495,
											"end": 3505,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3494,
											"end": 3505,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 3486,
											"end": 3524,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3486,
											"end": 3524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3548,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3549,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3558,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3558,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3595,
											"end": 3610,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3587,
											"end": 3591,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3592,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3610,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3569,
											"end": 3610,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 3652,
											"end": 3656,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3666,
											"end": 3670,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3673,
											"end": 3679,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3634,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "905"
										},
										{
											"begin": 3623,
											"end": 3651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3623,
											"end": 3651,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 3623,
											"end": 3651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3680,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3680,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3680,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3680,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3623,
											"end": 3680,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3680,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3623,
											"end": 3680,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 3623,
											"end": 3680,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
										},
										{
											"begin": 3711,
											"end": 3717,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3719,
											"end": 3734,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 3698,
											"end": 3735,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3735,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3743,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3202,
											"end": 3743,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 617,
											"end": 654,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "912"
										},
										{
											"begin": 617,
											"end": 654,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 617,
											"end": 654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2795,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2786,
											"end": 2799,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 2778,
											"end": 2825,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 2778,
											"end": 2825,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2847,
											"end": 2856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2836,
											"end": 2856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2856,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2836,
											"end": 2856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 3953,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3980,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 3989,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 3994,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 3995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3966,
											"end": 3995,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4021,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4021,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4006,
											"end": 4031,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4030,
											"end": 4031,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4023,
											"end": 4031,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4023,
											"end": 4031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4023,
											"end": 4031,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4023,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 4023,
											"end": 4031,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4031,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4006,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4095,
											"end": 4118,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4121,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4140,
											"end": 4146,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4162,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "910"
										},
										{
											"begin": 4164,
											"end": 4166,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4121,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4121,
											"end": 4167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4121,
											"end": 4167,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4121,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4095,
											"end": 4167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4095,
											"end": 4167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4262,
											"end": 4286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4316,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4290,
											"end": 4305,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4290,
											"end": 4309,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4309,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4290,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4309,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4290,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 4289,
											"end": 4316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 4289,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4262,
											"end": 4316,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4262,
											"end": 4316,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4386,
											"end": 4406,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 4428,
											"end": 4444,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4446,
											"end": 4448,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4450,
											"end": 4464,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "912"
										},
										{
											"begin": 4409,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4409,
											"end": 4465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4409,
											"end": 4465,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 4409,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4386,
											"end": 4465,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4386,
											"end": 4465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4483,
											"end": 4495,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4476,
											"end": 4495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "tag",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3886,
											"end": 4503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 836,
											"end": 859,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 836,
											"end": 859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3158,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3134,
											"end": 3144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3158,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3060,
											"end": 3166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 529,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "908"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 494,
											"end": 529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 896,
											"end": 918,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 896,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 896,
											"end": 918,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 896,
											"end": 918,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 896,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 6117,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 5684,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5823,
											"end": 5830,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5863,
											"end": 5873,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5873,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5847,
											"end": 5873,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5859,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5873,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5847,
											"end": 5873,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5873,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5843,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 5843,
											"end": 6110,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5897,
											"end": 5903,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 5903,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 5903,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5890,
											"end": 5903,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5843,
											"end": 6110,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 5843,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5940,
											"end": 5950,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5950,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5925,
											"end": 5950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5937,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5950,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5925,
											"end": 5950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5925,
											"end": 5950,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5921,
											"end": 6110,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5921,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5921,
											"end": 6110,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6004,
											"end": 6014,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6001,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5989,
											"end": 6014,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 5989,
											"end": 6014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5989,
											"end": 6014,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 5989,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 5986,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5984,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5984,
											"end": 6015,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 6015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 5984,
											"end": 6015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 6015,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 5984,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 5980,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 5974,
											"end": 6016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 5974,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5967,
											"end": 6016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5967,
											"end": 6016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5967,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5967,
											"end": 6016,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5921,
											"end": 6110,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 5921,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6096,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6071,
											"end": 6096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6096,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6096,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 6071,
											"end": 6096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6096,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 6071,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6068,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6066,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 6066,
											"end": 6097,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6097,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 6066,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6066,
											"end": 6097,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 6066,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6062,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6056,
											"end": 6098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 6056,
											"end": 6098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6056,
											"end": 6098,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 6056,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6049,
											"end": 6098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6049,
											"end": 6098,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 6117,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 5684,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 6117,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 6117,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 6117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 6117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 6117,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 6117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "249"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 10,
											"value": "316"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2395,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2368,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "tag",
											"source": 10,
											"value": "328"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 2516,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2433,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 2662,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 2812,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2711,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2983,
											"end": 2987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3118,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 3034,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2876,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 3219,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3214,
											"end": 3217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3470,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3400,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "tag",
											"source": 10,
											"value": "342"
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3256,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3570,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3484,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3519,
											"end": 3526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3563,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3552,
											"end": 3557,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3564,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3564,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3537,
											"end": 3564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3570,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3570,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3484,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3688,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3576,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3675,
											"end": 3680,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 3659,
											"end": 3681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "tag",
											"source": 10,
											"value": "345"
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3654,
											"end": 3657,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3682,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3688,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3908,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 3694,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3783,
											"end": 3787,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3823,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3810,
											"end": 3819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3806,
											"end": 3824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3824,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3898,
											"end": 3899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3887,
											"end": 3896,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3883,
											"end": 3900,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3834,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 3901,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 3834,
											"end": 3901,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3908,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3908,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3914,
											"end": 4004,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 3914,
											"end": 4004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 3996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3984,
											"end": 3997,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3977,
											"end": 3998,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3966,
											"end": 3998,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3966,
											"end": 3998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3914,
											"end": 4004,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3914,
											"end": 4004,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3914,
											"end": 4004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3914,
											"end": 4004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4126,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4010,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4095,
											"end": 4100,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4080,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4101,
											"name": "tag",
											"source": 10,
											"value": "350"
										},
										{
											"begin": 4080,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4073,
											"end": 4078,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4070,
											"end": 4102,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 4060,
											"end": 4120,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4116,
											"end": 4117,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4113,
											"end": 4114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4120,
											"name": "tag",
											"source": 10,
											"value": "351"
										},
										{
											"begin": 4060,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4126,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4010,
											"end": 4126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4132,
											"end": 4265,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4132,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4175,
											"end": 4180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4219,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4200,
											"end": 4220,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4253,
											"end": 4258,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 4229,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4259,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 4229,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4132,
											"end": 4265,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4132,
											"end": 4265,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4132,
											"end": 4265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4132,
											"end": 4265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4132,
											"end": 4265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4594,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 4271,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4327,
											"end": 4333,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4364,
											"end": 4373,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4362,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4374,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4347,
											"end": 4379,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 4382,
											"end": 4461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "tag",
											"source": 10,
											"value": "356"
										},
										{
											"begin": 4382,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 4344,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4502,
											"end": 4503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4560,
											"end": 4566,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4549,
											"end": 4558,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4545,
											"end": 4567,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 4527,
											"end": 4577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4577,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 4527,
											"end": 4577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4577,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4517,
											"end": 4577,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4473,
											"end": 4587,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4594,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4594,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4594,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4271,
											"end": 4594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4709,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4600,
											"end": 4709,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4681,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 4696,
											"end": 4701,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4681,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 4681,
											"end": 4702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4681,
											"end": 4702,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 4681,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4676,
											"end": 4679,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4669,
											"end": 4703,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4600,
											"end": 4709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4925,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 4715,
											"end": 4925,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4802,
											"end": 4806,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4840,
											"end": 4842,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4829,
											"end": 4838,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4843,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 4843,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4817,
											"end": 4843,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 4915,
											"end": 4916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4913,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4900,
											"end": 4917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4891,
											"end": 4897,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 4853,
											"end": 4918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4853,
											"end": 4918,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 4853,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4925,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4925,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4925,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4715,
											"end": 4925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5100,
											"name": "tag",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 4931,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5015,
											"end": 5026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5049,
											"end": 5055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5044,
											"end": 5047,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5037,
											"end": 5056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5089,
											"end": 5093,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5084,
											"end": 5087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5080,
											"end": 5094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5065,
											"end": 5094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5065,
											"end": 5094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5100,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5100,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5100,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5273,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5106,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5246,
											"end": 5265,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C6964206D696E207374616B65000000000000000000000000000000"
										},
										{
											"begin": 5242,
											"end": 5243,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5240,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5230,
											"end": 5244,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5223,
											"end": 5266,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5645,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5279,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5421,
											"end": 5424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 5506,
											"end": 5508,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5501,
											"end": 5504,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5509,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 5442,
											"end": 5509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5509,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 5442,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5509,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5435,
											"end": 5509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 5607,
											"end": 5610,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 5518,
											"end": 5611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5518,
											"end": 5611,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 5518,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5636,
											"end": 5638,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5631,
											"end": 5634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5627,
											"end": 5639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5620,
											"end": 5639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5645,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5645,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5645,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5279,
											"end": 5645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 6070,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 5651,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5821,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5855,
											"end": 5857,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5844,
											"end": 5853,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5832,
											"end": 5858,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5832,
											"end": 5858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5904,
											"end": 5913,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5898,
											"end": 5902,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5894,
											"end": 5914,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5890,
											"end": 5891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5879,
											"end": 5888,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5892,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5868,
											"end": 5915,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 6063,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 5932,
											"end": 6063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5932,
											"end": 6063,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 5932,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5924,
											"end": 6063,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5924,
											"end": 6063,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 6070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 6070,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 6070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5651,
											"end": 6070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6076,
											"end": 6240,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 6076,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6216,
											"end": 6232,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F207374616B6520666F756E64000000000000000000000000000000000000"
										},
										{
											"begin": 6212,
											"end": 6213,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6210,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6200,
											"end": 6214,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6193,
											"end": 6233,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6076,
											"end": 6240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6076,
											"end": 6240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6246,
											"end": 6612,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 6246,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6388,
											"end": 6391,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6409,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 6473,
											"end": 6475,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 6468,
											"end": 6471,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6409,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 6409,
											"end": 6476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6409,
											"end": 6476,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 6409,
											"end": 6476,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6476,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6476,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 6574,
											"end": 6577,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 6485,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6485,
											"end": 6578,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 6485,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6603,
											"end": 6605,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6598,
											"end": 6601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6594,
											"end": 6606,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6587,
											"end": 6606,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6587,
											"end": 6606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6246,
											"end": 6612,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6246,
											"end": 6612,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6246,
											"end": 6612,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6246,
											"end": 6612,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 7037,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 6618,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6784,
											"end": 6788,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6820,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6807,
											"end": 6825,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6799,
											"end": 6825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6799,
											"end": 6825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6871,
											"end": 6880,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6869,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6861,
											"end": 6881,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6857,
											"end": 6858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6846,
											"end": 6855,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6842,
											"end": 6859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6835,
											"end": 6882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 7025,
											"end": 7029,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 6899,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6899,
											"end": 7030,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 6899,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6891,
											"end": 7030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6891,
											"end": 7030,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 7037,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 7037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 7037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6618,
											"end": 7037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7043,
											"end": 7223,
											"name": "tag",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 7043,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7091,
											"end": 7168,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7088,
											"end": 7089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7081,
											"end": 7169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7188,
											"end": 7192,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7185,
											"end": 7186,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7178,
											"end": 7193,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7212,
											"end": 7216,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7209,
											"end": 7210,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7202,
											"end": 7217,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7420,
											"name": "tag",
											"source": 10,
											"value": "122"
										},
										{
											"begin": 7229,
											"end": 7420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7269,
											"end": 7272,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 7306,
											"end": 7307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 7288,
											"end": 7308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7288,
											"end": 7308,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 7288,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7283,
											"end": 7308,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7283,
											"end": 7308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7322,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 7340,
											"end": 7341,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7322,
											"end": 7342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 7322,
											"end": 7342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7322,
											"end": 7342,
											"name": "tag",
											"source": 10,
											"value": "378"
										},
										{
											"begin": 7322,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7317,
											"end": 7342,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7317,
											"end": 7342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7365,
											"end": 7366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7362,
											"end": 7363,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7358,
											"end": 7367,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7351,
											"end": 7367,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7351,
											"end": 7367,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7386,
											"end": 7389,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7384,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7380,
											"end": 7390,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 7393,
											"end": 7411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "tag",
											"source": 10,
											"value": "380"
										},
										{
											"begin": 7393,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 7377,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7420,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7420,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7420,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7229,
											"end": 7420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7588,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 7426,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7566,
											"end": 7580,
											"name": "PUSH",
											"source": 10,
											"value": "5374616B65206C6F636B65640000000000000000000000000000000000000000"
										},
										{
											"begin": 7562,
											"end": 7563,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7554,
											"end": 7560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7550,
											"end": 7564,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7543,
											"end": 7581,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7588,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7426,
											"end": 7588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7594,
											"end": 7960,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 7594,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7736,
											"end": 7739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7757,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 7821,
											"end": 7823,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 7816,
											"end": 7819,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7757,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 7757,
											"end": 7824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7757,
											"end": 7824,
											"name": "tag",
											"source": 10,
											"value": "383"
										},
										{
											"begin": 7757,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7750,
											"end": 7824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7750,
											"end": 7824,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 7922,
											"end": 7925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 7833,
											"end": 7926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7833,
											"end": 7926,
											"name": "tag",
											"source": 10,
											"value": "384"
										},
										{
											"begin": 7833,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7951,
											"end": 7953,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7946,
											"end": 7949,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7942,
											"end": 7954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 7954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7935,
											"end": 7954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7594,
											"end": 7960,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7594,
											"end": 7960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7594,
											"end": 7960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7594,
											"end": 7960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7966,
											"end": 8385,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 7966,
											"end": 8385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8170,
											"end": 8172,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8159,
											"end": 8168,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8147,
											"end": 8173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8147,
											"end": 8173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8219,
											"end": 8228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8213,
											"end": 8217,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8209,
											"end": 8229,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8205,
											"end": 8206,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8194,
											"end": 8203,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8190,
											"end": 8207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8183,
											"end": 8230,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8247,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 8373,
											"end": 8377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8247,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 8247,
											"end": 8378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8247,
											"end": 8378,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 8247,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8239,
											"end": 8378,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8239,
											"end": 8378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7966,
											"end": 8385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7966,
											"end": 8385,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7966,
											"end": 8385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7966,
											"end": 8385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8391,
											"end": 8534,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 8391,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8448,
											"end": 8453,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8479,
											"end": 8485,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8486,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8464,
											"end": 8486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8464,
											"end": 8486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8495,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 8522,
											"end": 8527,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8495,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 8495,
											"end": 8528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8495,
											"end": 8528,
											"name": "tag",
											"source": 10,
											"value": "388"
										},
										{
											"begin": 8495,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8391,
											"end": 8534,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8391,
											"end": 8534,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8391,
											"end": 8534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8391,
											"end": 8534,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8391,
											"end": 8534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8540,
											"end": 8891,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 8540,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8610,
											"end": 8616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8659,
											"end": 8661,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8647,
											"end": 8656,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8638,
											"end": 8645,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8634,
											"end": 8657,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8630,
											"end": 8662,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8627,
											"end": 8746,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8627,
											"end": 8746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 8627,
											"end": 8746,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 8665,
											"end": 8744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 8665,
											"end": 8744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8665,
											"end": 8744,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 8665,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8627,
											"end": 8746,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 8627,
											"end": 8746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8786,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8810,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 8866,
											"end": 8873,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8857,
											"end": 8863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8846,
											"end": 8855,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8842,
											"end": 8864,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 8810,
											"end": 8874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8810,
											"end": 8874,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 8810,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8874,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8800,
											"end": 8874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8756,
											"end": 8884,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8540,
											"end": 8891,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8540,
											"end": 8891,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8540,
											"end": 8891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8540,
											"end": 8891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8540,
											"end": 8891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 9074,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 8897,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9066,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E74207265776172642062616C616E63650000000000"
										},
										{
											"begin": 9033,
											"end": 9034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9025,
											"end": 9031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9021,
											"end": 9035,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9014,
											"end": 9067,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 9074,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 9074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9080,
											"end": 9446,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 9080,
											"end": 9446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9222,
											"end": 9225,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9243,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 9307,
											"end": 9309,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 9302,
											"end": 9305,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9243,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 9243,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9243,
											"end": 9310,
											"name": "tag",
											"source": 10,
											"value": "395"
										},
										{
											"begin": 9243,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9236,
											"end": 9310,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9236,
											"end": 9310,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9319,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 9408,
											"end": 9411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9319,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 9319,
											"end": 9412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9319,
											"end": 9412,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 9319,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9437,
											"end": 9439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9432,
											"end": 9435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9428,
											"end": 9440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9421,
											"end": 9440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9080,
											"end": 9446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9080,
											"end": 9446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9080,
											"end": 9446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9080,
											"end": 9446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9452,
											"end": 9871,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 9452,
											"end": 9871,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9618,
											"end": 9622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9656,
											"end": 9658,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9645,
											"end": 9654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9641,
											"end": 9659,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9633,
											"end": 9659,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9633,
											"end": 9659,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9705,
											"end": 9714,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9699,
											"end": 9703,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9695,
											"end": 9715,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9691,
											"end": 9692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9680,
											"end": 9689,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9676,
											"end": 9693,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9669,
											"end": 9716,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9733,
											"end": 9864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 9859,
											"end": 9863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9733,
											"end": 9864,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 9733,
											"end": 9864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9733,
											"end": 9864,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 9733,
											"end": 9864,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9725,
											"end": 9864,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9725,
											"end": 9864,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9452,
											"end": 9871,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9452,
											"end": 9871,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9452,
											"end": 9871,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9452,
											"end": 9871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 10319,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 9877,
											"end": 10319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10026,
											"end": 10030,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10066,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10053,
											"end": 10062,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10041,
											"end": 10067,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10041,
											"end": 10067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10077,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 10145,
											"end": 10146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10143,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10130,
											"end": 10147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10121,
											"end": 10127,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10077,
											"end": 10148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 10077,
											"end": 10148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10077,
											"end": 10148,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 10077,
											"end": 10148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10158,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 10226,
											"end": 10228,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10215,
											"end": 10224,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10202,
											"end": 10208,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10158,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 10158,
											"end": 10230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10158,
											"end": 10230,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 10158,
											"end": 10230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10240,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 10308,
											"end": 10310,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10297,
											"end": 10306,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10293,
											"end": 10311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10290,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10240,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 10240,
											"end": 10312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10240,
											"end": 10312,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 10240,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 10319,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 10319,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 10319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 10319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 10319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 10319,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9877,
											"end": 10319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10325,
											"end": 10501,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 10325,
											"end": 10501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10465,
											"end": 10493,
											"name": "PUSH",
											"source": 10,
											"value": "5374616B65206475726174696F6E206D757374206265203E2030000000000000"
										},
										{
											"begin": 10461,
											"end": 10462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10453,
											"end": 10459,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10449,
											"end": 10463,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10442,
											"end": 10494,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10325,
											"end": 10501,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10325,
											"end": 10501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10873,
											"name": "tag",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 10507,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10649,
											"end": 10652,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10670,
											"end": 10737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 10734,
											"end": 10736,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 10729,
											"end": 10732,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10670,
											"end": 10737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 10670,
											"end": 10737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10670,
											"end": 10737,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 10670,
											"end": 10737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10663,
											"end": 10737,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10663,
											"end": 10737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10746,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 10835,
											"end": 10838,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10746,
											"end": 10839,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 10746,
											"end": 10839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10746,
											"end": 10839,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 10746,
											"end": 10839,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10864,
											"end": 10866,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10859,
											"end": 10862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10855,
											"end": 10867,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10848,
											"end": 10867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10848,
											"end": 10867,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10873,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10873,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10507,
											"end": 10873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10879,
											"end": 11298,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 10879,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11045,
											"end": 11049,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11083,
											"end": 11085,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11072,
											"end": 11081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11060,
											"end": 11086,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11060,
											"end": 11086,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11132,
											"end": 11141,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11126,
											"end": 11130,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11122,
											"end": 11142,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11118,
											"end": 11119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11107,
											"end": 11116,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11103,
											"end": 11120,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11096,
											"end": 11143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11160,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 11286,
											"end": 11290,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11160,
											"end": 11291,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "279"
										},
										{
											"begin": 11160,
											"end": 11291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11160,
											"end": 11291,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 11160,
											"end": 11291,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11152,
											"end": 11291,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11152,
											"end": 11291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10879,
											"end": 11298,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10879,
											"end": 11298,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10879,
											"end": 11298,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10879,
											"end": 11298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11304,
											"end": 11469,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 11304,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11444,
											"end": 11461,
											"name": "PUSH",
											"source": 10,
											"value": "416C7265616479207374616B696E670000000000000000000000000000000000"
										},
										{
											"begin": 11440,
											"end": 11441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11428,
											"end": 11442,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11421,
											"end": 11462,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11304,
											"end": 11469,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11304,
											"end": 11469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11841,
											"name": "tag",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 11475,
											"end": 11841,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11617,
											"end": 11620,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11638,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 11702,
											"end": 11704,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 11697,
											"end": 11700,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11638,
											"end": 11705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 11638,
											"end": 11705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11638,
											"end": 11705,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 11638,
											"end": 11705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11631,
											"end": 11705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11631,
											"end": 11705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11714,
											"end": 11807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 11803,
											"end": 11806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11714,
											"end": 11807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 11714,
											"end": 11807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11714,
											"end": 11807,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 11714,
											"end": 11807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11832,
											"end": 11834,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11827,
											"end": 11830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11823,
											"end": 11835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11816,
											"end": 11835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11816,
											"end": 11835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11475,
											"end": 11841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11847,
											"end": 12266,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 11847,
											"end": 12266,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12013,
											"end": 12017,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12051,
											"end": 12053,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12040,
											"end": 12049,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12036,
											"end": 12054,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12028,
											"end": 12054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12100,
											"end": 12109,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12094,
											"end": 12098,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12090,
											"end": 12110,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12086,
											"end": 12087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12075,
											"end": 12084,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12071,
											"end": 12088,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12064,
											"end": 12111,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12128,
											"end": 12259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 12254,
											"end": 12258,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12128,
											"end": 12259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "281"
										},
										{
											"begin": 12128,
											"end": 12259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12128,
											"end": 12259,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 12128,
											"end": 12259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12120,
											"end": 12259,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12120,
											"end": 12259,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11847,
											"end": 12266,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11847,
											"end": 12266,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11847,
											"end": 12266,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11847,
											"end": 12266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12272,
											"end": 12443,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 12272,
											"end": 12443,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12412,
											"end": 12435,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E742062656C6F77206D696E5374616B650000000000000000000000"
										},
										{
											"begin": 12408,
											"end": 12409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12400,
											"end": 12406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12396,
											"end": 12410,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12389,
											"end": 12436,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12272,
											"end": 12443,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12272,
											"end": 12443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12449,
											"end": 12815,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 12449,
											"end": 12815,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12591,
											"end": 12594,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12612,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 12676,
											"end": 12678,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 12671,
											"end": 12674,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12612,
											"end": 12679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 12612,
											"end": 12679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12612,
											"end": 12679,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 12612,
											"end": 12679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12605,
											"end": 12679,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12605,
											"end": 12679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 12777,
											"end": 12780,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12781,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 12688,
											"end": 12781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12688,
											"end": 12781,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 12688,
											"end": 12781,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12806,
											"end": 12808,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12801,
											"end": 12804,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12797,
											"end": 12809,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12790,
											"end": 12809,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12790,
											"end": 12809,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12449,
											"end": 12815,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12449,
											"end": 12815,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12449,
											"end": 12815,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12449,
											"end": 12815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12821,
											"end": 13240,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 12821,
											"end": 13240,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12987,
											"end": 12991,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13025,
											"end": 13027,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13014,
											"end": 13023,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13010,
											"end": 13028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13002,
											"end": 13028,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13002,
											"end": 13028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13074,
											"end": 13083,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13068,
											"end": 13072,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13064,
											"end": 13084,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13060,
											"end": 13061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13049,
											"end": 13058,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13045,
											"end": 13062,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13038,
											"end": 13085,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13102,
											"end": 13233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 13228,
											"end": 13232,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13102,
											"end": 13233,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 13102,
											"end": 13233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13102,
											"end": 13233,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 13102,
											"end": 13233,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13094,
											"end": 13233,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13094,
											"end": 13233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12821,
											"end": 13240,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12821,
											"end": 13240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12821,
											"end": 13240,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12821,
											"end": 13240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13246,
											"end": 13419,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 13246,
											"end": 13419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13386,
											"end": 13411,
											"name": "PUSH",
											"source": 10,
											"value": "416D6F756E742065786365656473206D61785374616B65000000000000000000"
										},
										{
											"begin": 13382,
											"end": 13383,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13374,
											"end": 13380,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13370,
											"end": 13384,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13363,
											"end": 13412,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13246,
											"end": 13419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13246,
											"end": 13419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13425,
											"end": 13791,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 13425,
											"end": 13791,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13567,
											"end": 13570,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13588,
											"end": 13655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 13652,
											"end": 13654,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 13647,
											"end": 13650,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 13588,
											"end": 13655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13588,
											"end": 13655,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 13588,
											"end": 13655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13581,
											"end": 13655,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13581,
											"end": 13655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13664,
											"end": 13757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 13753,
											"end": 13756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13664,
											"end": 13757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 13664,
											"end": 13757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13664,
											"end": 13757,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 13664,
											"end": 13757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13782,
											"end": 13784,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13777,
											"end": 13780,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13773,
											"end": 13785,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13766,
											"end": 13785,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13766,
											"end": 13785,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13425,
											"end": 13791,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13425,
											"end": 13791,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13425,
											"end": 13791,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13425,
											"end": 13791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13797,
											"end": 14216,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 13797,
											"end": 14216,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13963,
											"end": 13967,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14001,
											"end": 14003,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13990,
											"end": 13999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13986,
											"end": 14004,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13978,
											"end": 14004,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13978,
											"end": 14004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14050,
											"end": 14059,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14044,
											"end": 14048,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14040,
											"end": 14060,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14036,
											"end": 14037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14025,
											"end": 14034,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14021,
											"end": 14038,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14014,
											"end": 14061,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14078,
											"end": 14209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 14204,
											"end": 14208,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14078,
											"end": 14209,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 14078,
											"end": 14209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14078,
											"end": 14209,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 14078,
											"end": 14209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14070,
											"end": 14209,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14070,
											"end": 14209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13797,
											"end": 14216,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13797,
											"end": 14216,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13797,
											"end": 14216,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13797,
											"end": 14216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14222,
											"end": 14386,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 14222,
											"end": 14386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14362,
											"end": 14378,
											"name": "PUSH",
											"source": 10,
											"value": "5374616B696E67206C6F636B6564000000000000000000000000000000000000"
										},
										{
											"begin": 14358,
											"end": 14359,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14350,
											"end": 14356,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14346,
											"end": 14360,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14339,
											"end": 14379,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14222,
											"end": 14386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14222,
											"end": 14386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14392,
											"end": 14758,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 14392,
											"end": 14758,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14534,
											"end": 14537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14555,
											"end": 14622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 14619,
											"end": 14621,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 14614,
											"end": 14617,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14555,
											"end": 14622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 14555,
											"end": 14622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14555,
											"end": 14622,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 14555,
											"end": 14622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14548,
											"end": 14622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14548,
											"end": 14622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14631,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 14720,
											"end": 14723,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14631,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 14631,
											"end": 14724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14631,
											"end": 14724,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 14631,
											"end": 14724,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14749,
											"end": 14751,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14744,
											"end": 14747,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14740,
											"end": 14752,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14733,
											"end": 14752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14733,
											"end": 14752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14392,
											"end": 14758,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14392,
											"end": 14758,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14392,
											"end": 14758,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14392,
											"end": 14758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14764,
											"end": 15183,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 14764,
											"end": 15183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14930,
											"end": 14934,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14968,
											"end": 14970,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14957,
											"end": 14966,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14953,
											"end": 14971,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14945,
											"end": 14971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14945,
											"end": 14971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15017,
											"end": 15026,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15011,
											"end": 15015,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15007,
											"end": 15027,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15003,
											"end": 15004,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14992,
											"end": 15001,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14988,
											"end": 15005,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14981,
											"end": 15028,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15045,
											"end": 15176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 15171,
											"end": 15175,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15045,
											"end": 15176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 15045,
											"end": 15176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15045,
											"end": 15176,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 15045,
											"end": 15176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15037,
											"end": 15176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15037,
											"end": 15176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14764,
											"end": 15183,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14764,
											"end": 15183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14764,
											"end": 15183,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14764,
											"end": 15183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15521,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 15189,
											"end": 15521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15310,
											"end": 15314,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15348,
											"end": 15350,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 15337,
											"end": 15346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15333,
											"end": 15351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15325,
											"end": 15351,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15325,
											"end": 15351,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15361,
											"end": 15432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 15429,
											"end": 15430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15418,
											"end": 15427,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15414,
											"end": 15431,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15405,
											"end": 15411,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15361,
											"end": 15432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 15361,
											"end": 15432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15361,
											"end": 15432,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 15361,
											"end": 15432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15442,
											"end": 15514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 15510,
											"end": 15512,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15499,
											"end": 15508,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15495,
											"end": 15513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15486,
											"end": 15492,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15442,
											"end": 15514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 15442,
											"end": 15514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15442,
											"end": 15514,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 15442,
											"end": 15514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15521,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15521,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15189,
											"end": 15521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15527,
											"end": 15698,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 15527,
											"end": 15698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15667,
											"end": 15690,
											"name": "PUSH",
											"source": 10,
											"value": "4D6178207374616B65206D757374206265203E20300000000000000000000000"
										},
										{
											"begin": 15663,
											"end": 15664,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15655,
											"end": 15661,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15651,
											"end": 15665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15644,
											"end": 15691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15527,
											"end": 15698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15527,
											"end": 15698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15704,
											"end": 16070,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 15704,
											"end": 16070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15846,
											"end": 15849,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15867,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 15931,
											"end": 15933,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 15926,
											"end": 15929,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15867,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 15867,
											"end": 15934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15867,
											"end": 15934,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 15867,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15860,
											"end": 15934,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15860,
											"end": 15934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 16036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 16032,
											"end": 16035,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 16036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 15943,
											"end": 16036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 16036,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 15943,
											"end": 16036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16061,
											"end": 16063,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16056,
											"end": 16059,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16052,
											"end": 16064,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16045,
											"end": 16064,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16045,
											"end": 16064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15704,
											"end": 16070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15704,
											"end": 16070,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15704,
											"end": 16070,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15704,
											"end": 16070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16076,
											"end": 16495,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 16076,
											"end": 16495,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16242,
											"end": 16246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16280,
											"end": 16282,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16269,
											"end": 16278,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16265,
											"end": 16283,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16257,
											"end": 16283,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16257,
											"end": 16283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16329,
											"end": 16338,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16323,
											"end": 16327,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16319,
											"end": 16339,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16315,
											"end": 16316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16304,
											"end": 16313,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16300,
											"end": 16317,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16293,
											"end": 16340,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16357,
											"end": 16488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 16483,
											"end": 16487,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16357,
											"end": 16488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 16357,
											"end": 16488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16357,
											"end": 16488,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 16357,
											"end": 16488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16349,
											"end": 16488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16349,
											"end": 16488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16076,
											"end": 16495,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16076,
											"end": 16495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16076,
											"end": 16495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16076,
											"end": 16495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16501,
											"end": 16911,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 16501,
											"end": 16911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16541,
											"end": 16548,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16564,
											"end": 16584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 16582,
											"end": 16583,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16564,
											"end": 16584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 16564,
											"end": 16584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16564,
											"end": 16584,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 16564,
											"end": 16584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16559,
											"end": 16584,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16559,
											"end": 16584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16598,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 16616,
											"end": 16617,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16598,
											"end": 16618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 16598,
											"end": 16618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16598,
											"end": 16618,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 16598,
											"end": 16618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16593,
											"end": 16618,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16593,
											"end": 16618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16653,
											"end": 16654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16650,
											"end": 16651,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16646,
											"end": 16655,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 16675,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 16693,
											"end": 16704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16675,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 16675,
											"end": 16705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16675,
											"end": 16705,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 16675,
											"end": 16705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16664,
											"end": 16705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16664,
											"end": 16705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16854,
											"end": 16855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16845,
											"end": 16852,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16841,
											"end": 16856,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 16838,
											"end": 16839,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16835,
											"end": 16857,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16815,
											"end": 16816,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16808,
											"end": 16817,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16788,
											"end": 16871,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 16765,
											"end": 16904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 16765,
											"end": 16904,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16884,
											"end": 16902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 16884,
											"end": 16902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 16884,
											"end": 16902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16884,
											"end": 16902,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 16884,
											"end": 16902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16765,
											"end": 16904,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 16765,
											"end": 16904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16549,
											"end": 16911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16501,
											"end": 16911,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 16501,
											"end": 16911,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16501,
											"end": 16911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16501,
											"end": 16911,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16501,
											"end": 16911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16917,
											"end": 17097,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 16917,
											"end": 17097,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16965,
											"end": 17042,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16962,
											"end": 16963,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16955,
											"end": 17043,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17062,
											"end": 17066,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 17059,
											"end": 17060,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17052,
											"end": 17067,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17086,
											"end": 17090,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17083,
											"end": 17084,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17076,
											"end": 17091,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17103,
											"end": 17288,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 17103,
											"end": 17288,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17143,
											"end": 17144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17160,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 17178,
											"end": 17179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17160,
											"end": 17180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 17160,
											"end": 17180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17160,
											"end": 17180,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 17160,
											"end": 17180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17155,
											"end": 17180,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17155,
											"end": 17180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17194,
											"end": 17214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 17212,
											"end": 17213,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17194,
											"end": 17214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 17194,
											"end": 17214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17194,
											"end": 17214,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 17194,
											"end": 17214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17189,
											"end": 17214,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17189,
											"end": 17214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17233,
											"end": 17234,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17223,
											"end": 17258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 17223,
											"end": 17258,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17238,
											"end": 17256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 17238,
											"end": 17256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 17238,
											"end": 17256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17238,
											"end": 17256,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 17238,
											"end": 17256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17223,
											"end": 17258,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 17223,
											"end": 17258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17280,
											"end": 17281,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17277,
											"end": 17278,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17273,
											"end": 17282,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 17268,
											"end": 17282,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17268,
											"end": 17282,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17103,
											"end": 17288,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 17103,
											"end": 17288,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17103,
											"end": 17288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17103,
											"end": 17288,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17103,
											"end": 17288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17294,
											"end": 17475,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 17294,
											"end": 17475,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17434,
											"end": 17467,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 17430,
											"end": 17431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17422,
											"end": 17428,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17418,
											"end": 17432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17411,
											"end": 17468,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17294,
											"end": 17475,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17294,
											"end": 17475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17481,
											"end": 17847,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 17481,
											"end": 17847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17623,
											"end": 17626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17644,
											"end": 17711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 17708,
											"end": 17710,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 17703,
											"end": 17706,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17644,
											"end": 17711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "267"
										},
										{
											"begin": 17644,
											"end": 17711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17644,
											"end": 17711,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 17644,
											"end": 17711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17637,
											"end": 17711,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17637,
											"end": 17711,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17720,
											"end": 17813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 17809,
											"end": 17812,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17720,
											"end": 17813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 17720,
											"end": 17813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17720,
											"end": 17813,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 17720,
											"end": 17813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17838,
											"end": 17840,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17833,
											"end": 17836,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17829,
											"end": 17841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17822,
											"end": 17841,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17822,
											"end": 17841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17481,
											"end": 17847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17481,
											"end": 17847,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17481,
											"end": 17847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17481,
											"end": 17847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17853,
											"end": 18272,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 17853,
											"end": 18272,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18019,
											"end": 18023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18057,
											"end": 18059,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18046,
											"end": 18055,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18042,
											"end": 18060,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18034,
											"end": 18060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18034,
											"end": 18060,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18106,
											"end": 18115,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18100,
											"end": 18104,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18096,
											"end": 18116,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18092,
											"end": 18093,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18081,
											"end": 18090,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18077,
											"end": 18094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18070,
											"end": 18117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18134,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 18260,
											"end": 18264,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18134,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 18134,
											"end": 18265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18134,
											"end": 18265,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 18134,
											"end": 18265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18126,
											"end": 18265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18126,
											"end": 18265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17853,
											"end": 18272,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17853,
											"end": 18272,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17853,
											"end": 18272,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17853,
											"end": 18272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18278,
											"end": 18610,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 18278,
											"end": 18610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18399,
											"end": 18403,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18437,
											"end": 18439,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18426,
											"end": 18435,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18422,
											"end": 18440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18414,
											"end": 18440,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18414,
											"end": 18440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18450,
											"end": 18521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 18518,
											"end": 18519,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18507,
											"end": 18516,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18503,
											"end": 18520,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18494,
											"end": 18500,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18450,
											"end": 18521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 18450,
											"end": 18521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18450,
											"end": 18521,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 18450,
											"end": 18521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18531,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 18599,
											"end": 18601,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18588,
											"end": 18597,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18584,
											"end": 18602,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18575,
											"end": 18581,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18531,
											"end": 18603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 18531,
											"end": 18603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18531,
											"end": 18603,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 18531,
											"end": 18603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18278,
											"end": 18610,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 18278,
											"end": 18610,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18278,
											"end": 18610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18278,
											"end": 18610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18278,
											"end": 18610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18278,
											"end": 18610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18616,
											"end": 19058,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 18616,
											"end": 19058,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18765,
											"end": 18769,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18803,
											"end": 18805,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 18792,
											"end": 18801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18788,
											"end": 18806,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18780,
											"end": 18806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18780,
											"end": 18806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18816,
											"end": 18887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 18884,
											"end": 18885,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18873,
											"end": 18882,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18869,
											"end": 18886,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18860,
											"end": 18866,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18816,
											"end": 18887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 18816,
											"end": 18887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18816,
											"end": 18887,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 18816,
											"end": 18887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18897,
											"end": 18969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 18965,
											"end": 18967,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18954,
											"end": 18963,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18950,
											"end": 18968,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18941,
											"end": 18947,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18897,
											"end": 18969,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 18897,
											"end": 18969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18897,
											"end": 18969,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 18897,
											"end": 18969,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18979,
											"end": 19051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 19047,
											"end": 19049,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19036,
											"end": 19045,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19032,
											"end": 19050,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19023,
											"end": 19029,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18979,
											"end": 19051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 18979,
											"end": 19051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18979,
											"end": 19051,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 18979,
											"end": 19051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18616,
											"end": 19058,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 18616,
											"end": 19058,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 18616,
											"end": 19058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18616,
											"end": 19058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18616,
											"end": 19058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18616,
											"end": 19058,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18616,
											"end": 19058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19064,
											"end": 19255,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 19064,
											"end": 19255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19102,
											"end": 19106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19122,
											"end": 19140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 19138,
											"end": 19139,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19122,
											"end": 19140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 19122,
											"end": 19140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19122,
											"end": 19140,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 19122,
											"end": 19140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19117,
											"end": 19140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19117,
											"end": 19140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19154,
											"end": 19172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 19170,
											"end": 19171,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19154,
											"end": 19172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 19154,
											"end": 19172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19154,
											"end": 19172,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 19154,
											"end": 19172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19172,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19149,
											"end": 19172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19196,
											"end": 19197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19193,
											"end": 19194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19189,
											"end": 19198,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19181,
											"end": 19198,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19181,
											"end": 19198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19220,
											"end": 19224,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 19214,
											"end": 19218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19211,
											"end": 19225,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19208,
											"end": 19248,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19208,
											"end": 19248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 19208,
											"end": 19248,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19228,
											"end": 19246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 19228,
											"end": 19246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 19228,
											"end": 19246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19228,
											"end": 19246,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 19228,
											"end": 19246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19208,
											"end": 19248,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 19208,
											"end": 19248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19064,
											"end": 19255,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19064,
											"end": 19255,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19064,
											"end": 19255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19064,
											"end": 19255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19064,
											"end": 19255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19261,
											"end": 19363,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 19261,
											"end": 19363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19303,
											"end": 19311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19350,
											"end": 19355,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19347,
											"end": 19348,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 19343,
											"end": 19356,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 19322,
											"end": 19356,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19322,
											"end": 19356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19261,
											"end": 19363,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19261,
											"end": 19363,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19261,
											"end": 19363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19261,
											"end": 19363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19369,
											"end": 20217,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 19369,
											"end": 20217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19430,
											"end": 19435,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19437,
											"end": 19441,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19461,
											"end": 19467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19452,
											"end": 19467,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19452,
											"end": 19467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19485,
											"end": 19490,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19476,
											"end": 19490,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19476,
											"end": 19490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19499,
											"end": 20211,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 19499,
											"end": 20211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19520,
											"end": 19521,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 19510,
											"end": 19518,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19507,
											"end": 19522,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19499,
											"end": 20211,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19499,
											"end": 20211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 19499,
											"end": 20211,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19615,
											"end": 19619,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 19610,
											"end": 19613,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 19606,
											"end": 19620,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 19600,
											"end": 19604,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19597,
											"end": 19621,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 19594,
											"end": 19644,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19594,
											"end": 19644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 19594,
											"end": 19644,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19624,
											"end": 19642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 19624,
											"end": 19642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 19624,
											"end": 19642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19624,
											"end": 19642,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 19624,
											"end": 19642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19594,
											"end": 19644,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 19594,
											"end": 19644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19674,
											"end": 19675,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 19664,
											"end": 19672,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 19660,
											"end": 19676,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19657,
											"end": 20108,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 19657,
											"end": 20108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 19657,
											"end": 20108,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20089,
											"end": 20093,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20082,
											"end": 20087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20078,
											"end": 20094,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 20069,
											"end": 20094,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20069,
											"end": 20094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19657,
											"end": 20108,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 19657,
											"end": 20108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20139,
											"end": 20143,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20133,
											"end": 20137,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20129,
											"end": 20144,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 20121,
											"end": 20144,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20121,
											"end": 20144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20169,
											"end": 20201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 20192,
											"end": 20200,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20169,
											"end": 20201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 20169,
											"end": 20201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20169,
											"end": 20201,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 20169,
											"end": 20201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20157,
											"end": 20201,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 20157,
											"end": 20201,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19499,
											"end": 20211,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 19499,
											"end": 20211,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19499,
											"end": 20211,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 19499,
											"end": 20211,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19369,
											"end": 20217,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 19369,
											"end": 20217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19369,
											"end": 20217,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 19369,
											"end": 20217,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19369,
											"end": 20217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19369,
											"end": 20217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19369,
											"end": 20217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19369,
											"end": 20217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20223,
											"end": 21296,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 20223,
											"end": 21296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20277,
											"end": 20282,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20468,
											"end": 20476,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20458,
											"end": 20498,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 20458,
											"end": 20498,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20489,
											"end": 20490,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20480,
											"end": 20490,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20480,
											"end": 20490,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20491,
											"end": 20496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 20491,
											"end": 20496,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20458,
											"end": 20498,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 20458,
											"end": 20498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20517,
											"end": 20521,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20507,
											"end": 20543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 20507,
											"end": 20543,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20534,
											"end": 20535,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20525,
											"end": 20535,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20525,
											"end": 20535,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20536,
											"end": 20541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 20536,
											"end": 20541,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20507,
											"end": 20543,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 20507,
											"end": 20543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20603,
											"end": 20607,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20651,
											"end": 20652,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20646,
											"end": 20673,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 20673,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 20673,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 20646,
											"end": 20673,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20687,
											"end": 20688,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 20682,
											"end": 20873,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20682,
											"end": 20873,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 20682,
											"end": 20873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 20682,
											"end": 20873,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20596,
											"end": 20873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 20596,
											"end": 20873,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20646,
											"end": 20673,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 20646,
											"end": 20673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20664,
											"end": 20665,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 20655,
											"end": 20665,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20655,
											"end": 20665,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20666,
											"end": 20671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20666,
											"end": 20671,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 20666,
											"end": 20671,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20682,
											"end": 20873,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 20682,
											"end": 20873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20727,
											"end": 20730,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 20717,
											"end": 20725,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20714,
											"end": 20731,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20711,
											"end": 20754,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20711,
											"end": 20754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 20711,
											"end": 20754,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20734,
											"end": 20752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 20734,
											"end": 20752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 20734,
											"end": 20752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20734,
											"end": 20752,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 20734,
											"end": 20752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20711,
											"end": 20754,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 20711,
											"end": 20754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20783,
											"end": 20791,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20780,
											"end": 20781,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 20776,
											"end": 20792,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 20767,
											"end": 20792,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20767,
											"end": 20792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20818,
											"end": 20821,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20811,
											"end": 20816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20808,
											"end": 20822,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20805,
											"end": 20845,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20805,
											"end": 20845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 20805,
											"end": 20845,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20825,
											"end": 20843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 20825,
											"end": 20843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 20825,
											"end": 20843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20825,
											"end": 20843,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 20825,
											"end": 20843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20805,
											"end": 20845,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 20805,
											"end": 20845,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20858,
											"end": 20863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20858,
											"end": 20863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 20858,
											"end": 20863,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20596,
											"end": 20873,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 20596,
											"end": 20873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20596,
											"end": 20873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20982,
											"end": 20984,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20972,
											"end": 20980,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20969,
											"end": 20985,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20963,
											"end": 20966,
											"name": "PUSH",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 20957,
											"end": 20961,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20954,
											"end": 20967,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20950,
											"end": 20986,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20932,
											"end": 20934,
											"name": "PUSH",
											"source": 10,
											"value": "4E"
										},
										{
											"begin": 20922,
											"end": 20930,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20919,
											"end": 20935,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20914,
											"end": 20916,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 20908,
											"end": 20912,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20905,
											"end": 20917,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 20901,
											"end": 20936,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20885,
											"end": 20996,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 20882,
											"end": 21128,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20882,
											"end": 21128,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 20882,
											"end": 21128,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21038,
											"end": 21046,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21032,
											"end": 21036,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21028,
											"end": 21047,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 21019,
											"end": 21047,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21019,
											"end": 21047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21073,
											"end": 21076,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21066,
											"end": 21071,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21063,
											"end": 21077,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21060,
											"end": 21100,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21060,
											"end": 21100,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 21060,
											"end": 21100,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21080,
											"end": 21098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 21080,
											"end": 21098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 21080,
											"end": 21098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21080,
											"end": 21098,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 21080,
											"end": 21098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21060,
											"end": 21100,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 21060,
											"end": 21100,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21113,
											"end": 21118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 21113,
											"end": 21118,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20882,
											"end": 21128,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 20882,
											"end": 21128,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21153,
											"end": 21195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 21191,
											"end": 21194,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21181,
											"end": 21189,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21175,
											"end": 21179,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21172,
											"end": 21173,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 21153,
											"end": 21195,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 21153,
											"end": 21195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21153,
											"end": 21195,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 21153,
											"end": 21195,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21138,
											"end": 21195,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21138,
											"end": 21195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21138,
											"end": 21195,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21138,
											"end": 21195,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21227,
											"end": 21231,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21222,
											"end": 21225,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21218,
											"end": 21232,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 21211,
											"end": 21216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21208,
											"end": 21233,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 21205,
											"end": 21256,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 21205,
											"end": 21256,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 21205,
											"end": 21256,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21236,
											"end": 21254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 21236,
											"end": 21254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "272"
										},
										{
											"begin": 21236,
											"end": 21254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21236,
											"end": 21254,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 21236,
											"end": 21254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21205,
											"end": 21256,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 21205,
											"end": 21256,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21285,
											"end": 21289,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21278,
											"end": 21283,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21274,
											"end": 21290,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 21265,
											"end": 21290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21265,
											"end": 21290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20223,
											"end": 21296,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 20223,
											"end": 21296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20223,
											"end": 21296,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20223,
											"end": 21296,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20223,
											"end": 21296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20223,
											"end": 21296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20223,
											"end": 21296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20223,
											"end": 21296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21302,
											"end": 21583,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 21302,
											"end": 21583,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21360,
											"end": 21365,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21384,
											"end": 21407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 21402,
											"end": 21406,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21384,
											"end": 21407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 21384,
											"end": 21407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21384,
											"end": 21407,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 21384,
											"end": 21407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21376,
											"end": 21407,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21376,
											"end": 21407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21428,
											"end": 21453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 21444,
											"end": 21452,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21428,
											"end": 21453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 21428,
											"end": 21453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21428,
											"end": 21453,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 21428,
											"end": 21453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21416,
											"end": 21453,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21416,
											"end": 21453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21472,
											"end": 21576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 21509,
											"end": 21575,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21499,
											"end": 21507,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21493,
											"end": 21497,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21472,
											"end": 21576,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 21472,
											"end": 21576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21472,
											"end": 21576,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 21472,
											"end": 21576,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21463,
											"end": 21576,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21463,
											"end": 21576,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21302,
											"end": 21583,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 21302,
											"end": 21583,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21302,
											"end": 21583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21302,
											"end": 21583,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21302,
											"end": 21583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/LandFIStake2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"calculateReward(address)": "d82e3962",
							"changeFullUnlock(bool)": "f1cddd55",
							"changeMaxStake(uint256)": "cd5692ee",
							"changeMinStake(uint256)": "23dcdb89",
							"changeStakeDuration(uint256)": "6747dd0e",
							"depositTimestamps(address)": "240be944",
							"fullUnlock()": "f908dc13",
							"landFiDecimals()": "9aae43f5",
							"landFiToken()": "292a6b19",
							"maxStake()": "ea1b28e0",
							"minStake()": "375b3c0a",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardDecimals()": "b60f75d8",
							"rewardToken()": "f7c618c1",
							"stake(uint256)": "a694fc3a",
							"stakeDuration()": "40f02ab6",
							"stakeUnlockTime(address)": "8dfb2dbc",
							"stakes(address)": "16934fc4",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_landFiToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakeDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minStake\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_fullUnlock\",\"type\":\"bool\"}],\"name\":\"changeFullUnlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxStake\",\"type\":\"uint256\"}],\"name\":\"changeMaxStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minStake\",\"type\":\"uint256\"}],\"name\":\"changeMinStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newDuration\",\"type\":\"uint256\"}],\"name\":\"changeStakeDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositTimestamps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fullUnlock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landFiDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"landFiToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"stakeUnlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256)\":{\"notice\":\"Emitted when a user stakes tokens\"},\"Withdrawn(address,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a user withdraws staked tokens and rewards\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LandFIStake2.sol\":\"LandFiStakingWithRewards\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/LandFIStake2.sol\":{\"keccak256\":\"0x1e152de9374027a746d3e3da1780311ce40c203d0b995e1223d201acacf40a23\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f072938926db1150d8f80ea45be3216b1df6a440d158f1d72e3f04bbd47a0ae7\",\"dweb:/ipfs/QmSRYnLb9tp25kXZHW7iz8bs4XgACG9PjEX7BfFbD6avZG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/LandFIStake2.sol:LandFiStakingWithRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "contracts/LandFIStake2.sol:LandFiStakingWithRewards",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 916,
								"contract": "contracts/LandFIStake2.sol:LandFiStakingWithRewards",
								"label": "stakes",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 920,
								"contract": "contracts/LandFIStake2.sol:LandFiStakingWithRewards",
								"label": "depositTimestamps",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 922,
								"contract": "contracts/LandFIStake2.sol:LandFiStakingWithRewards",
								"label": "stakeDuration",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 924,
								"contract": "contracts/LandFIStake2.sol:LandFiStakingWithRewards",
								"label": "maxStake",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 926,
								"contract": "contracts/LandFIStake2.sol:LandFiStakingWithRewards",
								"label": "minStake",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 928,
								"contract": "contracts/LandFIStake2.sol:LandFiStakingWithRewards",
								"label": "fullUnlock",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"Staked(address,uint256,uint256)": {
								"notice": "Emitted when a user stakes tokens"
							},
							"Withdrawn(address,uint256,uint256,uint256)": {
								"notice": "Emitted when a user withdraws staked tokens and rewards"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 886,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"contracts/LandFIStake2.sol": {
				"ast": {
					"absolutePath": "contracts/LandFIStake2.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"LandFiStakingWithRewards": [
							1446
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						]
					},
					"id": 1447,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1447,
							"sourceUnit": 148,
							"src": "68:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1447,
							"sourceUnit": 303,
							"src": "122:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1447,
							"sourceUnit": 381,
							"src": "186:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1447,
							"sourceUnit": 845,
							"src": "244:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 894,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "358:3:9",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 895,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "362:6:9",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "358:10:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 893,
										"name": "Ownable",
										"nameLocations": [
											"350:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "350:7:9"
									},
									"id": 896,
									"nodeType": "InheritanceSpecifier",
									"src": "350:19:9"
								},
								{
									"baseName": {
										"id": 897,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"371:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "371:15:9"
									},
									"id": 898,
									"nodeType": "InheritanceSpecifier",
									"src": "371:15:9"
								}
							],
							"canonicalName": "LandFiStakingWithRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1446,
							"linearizedBaseContracts": [
								1446,
								302,
								147,
								874
							],
							"name": "LandFiStakingWithRewards",
							"nameLocation": "322:24:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 902,
									"libraryName": {
										"id": 899,
										"name": "SafeERC20",
										"nameLocations": [
											"400:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "400:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "394:27:9",
									"typeName": {
										"id": 901,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 900,
											"name": "IERC20",
											"nameLocations": [
												"414:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "414:6:9"
										},
										"referencedDeclaration": 380,
										"src": "414:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "292a6b19",
									"id": 905,
									"mutability": "immutable",
									"name": "landFiToken",
									"nameLocation": "453:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "429:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 904,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 903,
											"name": "IERC20",
											"nameLocations": [
												"429:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "429:6:9"
										},
										"referencedDeclaration": 380,
										"src": "429:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 908,
									"mutability": "immutable",
									"name": "rewardToken",
									"nameLocation": "518:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "494:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 907,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 906,
											"name": "IERC20",
											"nameLocations": [
												"494:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "494:6:9"
										},
										"referencedDeclaration": 380,
										"src": "494:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9aae43f5",
									"id": 910,
									"mutability": "immutable",
									"name": "landFiDecimals",
									"nameLocation": "596:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "573:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 909,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "573:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b60f75d8",
									"id": 912,
									"mutability": "immutable",
									"name": "rewardDecimals",
									"nameLocation": "640:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "617:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 911,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "617:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 916,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "698:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "663:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 915,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 913,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "671:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "663:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 914,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "682:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "240be944",
									"id": 920,
									"mutability": "mutable",
									"name": "depositTimestamps",
									"nameLocation": "746:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "711:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 919,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 917,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "719:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "711:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 918,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "730:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "40f02ab6",
									"id": 922,
									"mutability": "mutable",
									"name": "stakeDuration",
									"nameLocation": "787:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "772:28:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 921,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "772:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ea1b28e0",
									"id": 924,
									"mutability": "mutable",
									"name": "maxStake",
									"nameLocation": "851:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "836:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 923,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "836:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "375b3c0a",
									"id": 926,
									"mutability": "mutable",
									"name": "minStake",
									"nameLocation": "881:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "866:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 925,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "866:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f908dc13",
									"id": 928,
									"mutability": "mutable",
									"name": "fullUnlock",
									"nameLocation": "908:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "896:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 927,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "896:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "927:45:9",
										"text": "@notice Emitted when a user stakes tokens"
									},
									"eventSelector": "1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90",
									"id": 937,
									"name": "Staked",
									"nameLocation": "984:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1007:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "991:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1021:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1013:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1037:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1029:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:57:9"
									},
									"src": "978:70:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "1056:67:9",
										"text": "@notice Emitted when a user withdraws staked tokens and rewards"
									},
									"eventSelector": "75e161b3e824b114fc1a33274bd7091918dd4e639cede50b78b15a4eea956a21",
									"id": 948,
									"name": "Withdrawn",
									"nameLocation": "1135:9:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1161:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1145:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1145:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1175:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1167:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1191:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1183:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1207:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1199:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:73:9"
									},
									"src": "1129:89:9"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "1396:700:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 962,
																"name": "_landFiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "1415:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1439:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1431:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 963,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1431:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1431:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1415:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c616e64466920746f6b656e207a65726f2061646472657373",
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1443:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d",
																"typeString": "literal_string \"LandFi token zero address\""
															},
															"value": "LandFi token zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_095a3b63a87f51b19033031a7b84cd64f4b38d1463c75e9e23eebf243c87770d",
																"typeString": "literal_string \"LandFi token zero address\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1407:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "1407:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 972,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "1490:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1514:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1506:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 973,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1506:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1506:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1490:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52657761726420746f6b656e207a65726f2061646472657373",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1518:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2",
																"typeString": "literal_string \"Reward token zero address\""
															},
															"value": "Reward token zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9d5e41eb285807e9e2fd2547bd64c89b78978289257f3ce5884efc61a38db2f2",
																"typeString": "literal_string \"Reward token zero address\""
															}
														],
														"id": 971,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1482:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1482:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "1482:64:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 982,
																"name": "_stakeDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "1565:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1582:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1565:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206475726174696f6e206d757374206265203e2030",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1585:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b",
																"typeString": "literal_string \"Stake duration must be > 0\""
															},
															"value": "Stake duration must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b",
																"typeString": "literal_string \"Stake duration must be > 0\""
															}
														],
														"id": 981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1557:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1557:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "1557:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 989,
																"name": "_maxStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "1633:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1645:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1633:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178207374616b65206d757374206265203e2030",
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1648:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a",
																"typeString": "literal_string \"Max stake must be > 0\""
															},
															"value": "Max stake must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a",
																"typeString": "literal_string \"Max stake must be > 0\""
															}
														],
														"id": 988,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1625:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1625:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "1625:47:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 996,
																	"name": "_minStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "1691:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1703:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1691:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 999,
																	"name": "_minStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "1708:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1000,
																	"name": "_maxStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "1721:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1708:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1691:39:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d696e207374616b65",
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1732:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126",
																"typeString": "literal_string \"Invalid min stake\""
															},
															"value": "Invalid min stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126",
																"typeString": "literal_string \"Invalid min stake\""
															}
														],
														"id": 995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1683:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1683:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "1683:69:9"
											},
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1006,
														"name": "landFiToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "1765:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1008,
																"name": "_landFiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "1786:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1007,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "1779:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1779:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "1765:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "1765:34:9"
											},
											{
												"expression": {
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1012,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "1810:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1014,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "1831:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1013,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "1824:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1824:20:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "1810:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "1810:34:9"
											},
											{
												"expression": {
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1018,
														"name": "landFiDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "1857:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1020,
																"name": "_landFiToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "1887:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1019,
															"name": "_getDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "1874:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint8_$",
																"typeString": "function (address) view returns (uint8)"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1874:26:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1857:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "1857:43:9"
											},
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1024,
														"name": "rewardDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "1911:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1026,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "1941:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1025,
															"name": "_getDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "1928:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint8_$",
																"typeString": "function (address) view returns (uint8)"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1928:26:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1911:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "1911:43:9"
											},
											{
												"expression": {
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1030,
														"name": "stakeDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "1967:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1031,
														"name": "_stakeDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "1983:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1967:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "1967:30:9"
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1034,
														"name": "maxStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "2008:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1035,
														"name": "_maxStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "2019:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2008:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "2008:20:9"
											},
											{
												"expression": {
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1038,
														"name": "minStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "2039:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1039,
														"name": "_minStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2050:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2039:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "2039:20:9"
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1042,
														"name": "fullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "2070:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2083:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2070:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "2070:18:9"
											}
										]
									},
									"id": 1047,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "_landFiToken",
												"nameLocation": "1256:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1248:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1248:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "1287:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1279:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "_stakeDuration",
												"nameLocation": "1318:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1310:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "_maxStake",
												"nameLocation": "1351:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1343:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "_minStake",
												"nameLocation": "1379:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1371:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1371:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1237:158:9"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1396:0:9"
									},
									"scope": 1446,
									"src": "1226:870:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1084,
										"nodeType": "Block",
										"src": "2231:251:9",
										"statements": [
											{
												"assignments": [
													1055,
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1055,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2248:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "2243:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1054,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2243:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2270:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1084,
														"src": "2257:17:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1056,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2257:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1065,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "646563696d616c732829",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2333:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	},
																	"value": "decimals()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_313ce567add4d438edf58b94ff345d7d38c45b17dfc0f947988d7819dca364f9",
																		"typeString": "literal_string \"decimals()\""
																	}
																],
																"expression": {
																	"id": 1060,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2309:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2313:19:9",
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"src": "2309:23:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2309:37:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1058,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "2278:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2284:10:9",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "2278:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2278:79:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2242:115:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1067,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1055,
																"src": "2376:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1068,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "2387:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2392:6:9",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2387:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2402:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "2387:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2376:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2067657420646563696d616c73",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2406:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af",
																"typeString": "literal_string \"Failed to get decimals\""
															},
															"value": "Failed to get decimals"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32394de9623e8fb5e5530da39f5c70078a21a50b5ad019f707f32532f986e9af",
																"typeString": "literal_string \"Failed to get decimals\""
															}
														],
														"id": 1066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1078,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "2460:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2467:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 1079,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2467:5:9",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1081,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2466:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															}
														],
														"expression": {
															"id": 1076,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2449:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2453:6:9",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "2449:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2449:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1053,
												"id": 1083,
												"nodeType": "Return",
												"src": "2442:32:9"
											}
										]
									},
									"id": 1085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getDecimals",
									"nameLocation": "2173:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2194:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2186:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2185:15:9"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2224:5:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1051,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2224:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2223:7:9"
									},
									"scope": 1446,
									"src": "2164:318:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "2584:113:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1093,
																"name": "_newDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "2603:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2618:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2603:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206475726174696f6e206d757374206265203e2030",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2621:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b",
																"typeString": "literal_string \"Stake duration must be > 0\""
															},
															"value": "Stake duration must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ef1a2c642a3ec87e44d7fe0ca5d159356b63d720b91dbf8e5990d4cca93906b",
																"typeString": "literal_string \"Stake duration must be > 0\""
															}
														],
														"id": 1092,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2595:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2595:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "2595:55:9"
											},
											{
												"expression": {
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1099,
														"name": "stakeDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "2661:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1100,
														"name": "_newDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1087,
														"src": "2677:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2661:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "2661:28:9"
											}
										]
									},
									"functionSelector": "6747dd0e",
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1090,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1089,
												"name": "onlyOwner",
												"nameLocations": [
													"2574:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2574:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2574:9:9"
										}
									],
									"name": "changeStakeDuration",
									"nameLocation": "2523:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "_newDuration",
												"nameLocation": "2551:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "2543:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2543:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2542:22:9"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2584:0:9"
									},
									"scope": 1446,
									"src": "2514:183:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "2767:97:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1112,
																"name": "_maxStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "2786:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2798:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2786:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d6178207374616b65206d757374206265203e2030",
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2801:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a",
																"typeString": "literal_string \"Max stake must be > 0\""
															},
															"value": "Max stake must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cdb37bc0be25090143596cd01fd0030eb31af12d58f9d56d68fa013edfd1a13a",
																"typeString": "literal_string \"Max stake must be > 0\""
															}
														],
														"id": 1111,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2778:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2778:47:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "2778:47:9"
											},
											{
												"expression": {
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1118,
														"name": "maxStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "2836:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1119,
														"name": "_maxStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "2847:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2836:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "2836:20:9"
											}
										]
									},
									"functionSelector": "cd5692ee",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1109,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1108,
												"name": "onlyOwner",
												"nameLocations": [
													"2757:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2757:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2757:9:9"
										}
									],
									"name": "changeMaxStake",
									"nameLocation": "2714:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "_maxStake",
												"nameLocation": "2737:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "2729:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:19:9"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2767:0:9"
									},
									"scope": 1446,
									"src": "2705:159:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "2934:118:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1131,
																	"name": "_minStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "2953:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2965:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2953:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1134,
																	"name": "_minStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1125,
																	"src": "2970:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1135,
																	"name": "maxStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "2983:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2970:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2953:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d696e207374616b65",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2993:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126",
																"typeString": "literal_string \"Invalid min stake\""
															},
															"value": "Invalid min stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c34cf239d91f77f0c63f1292d5332ae5710d0d06a0e4a2b8a788c3ef50153126",
																"typeString": "literal_string \"Invalid min stake\""
															}
														],
														"id": 1130,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2945:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2945:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "2945:68:9"
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1141,
														"name": "minStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3024:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1142,
														"name": "_minStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "3035:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3024:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "3024:20:9"
											}
										]
									},
									"functionSelector": "23dcdb89",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1128,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1127,
												"name": "onlyOwner",
												"nameLocations": [
													"2924:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2924:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2924:9:9"
										}
									],
									"name": "changeMinStake",
									"nameLocation": "2881:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "_minStake",
												"nameLocation": "2904:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2896:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2896:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2895:19:9"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2934:0:9"
									},
									"scope": 1446,
									"src": "2872:180:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "3123:43:9",
										"statements": [
											{
												"expression": {
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1153,
														"name": "fullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "3134:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1154,
														"name": "_fullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "3147:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3134:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "3134:24:9"
											}
										]
									},
									"functionSelector": "f1cddd55",
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1151,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1150,
												"name": "onlyOwner",
												"nameLocations": [
													"3113:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3113:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3113:9:9"
										}
									],
									"name": "changeFullUnlock",
									"nameLocation": "3069:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "_fullUnlock",
												"nameLocation": "3091:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "3086:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3086:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3085:18:9"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3123:0:9"
									},
									"scope": 1446,
									"src": "3060:106:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "3255:488:9",
										"statements": [
											{
												"assignments": [
													1166
												],
												"declarations": [
													{
														"constant": false,
														"id": 1166,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "3274:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1230,
														"src": "3266:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1165,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3266:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1169,
												"initialValue": {
													"expression": {
														"id": 1167,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3281:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3285:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3281:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3266:25:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1171,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "3310:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1173,
																"indexExpression": {
																	"id": 1172,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "3317:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3310:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3326:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3310:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479207374616b696e67",
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3329:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe",
																"typeString": "literal_string \"Already staking\""
															},
															"value": "Already staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe",
																"typeString": "literal_string \"Already staking\""
															}
														],
														"id": 1170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3302:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3302:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "3302:45:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1180,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "3366:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1181,
																"name": "minStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "3376:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3366:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742062656c6f77206d696e5374616b65",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3386:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04",
																"typeString": "literal_string \"Amount below minStake\""
															},
															"value": "Amount below minStake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2505870f57882c6ff4884768ed6efbfb774a7b69ce0e7060897d351374d40e04",
																"typeString": "literal_string \"Amount below minStake\""
															}
														],
														"id": 1179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3358:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3358:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1185,
												"nodeType": "ExpressionStatement",
												"src": "3358:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1187,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "3429:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1188,
																"name": "maxStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "3439:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3429:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742065786365656473206d61785374616b65",
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433",
																"typeString": "literal_string \"Amount exceeds maxStake\""
															},
															"value": "Amount exceeds maxStake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_89dd289e0254786a86ceef4dc65d716cdcfc1fa4dc964110b67ba4f4b619c433",
																"typeString": "literal_string \"Amount exceeds maxStake\""
															}
														],
														"id": 1186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3421:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3421:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "3421:54:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3494:11:9",
															"subExpression": {
																"id": 1194,
																"name": "fullUnlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "3495:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67206c6f636b6564",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3507:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041",
																"typeString": "literal_string \"Staking locked\""
															},
															"value": "Staking locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d31c969b761854d38b2df0a3a8707f9aab18d1ecd85c54cef37be0d2e5a2041",
																"typeString": "literal_string \"Staking locked\""
															}
														],
														"id": 1193,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3486:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3486:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1198,
												"nodeType": "ExpressionStatement",
												"src": "3486:38:9"
											},
											{
												"expression": {
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1199,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "3537:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1201,
														"indexExpression": {
															"id": 1200,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "3544:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3537:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1202,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "3552:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3537:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "3537:21:9"
											},
											{
												"expression": {
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1205,
															"name": "depositTimestamps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "3569:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1207,
														"indexExpression": {
															"id": 1206,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "3587:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3569:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1208,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3595:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3601:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3595:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3569:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1211,
												"nodeType": "ExpressionStatement",
												"src": "3569:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1215,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "3652:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1218,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3666:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_LandFiStakingWithRewards_$1446",
																		"typeString": "contract LandFiStakingWithRewards"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_LandFiStakingWithRewards_$1446",
																		"typeString": "contract LandFiStakingWithRewards"
																	}
																],
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3658:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1216,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3658:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3658:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1220,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "3673:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1212,
															"name": "landFiToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "3623:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3635:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "3623:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "3623:57:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1224,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "3705:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1225,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "3711:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1226,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3719:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3725:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3719:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1223,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "3698:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3698:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "EmitStatement",
												"src": "3693:42:9"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1163,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1162,
												"name": "nonReentrant",
												"nameLocations": [
													"3242:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3242:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3242:12:9"
										}
									],
									"name": "stake",
									"nameLocation": "3211:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3225:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "3217:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3217:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3216:16:9"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:9"
									},
									"scope": 1446,
									"src": "3202:541:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "3955:548:9",
										"statements": [
											{
												"assignments": [
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3974:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "3966:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1238,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3966:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"baseExpression": {
														"id": 1240,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "3983:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1242,
													"indexExpression": {
														"id": 1241,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "3990:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3983:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3966:29:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1244,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "4010:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4020:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4010:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1249,
												"nodeType": "IfStatement",
												"src": "4006:25:9",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4030:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1237,
													"id": 1248,
													"nodeType": "Return",
													"src": "4023:8:9"
												}
											},
											{
												"assignments": [
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "normalizedStake",
														"nameLocation": "4103:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "4095:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4095:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1257,
												"initialValue": {
													"arguments": [
														{
															"id": 1253,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "4140:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1254,
															"name": "landFiDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "4148:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"hexValue": "3138",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4164:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															}
														],
														"id": 1252,
														"name": "_normalizeDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "4121:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$_t_uint8_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint8,uint8) pure returns (uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4121:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4095:72:9"
											},
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "rewardNormalized",
														"nameLocation": "4270:16:9",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "4262:24:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4262:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1266,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1260,
																	"name": "normalizedStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1251,
																	"src": "4290:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "35",
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4308:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5_by_1",
																		"typeString": "int_const 5"
																	},
																	"value": "5"
																},
																"src": "4290:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1263,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4289:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4313:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4289:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4262:54:9"
											},
											{
												"assignments": [
													1268
												],
												"declarations": [
													{
														"constant": false,
														"id": 1268,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "4394:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "4386:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1267,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4386:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"arguments": [
														{
															"id": 1270,
															"name": "rewardNormalized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "4428:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "3138",
															"id": 1271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4446:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														{
															"id": 1272,
															"name": "rewardDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "4450:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1269,
														"name": "_normalizeDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1445,
														"src": "4409:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$_t_uint8_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint8,uint8) pure returns (uint256)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4386:79:9"
											},
											{
												"expression": {
													"id": 1275,
													"name": "rewardAmount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1268,
													"src": "4483:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1237,
												"id": 1276,
												"nodeType": "Return",
												"src": "4476:19:9"
											}
										]
									},
									"functionSelector": "d82e3962",
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "3895:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3919:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3911:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3911:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3910:14:9"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "3946:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:9:9"
									},
									"scope": 1446,
									"src": "3886:617:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "4594:699:9",
										"statements": [
											{
												"assignments": [
													1284
												],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "4613:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "4605:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1283,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4605:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1287,
												"initialValue": {
													"expression": {
														"id": 1285,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4620:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4624:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4620:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4605:25:9"
											},
											{
												"assignments": [
													1289
												],
												"declarations": [
													{
														"constant": false,
														"id": 1289,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4649:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "4641:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1288,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4641:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1293,
												"initialValue": {
													"baseExpression": {
														"id": 1290,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "4658:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1292,
													"indexExpression": {
														"id": 1291,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "4665:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4658:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4641:29:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1295,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1289,
																"src": "4689:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4698:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4689:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207374616b6520666f756e64",
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4701:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															},
															"value": "No stake found"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8495ddd36ba9b32a0cb09aa87f940a1af6e06f502729a7774df9db0ac3d8e45a",
																"typeString": "literal_string \"No stake found\""
															}
														],
														"id": 1294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4681:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4681:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1300,
												"nodeType": "ExpressionStatement",
												"src": "4681:37:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1302,
																"name": "fullUnlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "4737:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1303,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4751:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4757:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4751:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1305,
																			"name": "depositTimestamps",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 920,
																			"src": "4770:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1307,
																		"indexExpression": {
																			"id": 1306,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "4788:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4770:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1308,
																		"name": "stakeDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "4796:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4770:39:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4751:58:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4737:72:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206c6f636b6564",
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4811:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717",
																"typeString": "literal_string \"Stake locked\""
															},
															"value": "Stake locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c96e0a341c9518256eddb565314349d39d191e3a702caab37452bb2761e74717",
																"typeString": "literal_string \"Stake locked\""
															}
														],
														"id": 1301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4729:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4729:97:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "4729:97:9"
											},
											{
												"assignments": [
													1316
												],
												"declarations": [
													{
														"constant": false,
														"id": 1316,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "4847:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "4839:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1315,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4839:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"arguments": [
														{
															"id": 1318,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "4878:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1317,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "4862:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4862:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4839:44:9"
											},
											{
												"expression": {
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1321,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "4896:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1323,
														"indexExpression": {
															"id": 1322,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "4903:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4896:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4911:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4896:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1326,
												"nodeType": "ExpressionStatement",
												"src": "4896:16:9"
											},
											{
												"expression": {
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1327,
															"name": "depositTimestamps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "4923:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1329,
														"indexExpression": {
															"id": 1328,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "4941:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4923:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4949:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4923:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "4923:27:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1336,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "4988:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1337,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "4994:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1333,
															"name": "landFiToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "4963:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4975:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "4963:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4963:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "4963:38:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1340,
														"name": "rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "5018:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5033:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5018:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1364,
												"nodeType": "IfStatement",
												"src": "5014:200:9",
												"trueBody": {
													"id": 1363,
													"nodeType": "Block",
													"src": "5036:178:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1348,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "5089:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_LandFiStakingWithRewards_$1446",
																								"typeString": "contract LandFiStakingWithRewards"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_LandFiStakingWithRewards_$1446",
																								"typeString": "contract LandFiStakingWithRewards"
																							}
																						],
																						"id": 1347,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5081:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1346,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "5081:7:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1349,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5081:13:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1344,
																					"name": "rewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 908,
																					"src": "5059:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5071:9:9",
																				"memberName": "balanceOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 337,
																				"src": "5059:21:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address) view external returns (uint256)"
																				}
																			},
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5059:36:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1351,
																			"name": "rewardAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1316,
																			"src": "5099:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5059:52:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e74207265776172642062616c616e6365",
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5113:29:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0",
																			"typeString": "literal_string \"Insufficient reward balance\""
																		},
																		"value": "Insufficient reward balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_574d622dc10d84c5717ad27f807ec76bf0ff5f3560e02149020a00f76077cde0",
																			"typeString": "literal_string \"Insufficient reward balance\""
																		}
																	],
																	"id": 1343,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5051:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5051:92:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1355,
															"nodeType": "ExpressionStatement",
															"src": "5051:92:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1359,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "5183:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1360,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1316,
																		"src": "5189:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1356,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "5158:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5170:12:9",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "5158:24:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5158:44:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1362,
															"nodeType": "ExpressionStatement",
															"src": "5158:44:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1366,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "5241:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1367,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "5247:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1368,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1316,
															"src": "5255:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1369,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5269:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5275:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5269:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1365,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "5231:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5231:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "EmitStatement",
												"src": "5226:59:9"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1281,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1280,
												"name": "nonReentrant",
												"nameLocations": [
													"4581:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "4581:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4581:12:9"
										}
									],
									"name": "withdraw",
									"nameLocation": "4561:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4569:2:9"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4594:0:9"
									},
									"scope": 1446,
									"src": "4552:741:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "5389:38:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1381,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "5407:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1383,
													"indexExpression": {
														"id": 1382,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1376,
														"src": "5414:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5407:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1380,
												"id": 1384,
												"nodeType": "Return",
												"src": "5400:19:9"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5333:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5351:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "5343:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5343:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5342:14:9"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "5380:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5380:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5379:9:9"
									},
									"scope": 1446,
									"src": "5324:103:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "5506:65:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1393,
															"name": "depositTimestamps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "5524:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1395,
														"indexExpression": {
															"id": 1394,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "5542:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5524:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1396,
														"name": "stakeDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "5550:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5524:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1392,
												"id": 1398,
												"nodeType": "Return",
												"src": "5517:46:9"
											}
										]
									},
									"functionSelector": "8dfb2dbc",
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeUnlockTime",
									"nameLocation": "5444:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5468:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "5460:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5460:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5459:14:9"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "5497:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5497:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5496:9:9"
									},
									"scope": 1446,
									"src": "5435:136:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "5832:285:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1411,
														"name": "fromDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1404,
														"src": "5847:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1412,
														"name": "toDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "5863:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5847:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1417,
															"name": "fromDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1404,
															"src": "5925:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1418,
															"name": "toDecimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "5940:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "5925:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1441,
														"nodeType": "Block",
														"src": "6034:76:9",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1431,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "6056:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1432,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "6066:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 1435,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1433,
																								"name": "toDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1406,
																								"src": "6071:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 1434,
																								"name": "fromDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1404,
																								"src": "6084:12:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "6071:25:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"id": 1436,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6070:27:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "6066:31:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1438,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6065:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6056:42:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1410,
																"id": 1440,
																"nodeType": "Return",
																"src": "6049:49:9"
															}
														]
													},
													"id": 1442,
													"nodeType": "IfStatement",
													"src": "5921:189:9",
													"trueBody": {
														"id": 1430,
														"nodeType": "Block",
														"src": "5952:76:9",
														"statements": [
															{
																"expression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1428,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1420,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1402,
																		"src": "5974:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1426,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 1421,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5984:2:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							},
																							"id": 1424,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1422,
																								"name": "fromDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1404,
																								"src": "5989:12:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 1423,
																								"name": "toDecimals",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1406,
																								"src": "6004:10:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "5989:25:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						}
																					],
																					"id": 1425,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "5988:27:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "5984:31:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1427,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5983:33:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5974:42:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1410,
																"id": 1429,
																"nodeType": "Return",
																"src": "5967:49:9"
															}
														]
													}
												},
												"id": 1443,
												"nodeType": "IfStatement",
												"src": "5843:267:9",
												"trueBody": {
													"id": 1416,
													"nodeType": "Block",
													"src": "5875:40:9",
													"statements": [
														{
															"expression": {
																"id": 1414,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "5897:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1410,
															"id": 1415,
															"nodeType": "Return",
															"src": "5890:13:9"
														}
													]
												}
											}
										]
									},
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_normalizeDecimals",
									"nameLocation": "5693:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5730:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "5722:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5722:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "fromDecimals",
												"nameLocation": "5753:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "5747:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1403,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5747:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "toDecimals",
												"nameLocation": "5782:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "5776:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1405,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5776:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5711:88:9"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "5823:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5823:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5822:9:9"
									},
									"scope": 1446,
									"src": "5684:433:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1447,
							"src": "313:5807:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								937,
								948
							]
						}
					],
					"src": "40:6082:9"
				},
				"id": 9
			}
		}
	}
}