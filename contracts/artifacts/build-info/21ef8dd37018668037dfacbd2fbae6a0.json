{
	"id": "21ef8dd37018668037dfacbd2fbae6a0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LandFiStake.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\r\n\r\n/*\r\n     _                     _______ _ \r\n    | |                   | |  ___(_)\r\n    | |     __ _ _ __   __| | |_   _ \r\n    | |    / _` | '_ \\ / _` |  _| | |\r\n    | |___| (_| | | | | (_| | |   | |\r\n    \\_____/\\__,_|_| |_|\\__,_\\_|   |_|\r\n                                                  \r\n    Staking Contract v1\r\n*/\r\n\r\npragma solidity ^0.8;\r\nimport \"./access/Ownable.sol\";\r\nimport \"./utils/math/SafeMath.sol\";\r\nimport \"./utils/Address.sol\";\r\nimport \"./token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract LandFiToken {\r\n    function transferFrom(address from, address to, uint256 value) public returns (bool) {}\r\n}\r\n\r\ncontract LandFiStaking is Ownable {\r\n    using Address for address;\r\n    using SafeMath for uint256;\r\n\r\n    // BOX 1\r\n    mapping (address => uint256) public box1Balance;\r\n    mapping (address => uint256) public box1DepositDate;\r\n    uint256 public box1Rate;\r\n    uint256 public box1Time;\r\n    bool public box1Enabled;\r\n\r\n    // BOX 2\r\n    mapping (address => uint256) public box2Balance;\r\n    mapping (address => uint256) public box2DepositDate;\r\n    uint256 public box2Rate;\r\n    uint256 public box2Time;\r\n    bool public box2Enabled;\r\n\r\n    // BOX 3\r\n    mapping (address => uint256) public box3Balance;\r\n    mapping (address => uint256) public box3DepositDate;\r\n    uint256 public box3Rate;\r\n    uint256 public box3Time;\r\n    bool public box3Enabled;\r\n\r\n    // BOX 4\r\n    mapping (address => uint256) public box4Balance;\r\n    mapping (address => uint256) public box4DepositDate;\r\n    uint256 public box4Rate;\r\n    uint256 public box4Time;\r\n    bool public box4Enabled;\r\n\r\n    address private constant burnAddress = 0x000000000000000000000000000000000000dEaD;\r\n\r\n    // Max tokens allowed to be staked in 1 product by 1 wallet\r\n    uint256 public maxStake;\r\n\r\n    // The wallet for staked tokens\r\n    address public stakeWallet;\r\n\r\n    // The wallet for rewards tokens\r\n    address public rewardWallet;\r\n\r\n    // The address of landFi token\r\n    address public tokenAddress;\r\n    \r\n    // Min tokens allowed to be staked in 1 product by 1 wallet\r\n    uint256 public minStake;\r\n    \r\n    // The current reward payouts due\r\n    uint256 public rewardCountDue;\r\n    \r\n    // The reward payouts that have been sent\r\n    uint256 public rewardCount;\r\n\r\n    // The total amount of staked tokens\r\n    uint256 public totalStaked;\r\n\r\n    // The max allowed reward tokens to be given out (if higher than this new staking is disabled)\r\n    uint256 public maxRewardDue;\r\n\r\n    // Unlock all stakes and allow withdraw (no rewards)\r\n    bool public fullUnlock;\r\n\r\n    constructor() {\r\n        rewardCountDue = 0;\r\n        rewardCount = 0;\r\n        totalStaked = 0;\r\n        maxStake =     400000000000000000000; // 400B\r\n        maxRewardDue = 500000000000000000000; // 500B\r\n        minStake =     10000000000000000; // 10M\r\n        stakeWallet = 0x439AaB0EFaa9a646D4885Fd8a245A501Ca3D3237;\r\n        rewardWallet = 0xb2C8CEc19bF5E73b28aa0193FFff124055413E2E;\r\n        tokenAddress = 0x5c647208486231becCABAACf5F2B7358937D3b99;\r\n        fullUnlock = false;\r\n\r\n        // BOX 1\r\n        box1Rate = 333;\r\n        box1Time = 604800; // 7 days // 1 week\r\n        box1Enabled = true;\r\n\r\n        // BOX 2\r\n        box2Rate = 83;\r\n        box2Time = 1209600; // 14 days // 2 weeks\r\n        box2Enabled = true;\r\n\r\n        // BOX 3\r\n        box3Rate = 32;\r\n        box3Time = 2419200; // 28 days // 4 weeks\r\n        box3Enabled = true;\r\n\r\n        // BOX 4\r\n        box4Rate = 26;\r\n        box4Time = 2419200; // 28 days // 4 weeks\r\n        box4Enabled = true;\r\n    }\r\n\r\n    function changeBox1Status(bool newBox1Status) public virtual onlyOwner {\r\n        box1Enabled = newBox1Status;\r\n    }\r\n    function changeBox2Status(bool newBox2Status) public virtual onlyOwner {\r\n        box2Enabled = newBox2Status;\r\n    }\r\n    function changeBox3Status(bool newBox3Status) public virtual onlyOwner {\r\n        box3Enabled = newBox3Status;\r\n    }\r\n    function changeBox4Status(bool newBox4Status) public virtual onlyOwner {\r\n        box4Enabled = newBox4Status;\r\n    }\r\n    function changeMaxRewardDue(uint256 newMaxRewardDue) public virtual onlyOwner {\r\n        maxRewardDue = newMaxRewardDue;\r\n    }\r\n    function changeMaxStake(uint256 newMaxStake) public virtual onlyOwner {\r\n        maxStake = newMaxStake;\r\n    }\r\n    function changeMinStake(uint256 newMinStake) public virtual onlyOwner {\r\n        minStake = newMinStake;\r\n    }\r\n\r\n    function changeFullUnlock(bool newFullUnlock) public virtual onlyOwner {\r\n        fullUnlock = newFullUnlock;\r\n    }\r\n    \r\n    function balanceOf(address walletAddress) public view returns (uint256) {\r\n        uint256 balance = box1Balance[walletAddress] + box2Balance[walletAddress] + box3Balance[walletAddress] + box4Balance[walletAddress];\r\n\r\n        return balance;\r\n    }\r\n\r\n    function stakeUnlockTime(address walletAddress, uint256 boxNo) public view returns (uint256) {\r\n        if (boxNo == 1) {\r\n            return box1DepositDate[walletAddress].add(box1Time);\r\n        }\r\n        if (boxNo == 2) {\r\n            return box2DepositDate[walletAddress].add(box2Time);\r\n        }\r\n        if (boxNo == 3) {\r\n            return box3DepositDate[walletAddress].add(box3Time);\r\n        }\r\n        if (boxNo == 4) {\r\n            return box4DepositDate[walletAddress].add(box4Time);\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function stakeAmount(address walletAddress, uint256 boxNo) public view returns (uint256) {\r\n        if (boxNo == 1) {\r\n            return box1Balance[walletAddress];\r\n        }\r\n        if (boxNo == 2) {\r\n            return box2Balance[walletAddress];\r\n        }\r\n        if (boxNo == 3) {\r\n            return box3Balance[walletAddress];\r\n        }\r\n        if (boxNo == 4) {\r\n            return box4Balance[walletAddress];\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    // Add stake\r\n    function addStake(uint256 tokenAmount, uint256 boxNo) public {\r\n        address from = msg.sender;        \r\n        uint256 rewardAmount = 0;\r\n\r\n        require(maxRewardDue >= rewardCount, \"Staking on this contract has ended!\");\r\n        require(boxNo == 1 || boxNo == 2 || boxNo == 3 || boxNo == 4, \"Invalid product ID.\");\r\n        require(tokenAmount >= minStake, \"Staked amount must be higher.\");\r\n        require(tokenAmount <= maxStake, \"Staked amount must be lower.\");\r\n        require(fullUnlock == false, \"Staking is currently in unlocked mode.\");\r\n\r\n        if (boxNo == 1) {\r\n            require(box1Enabled == true, \"This staking product is disabled.\");\r\n            require(box1Balance[from] == 0, \"This wallet has already staked on this product - wait for the release to re-stake.\");\r\n            rewardAmount = tokenAmount.div(box1Rate);\r\n            box1DepositDate[from] = block.timestamp;\r\n            box1Balance[from] = tokenAmount;\r\n        }\r\n        if (boxNo == 2) {\r\n            require(box2Enabled == true, \"This staking product is disabled.\");\r\n            require(box2Balance[from] == 0, \"This wallet has already staked on this product - wait for the release to re-stake.\");\r\n            rewardAmount = tokenAmount.div(box2Rate);\r\n            box2DepositDate[from] = block.timestamp;\r\n            box2Balance[from] = tokenAmount;\r\n        }\r\n        if (boxNo == 3) {\r\n            require(box3Enabled == true, \"This staking product is disabled.\");\r\n            require(box3Balance[from] == 0, \"This wallet has already staked on this product - wait for the release to re-stake.\");\r\n            rewardAmount = tokenAmount.div(box3Rate);\r\n            box3DepositDate[from] = block.timestamp;\r\n            box3Balance[from] = tokenAmount;\r\n        }\r\n        if (boxNo == 4) {\r\n            require(box4Enabled == true, \"This staking product is disabled.\");\r\n            require(box4Balance[from] == 0, \"This wallet has already staked on this product - wait for the release to re-stake.\");\r\n            rewardAmount = tokenAmount.div(box4Rate);\r\n            box4DepositDate[from] = block.timestamp;\r\n            box4Balance[from] = tokenAmount;\r\n        }\r\n\r\n        rewardCountDue = rewardCountDue.add(rewardAmount);\r\n        totalStaked = totalStaked.add(tokenAmount);\r\n\r\n        LandFiToken landFiTokenI = LandFiToken(tokenAddress); // Connect to landFi Token contract\r\n        landFiTokenI.transferFrom(from, stakeWallet, tokenAmount); // Send staked tokens from staker to stake wallet\r\n\r\n        return;\r\n    }\r\n\r\n    // Remove stake\r\n    function pullStake(uint256 boxNo) public {\r\n        address from = msg.sender;        \r\n        uint256 rewardAmount = 0;     \r\n        uint256 tokenAmount = 0;\r\n\r\n        require(boxNo == 1 || boxNo == 2 || boxNo == 3 || boxNo == 4, \"Invalid product ID.\");\r\n\r\n        if (boxNo == 1) {\r\n            require(box1Balance[from] > 0, \"This wallet has no stake on this product.\");\r\n\r\n            if (!fullUnlock) {\r\n                require(box1DepositDate[from].add(box1Time) <= block.timestamp, \"The staking period for this product has not ended yet.\");\r\n            }\r\n\r\n            rewardAmount = box1Balance[from].div(box1Rate);\r\n            tokenAmount = box1Balance[from];\r\n            box1Balance[from] = 0;\r\n            box1DepositDate[from] = 0;\r\n        }\r\n        if (boxNo == 2) {\r\n            require(box2Balance[from] > 0, \"This wallet has no stake on this product.\");\r\n\r\n            if (!fullUnlock) {\r\n                require(box2DepositDate[from].add(box2Time) <= block.timestamp, \"The staking period for this product has not ended yet.\");\r\n            }\r\n\r\n            rewardAmount = box2Balance[from].div(box2Rate);\r\n            tokenAmount = box2Balance[from];\r\n            box2Balance[from] = 0;\r\n            box2DepositDate[from] = 0;\r\n        }\r\n        if (boxNo == 3) {\r\n            require(box3Balance[from] > 0, \"This wallet has no stake on this product.\");\r\n\r\n            if (!fullUnlock) {\r\n                require(box3DepositDate[from].add(box3Time) <= block.timestamp, \"The staking period for this product has not ended yet.\");\r\n            }\r\n\r\n            rewardAmount = box3Balance[from].div(box3Rate);\r\n            tokenAmount = box3Balance[from];\r\n            box3Balance[from] = 0;\r\n            box3DepositDate[from] = 0;\r\n        }\r\n\r\n        if (boxNo == 4) {\r\n            require(box4Balance[from] > 0, \"This wallet has no stake on this product.\");\r\n\r\n            if (!fullUnlock) {\r\n                require(box4DepositDate[from].add(box4Time) <= block.timestamp, \"The staking period for this product has not ended yet.\");\r\n            }\r\n\r\n            rewardAmount = box4Balance[from].div(box4Rate);\r\n            tokenAmount = box4Balance[from];\r\n            box4Balance[from] = 0;\r\n            box4DepositDate[from] = 0;\r\n        }\r\n\r\n        if (!fullUnlock) {\r\n            rewardCount = rewardCount.add(rewardAmount);\r\n            rewardCountDue = rewardCountDue.sub(rewardAmount);\r\n        }\r\n        \r\n        totalStaked = totalStaked.sub(tokenAmount);\r\n\r\n        LandFiToken landFiTokenI = LandFiToken(tokenAddress); // Connect to landFi Token contract\r\n        landFiTokenI.transferFrom(stakeWallet, from, tokenAmount); // Send staked tokens to staker from stake wallet\r\n\r\n        if (!fullUnlock) {\r\n            // Send REWARD tokens to staker from reward wallet\r\n            landFiTokenI.transferFrom(rewardWallet, from, rewardAmount); \r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n}"
			},
			"contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/LandFiStake.sol": {
				"LandFiStaking": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "boxNo",
									"type": "uint256"
								}
							],
							"name": "addStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box1Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box1DepositDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box1Enabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box1Rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box1Time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box2Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box2DepositDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box2Enabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box2Rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box2Time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box3Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box3DepositDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box3Enabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box3Rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box3Time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box4Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "box4DepositDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box4Enabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box4Rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "box4Time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "newBox1Status",
									"type": "bool"
								}
							],
							"name": "changeBox1Status",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "newBox2Status",
									"type": "bool"
								}
							],
							"name": "changeBox2Status",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "newBox3Status",
									"type": "bool"
								}
							],
							"name": "changeBox3Status",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "newBox4Status",
									"type": "bool"
								}
							],
							"name": "changeBox4Status",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "newFullUnlock",
									"type": "bool"
								}
							],
							"name": "changeFullUnlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMaxRewardDue",
									"type": "uint256"
								}
							],
							"name": "changeMaxRewardDue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMaxStake",
									"type": "uint256"
								}
							],
							"name": "changeMaxStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newMinStake",
									"type": "uint256"
								}
							],
							"name": "changeMinStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fullUnlock",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxRewardDue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minStake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "boxNo",
									"type": "uint256"
								}
							],
							"name": "pullStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardCountDue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "boxNo",
									"type": "uint256"
								}
							],
							"name": "stakeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "walletAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "boxNo",
									"type": "uint256"
								}
							],
							"name": "stakeUnlockTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LandFiStake.sol\":654:11378  contract LandFiStaking is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/LandFiStake.sol\":2609:3598  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_6\n    /* \"contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_7)\n    /* \"contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"contracts/LandFiStake.sol\":2651:2652  0 */\n  0x00\n    /* \"contracts/LandFiStake.sol\":2634:2648  rewardCountDue */\n  0x1a\n    /* \"contracts/LandFiStake.sol\":2634:2652  rewardCountDue = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":2677:2678  0 */\n  0x00\n    /* \"contracts/LandFiStake.sol\":2663:2674  rewardCount */\n  0x1b\n    /* \"contracts/LandFiStake.sol\":2663:2678  rewardCount = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":2703:2704  0 */\n  0x00\n    /* \"contracts/LandFiStake.sol\":2689:2700  totalStaked */\n  0x1c\n    /* \"contracts/LandFiStake.sol\":2689:2704  totalStaked = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":2730:2751  400000000000000000000 */\n  0x15af1d78b58c400000\n    /* \"contracts/LandFiStake.sol\":2715:2723  maxStake */\n  0x15\n    /* \"contracts/LandFiStake.sol\":2715:2751  maxStake =     400000000000000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":2785:2806  500000000000000000000 */\n  0x1b1ae4d6e2ef500000\n    /* \"contracts/LandFiStake.sol\":2770:2782  maxRewardDue */\n  0x1d\n    /* \"contracts/LandFiStake.sol\":2770:2806  maxRewardDue = 500000000000000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":2840:2857  10000000000000000 */\n  0x2386f26fc10000\n    /* \"contracts/LandFiStake.sol\":2825:2833  minStake */\n  0x19\n    /* \"contracts/LandFiStake.sol\":2825:2857  minStake =     10000000000000000 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":2889:2931  0x439AaB0EFaa9a646D4885Fd8a245A501Ca3D3237 */\n  0x439aab0efaa9a646d4885fd8a245a501ca3d3237\n    /* \"contracts/LandFiStake.sol\":2875:2886  stakeWallet */\n  0x16\n  0x00\n    /* \"contracts/LandFiStake.sol\":2875:2931  stakeWallet = 0x439AaB0EFaa9a646D4885Fd8a245A501Ca3D3237 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":2957:2999  0xb2C8CEc19bF5E73b28aa0193FFff124055413E2E */\n  0xb2c8cec19bf5e73b28aa0193ffff124055413e2e\n    /* \"contracts/LandFiStake.sol\":2942:2954  rewardWallet */\n  0x17\n  0x00\n    /* \"contracts/LandFiStake.sol\":2942:2999  rewardWallet = 0xb2C8CEc19bF5E73b28aa0193FFff124055413E2E */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3025:3067  0x5c647208486231becCABAACf5F2B7358937D3b99 */\n  0x5c647208486231beccabaacf5f2b7358937d3b99\n    /* \"contracts/LandFiStake.sol\":3010:3022  tokenAddress */\n  0x18\n  0x00\n    /* \"contracts/LandFiStake.sol\":3010:3067  tokenAddress = 0x5c647208486231becCABAACf5F2B7358937D3b99 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3091:3096  false */\n  0x00\n    /* \"contracts/LandFiStake.sol\":3078:3088  fullUnlock */\n  0x1e\n  0x00\n    /* \"contracts/LandFiStake.sol\":3078:3096  fullUnlock = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3138:3141  333 */\n  0x014d\n    /* \"contracts/LandFiStake.sol\":3127:3135  box1Rate */\n  0x03\n    /* \"contracts/LandFiStake.sol\":3127:3141  box1Rate = 333 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3163:3169  604800 */\n  0x093a80\n    /* \"contracts/LandFiStake.sol\":3152:3160  box1Time */\n  0x04\n    /* \"contracts/LandFiStake.sol\":3152:3169  box1Time = 604800 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3214:3218  true */\n  0x01\n    /* \"contracts/LandFiStake.sol\":3200:3211  box1Enabled */\n  0x05\n  0x00\n    /* \"contracts/LandFiStake.sol\":3200:3218  box1Enabled = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3260:3262  83 */\n  0x53\n    /* \"contracts/LandFiStake.sol\":3249:3257  box2Rate */\n  0x08\n    /* \"contracts/LandFiStake.sol\":3249:3262  box2Rate = 83 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3284:3291  1209600 */\n  0x127500\n    /* \"contracts/LandFiStake.sol\":3273:3281  box2Time */\n  0x09\n    /* \"contracts/LandFiStake.sol\":3273:3291  box2Time = 1209600 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3338:3342  true */\n  0x01\n    /* \"contracts/LandFiStake.sol\":3324:3335  box2Enabled */\n  0x0a\n  0x00\n    /* \"contracts/LandFiStake.sol\":3324:3342  box2Enabled = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3384:3386  32 */\n  0x20\n    /* \"contracts/LandFiStake.sol\":3373:3381  box3Rate */\n  0x0d\n    /* \"contracts/LandFiStake.sol\":3373:3386  box3Rate = 32 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3408:3415  2419200 */\n  0x24ea00\n    /* \"contracts/LandFiStake.sol\":3397:3405  box3Time */\n  0x0e\n    /* \"contracts/LandFiStake.sol\":3397:3415  box3Time = 2419200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3462:3466  true */\n  0x01\n    /* \"contracts/LandFiStake.sol\":3448:3459  box3Enabled */\n  0x0f\n  0x00\n    /* \"contracts/LandFiStake.sol\":3448:3466  box3Enabled = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3508:3510  26 */\n  0x1a\n    /* \"contracts/LandFiStake.sol\":3497:3505  box4Rate */\n  0x12\n    /* \"contracts/LandFiStake.sol\":3497:3510  box4Rate = 26 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3532:3539  2419200 */\n  0x24ea00\n    /* \"contracts/LandFiStake.sol\":3521:3529  box4Time */\n  0x13\n    /* \"contracts/LandFiStake.sol\":3521:3539  box4Time = 2419200 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":3586:3590  true */\n  0x01\n    /* \"contracts/LandFiStake.sol\":3572:3583  box4Enabled */\n  0x14\n  0x00\n    /* \"contracts/LandFiStake.sol\":3572:3590  box4Enabled = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/LandFiStake.sol\":654:11378  contract LandFiStaking is Ownable {... */\n  jump(tag_10)\n    /* \"contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  0x00\n    /* \"contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/LandFiStake.sol\":654:11378  contract LandFiStaking is Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LandFiStake.sol\":654:11378  contract LandFiStaking is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_49\n      jumpi\n      dup1\n      0xd0bcc009\n      gt\n      tag_50\n      jumpi\n      dup1\n      0xea1b28e0\n      gt\n      tag_51\n      jumpi\n      dup1\n      0xea1b28e0\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xf1cddd55\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xf908dc13\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xfb75b2c7\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xfd2b5202\n      eq\n      tag_48\n      jumpi\n      jump(tag_2)\n    tag_51:\n      dup1\n      0xd0bcc009\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xd19b090e\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xd47c56e5\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xd5c41d69\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xd7d4918e\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xe7de2ceb\n      eq\n      tag_42\n      jumpi\n      jump(tag_2)\n    tag_50:\n      dup1\n      0x9d76ea58\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x9d76ea58\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xb39dc996\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xbba4fefd\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xbef7d12e\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xc3630edb\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xcd5692ee\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_52:\n      dup1\n      0x817b1cd2\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x89b0040a\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x8a170ac1\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x94387289\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_49:\n      dup1\n      0x4b0c10d8\n      gt\n      tag_53\n      jumpi\n      dup1\n      0x70a08231\n      gt\n      tag_54\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x73dec718\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x79085425\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x798cbe5e\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x7b3e920c\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_54:\n      dup1\n      0x4b0c10d8\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4b5effc2\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4f51d090\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5cd5a159\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5f75bcea\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6cbde5cf\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_53:\n      dup1\n      0x24ebd9d2\n      gt\n      tag_55\n      jumpi\n      dup1\n      0x24ebd9d2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2e5f89ef\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x35e63055\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x375b3c0a\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x38dc97fb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4893afc1\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_55:\n      dup1\n      0x058df0e8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0f9154b5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1d95985b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1d95d52f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23dcdb89\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/LandFiStake.sol\":994:1041  mapping (address => uint256) public box2Balance */\n    tag_3:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1858:1884  address public stakeWallet */\n    tag_4:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1354:1377  uint256 public box3Time */\n    tag_5:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":3975:4092  function changeBox4Status(bool newBox4Status) public virtual onlyOwner {... */\n    tag_6:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/LandFiStake.sol\":4348:4459  function changeMinStake(uint256 newMinStake) public virtual onlyOwner {... */\n    tag_7:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/LandFiStake.sol\":1430:1477  mapping (address => uint256) public box4Balance */\n    tag_8:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1212:1259  mapping (address => uint256) public box3Balance */\n    tag_9:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":8453:11373  function pullStake(uint256 boxNo) public {... */\n    tag_10:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/LandFiStake.sol\":2108:2131  uint256 public minStake */\n    tag_11:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1484:1535  mapping (address => uint256) public box4DepositDate */\n    tag_12:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":776:823  mapping (address => uint256) public box1Balance */\n    tag_13:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":918:941  uint256 public box1Time */\n    tag_14:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":5398:5860  function stakeAmount(address walletAddress, uint256 boxNo) public view returns (uint256) {... */\n    tag_15:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":830:881  mapping (address => uint256) public box1DepositDate */\n    tag_16:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1602:1625  bool public box4Enabled */\n    tag_17:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":3729:3846  function changeBox2Status(bool newBox2Status) public virtual onlyOwner {... */\n    tag_18:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      stop\n        /* \"contracts/LandFiStake.sol\":3606:3723  function changeBox1Status(bool newBox1Status) public virtual onlyOwner {... */\n    tag_19:\n      tag_118\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n    tag_118:\n      stop\n        /* \"contracts/LandFiStake.sol\":4595:4844  function balanceOf(address walletAddress) public view returns (uint256) {... */\n    tag_20:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_21:\n      tag_125\n      tag_126\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/LandFiStake.sol\":1166:1189  bool public box2Enabled */\n    tag_22:\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":2272:2298  uint256 public rewardCount */\n    tag_23:\n      tag_130\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1572:1595  uint256 public box4Time */\n    tag_24:\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1048:1099  mapping (address => uint256) public box2DepositDate */\n    tag_25:\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":2349:2375  uint256 public totalStaked */\n    tag_26:\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1266:1317  mapping (address => uint256) public box3DepositDate */\n    tag_27:\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":948:971  bool public box1Enabled */\n    tag_28:\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_29:\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":4098:4225  function changeMaxRewardDue(uint256 newMaxRewardDue) public virtual onlyOwner {... */\n    tag_30:\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n    tag_153:\n      stop\n        /* \"contracts/LandFiStake.sol\":2003:2030  address public tokenAddress */\n    tag_31:\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      tag_158\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1324:1347  uint256 public box3Rate */\n    tag_32:\n      tag_159\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      tag_161\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":2183:2212  uint256 public rewardCountDue */\n    tag_33:\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":4852:5390  function stakeUnlockTime(address walletAddress, uint256 boxNo) public view returns (uint256) {... */\n    tag_34:\n      tag_165\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_104\n      jump\t// in\n    tag_166:\n      tag_167\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1542:1565  uint256 public box4Rate */\n    tag_35:\n      tag_169\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      tag_171\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":4231:4342  function changeMaxStake(uint256 newMaxStake) public virtual onlyOwner {... */\n    tag_36:\n      tag_172\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_173\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_173:\n      tag_174\n      jump\t// in\n    tag_172:\n      stop\n        /* \"contracts/LandFiStake.sol\":1384:1407  bool public box3Enabled */\n    tag_37:\n      tag_175\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":2484:2511  uint256 public maxRewardDue */\n    tag_38:\n      tag_178\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      tag_180\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1136:1159  uint256 public box2Time */\n    tag_39:\n      tag_181\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":3852:3969  function changeBox3Status(bool newBox3Status) public virtual onlyOwner {... */\n    tag_40:\n      tag_184\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_185:\n      tag_186\n      jump\t// in\n    tag_184:\n      stop\n        /* \"contracts/LandFiStake.sol\":1106:1129  uint256 public box2Rate */\n    tag_41:\n      tag_187\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":888:911  uint256 public box1Rate */\n    tag_42:\n      tag_190\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1789:1812  uint256 public maxStake */\n    tag_43:\n      tag_193\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      tag_195\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":4467:4583  function changeFullUnlock(bool newFullUnlock) public virtual onlyOwner {... */\n    tag_44:\n      tag_196\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_197:\n      tag_198\n      jump\t// in\n    tag_196:\n      stop\n        /* \"contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_45:\n      tag_199\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_200:\n      tag_201\n      jump\t// in\n    tag_199:\n      stop\n        /* \"contracts/LandFiStake.sol\":2578:2600  bool public fullUnlock */\n    tag_46:\n      tag_202\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      tag_204\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":1931:1958  address public rewardWallet */\n    tag_47:\n      tag_205\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      tag_207\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LandFiStake.sol\":5886:8424  function addStake(uint256 tokenAmount, uint256 boxNo) public {... */\n    tag_48:\n      tag_208\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      tag_211\n      jump\t// in\n    tag_208:\n      stop\n        /* \"contracts/LandFiStake.sol\":994:1041  mapping (address => uint256) public box2Balance */\n    tag_59:\n      mstore(0x20, 0x06)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1858:1884  address public stakeWallet */\n    tag_63:\n      0x16\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1354:1377  uint256 public box3Time */\n    tag_67:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":3975:4092  function changeBox4Status(bool newBox4Status) public virtual onlyOwner {... */\n    tag_72:\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_213\n        /* \"contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_214\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_215\n        /* \"contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_151\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_215:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"contracts/LandFiStake.sol\":4071:4084  newBox4Status */\n      dup1\n        /* \"contracts/LandFiStake.sol\":4057:4068  box4Enabled */\n      0x14\n      0x00\n        /* \"contracts/LandFiStake.sol\":4057:4084  box4Enabled = newBox4Status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":3975:4092  function changeBox4Status(bool newBox4Status) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":4348:4459  function changeMinStake(uint256 newMinStake) public virtual onlyOwner {... */\n    tag_76:\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_221\n        /* \"contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_214\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_222\n        /* \"contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_151\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_218\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"contracts/LandFiStake.sol\":4440:4451  newMinStake */\n      dup1\n        /* \"contracts/LandFiStake.sol\":4429:4437  minStake */\n      0x19\n        /* \"contracts/LandFiStake.sol\":4429:4451  minStake = newMinStake */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":4348:4459  function changeMinStake(uint256 newMinStake) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1430:1477  mapping (address => uint256) public box4Balance */\n    tag_79:\n      mstore(0x20, 0x10)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1212:1259  mapping (address => uint256) public box3Balance */\n    tag_83:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":8453:11373  function pullStake(uint256 boxNo) public {... */\n    tag_87:\n        /* \"contracts/LandFiStake.sol\":8505:8517  address from */\n      0x00\n        /* \"contracts/LandFiStake.sol\":8520:8530  msg.sender */\n      caller\n        /* \"contracts/LandFiStake.sol\":8505:8530  address from = msg.sender */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":8549:8569  uint256 rewardAmount */\n      0x00\n        /* \"contracts/LandFiStake.sol\":8572:8573  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":8549:8573  uint256 rewardAmount = 0 */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":8589:8608  uint256 tokenAmount */\n      0x00\n        /* \"contracts/LandFiStake.sol\":8611:8612  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":8589:8612  uint256 tokenAmount = 0 */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":8642:8643  1 */\n      0x01\n        /* \"contracts/LandFiStake.sol\":8633:8638  boxNo */\n      dup5\n        /* \"contracts/LandFiStake.sol\":8633:8643  boxNo == 1 */\n      eq\n        /* \"contracts/LandFiStake.sol\":8633:8657  boxNo == 1 || boxNo == 2 */\n      dup1\n      tag_227\n      jumpi\n      pop\n        /* \"contracts/LandFiStake.sol\":8656:8657  2 */\n      0x02\n        /* \"contracts/LandFiStake.sol\":8647:8652  boxNo */\n      dup5\n        /* \"contracts/LandFiStake.sol\":8647:8657  boxNo == 2 */\n      eq\n        /* \"contracts/LandFiStake.sol\":8633:8657  boxNo == 1 || boxNo == 2 */\n    tag_227:\n        /* \"contracts/LandFiStake.sol\":8633:8671  boxNo == 1 || boxNo == 2 || boxNo == 3 */\n      dup1\n      tag_228\n      jumpi\n      pop\n        /* \"contracts/LandFiStake.sol\":8670:8671  3 */\n      0x03\n        /* \"contracts/LandFiStake.sol\":8661:8666  boxNo */\n      dup5\n        /* \"contracts/LandFiStake.sol\":8661:8671  boxNo == 3 */\n      eq\n        /* \"contracts/LandFiStake.sol\":8633:8671  boxNo == 1 || boxNo == 2 || boxNo == 3 */\n    tag_228:\n        /* \"contracts/LandFiStake.sol\":8633:8685  boxNo == 1 || boxNo == 2 || boxNo == 3 || boxNo == 4 */\n      dup1\n      tag_229\n      jumpi\n      pop\n        /* \"contracts/LandFiStake.sol\":8684:8685  4 */\n      0x04\n        /* \"contracts/LandFiStake.sol\":8675:8680  boxNo */\n      dup5\n        /* \"contracts/LandFiStake.sol\":8675:8685  boxNo == 4 */\n      eq\n        /* \"contracts/LandFiStake.sol\":8633:8685  boxNo == 1 || boxNo == 2 || boxNo == 3 || boxNo == 4 */\n    tag_229:\n        /* \"contracts/LandFiStake.sol\":8625:8709  require(boxNo == 1 || boxNo == 2 || boxNo == 3 || boxNo == 4, \"Invalid product ID.\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"contracts/LandFiStake.sol\":8735:8736  1 */\n      0x01\n        /* \"contracts/LandFiStake.sol\":8726:8731  boxNo */\n      dup5\n        /* \"contracts/LandFiStake.sol\":8726:8736  boxNo == 1 */\n      sub\n        /* \"contracts/LandFiStake.sol\":8722:9214  if (boxNo == 1) {... */\n      tag_233\n      jumpi\n        /* \"contracts/LandFiStake.sol\":8781:8782  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":8761:8772  box1Balance */\n      0x01\n        /* \"contracts/LandFiStake.sol\":8761:8778  box1Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":8773:8777  from */\n      dup6\n        /* \"contracts/LandFiStake.sol\":8761:8778  box1Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":8761:8782  box1Balance[from] > 0 */\n      gt\n        /* \"contracts/LandFiStake.sol\":8753:8828  require(box1Balance[from] > 0, \"This wallet has no stake on this product.\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"contracts/LandFiStake.sol\":8850:8860  fullUnlock */\n      0x1e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake.sol\":8845:9018  if (!fullUnlock) {... */\n      tag_237\n      jumpi\n        /* \"contracts/LandFiStake.sol\":8928:8943  block.timestamp */\n      timestamp\n        /* \"contracts/LandFiStake.sol\":8889:8924  box1DepositDate[from].add(box1Time) */\n      tag_238\n        /* \"contracts/LandFiStake.sol\":8915:8923  box1Time */\n      sload(0x04)\n        /* \"contracts/LandFiStake.sol\":8889:8904  box1DepositDate */\n      0x02\n        /* \"contracts/LandFiStake.sol\":8889:8910  box1DepositDate[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":8905:8909  from */\n      dup8\n        /* \"contracts/LandFiStake.sol\":8889:8910  box1DepositDate[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":8889:8914  box1DepositDate[from].add */\n      tag_239\n      swap1\n        /* \"contracts/LandFiStake.sol\":8889:8924  box1DepositDate[from].add(box1Time) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_238:\n        /* \"contracts/LandFiStake.sol\":8889:8943  box1DepositDate[from].add(box1Time) <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/LandFiStake.sol\":8881:9002  require(box1DepositDate[from].add(box1Time) <= block.timestamp, \"The staking period for this product has not ended yet.\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"contracts/LandFiStake.sol\":8845:9018  if (!fullUnlock) {... */\n    tag_237:\n        /* \"contracts/LandFiStake.sol\":9049:9080  box1Balance[from].div(box1Rate) */\n      tag_243\n        /* \"contracts/LandFiStake.sol\":9071:9079  box1Rate */\n      sload(0x03)\n        /* \"contracts/LandFiStake.sol\":9049:9060  box1Balance */\n      0x01\n        /* \"contracts/LandFiStake.sol\":9049:9066  box1Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9061:9065  from */\n      dup7\n        /* \"contracts/LandFiStake.sol\":9049:9066  box1Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":9049:9070  box1Balance[from].div */\n      tag_244\n      swap1\n        /* \"contracts/LandFiStake.sol\":9049:9080  box1Balance[from].div(box1Rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"contracts/LandFiStake.sol\":9034:9080  rewardAmount = box1Balance[from].div(box1Rate) */\n      swap2\n      pop\n        /* \"contracts/LandFiStake.sol\":9109:9120  box1Balance */\n      0x01\n        /* \"contracts/LandFiStake.sol\":9109:9126  box1Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9121:9125  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":9109:9126  box1Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":9095:9126  tokenAmount = box1Balance[from] */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":9161:9162  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9141:9152  box1Balance */\n      0x01\n        /* \"contracts/LandFiStake.sol\":9141:9158  box1Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9153:9157  from */\n      dup6\n        /* \"contracts/LandFiStake.sol\":9141:9158  box1Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":9141:9162  box1Balance[from] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":9201:9202  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9177:9192  box1DepositDate */\n      0x02\n        /* \"contracts/LandFiStake.sol\":9177:9198  box1DepositDate[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9193:9197  from */\n      dup6\n        /* \"contracts/LandFiStake.sol\":9177:9198  box1DepositDate[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":9177:9202  box1DepositDate[from] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":8722:9214  if (boxNo == 1) {... */\n    tag_233:\n        /* \"contracts/LandFiStake.sol\":9237:9238  2 */\n      0x02\n        /* \"contracts/LandFiStake.sol\":9228:9233  boxNo */\n      dup5\n        /* \"contracts/LandFiStake.sol\":9228:9238  boxNo == 2 */\n      sub\n        /* \"contracts/LandFiStake.sol\":9224:9716  if (boxNo == 2) {... */\n      tag_245\n      jumpi\n        /* \"contracts/LandFiStake.sol\":9283:9284  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9263:9274  box2Balance */\n      0x06\n        /* \"contracts/LandFiStake.sol\":9263:9280  box2Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9275:9279  from */\n      dup6\n        /* \"contracts/LandFiStake.sol\":9263:9280  box2Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":9263:9284  box2Balance[from] > 0 */\n      gt\n        /* \"contracts/LandFiStake.sol\":9255:9330  require(box2Balance[from] > 0, \"This wallet has no stake on this product.\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap1\n      tag_236\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"contracts/LandFiStake.sol\":9352:9362  fullUnlock */\n      0x1e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake.sol\":9347:9520  if (!fullUnlock) {... */\n      tag_248\n      jumpi\n        /* \"contracts/LandFiStake.sol\":9430:9445  block.timestamp */\n      timestamp\n        /* \"contracts/LandFiStake.sol\":9391:9426  box2DepositDate[from].add(box2Time) */\n      tag_249\n        /* \"contracts/LandFiStake.sol\":9417:9425  box2Time */\n      sload(0x09)\n        /* \"contracts/LandFiStake.sol\":9391:9406  box2DepositDate */\n      0x07\n        /* \"contracts/LandFiStake.sol\":9391:9412  box2DepositDate[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9407:9411  from */\n      dup8\n        /* \"contracts/LandFiStake.sol\":9391:9412  box2DepositDate[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":9391:9416  box2DepositDate[from].add */\n      tag_239\n      swap1\n        /* \"contracts/LandFiStake.sol\":9391:9426  box2DepositDate[from].add(box2Time) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_249:\n        /* \"contracts/LandFiStake.sol\":9391:9445  box2DepositDate[from].add(box2Time) <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/LandFiStake.sol\":9383:9504  require(box2DepositDate[from].add(box2Time) <= block.timestamp, \"The staking period for this product has not ended yet.\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap1\n      tag_242\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"contracts/LandFiStake.sol\":9347:9520  if (!fullUnlock) {... */\n    tag_248:\n        /* \"contracts/LandFiStake.sol\":9551:9582  box2Balance[from].div(box2Rate) */\n      tag_252\n        /* \"contracts/LandFiStake.sol\":9573:9581  box2Rate */\n      sload(0x08)\n        /* \"contracts/LandFiStake.sol\":9551:9562  box2Balance */\n      0x06\n        /* \"contracts/LandFiStake.sol\":9551:9568  box2Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9563:9567  from */\n      dup7\n        /* \"contracts/LandFiStake.sol\":9551:9568  box2Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":9551:9572  box2Balance[from].div */\n      tag_244\n      swap1\n        /* \"contracts/LandFiStake.sol\":9551:9582  box2Balance[from].div(box2Rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"contracts/LandFiStake.sol\":9536:9582  rewardAmount = box2Balance[from].div(box2Rate) */\n      swap2\n      pop\n        /* \"contracts/LandFiStake.sol\":9611:9622  box2Balance */\n      0x06\n        /* \"contracts/LandFiStake.sol\":9611:9628  box2Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9623:9627  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":9611:9628  box2Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":9597:9628  tokenAmount = box2Balance[from] */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":9663:9664  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9643:9654  box2Balance */\n      0x06\n        /* \"contracts/LandFiStake.sol\":9643:9660  box2Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9655:9659  from */\n      dup6\n        /* \"contracts/LandFiStake.sol\":9643:9660  box2Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":9643:9664  box2Balance[from] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":9703:9704  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9679:9694  box2DepositDate */\n      0x07\n        /* \"contracts/LandFiStake.sol\":9679:9700  box2DepositDate[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9695:9699  from */\n      dup6\n        /* \"contracts/LandFiStake.sol\":9679:9700  box2DepositDate[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":9679:9704  box2DepositDate[from] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":9224:9716  if (boxNo == 2) {... */\n    tag_245:\n        /* \"contracts/LandFiStake.sol\":9739:9740  3 */\n      0x03\n        /* \"contracts/LandFiStake.sol\":9730:9735  boxNo */\n      dup5\n        /* \"contracts/LandFiStake.sol\":9730:9740  boxNo == 3 */\n      sub\n        /* \"contracts/LandFiStake.sol\":9726:10218  if (boxNo == 3) {... */\n      tag_253\n      jumpi\n        /* \"contracts/LandFiStake.sol\":9785:9786  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9765:9776  box3Balance */\n      0x0b\n        /* \"contracts/LandFiStake.sol\":9765:9782  box3Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9777:9781  from */\n      dup6\n        /* \"contracts/LandFiStake.sol\":9765:9782  box3Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":9765:9786  box3Balance[from] > 0 */\n      gt\n        /* \"contracts/LandFiStake.sol\":9757:9832  require(box3Balance[from] > 0, \"This wallet has no stake on this product.\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_236\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"contracts/LandFiStake.sol\":9854:9864  fullUnlock */\n      0x1e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake.sol\":9849:10022  if (!fullUnlock) {... */\n      tag_256\n      jumpi\n        /* \"contracts/LandFiStake.sol\":9932:9947  block.timestamp */\n      timestamp\n        /* \"contracts/LandFiStake.sol\":9893:9928  box3DepositDate[from].add(box3Time) */\n      tag_257\n        /* \"contracts/LandFiStake.sol\":9919:9927  box3Time */\n      sload(0x0e)\n        /* \"contracts/LandFiStake.sol\":9893:9908  box3DepositDate */\n      0x0c\n        /* \"contracts/LandFiStake.sol\":9893:9914  box3DepositDate[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":9909:9913  from */\n      dup8\n        /* \"contracts/LandFiStake.sol\":9893:9914  box3DepositDate[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":9893:9918  box3DepositDate[from].add */\n      tag_239\n      swap1\n        /* \"contracts/LandFiStake.sol\":9893:9928  box3DepositDate[from].add(box3Time) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:\n        /* \"contracts/LandFiStake.sol\":9893:9947  box3DepositDate[from].add(box3Time) <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/LandFiStake.sol\":9885:10006  require(box3DepositDate[from].add(box3Time) <= block.timestamp, \"The staking period for this product has not ended yet.\") */\n      tag_258\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap1\n      tag_242\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_258:\n        /* \"contracts/LandFiStake.sol\":9849:10022  if (!fullUnlock) {... */\n    tag_256:\n        /* \"contracts/LandFiStake.sol\":10053:10084  box3Balance[from].div(box3Rate) */\n      tag_260\n        /* \"contracts/LandFiStake.sol\":10075:10083  box3Rate */\n      sload(0x0d)\n        /* \"contracts/LandFiStake.sol\":10053:10064  box3Balance */\n      0x0b\n        /* \"contracts/LandFiStake.sol\":10053:10070  box3Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10065:10069  from */\n      dup7\n        /* \"contracts/LandFiStake.sol\":10053:10070  box3Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":10053:10074  box3Balance[from].div */\n      tag_244\n      swap1\n        /* \"contracts/LandFiStake.sol\":10053:10084  box3Balance[from].div(box3Rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_260:\n        /* \"contracts/LandFiStake.sol\":10038:10084  rewardAmount = box3Balance[from].div(box3Rate) */\n      swap2\n      pop\n        /* \"contracts/LandFiStake.sol\":10113:10124  box3Balance */\n      0x0b\n        /* \"contracts/LandFiStake.sol\":10113:10130  box3Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10125:10129  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":10113:10130  box3Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":10099:10130  tokenAmount = box3Balance[from] */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":10165:10166  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10145:10156  box3Balance */\n      0x0b\n        /* \"contracts/LandFiStake.sol\":10145:10162  box3Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10157:10161  from */\n      dup6\n        /* \"contracts/LandFiStake.sol\":10145:10162  box3Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":10145:10166  box3Balance[from] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":10205:10206  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10181:10196  box3DepositDate */\n      0x0c\n        /* \"contracts/LandFiStake.sol\":10181:10202  box3DepositDate[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10197:10201  from */\n      dup6\n        /* \"contracts/LandFiStake.sol\":10181:10202  box3DepositDate[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":10181:10206  box3DepositDate[from] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":9726:10218  if (boxNo == 3) {... */\n    tag_253:\n        /* \"contracts/LandFiStake.sol\":10243:10244  4 */\n      0x04\n        /* \"contracts/LandFiStake.sol\":10234:10239  boxNo */\n      dup5\n        /* \"contracts/LandFiStake.sol\":10234:10244  boxNo == 4 */\n      sub\n        /* \"contracts/LandFiStake.sol\":10230:10722  if (boxNo == 4) {... */\n      tag_261\n      jumpi\n        /* \"contracts/LandFiStake.sol\":10289:10290  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10269:10280  box4Balance */\n      0x10\n        /* \"contracts/LandFiStake.sol\":10269:10286  box4Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10281:10285  from */\n      dup6\n        /* \"contracts/LandFiStake.sol\":10269:10286  box4Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":10269:10290  box4Balance[from] > 0 */\n      gt\n        /* \"contracts/LandFiStake.sol\":10261:10336  require(box4Balance[from] > 0, \"This wallet has no stake on this product.\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap1\n      tag_236\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_262:\n        /* \"contracts/LandFiStake.sol\":10358:10368  fullUnlock */\n      0x1e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake.sol\":10353:10526  if (!fullUnlock) {... */\n      tag_264\n      jumpi\n        /* \"contracts/LandFiStake.sol\":10436:10451  block.timestamp */\n      timestamp\n        /* \"contracts/LandFiStake.sol\":10397:10432  box4DepositDate[from].add(box4Time) */\n      tag_265\n        /* \"contracts/LandFiStake.sol\":10423:10431  box4Time */\n      sload(0x13)\n        /* \"contracts/LandFiStake.sol\":10397:10412  box4DepositDate */\n      0x11\n        /* \"contracts/LandFiStake.sol\":10397:10418  box4DepositDate[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10413:10417  from */\n      dup8\n        /* \"contracts/LandFiStake.sol\":10397:10418  box4DepositDate[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":10397:10422  box4DepositDate[from].add */\n      tag_239\n      swap1\n        /* \"contracts/LandFiStake.sol\":10397:10432  box4DepositDate[from].add(box4Time) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_265:\n        /* \"contracts/LandFiStake.sol\":10397:10451  box4DepositDate[from].add(box4Time) <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/LandFiStake.sol\":10389:10510  require(box4DepositDate[from].add(box4Time) <= block.timestamp, \"The staking period for this product has not ended yet.\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_242\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"contracts/LandFiStake.sol\":10353:10526  if (!fullUnlock) {... */\n    tag_264:\n        /* \"contracts/LandFiStake.sol\":10557:10588  box4Balance[from].div(box4Rate) */\n      tag_268\n        /* \"contracts/LandFiStake.sol\":10579:10587  box4Rate */\n      sload(0x12)\n        /* \"contracts/LandFiStake.sol\":10557:10568  box4Balance */\n      0x10\n        /* \"contracts/LandFiStake.sol\":10557:10574  box4Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10569:10573  from */\n      dup7\n        /* \"contracts/LandFiStake.sol\":10557:10574  box4Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":10557:10578  box4Balance[from].div */\n      tag_244\n      swap1\n        /* \"contracts/LandFiStake.sol\":10557:10588  box4Balance[from].div(box4Rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/LandFiStake.sol\":10542:10588  rewardAmount = box4Balance[from].div(box4Rate) */\n      swap2\n      pop\n        /* \"contracts/LandFiStake.sol\":10617:10628  box4Balance */\n      0x10\n        /* \"contracts/LandFiStake.sol\":10617:10634  box4Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10629:10633  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":10617:10634  box4Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":10603:10634  tokenAmount = box4Balance[from] */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":10669:10670  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10649:10660  box4Balance */\n      0x10\n        /* \"contracts/LandFiStake.sol\":10649:10666  box4Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10661:10665  from */\n      dup6\n        /* \"contracts/LandFiStake.sol\":10649:10666  box4Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":10649:10670  box4Balance[from] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":10709:10710  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10685:10700  box4DepositDate */\n      0x11\n        /* \"contracts/LandFiStake.sol\":10685:10706  box4DepositDate[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10701:10705  from */\n      dup6\n        /* \"contracts/LandFiStake.sol\":10685:10706  box4DepositDate[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":10685:10710  box4DepositDate[from] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":10230:10722  if (boxNo == 4) {... */\n    tag_261:\n        /* \"contracts/LandFiStake.sol\":10739:10749  fullUnlock */\n      0x1e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake.sol\":10734:10885  if (!fullUnlock) {... */\n      tag_269\n      jumpi\n        /* \"contracts/LandFiStake.sol\":10780:10809  rewardCount.add(rewardAmount) */\n      tag_270\n        /* \"contracts/LandFiStake.sol\":10796:10808  rewardAmount */\n      dup3\n        /* \"contracts/LandFiStake.sol\":10780:10791  rewardCount */\n      sload(0x1b)\n        /* \"contracts/LandFiStake.sol\":10780:10795  rewardCount.add */\n      tag_239\n      swap1\n        /* \"contracts/LandFiStake.sol\":10780:10809  rewardCount.add(rewardAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_270:\n        /* \"contracts/LandFiStake.sol\":10766:10777  rewardCount */\n      0x1b\n        /* \"contracts/LandFiStake.sol\":10766:10809  rewardCount = rewardCount.add(rewardAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":10841:10873  rewardCountDue.sub(rewardAmount) */\n      tag_271\n        /* \"contracts/LandFiStake.sol\":10860:10872  rewardAmount */\n      dup3\n        /* \"contracts/LandFiStake.sol\":10841:10855  rewardCountDue */\n      sload(0x1a)\n        /* \"contracts/LandFiStake.sol\":10841:10859  rewardCountDue.sub */\n      tag_272\n      swap1\n        /* \"contracts/LandFiStake.sol\":10841:10873  rewardCountDue.sub(rewardAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"contracts/LandFiStake.sol\":10824:10838  rewardCountDue */\n      0x1a\n        /* \"contracts/LandFiStake.sol\":10824:10873  rewardCountDue = rewardCountDue.sub(rewardAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":10734:10885  if (!fullUnlock) {... */\n    tag_269:\n        /* \"contracts/LandFiStake.sol\":10919:10947  totalStaked.sub(tokenAmount) */\n      tag_273\n        /* \"contracts/LandFiStake.sol\":10935:10946  tokenAmount */\n      dup2\n        /* \"contracts/LandFiStake.sol\":10919:10930  totalStaked */\n      sload(0x1c)\n        /* \"contracts/LandFiStake.sol\":10919:10934  totalStaked.sub */\n      tag_272\n      swap1\n        /* \"contracts/LandFiStake.sol\":10919:10947  totalStaked.sub(tokenAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_273:\n        /* \"contracts/LandFiStake.sol\":10905:10916  totalStaked */\n      0x1c\n        /* \"contracts/LandFiStake.sol\":10905:10947  totalStaked = totalStaked.sub(tokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":10960:10984  LandFiToken landFiTokenI */\n      0x00\n        /* \"contracts/LandFiStake.sol\":10999:11011  tokenAddress */\n      0x18\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LandFiStake.sol\":10960:11012  LandFiToken landFiTokenI = LandFiToken(tokenAddress) */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":11059:11071  landFiTokenI */\n      dup1\n        /* \"contracts/LandFiStake.sol\":11059:11084  landFiTokenI.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LandFiStake.sol\":11085:11096  stakeWallet */\n      0x16\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LandFiStake.sol\":11098:11102  from */\n      dup7\n        /* \"contracts/LandFiStake.sol\":11104:11115  tokenAmount */\n      dup6\n        /* \"contracts/LandFiStake.sol\":11059:11116  landFiTokenI.transferFrom(stakeWallet, from, tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_277:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_278\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      pop\n        /* \"contracts/LandFiStake.sol\":11184:11194  fullUnlock */\n      0x1e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake.sol\":11179:11347  if (!fullUnlock) {... */\n      tag_280\n      jumpi\n        /* \"contracts/LandFiStake.sol\":11275:11287  landFiTokenI */\n      dup1\n        /* \"contracts/LandFiStake.sol\":11275:11300  landFiTokenI.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LandFiStake.sol\":11301:11313  rewardWallet */\n      0x17\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LandFiStake.sol\":11315:11319  from */\n      dup7\n        /* \"contracts/LandFiStake.sol\":11321:11333  rewardAmount */\n      dup7\n        /* \"contracts/LandFiStake.sol\":11275:11334  landFiTokenI.transferFrom(rewardWallet, from, rewardAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_281\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_281:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_283\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_283:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_284\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_284:\n      pop\n        /* \"contracts/LandFiStake.sol\":11179:11347  if (!fullUnlock) {... */\n    tag_280:\n        /* \"contracts/LandFiStake.sol\":11359:11366  return; */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/LandFiStake.sol\":8453:11373  function pullStake(uint256 boxNo) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":2108:2131  uint256 public minStake */\n    tag_89:\n      sload(0x19)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1484:1535  mapping (address => uint256) public box4DepositDate */\n    tag_93:\n      mstore(0x20, 0x11)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":776:823  mapping (address => uint256) public box1Balance */\n    tag_97:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":918:941  uint256 public box1Time */\n    tag_100:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":5398:5860  function stakeAmount(address walletAddress, uint256 boxNo) public view returns (uint256) {... */\n    tag_105:\n        /* \"contracts/LandFiStake.sol\":5478:5485  uint256 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":5511:5512  1 */\n      0x01\n        /* \"contracts/LandFiStake.sol\":5502:5507  boxNo */\n      dup3\n        /* \"contracts/LandFiStake.sol\":5502:5512  boxNo == 1 */\n      sub\n        /* \"contracts/LandFiStake.sol\":5498:5574  if (boxNo == 1) {... */\n      tag_286\n      jumpi\n        /* \"contracts/LandFiStake.sol\":5536:5547  box1Balance */\n      0x01\n        /* \"contracts/LandFiStake.sol\":5536:5562  box1Balance[walletAddress] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":5548:5561  walletAddress */\n      dup5\n        /* \"contracts/LandFiStake.sol\":5536:5562  box1Balance[walletAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":5529:5562  return box1Balance[walletAddress] */\n      swap1\n      pop\n      jump(tag_285)\n        /* \"contracts/LandFiStake.sol\":5498:5574  if (boxNo == 1) {... */\n    tag_286:\n        /* \"contracts/LandFiStake.sol\":5597:5598  2 */\n      0x02\n        /* \"contracts/LandFiStake.sol\":5588:5593  boxNo */\n      dup3\n        /* \"contracts/LandFiStake.sol\":5588:5598  boxNo == 2 */\n      sub\n        /* \"contracts/LandFiStake.sol\":5584:5660  if (boxNo == 2) {... */\n      tag_287\n      jumpi\n        /* \"contracts/LandFiStake.sol\":5622:5633  box2Balance */\n      0x06\n        /* \"contracts/LandFiStake.sol\":5622:5648  box2Balance[walletAddress] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":5634:5647  walletAddress */\n      dup5\n        /* \"contracts/LandFiStake.sol\":5622:5648  box2Balance[walletAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":5615:5648  return box2Balance[walletAddress] */\n      swap1\n      pop\n      jump(tag_285)\n        /* \"contracts/LandFiStake.sol\":5584:5660  if (boxNo == 2) {... */\n    tag_287:\n        /* \"contracts/LandFiStake.sol\":5683:5684  3 */\n      0x03\n        /* \"contracts/LandFiStake.sol\":5674:5679  boxNo */\n      dup3\n        /* \"contracts/LandFiStake.sol\":5674:5684  boxNo == 3 */\n      sub\n        /* \"contracts/LandFiStake.sol\":5670:5746  if (boxNo == 3) {... */\n      tag_288\n      jumpi\n        /* \"contracts/LandFiStake.sol\":5708:5719  box3Balance */\n      0x0b\n        /* \"contracts/LandFiStake.sol\":5708:5734  box3Balance[walletAddress] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":5720:5733  walletAddress */\n      dup5\n        /* \"contracts/LandFiStake.sol\":5708:5734  box3Balance[walletAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":5701:5734  return box3Balance[walletAddress] */\n      swap1\n      pop\n      jump(tag_285)\n        /* \"contracts/LandFiStake.sol\":5670:5746  if (boxNo == 3) {... */\n    tag_288:\n        /* \"contracts/LandFiStake.sol\":5769:5770  4 */\n      0x04\n        /* \"contracts/LandFiStake.sol\":5760:5765  boxNo */\n      dup3\n        /* \"contracts/LandFiStake.sol\":5760:5770  boxNo == 4 */\n      sub\n        /* \"contracts/LandFiStake.sol\":5756:5832  if (boxNo == 4) {... */\n      tag_289\n      jumpi\n        /* \"contracts/LandFiStake.sol\":5794:5805  box4Balance */\n      0x10\n        /* \"contracts/LandFiStake.sol\":5794:5820  box4Balance[walletAddress] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":5806:5819  walletAddress */\n      dup5\n        /* \"contracts/LandFiStake.sol\":5794:5820  box4Balance[walletAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":5787:5820  return box4Balance[walletAddress] */\n      swap1\n      pop\n      jump(tag_285)\n        /* \"contracts/LandFiStake.sol\":5756:5832  if (boxNo == 4) {... */\n    tag_289:\n        /* \"contracts/LandFiStake.sol\":5851:5852  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":5844:5852  return 0 */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":5398:5860  function stakeAmount(address walletAddress, uint256 boxNo) public view returns (uint256) {... */\n    tag_285:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":830:881  mapping (address => uint256) public box1DepositDate */\n    tag_109:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1602:1625  bool public box4Enabled */\n    tag_112:\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":3729:3846  function changeBox2Status(bool newBox2Status) public virtual onlyOwner {... */\n    tag_117:\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_291\n        /* \"contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_214\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_291:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_292\n        /* \"contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_151\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_292:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap1\n      tag_218\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_293:\n        /* \"contracts/LandFiStake.sol\":3825:3838  newBox2Status */\n      dup1\n        /* \"contracts/LandFiStake.sol\":3811:3822  box2Enabled */\n      0x0a\n      0x00\n        /* \"contracts/LandFiStake.sol\":3811:3838  box2Enabled = newBox2Status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":3729:3846  function changeBox2Status(bool newBox2Status) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":3606:3723  function changeBox1Status(bool newBox1Status) public virtual onlyOwner {... */\n    tag_120:\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_297\n        /* \"contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_214\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_297:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_298\n        /* \"contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_151\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_298:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap1\n      tag_218\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n        /* \"contracts/LandFiStake.sol\":3702:3715  newBox1Status */\n      dup1\n        /* \"contracts/LandFiStake.sol\":3688:3699  box1Enabled */\n      0x05\n      0x00\n        /* \"contracts/LandFiStake.sol\":3688:3715  box1Enabled = newBox1Status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":3606:3723  function changeBox1Status(bool newBox1Status) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":4595:4844  function balanceOf(address walletAddress) public view returns (uint256) {... */\n    tag_123:\n        /* \"contracts/LandFiStake.sol\":4658:4665  uint256 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":4678:4693  uint256 balance */\n      0x00\n        /* \"contracts/LandFiStake.sol\":4783:4794  box4Balance */\n      0x10\n        /* \"contracts/LandFiStake.sol\":4783:4809  box4Balance[walletAddress] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":4795:4808  walletAddress */\n      dup5\n        /* \"contracts/LandFiStake.sol\":4783:4809  box4Balance[walletAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":4754:4765  box3Balance */\n      0x0b\n        /* \"contracts/LandFiStake.sol\":4754:4780  box3Balance[walletAddress] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":4766:4779  walletAddress */\n      dup6\n        /* \"contracts/LandFiStake.sol\":4754:4780  box3Balance[walletAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":4725:4736  box2Balance */\n      0x06\n        /* \"contracts/LandFiStake.sol\":4725:4751  box2Balance[walletAddress] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":4737:4750  walletAddress */\n      dup7\n        /* \"contracts/LandFiStake.sol\":4725:4751  box2Balance[walletAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":4696:4707  box1Balance */\n      0x01\n        /* \"contracts/LandFiStake.sol\":4696:4722  box1Balance[walletAddress] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":4708:4721  walletAddress */\n      dup8\n        /* \"contracts/LandFiStake.sol\":4696:4722  box1Balance[walletAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":4696:4751  box1Balance[walletAddress] + box2Balance[walletAddress] */\n      tag_303\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"contracts/LandFiStake.sol\":4696:4780  box1Balance[walletAddress] + box2Balance[walletAddress] + box3Balance[walletAddress] */\n      tag_305\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_305:\n        /* \"contracts/LandFiStake.sol\":4696:4809  box1Balance[walletAddress] + box2Balance[walletAddress] + box3Balance[walletAddress] + box4Balance[walletAddress] */\n      tag_306\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_306:\n        /* \"contracts/LandFiStake.sol\":4678:4809  uint256 balance = box1Balance[walletAddress] + box2Balance[walletAddress] + box3Balance[walletAddress] + box4Balance[walletAddress] */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":4829:4836  balance */\n      dup1\n        /* \"contracts/LandFiStake.sol\":4822:4836  return balance */\n      swap2\n      pop\n      pop\n        /* \"contracts/LandFiStake.sol\":4595:4844  function balanceOf(address walletAddress) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_126:\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_308\n        /* \"contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_214\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_308:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_309\n        /* \"contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_151\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_309:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap1\n      tag_218\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_310:\n        /* \"contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_313\n        /* \"contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_314\n        /* \"contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_313:\n        /* \"contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1166:1189  bool public box2Enabled */\n    tag_128:\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":2272:2298  uint256 public rewardCount */\n    tag_131:\n      sload(0x1b)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1572:1595  uint256 public box4Time */\n    tag_134:\n      sload(0x13)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1048:1099  mapping (address => uint256) public box2DepositDate */\n    tag_138:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":2349:2375  uint256 public totalStaked */\n    tag_141:\n      sload(0x1c)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1266:1317  mapping (address => uint256) public box3DepositDate */\n    tag_145:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":948:971  bool public box1Enabled */\n    tag_148:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_151:\n        /* \"contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"contracts/access/Ownable.sol\":1108:1114  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":4098:4225  function changeMaxRewardDue(uint256 newMaxRewardDue) public virtual onlyOwner {... */\n    tag_155:\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_317\n        /* \"contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_214\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_317:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_318\n        /* \"contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_151\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_318:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap1\n      tag_218\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_319:\n        /* \"contracts/LandFiStake.sol\":4202:4217  newMaxRewardDue */\n      dup1\n        /* \"contracts/LandFiStake.sol\":4187:4199  maxRewardDue */\n      0x1d\n        /* \"contracts/LandFiStake.sol\":4187:4217  maxRewardDue = newMaxRewardDue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":4098:4225  function changeMaxRewardDue(uint256 newMaxRewardDue) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":2003:2030  address public tokenAddress */\n    tag_157:\n      0x18\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1324:1347  uint256 public box3Rate */\n    tag_160:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":2183:2212  uint256 public rewardCountDue */\n    tag_163:\n      sload(0x1a)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":4852:5390  function stakeUnlockTime(address walletAddress, uint256 boxNo) public view returns (uint256) {... */\n    tag_167:\n        /* \"contracts/LandFiStake.sol\":4936:4943  uint256 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":4969:4970  1 */\n      0x01\n        /* \"contracts/LandFiStake.sol\":4960:4965  boxNo */\n      dup3\n        /* \"contracts/LandFiStake.sol\":4960:4970  boxNo == 1 */\n      sub\n        /* \"contracts/LandFiStake.sol\":4956:5050  if (boxNo == 1) {... */\n      tag_323\n      jumpi\n        /* \"contracts/LandFiStake.sol\":4994:5038  box1DepositDate[walletAddress].add(box1Time) */\n      tag_324\n        /* \"contracts/LandFiStake.sol\":5029:5037  box1Time */\n      sload(0x04)\n        /* \"contracts/LandFiStake.sol\":4994:5009  box1DepositDate */\n      0x02\n        /* \"contracts/LandFiStake.sol\":4994:5024  box1DepositDate[walletAddress] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":5010:5023  walletAddress */\n      dup7\n        /* \"contracts/LandFiStake.sol\":4994:5024  box1DepositDate[walletAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":4994:5028  box1DepositDate[walletAddress].add */\n      tag_239\n      swap1\n        /* \"contracts/LandFiStake.sol\":4994:5038  box1DepositDate[walletAddress].add(box1Time) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_324:\n        /* \"contracts/LandFiStake.sol\":4987:5038  return box1DepositDate[walletAddress].add(box1Time) */\n      swap1\n      pop\n      jump(tag_322)\n        /* \"contracts/LandFiStake.sol\":4956:5050  if (boxNo == 1) {... */\n    tag_323:\n        /* \"contracts/LandFiStake.sol\":5073:5074  2 */\n      0x02\n        /* \"contracts/LandFiStake.sol\":5064:5069  boxNo */\n      dup3\n        /* \"contracts/LandFiStake.sol\":5064:5074  boxNo == 2 */\n      sub\n        /* \"contracts/LandFiStake.sol\":5060:5154  if (boxNo == 2) {... */\n      tag_325\n      jumpi\n        /* \"contracts/LandFiStake.sol\":5098:5142  box2DepositDate[walletAddress].add(box2Time) */\n      tag_326\n        /* \"contracts/LandFiStake.sol\":5133:5141  box2Time */\n      sload(0x09)\n        /* \"contracts/LandFiStake.sol\":5098:5113  box2DepositDate */\n      0x07\n        /* \"contracts/LandFiStake.sol\":5098:5128  box2DepositDate[walletAddress] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":5114:5127  walletAddress */\n      dup7\n        /* \"contracts/LandFiStake.sol\":5098:5128  box2DepositDate[walletAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":5098:5132  box2DepositDate[walletAddress].add */\n      tag_239\n      swap1\n        /* \"contracts/LandFiStake.sol\":5098:5142  box2DepositDate[walletAddress].add(box2Time) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_326:\n        /* \"contracts/LandFiStake.sol\":5091:5142  return box2DepositDate[walletAddress].add(box2Time) */\n      swap1\n      pop\n      jump(tag_322)\n        /* \"contracts/LandFiStake.sol\":5060:5154  if (boxNo == 2) {... */\n    tag_325:\n        /* \"contracts/LandFiStake.sol\":5177:5178  3 */\n      0x03\n        /* \"contracts/LandFiStake.sol\":5168:5173  boxNo */\n      dup3\n        /* \"contracts/LandFiStake.sol\":5168:5178  boxNo == 3 */\n      sub\n        /* \"contracts/LandFiStake.sol\":5164:5258  if (boxNo == 3) {... */\n      tag_327\n      jumpi\n        /* \"contracts/LandFiStake.sol\":5202:5246  box3DepositDate[walletAddress].add(box3Time) */\n      tag_328\n        /* \"contracts/LandFiStake.sol\":5237:5245  box3Time */\n      sload(0x0e)\n        /* \"contracts/LandFiStake.sol\":5202:5217  box3DepositDate */\n      0x0c\n        /* \"contracts/LandFiStake.sol\":5202:5232  box3DepositDate[walletAddress] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":5218:5231  walletAddress */\n      dup7\n        /* \"contracts/LandFiStake.sol\":5202:5232  box3DepositDate[walletAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":5202:5236  box3DepositDate[walletAddress].add */\n      tag_239\n      swap1\n        /* \"contracts/LandFiStake.sol\":5202:5246  box3DepositDate[walletAddress].add(box3Time) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_328:\n        /* \"contracts/LandFiStake.sol\":5195:5246  return box3DepositDate[walletAddress].add(box3Time) */\n      swap1\n      pop\n      jump(tag_322)\n        /* \"contracts/LandFiStake.sol\":5164:5258  if (boxNo == 3) {... */\n    tag_327:\n        /* \"contracts/LandFiStake.sol\":5281:5282  4 */\n      0x04\n        /* \"contracts/LandFiStake.sol\":5272:5277  boxNo */\n      dup3\n        /* \"contracts/LandFiStake.sol\":5272:5282  boxNo == 4 */\n      sub\n        /* \"contracts/LandFiStake.sol\":5268:5362  if (boxNo == 4) {... */\n      tag_329\n      jumpi\n        /* \"contracts/LandFiStake.sol\":5306:5350  box4DepositDate[walletAddress].add(box4Time) */\n      tag_330\n        /* \"contracts/LandFiStake.sol\":5341:5349  box4Time */\n      sload(0x13)\n        /* \"contracts/LandFiStake.sol\":5306:5321  box4DepositDate */\n      0x11\n        /* \"contracts/LandFiStake.sol\":5306:5336  box4DepositDate[walletAddress] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":5322:5335  walletAddress */\n      dup7\n        /* \"contracts/LandFiStake.sol\":5306:5336  box4DepositDate[walletAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":5306:5340  box4DepositDate[walletAddress].add */\n      tag_239\n      swap1\n        /* \"contracts/LandFiStake.sol\":5306:5350  box4DepositDate[walletAddress].add(box4Time) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_330:\n        /* \"contracts/LandFiStake.sol\":5299:5350  return box4DepositDate[walletAddress].add(box4Time) */\n      swap1\n      pop\n      jump(tag_322)\n        /* \"contracts/LandFiStake.sol\":5268:5362  if (boxNo == 4) {... */\n    tag_329:\n        /* \"contracts/LandFiStake.sol\":5381:5382  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":5374:5382  return 0 */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":4852:5390  function stakeUnlockTime(address walletAddress, uint256 boxNo) public view returns (uint256) {... */\n    tag_322:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1542:1565  uint256 public box4Rate */\n    tag_170:\n      sload(0x12)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":4231:4342  function changeMaxStake(uint256 newMaxStake) public virtual onlyOwner {... */\n    tag_174:\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_332\n        /* \"contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_214\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_332:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_333\n        /* \"contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_151\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_333:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap1\n      tag_218\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_334:\n        /* \"contracts/LandFiStake.sol\":4323:4334  newMaxStake */\n      dup1\n        /* \"contracts/LandFiStake.sol\":4312:4320  maxStake */\n      0x15\n        /* \"contracts/LandFiStake.sol\":4312:4334  maxStake = newMaxStake */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":4231:4342  function changeMaxStake(uint256 newMaxStake) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1384:1407  bool public box3Enabled */\n    tag_176:\n      0x0f\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":2484:2511  uint256 public maxRewardDue */\n    tag_179:\n      sload(0x1d)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1136:1159  uint256 public box2Time */\n    tag_182:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":3852:3969  function changeBox3Status(bool newBox3Status) public virtual onlyOwner {... */\n    tag_186:\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_338\n        /* \"contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_214\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_339\n        /* \"contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_151\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_339:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_340\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_341\n      swap1\n      tag_218\n      jump\t// in\n    tag_341:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_340:\n        /* \"contracts/LandFiStake.sol\":3948:3961  newBox3Status */\n      dup1\n        /* \"contracts/LandFiStake.sol\":3934:3945  box3Enabled */\n      0x0f\n      0x00\n        /* \"contracts/LandFiStake.sol\":3934:3961  box3Enabled = newBox3Status */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":3852:3969  function changeBox3Status(bool newBox3Status) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1106:1129  uint256 public box2Rate */\n    tag_188:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":888:911  uint256 public box1Rate */\n    tag_191:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1789:1812  uint256 public maxStake */\n    tag_194:\n      sload(0x15)\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":4467:4583  function changeFullUnlock(bool newFullUnlock) public virtual onlyOwner {... */\n    tag_198:\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_344\n        /* \"contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_214\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_344:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_345\n        /* \"contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_151\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_345:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap1\n      tag_218\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_346:\n        /* \"contracts/LandFiStake.sol\":4562:4575  newFullUnlock */\n      dup1\n        /* \"contracts/LandFiStake.sol\":4549:4559  fullUnlock */\n      0x1e\n      0x00\n        /* \"contracts/LandFiStake.sol\":4549:4575  fullUnlock = newFullUnlock */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":4467:4583  function changeFullUnlock(bool newFullUnlock) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_201:\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_350\n        /* \"contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_214\n        /* \"contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_350:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_351\n        /* \"contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_151\n        /* \"contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_351:\n        /* \"contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_352\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_353\n      swap1\n      tag_218\n      jump\t// in\n    tag_353:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_352:\n        /* \"contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_355\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_356\n      swap1\n      tag_357\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_355:\n        /* \"contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_358\n        /* \"contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_314\n        /* \"contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_358:\n        /* \"contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":2578:2600  bool public fullUnlock */\n    tag_203:\n      0x1e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":1931:1958  address public rewardWallet */\n    tag_206:\n      0x17\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/LandFiStake.sol\":5886:8424  function addStake(uint256 tokenAmount, uint256 boxNo) public {... */\n    tag_211:\n        /* \"contracts/LandFiStake.sol\":5958:5970  address from */\n      0x00\n        /* \"contracts/LandFiStake.sol\":5973:5983  msg.sender */\n      caller\n        /* \"contracts/LandFiStake.sol\":5958:5983  address from = msg.sender */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":6002:6022  uint256 rewardAmount */\n      0x00\n        /* \"contracts/LandFiStake.sol\":6025:6026  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":6002:6026  uint256 rewardAmount = 0 */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":6063:6074  rewardCount */\n      sload(0x1b)\n        /* \"contracts/LandFiStake.sol\":6047:6059  maxRewardDue */\n      sload(0x1d)\n        /* \"contracts/LandFiStake.sol\":6047:6074  maxRewardDue >= rewardCount */\n      lt\n      iszero\n        /* \"contracts/LandFiStake.sol\":6039:6114  require(maxRewardDue >= rewardCount, \"Staking on this contract has ended!\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_361\n      swap1\n      tag_362\n      jump\t// in\n    tag_361:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_360:\n        /* \"contracts/LandFiStake.sol\":6142:6143  1 */\n      0x01\n        /* \"contracts/LandFiStake.sol\":6133:6138  boxNo */\n      dup4\n        /* \"contracts/LandFiStake.sol\":6133:6143  boxNo == 1 */\n      eq\n        /* \"contracts/LandFiStake.sol\":6133:6157  boxNo == 1 || boxNo == 2 */\n      dup1\n      tag_363\n      jumpi\n      pop\n        /* \"contracts/LandFiStake.sol\":6156:6157  2 */\n      0x02\n        /* \"contracts/LandFiStake.sol\":6147:6152  boxNo */\n      dup4\n        /* \"contracts/LandFiStake.sol\":6147:6157  boxNo == 2 */\n      eq\n        /* \"contracts/LandFiStake.sol\":6133:6157  boxNo == 1 || boxNo == 2 */\n    tag_363:\n        /* \"contracts/LandFiStake.sol\":6133:6171  boxNo == 1 || boxNo == 2 || boxNo == 3 */\n      dup1\n      tag_364\n      jumpi\n      pop\n        /* \"contracts/LandFiStake.sol\":6170:6171  3 */\n      0x03\n        /* \"contracts/LandFiStake.sol\":6161:6166  boxNo */\n      dup4\n        /* \"contracts/LandFiStake.sol\":6161:6171  boxNo == 3 */\n      eq\n        /* \"contracts/LandFiStake.sol\":6133:6171  boxNo == 1 || boxNo == 2 || boxNo == 3 */\n    tag_364:\n        /* \"contracts/LandFiStake.sol\":6133:6185  boxNo == 1 || boxNo == 2 || boxNo == 3 || boxNo == 4 */\n      dup1\n      tag_365\n      jumpi\n      pop\n        /* \"contracts/LandFiStake.sol\":6184:6185  4 */\n      0x04\n        /* \"contracts/LandFiStake.sol\":6175:6180  boxNo */\n      dup4\n        /* \"contracts/LandFiStake.sol\":6175:6185  boxNo == 4 */\n      eq\n        /* \"contracts/LandFiStake.sol\":6133:6185  boxNo == 1 || boxNo == 2 || boxNo == 3 || boxNo == 4 */\n    tag_365:\n        /* \"contracts/LandFiStake.sol\":6125:6209  require(boxNo == 1 || boxNo == 2 || boxNo == 3 || boxNo == 4, \"Invalid product ID.\") */\n      tag_366\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_367\n      swap1\n      tag_232\n      jump\t// in\n    tag_367:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_366:\n        /* \"contracts/LandFiStake.sol\":6243:6251  minStake */\n      sload(0x19)\n        /* \"contracts/LandFiStake.sol\":6228:6239  tokenAmount */\n      dup5\n        /* \"contracts/LandFiStake.sol\":6228:6251  tokenAmount >= minStake */\n      lt\n      iszero\n        /* \"contracts/LandFiStake.sol\":6220:6285  require(tokenAmount >= minStake, \"Staked amount must be higher.\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_369\n      swap1\n      tag_370\n      jump\t// in\n    tag_369:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_368:\n        /* \"contracts/LandFiStake.sol\":6319:6327  maxStake */\n      sload(0x15)\n        /* \"contracts/LandFiStake.sol\":6304:6315  tokenAmount */\n      dup5\n        /* \"contracts/LandFiStake.sol\":6304:6327  tokenAmount <= maxStake */\n      gt\n      iszero\n        /* \"contracts/LandFiStake.sol\":6296:6360  require(tokenAmount <= maxStake, \"Staked amount must be lower.\") */\n      tag_371\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_372\n      swap1\n      tag_373\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_371:\n        /* \"contracts/LandFiStake.sol\":6393:6398  false */\n      0x00\n        /* \"contracts/LandFiStake.sol\":6379:6398  fullUnlock == false */\n      iszero\n      iszero\n        /* \"contracts/LandFiStake.sol\":6379:6389  fullUnlock */\n      0x1e\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake.sol\":6379:6398  fullUnlock == false */\n      iszero\n      iszero\n      eq\n        /* \"contracts/LandFiStake.sol\":6371:6441  require(fullUnlock == false, \"Staking is currently in unlocked mode.\") */\n      tag_374\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_375\n      swap1\n      tag_376\n      jump\t// in\n    tag_375:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_374:\n        /* \"contracts/LandFiStake.sol\":6467:6468  1 */\n      0x01\n        /* \"contracts/LandFiStake.sol\":6458:6463  boxNo */\n      dup4\n        /* \"contracts/LandFiStake.sol\":6458:6468  boxNo == 1 */\n      sub\n        /* \"contracts/LandFiStake.sol\":6454:6849  if (boxNo == 1) {... */\n      tag_377\n      jumpi\n        /* \"contracts/LandFiStake.sol\":6508:6512  true */\n      0x01\n        /* \"contracts/LandFiStake.sol\":6493:6512  box1Enabled == true */\n      iszero\n      iszero\n        /* \"contracts/LandFiStake.sol\":6493:6504  box1Enabled */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake.sol\":6493:6512  box1Enabled == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/LandFiStake.sol\":6485:6550  require(box1Enabled == true, \"This staking product is disabled.\") */\n      tag_378\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_379\n      swap1\n      tag_380\n      jump\t// in\n    tag_379:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_378:\n        /* \"contracts/LandFiStake.sol\":6594:6595  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":6573:6584  box1Balance */\n      0x01\n        /* \"contracts/LandFiStake.sol\":6573:6590  box1Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":6585:6589  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":6573:6590  box1Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":6573:6595  box1Balance[from] == 0 */\n      eq\n        /* \"contracts/LandFiStake.sol\":6565:6682  require(box1Balance[from] == 0, \"This wallet has already staked on this product - wait for the release to re-stake.\") */\n      tag_381\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_382\n      swap1\n      tag_383\n      jump\t// in\n    tag_382:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_381:\n        /* \"contracts/LandFiStake.sol\":6712:6737  tokenAmount.div(box1Rate) */\n      tag_384\n        /* \"contracts/LandFiStake.sol\":6728:6736  box1Rate */\n      sload(0x03)\n        /* \"contracts/LandFiStake.sol\":6712:6723  tokenAmount */\n      dup6\n        /* \"contracts/LandFiStake.sol\":6712:6727  tokenAmount.div */\n      tag_244\n      swap1\n        /* \"contracts/LandFiStake.sol\":6712:6737  tokenAmount.div(box1Rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_384:\n        /* \"contracts/LandFiStake.sol\":6697:6737  rewardAmount = tokenAmount.div(box1Rate) */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":6776:6791  block.timestamp */\n      timestamp\n        /* \"contracts/LandFiStake.sol\":6752:6767  box1DepositDate */\n      0x02\n        /* \"contracts/LandFiStake.sol\":6752:6773  box1DepositDate[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":6768:6772  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":6752:6773  box1DepositDate[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":6752:6791  box1DepositDate[from] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":6826:6837  tokenAmount */\n      dup4\n        /* \"contracts/LandFiStake.sol\":6806:6817  box1Balance */\n      0x01\n        /* \"contracts/LandFiStake.sol\":6806:6823  box1Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":6818:6822  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":6806:6823  box1Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":6806:6837  box1Balance[from] = tokenAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":6454:6849  if (boxNo == 1) {... */\n    tag_377:\n        /* \"contracts/LandFiStake.sol\":6872:6873  2 */\n      0x02\n        /* \"contracts/LandFiStake.sol\":6863:6868  boxNo */\n      dup4\n        /* \"contracts/LandFiStake.sol\":6863:6873  boxNo == 2 */\n      sub\n        /* \"contracts/LandFiStake.sol\":6859:7254  if (boxNo == 2) {... */\n      tag_385\n      jumpi\n        /* \"contracts/LandFiStake.sol\":6913:6917  true */\n      0x01\n        /* \"contracts/LandFiStake.sol\":6898:6917  box2Enabled == true */\n      iszero\n      iszero\n        /* \"contracts/LandFiStake.sol\":6898:6909  box2Enabled */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake.sol\":6898:6917  box2Enabled == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/LandFiStake.sol\":6890:6955  require(box2Enabled == true, \"This staking product is disabled.\") */\n      tag_386\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_387\n      swap1\n      tag_380\n      jump\t// in\n    tag_387:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_386:\n        /* \"contracts/LandFiStake.sol\":6999:7000  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":6978:6989  box2Balance */\n      0x06\n        /* \"contracts/LandFiStake.sol\":6978:6995  box2Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":6990:6994  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":6978:6995  box2Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":6978:7000  box2Balance[from] == 0 */\n      eq\n        /* \"contracts/LandFiStake.sol\":6970:7087  require(box2Balance[from] == 0, \"This wallet has already staked on this product - wait for the release to re-stake.\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_389\n      swap1\n      tag_383\n      jump\t// in\n    tag_389:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_388:\n        /* \"contracts/LandFiStake.sol\":7117:7142  tokenAmount.div(box2Rate) */\n      tag_390\n        /* \"contracts/LandFiStake.sol\":7133:7141  box2Rate */\n      sload(0x08)\n        /* \"contracts/LandFiStake.sol\":7117:7128  tokenAmount */\n      dup6\n        /* \"contracts/LandFiStake.sol\":7117:7132  tokenAmount.div */\n      tag_244\n      swap1\n        /* \"contracts/LandFiStake.sol\":7117:7142  tokenAmount.div(box2Rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_390:\n        /* \"contracts/LandFiStake.sol\":7102:7142  rewardAmount = tokenAmount.div(box2Rate) */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":7181:7196  block.timestamp */\n      timestamp\n        /* \"contracts/LandFiStake.sol\":7157:7172  box2DepositDate */\n      0x07\n        /* \"contracts/LandFiStake.sol\":7157:7178  box2DepositDate[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":7173:7177  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":7157:7178  box2DepositDate[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":7157:7196  box2DepositDate[from] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":7231:7242  tokenAmount */\n      dup4\n        /* \"contracts/LandFiStake.sol\":7211:7222  box2Balance */\n      0x06\n        /* \"contracts/LandFiStake.sol\":7211:7228  box2Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":7223:7227  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":7211:7228  box2Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":7211:7242  box2Balance[from] = tokenAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":6859:7254  if (boxNo == 2) {... */\n    tag_385:\n        /* \"contracts/LandFiStake.sol\":7277:7278  3 */\n      0x03\n        /* \"contracts/LandFiStake.sol\":7268:7273  boxNo */\n      dup4\n        /* \"contracts/LandFiStake.sol\":7268:7278  boxNo == 3 */\n      sub\n        /* \"contracts/LandFiStake.sol\":7264:7659  if (boxNo == 3) {... */\n      tag_391\n      jumpi\n        /* \"contracts/LandFiStake.sol\":7318:7322  true */\n      0x01\n        /* \"contracts/LandFiStake.sol\":7303:7322  box3Enabled == true */\n      iszero\n      iszero\n        /* \"contracts/LandFiStake.sol\":7303:7314  box3Enabled */\n      0x0f\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake.sol\":7303:7322  box3Enabled == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/LandFiStake.sol\":7295:7360  require(box3Enabled == true, \"This staking product is disabled.\") */\n      tag_392\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_393\n      swap1\n      tag_380\n      jump\t// in\n    tag_393:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_392:\n        /* \"contracts/LandFiStake.sol\":7404:7405  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":7383:7394  box3Balance */\n      0x0b\n        /* \"contracts/LandFiStake.sol\":7383:7400  box3Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":7395:7399  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":7383:7400  box3Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":7383:7405  box3Balance[from] == 0 */\n      eq\n        /* \"contracts/LandFiStake.sol\":7375:7492  require(box3Balance[from] == 0, \"This wallet has already staked on this product - wait for the release to re-stake.\") */\n      tag_394\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_395\n      swap1\n      tag_383\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_394:\n        /* \"contracts/LandFiStake.sol\":7522:7547  tokenAmount.div(box3Rate) */\n      tag_396\n        /* \"contracts/LandFiStake.sol\":7538:7546  box3Rate */\n      sload(0x0d)\n        /* \"contracts/LandFiStake.sol\":7522:7533  tokenAmount */\n      dup6\n        /* \"contracts/LandFiStake.sol\":7522:7537  tokenAmount.div */\n      tag_244\n      swap1\n        /* \"contracts/LandFiStake.sol\":7522:7547  tokenAmount.div(box3Rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_396:\n        /* \"contracts/LandFiStake.sol\":7507:7547  rewardAmount = tokenAmount.div(box3Rate) */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":7586:7601  block.timestamp */\n      timestamp\n        /* \"contracts/LandFiStake.sol\":7562:7577  box3DepositDate */\n      0x0c\n        /* \"contracts/LandFiStake.sol\":7562:7583  box3DepositDate[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":7578:7582  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":7562:7583  box3DepositDate[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":7562:7601  box3DepositDate[from] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":7636:7647  tokenAmount */\n      dup4\n        /* \"contracts/LandFiStake.sol\":7616:7627  box3Balance */\n      0x0b\n        /* \"contracts/LandFiStake.sol\":7616:7633  box3Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":7628:7632  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":7616:7633  box3Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":7616:7647  box3Balance[from] = tokenAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":7264:7659  if (boxNo == 3) {... */\n    tag_391:\n        /* \"contracts/LandFiStake.sol\":7682:7683  4 */\n      0x04\n        /* \"contracts/LandFiStake.sol\":7673:7678  boxNo */\n      dup4\n        /* \"contracts/LandFiStake.sol\":7673:7683  boxNo == 4 */\n      sub\n        /* \"contracts/LandFiStake.sol\":7669:8064  if (boxNo == 4) {... */\n      tag_397\n      jumpi\n        /* \"contracts/LandFiStake.sol\":7723:7727  true */\n      0x01\n        /* \"contracts/LandFiStake.sol\":7708:7727  box4Enabled == true */\n      iszero\n      iszero\n        /* \"contracts/LandFiStake.sol\":7708:7719  box4Enabled */\n      0x14\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/LandFiStake.sol\":7708:7727  box4Enabled == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/LandFiStake.sol\":7700:7765  require(box4Enabled == true, \"This staking product is disabled.\") */\n      tag_398\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_399\n      swap1\n      tag_380\n      jump\t// in\n    tag_399:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_398:\n        /* \"contracts/LandFiStake.sol\":7809:7810  0 */\n      0x00\n        /* \"contracts/LandFiStake.sol\":7788:7799  box4Balance */\n      0x10\n        /* \"contracts/LandFiStake.sol\":7788:7805  box4Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":7800:7804  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":7788:7805  box4Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/LandFiStake.sol\":7788:7810  box4Balance[from] == 0 */\n      eq\n        /* \"contracts/LandFiStake.sol\":7780:7897  require(box4Balance[from] == 0, \"This wallet has already staked on this product - wait for the release to re-stake.\") */\n      tag_400\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_401\n      swap1\n      tag_383\n      jump\t// in\n    tag_401:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_400:\n        /* \"contracts/LandFiStake.sol\":7927:7952  tokenAmount.div(box4Rate) */\n      tag_402\n        /* \"contracts/LandFiStake.sol\":7943:7951  box4Rate */\n      sload(0x12)\n        /* \"contracts/LandFiStake.sol\":7927:7938  tokenAmount */\n      dup6\n        /* \"contracts/LandFiStake.sol\":7927:7942  tokenAmount.div */\n      tag_244\n      swap1\n        /* \"contracts/LandFiStake.sol\":7927:7952  tokenAmount.div(box4Rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_402:\n        /* \"contracts/LandFiStake.sol\":7912:7952  rewardAmount = tokenAmount.div(box4Rate) */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":7991:8006  block.timestamp */\n      timestamp\n        /* \"contracts/LandFiStake.sol\":7967:7982  box4DepositDate */\n      0x11\n        /* \"contracts/LandFiStake.sol\":7967:7988  box4DepositDate[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":7983:7987  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":7967:7988  box4DepositDate[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":7967:8006  box4DepositDate[from] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":8041:8052  tokenAmount */\n      dup4\n        /* \"contracts/LandFiStake.sol\":8021:8032  box4Balance */\n      0x10\n        /* \"contracts/LandFiStake.sol\":8021:8038  box4Balance[from] */\n      0x00\n        /* \"contracts/LandFiStake.sol\":8033:8037  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":8021:8038  box4Balance[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/LandFiStake.sol\":8021:8052  box4Balance[from] = tokenAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":7669:8064  if (boxNo == 4) {... */\n    tag_397:\n        /* \"contracts/LandFiStake.sol\":8093:8125  rewardCountDue.add(rewardAmount) */\n      tag_403\n        /* \"contracts/LandFiStake.sol\":8112:8124  rewardAmount */\n      dup2\n        /* \"contracts/LandFiStake.sol\":8093:8107  rewardCountDue */\n      sload(0x1a)\n        /* \"contracts/LandFiStake.sol\":8093:8111  rewardCountDue.add */\n      tag_239\n      swap1\n        /* \"contracts/LandFiStake.sol\":8093:8125  rewardCountDue.add(rewardAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_403:\n        /* \"contracts/LandFiStake.sol\":8076:8090  rewardCountDue */\n      0x1a\n        /* \"contracts/LandFiStake.sol\":8076:8125  rewardCountDue = rewardCountDue.add(rewardAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":8150:8178  totalStaked.add(tokenAmount) */\n      tag_404\n        /* \"contracts/LandFiStake.sol\":8166:8177  tokenAmount */\n      dup5\n        /* \"contracts/LandFiStake.sol\":8150:8161  totalStaked */\n      sload(0x1c)\n        /* \"contracts/LandFiStake.sol\":8150:8165  totalStaked.add */\n      tag_239\n      swap1\n        /* \"contracts/LandFiStake.sol\":8150:8178  totalStaked.add(tokenAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_404:\n        /* \"contracts/LandFiStake.sol\":8136:8147  totalStaked */\n      0x1c\n        /* \"contracts/LandFiStake.sol\":8136:8178  totalStaked = totalStaked.add(tokenAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/LandFiStake.sol\":8191:8215  LandFiToken landFiTokenI */\n      0x00\n        /* \"contracts/LandFiStake.sol\":8230:8242  tokenAddress */\n      0x18\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LandFiStake.sol\":8191:8243  LandFiToken landFiTokenI = LandFiToken(tokenAddress) */\n      swap1\n      pop\n        /* \"contracts/LandFiStake.sol\":8290:8302  landFiTokenI */\n      dup1\n        /* \"contracts/LandFiStake.sol\":8290:8315  landFiTokenI.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/LandFiStake.sol\":8316:8320  from */\n      dup5\n        /* \"contracts/LandFiStake.sol\":8322:8333  stakeWallet */\n      0x16\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/LandFiStake.sol\":8335:8346  tokenAmount */\n      dup9\n        /* \"contracts/LandFiStake.sol\":8290:8347  landFiTokenI.transferFrom(from, stakeWallet, tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_405\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_405:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_407\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_407:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_408\n      swap2\n      swap1\n      tag_279\n      jump\t// in\n    tag_408:\n      pop\n        /* \"contracts/LandFiStake.sol\":8410:8417  return; */\n      pop\n      pop\n      pop\n        /* \"contracts/LandFiStake.sol\":5886:8424  function addStake(uint256 tokenAmount, uint256 boxNo) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_214:\n        /* \"contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_239:\n        /* \"contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_411\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_411:\n        /* \"contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_244:\n        /* \"contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_413\n      swap2\n      swap1\n      tag_414\n      jump\t// in\n    tag_413:\n        /* \"contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_272:\n        /* \"contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_416\n      swap2\n      swap1\n      tag_417\n      jump\t// in\n    tag_416:\n        /* \"contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_314:\n        /* \"contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      0x00\n        /* \"contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_420:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_422:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_423:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_467\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_422\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_424:\n        /* \"#utility.yul\":641:665   */\n      tag_469\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_423\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_470:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_425:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_472\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_424\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_58:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_475\n      tag_420\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":917:1036   */\n    tag_474:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_476\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_425\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_426:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_427:\n        /* \"#utility.yul\":1346:1370   */\n      tag_479\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_426\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_61:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_481\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_427\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_428:\n        /* \"#utility.yul\":1698:1722   */\n      tag_483\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_423\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_65:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_485\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_428\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2053   */\n    tag_429:\n        /* \"#utility.yul\":1997:2004   */\n      0x00\n        /* \"#utility.yul\":2040:2045   */\n      dup2\n        /* \"#utility.yul\":2033:2046   */\n      iszero\n        /* \"#utility.yul\":2026:2047   */\n      iszero\n        /* \"#utility.yul\":2015:2047   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2059:2175   */\n    tag_430:\n        /* \"#utility.yul\":2129:2150   */\n      tag_488\n        /* \"#utility.yul\":2144:2149   */\n      dup2\n        /* \"#utility.yul\":2129:2150   */\n      tag_429\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":2122:2127   */\n      dup2\n        /* \"#utility.yul\":2119:2151   */\n      eq\n        /* \"#utility.yul\":2109:2169   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":2165:2166   */\n      0x00\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2155:2167   */\n      revert\n        /* \"#utility.yul\":2109:2169   */\n    tag_489:\n        /* \"#utility.yul\":2059:2175   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2181:2314   */\n    tag_431:\n        /* \"#utility.yul\":2224:2229   */\n      0x00\n        /* \"#utility.yul\":2262:2268   */\n      dup2\n        /* \"#utility.yul\":2249:2269   */\n      calldataload\n        /* \"#utility.yul\":2240:2269   */\n      swap1\n      pop\n        /* \"#utility.yul\":2278:2308   */\n      tag_491\n        /* \"#utility.yul\":2302:2307   */\n      dup2\n        /* \"#utility.yul\":2278:2308   */\n      tag_430\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":2181:2314   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2320:2643   */\n    tag_71:\n        /* \"#utility.yul\":2376:2382   */\n      0x00\n        /* \"#utility.yul\":2425:2427   */\n      0x20\n        /* \"#utility.yul\":2413:2422   */\n      dup3\n        /* \"#utility.yul\":2404:2411   */\n      dup5\n        /* \"#utility.yul\":2400:2423   */\n      sub\n        /* \"#utility.yul\":2396:2428   */\n      slt\n        /* \"#utility.yul\":2393:2512   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":2431:2510   */\n      tag_494\n      tag_420\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":2393:2512   */\n    tag_493:\n        /* \"#utility.yul\":2551:2552   */\n      0x00\n        /* \"#utility.yul\":2576:2626   */\n      tag_495\n        /* \"#utility.yul\":2618:2625   */\n      dup5\n        /* \"#utility.yul\":2609:2615   */\n      dup3\n        /* \"#utility.yul\":2598:2607   */\n      dup6\n        /* \"#utility.yul\":2594:2616   */\n      add\n        /* \"#utility.yul\":2576:2626   */\n      tag_431\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":2566:2626   */\n      swap2\n      pop\n        /* \"#utility.yul\":2522:2636   */\n      pop\n        /* \"#utility.yul\":2320:2643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2649:2771   */\n    tag_432:\n        /* \"#utility.yul\":2722:2746   */\n      tag_497\n        /* \"#utility.yul\":2740:2745   */\n      dup2\n        /* \"#utility.yul\":2722:2746   */\n      tag_426\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":2715:2720   */\n      dup2\n        /* \"#utility.yul\":2712:2747   */\n      eq\n        /* \"#utility.yul\":2702:2765   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2758:2759   */\n      0x00\n        /* \"#utility.yul\":2751:2763   */\n      revert\n        /* \"#utility.yul\":2702:2765   */\n    tag_498:\n        /* \"#utility.yul\":2649:2771   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2777:2916   */\n    tag_433:\n        /* \"#utility.yul\":2823:2828   */\n      0x00\n        /* \"#utility.yul\":2861:2867   */\n      dup2\n        /* \"#utility.yul\":2848:2868   */\n      calldataload\n        /* \"#utility.yul\":2839:2868   */\n      swap1\n      pop\n        /* \"#utility.yul\":2877:2910   */\n      tag_500\n        /* \"#utility.yul\":2904:2909   */\n      dup2\n        /* \"#utility.yul\":2877:2910   */\n      tag_432\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":2777:2916   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2922:3251   */\n    tag_75:\n        /* \"#utility.yul\":2981:2987   */\n      0x00\n        /* \"#utility.yul\":3030:3032   */\n      0x20\n        /* \"#utility.yul\":3018:3027   */\n      dup3\n        /* \"#utility.yul\":3009:3016   */\n      dup5\n        /* \"#utility.yul\":3005:3028   */\n      sub\n        /* \"#utility.yul\":3001:3033   */\n      slt\n        /* \"#utility.yul\":2998:3117   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":3036:3115   */\n      tag_503\n      tag_420\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":2998:3117   */\n    tag_502:\n        /* \"#utility.yul\":3156:3157   */\n      0x00\n        /* \"#utility.yul\":3181:3234   */\n      tag_504\n        /* \"#utility.yul\":3226:3233   */\n      dup5\n        /* \"#utility.yul\":3217:3223   */\n      dup3\n        /* \"#utility.yul\":3206:3215   */\n      dup6\n        /* \"#utility.yul\":3202:3224   */\n      add\n        /* \"#utility.yul\":3181:3234   */\n      tag_433\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":3171:3234   */\n      swap2\n      pop\n        /* \"#utility.yul\":3127:3244   */\n      pop\n        /* \"#utility.yul\":2922:3251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3257:3731   */\n    tag_104:\n        /* \"#utility.yul\":3325:3331   */\n      0x00\n        /* \"#utility.yul\":3333:3339   */\n      0x00\n        /* \"#utility.yul\":3382:3384   */\n      0x40\n        /* \"#utility.yul\":3370:3379   */\n      dup4\n        /* \"#utility.yul\":3361:3368   */\n      dup6\n        /* \"#utility.yul\":3357:3380   */\n      sub\n        /* \"#utility.yul\":3353:3385   */\n      slt\n        /* \"#utility.yul\":3350:3469   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":3388:3467   */\n      tag_507\n      tag_420\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":3350:3469   */\n    tag_506:\n        /* \"#utility.yul\":3508:3509   */\n      0x00\n        /* \"#utility.yul\":3533:3586   */\n      tag_508\n        /* \"#utility.yul\":3578:3585   */\n      dup6\n        /* \"#utility.yul\":3569:3575   */\n      dup3\n        /* \"#utility.yul\":3558:3567   */\n      dup7\n        /* \"#utility.yul\":3554:3576   */\n      add\n        /* \"#utility.yul\":3533:3586   */\n      tag_425\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":3523:3586   */\n      swap3\n      pop\n        /* \"#utility.yul\":3479:3596   */\n      pop\n        /* \"#utility.yul\":3635:3637   */\n      0x20\n        /* \"#utility.yul\":3661:3714   */\n      tag_509\n        /* \"#utility.yul\":3706:3713   */\n      dup6\n        /* \"#utility.yul\":3697:3703   */\n      dup3\n        /* \"#utility.yul\":3686:3695   */\n      dup7\n        /* \"#utility.yul\":3682:3704   */\n      add\n        /* \"#utility.yul\":3661:3714   */\n      tag_433\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":3651:3714   */\n      swap2\n      pop\n        /* \"#utility.yul\":3606:3724   */\n      pop\n        /* \"#utility.yul\":3257:3731   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3737:3846   */\n    tag_434:\n        /* \"#utility.yul\":3818:3839   */\n      tag_511\n        /* \"#utility.yul\":3833:3838   */\n      dup2\n        /* \"#utility.yul\":3818:3839   */\n      tag_429\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":3813:3816   */\n      dup3\n        /* \"#utility.yul\":3806:3840   */\n      mstore\n        /* \"#utility.yul\":3737:3846   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3852:4062   */\n    tag_114:\n        /* \"#utility.yul\":3939:3943   */\n      0x00\n        /* \"#utility.yul\":3977:3979   */\n      0x20\n        /* \"#utility.yul\":3966:3975   */\n      dup3\n        /* \"#utility.yul\":3962:3980   */\n      add\n        /* \"#utility.yul\":3954:3980   */\n      swap1\n      pop\n        /* \"#utility.yul\":3990:4055   */\n      tag_513\n        /* \"#utility.yul\":4052:4053   */\n      0x00\n        /* \"#utility.yul\":4041:4050   */\n      dup4\n        /* \"#utility.yul\":4037:4054   */\n      add\n        /* \"#utility.yul\":4028:4034   */\n      dup5\n        /* \"#utility.yul\":3990:4055   */\n      tag_434\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":3852:4062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4068:4542   */\n    tag_210:\n        /* \"#utility.yul\":4136:4142   */\n      0x00\n        /* \"#utility.yul\":4144:4150   */\n      0x00\n        /* \"#utility.yul\":4193:4195   */\n      0x40\n        /* \"#utility.yul\":4181:4190   */\n      dup4\n        /* \"#utility.yul\":4172:4179   */\n      dup6\n        /* \"#utility.yul\":4168:4191   */\n      sub\n        /* \"#utility.yul\":4164:4196   */\n      slt\n        /* \"#utility.yul\":4161:4280   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":4199:4278   */\n      tag_516\n      tag_420\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":4161:4280   */\n    tag_515:\n        /* \"#utility.yul\":4319:4320   */\n      0x00\n        /* \"#utility.yul\":4344:4397   */\n      tag_517\n        /* \"#utility.yul\":4389:4396   */\n      dup6\n        /* \"#utility.yul\":4380:4386   */\n      dup3\n        /* \"#utility.yul\":4369:4378   */\n      dup7\n        /* \"#utility.yul\":4365:4387   */\n      add\n        /* \"#utility.yul\":4344:4397   */\n      tag_433\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":4334:4397   */\n      swap3\n      pop\n        /* \"#utility.yul\":4290:4407   */\n      pop\n        /* \"#utility.yul\":4446:4448   */\n      0x20\n        /* \"#utility.yul\":4472:4525   */\n      tag_518\n        /* \"#utility.yul\":4517:4524   */\n      dup6\n        /* \"#utility.yul\":4508:4514   */\n      dup3\n        /* \"#utility.yul\":4497:4506   */\n      dup7\n        /* \"#utility.yul\":4493:4515   */\n      add\n        /* \"#utility.yul\":4472:4525   */\n      tag_433\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":4462:4525   */\n      swap2\n      pop\n        /* \"#utility.yul\":4417:4535   */\n      pop\n        /* \"#utility.yul\":4068:4542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4548:4717   */\n    tag_435:\n        /* \"#utility.yul\":4632:4643   */\n      0x00\n        /* \"#utility.yul\":4666:4672   */\n      dup3\n        /* \"#utility.yul\":4661:4664   */\n      dup3\n        /* \"#utility.yul\":4654:4673   */\n      mstore\n        /* \"#utility.yul\":4706:4710   */\n      0x20\n        /* \"#utility.yul\":4701:4704   */\n      dup3\n        /* \"#utility.yul\":4697:4711   */\n      add\n        /* \"#utility.yul\":4682:4711   */\n      swap1\n      pop\n        /* \"#utility.yul\":4548:4717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4723:4905   */\n    tag_436:\n        /* \"#utility.yul\":4863:4897   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":4859:4860   */\n      0x00\n        /* \"#utility.yul\":4851:4857   */\n      dup3\n        /* \"#utility.yul\":4847:4861   */\n      add\n        /* \"#utility.yul\":4840:4898   */\n      mstore\n        /* \"#utility.yul\":4723:4905   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4911:5277   */\n    tag_437:\n        /* \"#utility.yul\":5053:5056   */\n      0x00\n        /* \"#utility.yul\":5074:5141   */\n      tag_522\n        /* \"#utility.yul\":5138:5140   */\n      0x20\n        /* \"#utility.yul\":5133:5136   */\n      dup4\n        /* \"#utility.yul\":5074:5141   */\n      tag_435\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":5067:5141   */\n      swap2\n      pop\n        /* \"#utility.yul\":5150:5243   */\n      tag_523\n        /* \"#utility.yul\":5239:5242   */\n      dup3\n        /* \"#utility.yul\":5150:5243   */\n      tag_436\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":5268:5270   */\n      0x20\n        /* \"#utility.yul\":5263:5266   */\n      dup3\n        /* \"#utility.yul\":5259:5271   */\n      add\n        /* \"#utility.yul\":5252:5271   */\n      swap1\n      pop\n        /* \"#utility.yul\":4911:5277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5283:5702   */\n    tag_218:\n        /* \"#utility.yul\":5449:5453   */\n      0x00\n        /* \"#utility.yul\":5487:5489   */\n      0x20\n        /* \"#utility.yul\":5476:5485   */\n      dup3\n        /* \"#utility.yul\":5472:5490   */\n      add\n        /* \"#utility.yul\":5464:5490   */\n      swap1\n      pop\n        /* \"#utility.yul\":5536:5545   */\n      dup2\n        /* \"#utility.yul\":5530:5534   */\n      dup2\n        /* \"#utility.yul\":5526:5546   */\n      sub\n        /* \"#utility.yul\":5522:5523   */\n      0x00\n        /* \"#utility.yul\":5511:5520   */\n      dup4\n        /* \"#utility.yul\":5507:5524   */\n      add\n        /* \"#utility.yul\":5500:5547   */\n      mstore\n        /* \"#utility.yul\":5564:5695   */\n      tag_525\n        /* \"#utility.yul\":5690:5694   */\n      dup2\n        /* \"#utility.yul\":5564:5695   */\n      tag_437\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":5556:5695   */\n      swap1\n      pop\n        /* \"#utility.yul\":5283:5702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5708:5877   */\n    tag_438:\n        /* \"#utility.yul\":5848:5869   */\n      0x496e76616c69642070726f647563742049442e00000000000000000000000000\n        /* \"#utility.yul\":5844:5845   */\n      0x00\n        /* \"#utility.yul\":5836:5842   */\n      dup3\n        /* \"#utility.yul\":5832:5846   */\n      add\n        /* \"#utility.yul\":5825:5870   */\n      mstore\n        /* \"#utility.yul\":5708:5877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5883:6249   */\n    tag_439:\n        /* \"#utility.yul\":6025:6028   */\n      0x00\n        /* \"#utility.yul\":6046:6113   */\n      tag_528\n        /* \"#utility.yul\":6110:6112   */\n      0x13\n        /* \"#utility.yul\":6105:6108   */\n      dup4\n        /* \"#utility.yul\":6046:6113   */\n      tag_435\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":6039:6113   */\n      swap2\n      pop\n        /* \"#utility.yul\":6122:6215   */\n      tag_529\n        /* \"#utility.yul\":6211:6214   */\n      dup3\n        /* \"#utility.yul\":6122:6215   */\n      tag_438\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":6240:6242   */\n      0x20\n        /* \"#utility.yul\":6235:6238   */\n      dup3\n        /* \"#utility.yul\":6231:6243   */\n      add\n        /* \"#utility.yul\":6224:6243   */\n      swap1\n      pop\n        /* \"#utility.yul\":5883:6249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6255:6674   */\n    tag_232:\n        /* \"#utility.yul\":6421:6425   */\n      0x00\n        /* \"#utility.yul\":6459:6461   */\n      0x20\n        /* \"#utility.yul\":6448:6457   */\n      dup3\n        /* \"#utility.yul\":6444:6462   */\n      add\n        /* \"#utility.yul\":6436:6462   */\n      swap1\n      pop\n        /* \"#utility.yul\":6508:6517   */\n      dup2\n        /* \"#utility.yul\":6502:6506   */\n      dup2\n        /* \"#utility.yul\":6498:6518   */\n      sub\n        /* \"#utility.yul\":6494:6495   */\n      0x00\n        /* \"#utility.yul\":6483:6492   */\n      dup4\n        /* \"#utility.yul\":6479:6496   */\n      add\n        /* \"#utility.yul\":6472:6519   */\n      mstore\n        /* \"#utility.yul\":6536:6667   */\n      tag_531\n        /* \"#utility.yul\":6662:6666   */\n      dup2\n        /* \"#utility.yul\":6536:6667   */\n      tag_439\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":6528:6667   */\n      swap1\n      pop\n        /* \"#utility.yul\":6255:6674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6680:6908   */\n    tag_440:\n        /* \"#utility.yul\":6820:6854   */\n      0x546869732077616c6c657420686173206e6f207374616b65206f6e2074686973\n        /* \"#utility.yul\":6816:6817   */\n      0x00\n        /* \"#utility.yul\":6808:6814   */\n      dup3\n        /* \"#utility.yul\":6804:6818   */\n      add\n        /* \"#utility.yul\":6797:6855   */\n      mstore\n        /* \"#utility.yul\":6889:6900   */\n      0x2070726f647563742e0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6884:6886   */\n      0x20\n        /* \"#utility.yul\":6876:6882   */\n      dup3\n        /* \"#utility.yul\":6872:6887   */\n      add\n        /* \"#utility.yul\":6865:6901   */\n      mstore\n        /* \"#utility.yul\":6680:6908   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6914:7280   */\n    tag_441:\n        /* \"#utility.yul\":7056:7059   */\n      0x00\n        /* \"#utility.yul\":7077:7144   */\n      tag_534\n        /* \"#utility.yul\":7141:7143   */\n      0x29\n        /* \"#utility.yul\":7136:7139   */\n      dup4\n        /* \"#utility.yul\":7077:7144   */\n      tag_435\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":7070:7144   */\n      swap2\n      pop\n        /* \"#utility.yul\":7153:7246   */\n      tag_535\n        /* \"#utility.yul\":7242:7245   */\n      dup3\n        /* \"#utility.yul\":7153:7246   */\n      tag_440\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":7271:7273   */\n      0x40\n        /* \"#utility.yul\":7266:7269   */\n      dup3\n        /* \"#utility.yul\":7262:7274   */\n      add\n        /* \"#utility.yul\":7255:7274   */\n      swap1\n      pop\n        /* \"#utility.yul\":6914:7280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7286:7705   */\n    tag_236:\n        /* \"#utility.yul\":7452:7456   */\n      0x00\n        /* \"#utility.yul\":7490:7492   */\n      0x20\n        /* \"#utility.yul\":7479:7488   */\n      dup3\n        /* \"#utility.yul\":7475:7493   */\n      add\n        /* \"#utility.yul\":7467:7493   */\n      swap1\n      pop\n        /* \"#utility.yul\":7539:7548   */\n      dup2\n        /* \"#utility.yul\":7533:7537   */\n      dup2\n        /* \"#utility.yul\":7529:7549   */\n      sub\n        /* \"#utility.yul\":7525:7526   */\n      0x00\n        /* \"#utility.yul\":7514:7523   */\n      dup4\n        /* \"#utility.yul\":7510:7527   */\n      add\n        /* \"#utility.yul\":7503:7550   */\n      mstore\n        /* \"#utility.yul\":7567:7698   */\n      tag_537\n        /* \"#utility.yul\":7693:7697   */\n      dup2\n        /* \"#utility.yul\":7567:7698   */\n      tag_441\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":7559:7698   */\n      swap1\n      pop\n        /* \"#utility.yul\":7286:7705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7711:7952   */\n    tag_442:\n        /* \"#utility.yul\":7851:7885   */\n      0x546865207374616b696e6720706572696f6420666f7220746869732070726f64\n        /* \"#utility.yul\":7847:7848   */\n      0x00\n        /* \"#utility.yul\":7839:7845   */\n      dup3\n        /* \"#utility.yul\":7835:7849   */\n      add\n        /* \"#utility.yul\":7828:7886   */\n      mstore\n        /* \"#utility.yul\":7920:7944   */\n      0x75637420686173206e6f7420656e646564207965742e00000000000000000000\n        /* \"#utility.yul\":7915:7917   */\n      0x20\n        /* \"#utility.yul\":7907:7913   */\n      dup3\n        /* \"#utility.yul\":7903:7918   */\n      add\n        /* \"#utility.yul\":7896:7945   */\n      mstore\n        /* \"#utility.yul\":7711:7952   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7958:8324   */\n    tag_443:\n        /* \"#utility.yul\":8100:8103   */\n      0x00\n        /* \"#utility.yul\":8121:8188   */\n      tag_540\n        /* \"#utility.yul\":8185:8187   */\n      0x36\n        /* \"#utility.yul\":8180:8183   */\n      dup4\n        /* \"#utility.yul\":8121:8188   */\n      tag_435\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":8114:8188   */\n      swap2\n      pop\n        /* \"#utility.yul\":8197:8290   */\n      tag_541\n        /* \"#utility.yul\":8286:8289   */\n      dup3\n        /* \"#utility.yul\":8197:8290   */\n      tag_442\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":8315:8317   */\n      0x40\n        /* \"#utility.yul\":8310:8313   */\n      dup3\n        /* \"#utility.yul\":8306:8318   */\n      add\n        /* \"#utility.yul\":8299:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":7958:8324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8330:8749   */\n    tag_242:\n        /* \"#utility.yul\":8496:8500   */\n      0x00\n        /* \"#utility.yul\":8534:8536   */\n      0x20\n        /* \"#utility.yul\":8523:8532   */\n      dup3\n        /* \"#utility.yul\":8519:8537   */\n      add\n        /* \"#utility.yul\":8511:8537   */\n      swap1\n      pop\n        /* \"#utility.yul\":8583:8592   */\n      dup2\n        /* \"#utility.yul\":8577:8581   */\n      dup2\n        /* \"#utility.yul\":8573:8593   */\n      sub\n        /* \"#utility.yul\":8569:8570   */\n      0x00\n        /* \"#utility.yul\":8558:8567   */\n      dup4\n        /* \"#utility.yul\":8554:8571   */\n      add\n        /* \"#utility.yul\":8547:8594   */\n      mstore\n        /* \"#utility.yul\":8611:8742   */\n      tag_543\n        /* \"#utility.yul\":8737:8741   */\n      dup2\n        /* \"#utility.yul\":8611:8742   */\n      tag_443\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":8603:8742   */\n      swap1\n      pop\n        /* \"#utility.yul\":8330:8749   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8755:9197   */\n    tag_275:\n        /* \"#utility.yul\":8904:8908   */\n      0x00\n        /* \"#utility.yul\":8942:8944   */\n      0x60\n        /* \"#utility.yul\":8931:8940   */\n      dup3\n        /* \"#utility.yul\":8927:8945   */\n      add\n        /* \"#utility.yul\":8919:8945   */\n      swap1\n      pop\n        /* \"#utility.yul\":8955:9026   */\n      tag_545\n        /* \"#utility.yul\":9023:9024   */\n      0x00\n        /* \"#utility.yul\":9012:9021   */\n      dup4\n        /* \"#utility.yul\":9008:9025   */\n      add\n        /* \"#utility.yul\":8999:9005   */\n      dup7\n        /* \"#utility.yul\":8955:9026   */\n      tag_428\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":9036:9108   */\n      tag_546\n        /* \"#utility.yul\":9104:9106   */\n      0x20\n        /* \"#utility.yul\":9093:9102   */\n      dup4\n        /* \"#utility.yul\":9089:9107   */\n      add\n        /* \"#utility.yul\":9080:9086   */\n      dup6\n        /* \"#utility.yul\":9036:9108   */\n      tag_428\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":9118:9190   */\n      tag_547\n        /* \"#utility.yul\":9186:9188   */\n      0x40\n        /* \"#utility.yul\":9175:9184   */\n      dup4\n        /* \"#utility.yul\":9171:9189   */\n      add\n        /* \"#utility.yul\":9162:9168   */\n      dup5\n        /* \"#utility.yul\":9118:9190   */\n      tag_427\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":8755:9197   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9203:9340   */\n    tag_444:\n        /* \"#utility.yul\":9257:9262   */\n      0x00\n        /* \"#utility.yul\":9288:9294   */\n      dup2\n        /* \"#utility.yul\":9282:9295   */\n      mload\n        /* \"#utility.yul\":9273:9295   */\n      swap1\n      pop\n        /* \"#utility.yul\":9304:9334   */\n      tag_549\n        /* \"#utility.yul\":9328:9333   */\n      dup2\n        /* \"#utility.yul\":9304:9334   */\n      tag_430\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":9203:9340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9346:9691   */\n    tag_279:\n        /* \"#utility.yul\":9413:9419   */\n      0x00\n        /* \"#utility.yul\":9462:9464   */\n      0x20\n        /* \"#utility.yul\":9450:9459   */\n      dup3\n        /* \"#utility.yul\":9441:9448   */\n      dup5\n        /* \"#utility.yul\":9437:9460   */\n      sub\n        /* \"#utility.yul\":9433:9465   */\n      slt\n        /* \"#utility.yul\":9430:9549   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":9468:9547   */\n      tag_552\n      tag_420\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":9430:9549   */\n    tag_551:\n        /* \"#utility.yul\":9588:9589   */\n      0x00\n        /* \"#utility.yul\":9613:9674   */\n      tag_553\n        /* \"#utility.yul\":9666:9673   */\n      dup5\n        /* \"#utility.yul\":9657:9663   */\n      dup3\n        /* \"#utility.yul\":9646:9655   */\n      dup6\n        /* \"#utility.yul\":9642:9664   */\n      add\n        /* \"#utility.yul\":9613:9674   */\n      tag_444\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":9603:9674   */\n      swap2\n      pop\n        /* \"#utility.yul\":9559:9684   */\n      pop\n        /* \"#utility.yul\":9346:9691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9697:9877   */\n    tag_445:\n        /* \"#utility.yul\":9745:9822   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9742:9743   */\n      0x00\n        /* \"#utility.yul\":9735:9823   */\n      mstore\n        /* \"#utility.yul\":9842:9846   */\n      0x11\n        /* \"#utility.yul\":9839:9840   */\n      0x04\n        /* \"#utility.yul\":9832:9847   */\n      mstore\n        /* \"#utility.yul\":9866:9870   */\n      0x24\n        /* \"#utility.yul\":9863:9864   */\n      0x00\n        /* \"#utility.yul\":9856:9871   */\n      revert\n        /* \"#utility.yul\":9883:10074   */\n    tag_304:\n        /* \"#utility.yul\":9923:9926   */\n      0x00\n        /* \"#utility.yul\":9942:9962   */\n      tag_556\n        /* \"#utility.yul\":9960:9961   */\n      dup3\n        /* \"#utility.yul\":9942:9962   */\n      tag_426\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":9937:9962   */\n      swap2\n      pop\n        /* \"#utility.yul\":9976:9996   */\n      tag_557\n        /* \"#utility.yul\":9994:9995   */\n      dup4\n        /* \"#utility.yul\":9976:9996   */\n      tag_426\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":9971:9996   */\n      swap3\n      pop\n        /* \"#utility.yul\":10019:10020   */\n      dup3\n        /* \"#utility.yul\":10016:10017   */\n      dup3\n        /* \"#utility.yul\":10012:10021   */\n      add\n        /* \"#utility.yul\":10005:10021   */\n      swap1\n      pop\n        /* \"#utility.yul\":10040:10043   */\n      dup1\n        /* \"#utility.yul\":10037:10038   */\n      dup3\n        /* \"#utility.yul\":10034:10044   */\n      gt\n        /* \"#utility.yul\":10031:10067   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":10047:10065   */\n      tag_559\n      tag_445\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":10031:10067   */\n    tag_558:\n        /* \"#utility.yul\":9883:10074   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10080:10305   */\n    tag_446:\n        /* \"#utility.yul\":10220:10254   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10216:10217   */\n      0x00\n        /* \"#utility.yul\":10208:10214   */\n      dup3\n        /* \"#utility.yul\":10204:10218   */\n      add\n        /* \"#utility.yul\":10197:10255   */\n      mstore\n        /* \"#utility.yul\":10289:10297   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10284:10286   */\n      0x20\n        /* \"#utility.yul\":10276:10282   */\n      dup3\n        /* \"#utility.yul\":10272:10287   */\n      add\n        /* \"#utility.yul\":10265:10298   */\n      mstore\n        /* \"#utility.yul\":10080:10305   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10311:10677   */\n    tag_447:\n        /* \"#utility.yul\":10453:10456   */\n      0x00\n        /* \"#utility.yul\":10474:10541   */\n      tag_562\n        /* \"#utility.yul\":10538:10540   */\n      0x26\n        /* \"#utility.yul\":10533:10536   */\n      dup4\n        /* \"#utility.yul\":10474:10541   */\n      tag_435\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":10467:10541   */\n      swap2\n      pop\n        /* \"#utility.yul\":10550:10643   */\n      tag_563\n        /* \"#utility.yul\":10639:10642   */\n      dup3\n        /* \"#utility.yul\":10550:10643   */\n      tag_446\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":10668:10670   */\n      0x40\n        /* \"#utility.yul\":10663:10666   */\n      dup3\n        /* \"#utility.yul\":10659:10671   */\n      add\n        /* \"#utility.yul\":10652:10671   */\n      swap1\n      pop\n        /* \"#utility.yul\":10311:10677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10683:11102   */\n    tag_357:\n        /* \"#utility.yul\":10849:10853   */\n      0x00\n        /* \"#utility.yul\":10887:10889   */\n      0x20\n        /* \"#utility.yul\":10876:10885   */\n      dup3\n        /* \"#utility.yul\":10872:10890   */\n      add\n        /* \"#utility.yul\":10864:10890   */\n      swap1\n      pop\n        /* \"#utility.yul\":10936:10945   */\n      dup2\n        /* \"#utility.yul\":10930:10934   */\n      dup2\n        /* \"#utility.yul\":10926:10946   */\n      sub\n        /* \"#utility.yul\":10922:10923   */\n      0x00\n        /* \"#utility.yul\":10911:10920   */\n      dup4\n        /* \"#utility.yul\":10907:10924   */\n      add\n        /* \"#utility.yul\":10900:10947   */\n      mstore\n        /* \"#utility.yul\":10964:11095   */\n      tag_565\n        /* \"#utility.yul\":11090:11094   */\n      dup2\n        /* \"#utility.yul\":10964:11095   */\n      tag_447\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":10956:11095   */\n      swap1\n      pop\n        /* \"#utility.yul\":10683:11102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11108:11330   */\n    tag_448:\n        /* \"#utility.yul\":11248:11282   */\n      0x5374616b696e67206f6e207468697320636f6e74726163742068617320656e64\n        /* \"#utility.yul\":11244:11245   */\n      0x00\n        /* \"#utility.yul\":11236:11242   */\n      dup3\n        /* \"#utility.yul\":11232:11246   */\n      add\n        /* \"#utility.yul\":11225:11283   */\n      mstore\n        /* \"#utility.yul\":11317:11322   */\n      0x6564210000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11312:11314   */\n      0x20\n        /* \"#utility.yul\":11304:11310   */\n      dup3\n        /* \"#utility.yul\":11300:11315   */\n      add\n        /* \"#utility.yul\":11293:11323   */\n      mstore\n        /* \"#utility.yul\":11108:11330   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11336:11702   */\n    tag_449:\n        /* \"#utility.yul\":11478:11481   */\n      0x00\n        /* \"#utility.yul\":11499:11566   */\n      tag_568\n        /* \"#utility.yul\":11563:11565   */\n      0x23\n        /* \"#utility.yul\":11558:11561   */\n      dup4\n        /* \"#utility.yul\":11499:11566   */\n      tag_435\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":11492:11566   */\n      swap2\n      pop\n        /* \"#utility.yul\":11575:11668   */\n      tag_569\n        /* \"#utility.yul\":11664:11667   */\n      dup3\n        /* \"#utility.yul\":11575:11668   */\n      tag_448\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":11693:11695   */\n      0x40\n        /* \"#utility.yul\":11688:11691   */\n      dup3\n        /* \"#utility.yul\":11684:11696   */\n      add\n        /* \"#utility.yul\":11677:11696   */\n      swap1\n      pop\n        /* \"#utility.yul\":11336:11702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11708:12127   */\n    tag_362:\n        /* \"#utility.yul\":11874:11878   */\n      0x00\n        /* \"#utility.yul\":11912:11914   */\n      0x20\n        /* \"#utility.yul\":11901:11910   */\n      dup3\n        /* \"#utility.yul\":11897:11915   */\n      add\n        /* \"#utility.yul\":11889:11915   */\n      swap1\n      pop\n        /* \"#utility.yul\":11961:11970   */\n      dup2\n        /* \"#utility.yul\":11955:11959   */\n      dup2\n        /* \"#utility.yul\":11951:11971   */\n      sub\n        /* \"#utility.yul\":11947:11948   */\n      0x00\n        /* \"#utility.yul\":11936:11945   */\n      dup4\n        /* \"#utility.yul\":11932:11949   */\n      add\n        /* \"#utility.yul\":11925:11972   */\n      mstore\n        /* \"#utility.yul\":11989:12120   */\n      tag_571\n        /* \"#utility.yul\":12115:12119   */\n      dup2\n        /* \"#utility.yul\":11989:12120   */\n      tag_449\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":11981:12120   */\n      swap1\n      pop\n        /* \"#utility.yul\":11708:12127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12133:12312   */\n    tag_450:\n        /* \"#utility.yul\":12273:12304   */\n      0x5374616b656420616d6f756e74206d757374206265206869676865722e000000\n        /* \"#utility.yul\":12269:12270   */\n      0x00\n        /* \"#utility.yul\":12261:12267   */\n      dup3\n        /* \"#utility.yul\":12257:12271   */\n      add\n        /* \"#utility.yul\":12250:12305   */\n      mstore\n        /* \"#utility.yul\":12133:12312   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12318:12684   */\n    tag_451:\n        /* \"#utility.yul\":12460:12463   */\n      0x00\n        /* \"#utility.yul\":12481:12548   */\n      tag_574\n        /* \"#utility.yul\":12545:12547   */\n      0x1d\n        /* \"#utility.yul\":12540:12543   */\n      dup4\n        /* \"#utility.yul\":12481:12548   */\n      tag_435\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":12474:12548   */\n      swap2\n      pop\n        /* \"#utility.yul\":12557:12650   */\n      tag_575\n        /* \"#utility.yul\":12646:12649   */\n      dup3\n        /* \"#utility.yul\":12557:12650   */\n      tag_450\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":12675:12677   */\n      0x20\n        /* \"#utility.yul\":12670:12673   */\n      dup3\n        /* \"#utility.yul\":12666:12678   */\n      add\n        /* \"#utility.yul\":12659:12678   */\n      swap1\n      pop\n        /* \"#utility.yul\":12318:12684   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12690:13109   */\n    tag_370:\n        /* \"#utility.yul\":12856:12860   */\n      0x00\n        /* \"#utility.yul\":12894:12896   */\n      0x20\n        /* \"#utility.yul\":12883:12892   */\n      dup3\n        /* \"#utility.yul\":12879:12897   */\n      add\n        /* \"#utility.yul\":12871:12897   */\n      swap1\n      pop\n        /* \"#utility.yul\":12943:12952   */\n      dup2\n        /* \"#utility.yul\":12937:12941   */\n      dup2\n        /* \"#utility.yul\":12933:12953   */\n      sub\n        /* \"#utility.yul\":12929:12930   */\n      0x00\n        /* \"#utility.yul\":12918:12927   */\n      dup4\n        /* \"#utility.yul\":12914:12931   */\n      add\n        /* \"#utility.yul\":12907:12954   */\n      mstore\n        /* \"#utility.yul\":12971:13102   */\n      tag_577\n        /* \"#utility.yul\":13097:13101   */\n      dup2\n        /* \"#utility.yul\":12971:13102   */\n      tag_451\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":12963:13102   */\n      swap1\n      pop\n        /* \"#utility.yul\":12690:13109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13115:13293   */\n    tag_452:\n        /* \"#utility.yul\":13255:13285   */\n      0x5374616b656420616d6f756e74206d757374206265206c6f7765722e00000000\n        /* \"#utility.yul\":13251:13252   */\n      0x00\n        /* \"#utility.yul\":13243:13249   */\n      dup3\n        /* \"#utility.yul\":13239:13253   */\n      add\n        /* \"#utility.yul\":13232:13286   */\n      mstore\n        /* \"#utility.yul\":13115:13293   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13299:13665   */\n    tag_453:\n        /* \"#utility.yul\":13441:13444   */\n      0x00\n        /* \"#utility.yul\":13462:13529   */\n      tag_580\n        /* \"#utility.yul\":13526:13528   */\n      0x1c\n        /* \"#utility.yul\":13521:13524   */\n      dup4\n        /* \"#utility.yul\":13462:13529   */\n      tag_435\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":13455:13529   */\n      swap2\n      pop\n        /* \"#utility.yul\":13538:13631   */\n      tag_581\n        /* \"#utility.yul\":13627:13630   */\n      dup3\n        /* \"#utility.yul\":13538:13631   */\n      tag_452\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":13656:13658   */\n      0x20\n        /* \"#utility.yul\":13651:13654   */\n      dup3\n        /* \"#utility.yul\":13647:13659   */\n      add\n        /* \"#utility.yul\":13640:13659   */\n      swap1\n      pop\n        /* \"#utility.yul\":13299:13665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13671:14090   */\n    tag_373:\n        /* \"#utility.yul\":13837:13841   */\n      0x00\n        /* \"#utility.yul\":13875:13877   */\n      0x20\n        /* \"#utility.yul\":13864:13873   */\n      dup3\n        /* \"#utility.yul\":13860:13878   */\n      add\n        /* \"#utility.yul\":13852:13878   */\n      swap1\n      pop\n        /* \"#utility.yul\":13924:13933   */\n      dup2\n        /* \"#utility.yul\":13918:13922   */\n      dup2\n        /* \"#utility.yul\":13914:13934   */\n      sub\n        /* \"#utility.yul\":13910:13911   */\n      0x00\n        /* \"#utility.yul\":13899:13908   */\n      dup4\n        /* \"#utility.yul\":13895:13912   */\n      add\n        /* \"#utility.yul\":13888:13935   */\n      mstore\n        /* \"#utility.yul\":13952:14083   */\n      tag_583\n        /* \"#utility.yul\":14078:14082   */\n      dup2\n        /* \"#utility.yul\":13952:14083   */\n      tag_453\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":13944:14083   */\n      swap1\n      pop\n        /* \"#utility.yul\":13671:14090   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14096:14321   */\n    tag_454:\n        /* \"#utility.yul\":14236:14270   */\n      0x5374616b696e672069732063757272656e746c7920696e20756e6c6f636b6564\n        /* \"#utility.yul\":14232:14233   */\n      0x00\n        /* \"#utility.yul\":14224:14230   */\n      dup3\n        /* \"#utility.yul\":14220:14234   */\n      add\n        /* \"#utility.yul\":14213:14271   */\n      mstore\n        /* \"#utility.yul\":14305:14313   */\n      0x206d6f64652e0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14300:14302   */\n      0x20\n        /* \"#utility.yul\":14292:14298   */\n      dup3\n        /* \"#utility.yul\":14288:14303   */\n      add\n        /* \"#utility.yul\":14281:14314   */\n      mstore\n        /* \"#utility.yul\":14096:14321   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14327:14693   */\n    tag_455:\n        /* \"#utility.yul\":14469:14472   */\n      0x00\n        /* \"#utility.yul\":14490:14557   */\n      tag_586\n        /* \"#utility.yul\":14554:14556   */\n      0x26\n        /* \"#utility.yul\":14549:14552   */\n      dup4\n        /* \"#utility.yul\":14490:14557   */\n      tag_435\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":14483:14557   */\n      swap2\n      pop\n        /* \"#utility.yul\":14566:14659   */\n      tag_587\n        /* \"#utility.yul\":14655:14658   */\n      dup3\n        /* \"#utility.yul\":14566:14659   */\n      tag_454\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":14684:14686   */\n      0x40\n        /* \"#utility.yul\":14679:14682   */\n      dup3\n        /* \"#utility.yul\":14675:14687   */\n      add\n        /* \"#utility.yul\":14668:14687   */\n      swap1\n      pop\n        /* \"#utility.yul\":14327:14693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14699:15118   */\n    tag_376:\n        /* \"#utility.yul\":14865:14869   */\n      0x00\n        /* \"#utility.yul\":14903:14905   */\n      0x20\n        /* \"#utility.yul\":14892:14901   */\n      dup3\n        /* \"#utility.yul\":14888:14906   */\n      add\n        /* \"#utility.yul\":14880:14906   */\n      swap1\n      pop\n        /* \"#utility.yul\":14952:14961   */\n      dup2\n        /* \"#utility.yul\":14946:14950   */\n      dup2\n        /* \"#utility.yul\":14942:14962   */\n      sub\n        /* \"#utility.yul\":14938:14939   */\n      0x00\n        /* \"#utility.yul\":14927:14936   */\n      dup4\n        /* \"#utility.yul\":14923:14940   */\n      add\n        /* \"#utility.yul\":14916:14963   */\n      mstore\n        /* \"#utility.yul\":14980:15111   */\n      tag_589\n        /* \"#utility.yul\":15106:15110   */\n      dup2\n        /* \"#utility.yul\":14980:15111   */\n      tag_455\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":14972:15111   */\n      swap1\n      pop\n        /* \"#utility.yul\":14699:15118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15124:15344   */\n    tag_456:\n        /* \"#utility.yul\":15264:15298   */\n      0x54686973207374616b696e672070726f647563742069732064697361626c6564\n        /* \"#utility.yul\":15260:15261   */\n      0x00\n        /* \"#utility.yul\":15252:15258   */\n      dup3\n        /* \"#utility.yul\":15248:15262   */\n      add\n        /* \"#utility.yul\":15241:15299   */\n      mstore\n        /* \"#utility.yul\":15333:15336   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15328:15330   */\n      0x20\n        /* \"#utility.yul\":15320:15326   */\n      dup3\n        /* \"#utility.yul\":15316:15331   */\n      add\n        /* \"#utility.yul\":15309:15337   */\n      mstore\n        /* \"#utility.yul\":15124:15344   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15350:15716   */\n    tag_457:\n        /* \"#utility.yul\":15492:15495   */\n      0x00\n        /* \"#utility.yul\":15513:15580   */\n      tag_592\n        /* \"#utility.yul\":15577:15579   */\n      0x21\n        /* \"#utility.yul\":15572:15575   */\n      dup4\n        /* \"#utility.yul\":15513:15580   */\n      tag_435\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":15506:15580   */\n      swap2\n      pop\n        /* \"#utility.yul\":15589:15682   */\n      tag_593\n        /* \"#utility.yul\":15678:15681   */\n      dup3\n        /* \"#utility.yul\":15589:15682   */\n      tag_456\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":15707:15709   */\n      0x40\n        /* \"#utility.yul\":15702:15705   */\n      dup3\n        /* \"#utility.yul\":15698:15710   */\n      add\n        /* \"#utility.yul\":15691:15710   */\n      swap1\n      pop\n        /* \"#utility.yul\":15350:15716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15722:16141   */\n    tag_380:\n        /* \"#utility.yul\":15888:15892   */\n      0x00\n        /* \"#utility.yul\":15926:15928   */\n      0x20\n        /* \"#utility.yul\":15915:15924   */\n      dup3\n        /* \"#utility.yul\":15911:15929   */\n      add\n        /* \"#utility.yul\":15903:15929   */\n      swap1\n      pop\n        /* \"#utility.yul\":15975:15984   */\n      dup2\n        /* \"#utility.yul\":15969:15973   */\n      dup2\n        /* \"#utility.yul\":15965:15985   */\n      sub\n        /* \"#utility.yul\":15961:15962   */\n      0x00\n        /* \"#utility.yul\":15950:15959   */\n      dup4\n        /* \"#utility.yul\":15946:15963   */\n      add\n        /* \"#utility.yul\":15939:15986   */\n      mstore\n        /* \"#utility.yul\":16003:16134   */\n      tag_595\n        /* \"#utility.yul\":16129:16133   */\n      dup2\n        /* \"#utility.yul\":16003:16134   */\n      tag_457\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":15995:16134   */\n      swap1\n      pop\n        /* \"#utility.yul\":15722:16141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16147:16453   */\n    tag_458:\n        /* \"#utility.yul\":16287:16321   */\n      0x546869732077616c6c65742068617320616c7265616479207374616b6564206f\n        /* \"#utility.yul\":16283:16284   */\n      0x00\n        /* \"#utility.yul\":16275:16281   */\n      dup3\n        /* \"#utility.yul\":16271:16285   */\n      add\n        /* \"#utility.yul\":16264:16322   */\n      mstore\n        /* \"#utility.yul\":16356:16390   */\n      0x6e20746869732070726f64756374202d207761697420666f7220746865207265\n        /* \"#utility.yul\":16351:16353   */\n      0x20\n        /* \"#utility.yul\":16343:16349   */\n      dup3\n        /* \"#utility.yul\":16339:16354   */\n      add\n        /* \"#utility.yul\":16332:16391   */\n      mstore\n        /* \"#utility.yul\":16425:16445   */\n      0x6c6561736520746f2072652d7374616b652e0000000000000000000000000000\n        /* \"#utility.yul\":16420:16422   */\n      0x40\n        /* \"#utility.yul\":16412:16418   */\n      dup3\n        /* \"#utility.yul\":16408:16423   */\n      add\n        /* \"#utility.yul\":16401:16446   */\n      mstore\n        /* \"#utility.yul\":16147:16453   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16459:16825   */\n    tag_459:\n        /* \"#utility.yul\":16601:16604   */\n      0x00\n        /* \"#utility.yul\":16622:16689   */\n      tag_598\n        /* \"#utility.yul\":16686:16688   */\n      0x52\n        /* \"#utility.yul\":16681:16684   */\n      dup4\n        /* \"#utility.yul\":16622:16689   */\n      tag_435\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":16615:16689   */\n      swap2\n      pop\n        /* \"#utility.yul\":16698:16791   */\n      tag_599\n        /* \"#utility.yul\":16787:16790   */\n      dup3\n        /* \"#utility.yul\":16698:16791   */\n      tag_458\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":16816:16818   */\n      0x60\n        /* \"#utility.yul\":16811:16814   */\n      dup3\n        /* \"#utility.yul\":16807:16819   */\n      add\n        /* \"#utility.yul\":16800:16819   */\n      swap1\n      pop\n        /* \"#utility.yul\":16459:16825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16831:17250   */\n    tag_383:\n        /* \"#utility.yul\":16997:17001   */\n      0x00\n        /* \"#utility.yul\":17035:17037   */\n      0x20\n        /* \"#utility.yul\":17024:17033   */\n      dup3\n        /* \"#utility.yul\":17020:17038   */\n      add\n        /* \"#utility.yul\":17012:17038   */\n      swap1\n      pop\n        /* \"#utility.yul\":17084:17093   */\n      dup2\n        /* \"#utility.yul\":17078:17082   */\n      dup2\n        /* \"#utility.yul\":17074:17094   */\n      sub\n        /* \"#utility.yul\":17070:17071   */\n      0x00\n        /* \"#utility.yul\":17059:17068   */\n      dup4\n        /* \"#utility.yul\":17055:17072   */\n      add\n        /* \"#utility.yul\":17048:17095   */\n      mstore\n        /* \"#utility.yul\":17112:17243   */\n      tag_601\n        /* \"#utility.yul\":17238:17242   */\n      dup2\n        /* \"#utility.yul\":17112:17243   */\n      tag_459\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":17104:17243   */\n      swap1\n      pop\n        /* \"#utility.yul\":16831:17250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17256:17436   */\n    tag_460:\n        /* \"#utility.yul\":17304:17381   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17301:17302   */\n      0x00\n        /* \"#utility.yul\":17294:17382   */\n      mstore\n        /* \"#utility.yul\":17401:17405   */\n      0x12\n        /* \"#utility.yul\":17398:17399   */\n      0x04\n        /* \"#utility.yul\":17391:17406   */\n      mstore\n        /* \"#utility.yul\":17425:17429   */\n      0x24\n        /* \"#utility.yul\":17422:17423   */\n      0x00\n        /* \"#utility.yul\":17415:17430   */\n      revert\n        /* \"#utility.yul\":17442:17627   */\n    tag_414:\n        /* \"#utility.yul\":17482:17483   */\n      0x00\n        /* \"#utility.yul\":17499:17519   */\n      tag_604\n        /* \"#utility.yul\":17517:17518   */\n      dup3\n        /* \"#utility.yul\":17499:17519   */\n      tag_426\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":17494:17519   */\n      swap2\n      pop\n        /* \"#utility.yul\":17533:17553   */\n      tag_605\n        /* \"#utility.yul\":17551:17552   */\n      dup4\n        /* \"#utility.yul\":17533:17553   */\n      tag_426\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":17528:17553   */\n      swap3\n      pop\n        /* \"#utility.yul\":17572:17573   */\n      dup3\n        /* \"#utility.yul\":17562:17597   */\n      tag_606\n      jumpi\n        /* \"#utility.yul\":17577:17595   */\n      tag_607\n      tag_460\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":17562:17597   */\n    tag_606:\n        /* \"#utility.yul\":17619:17620   */\n      dup3\n        /* \"#utility.yul\":17616:17617   */\n      dup3\n        /* \"#utility.yul\":17612:17621   */\n      div\n        /* \"#utility.yul\":17607:17621   */\n      swap1\n      pop\n        /* \"#utility.yul\":17442:17627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17633:17827   */\n    tag_417:\n        /* \"#utility.yul\":17673:17677   */\n      0x00\n        /* \"#utility.yul\":17693:17713   */\n      tag_609\n        /* \"#utility.yul\":17711:17712   */\n      dup3\n        /* \"#utility.yul\":17693:17713   */\n      tag_426\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":17688:17713   */\n      swap2\n      pop\n        /* \"#utility.yul\":17727:17747   */\n      tag_610\n        /* \"#utility.yul\":17745:17746   */\n      dup4\n        /* \"#utility.yul\":17727:17747   */\n      tag_426\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":17722:17747   */\n      swap3\n      pop\n        /* \"#utility.yul\":17771:17772   */\n      dup3\n        /* \"#utility.yul\":17768:17769   */\n      dup3\n        /* \"#utility.yul\":17764:17773   */\n      sub\n        /* \"#utility.yul\":17756:17773   */\n      swap1\n      pop\n        /* \"#utility.yul\":17795:17796   */\n      dup2\n        /* \"#utility.yul\":17789:17793   */\n      dup2\n        /* \"#utility.yul\":17786:17797   */\n      gt\n        /* \"#utility.yul\":17783:17820   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":17800:17818   */\n      tag_612\n      tag_445\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":17783:17820   */\n    tag_611:\n        /* \"#utility.yul\":17633:17827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203ab1a6982f7f0fca90b0d859f0345f35610fca850dc8c02f47a1bb86b722961c64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1035": {
									"entryPoint": null,
									"id": 1035,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_197": {
									"entryPoint": null,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1725": {
									"entryPoint": 570,
									"id": 1725,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1115": {
									"entryPoint": 577,
									"id": 1115,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5061002c61002161023a60201b60201c565b61024160201b60201c565b5f601a819055505f601b819055505f601c819055506815af1d78b58c400000601581905550681b1ae4d6e2ef500000601d81905550662386f26fc1000060198190555073439aab0efaa9a646d4885fd8a245a501ca3d323760165f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073b2c8cec19bf5e73b28aa0193ffff124055413e2e60175f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550735c647208486231beccabaacf5f2b7358937d3b9960185f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f601e5f6101000a81548160ff02191690831515021790555061014d60038190555062093a80600481905550600160055f6101000a81548160ff0219169083151502179055506053600881905550621275006009819055506001600a5f6101000a81548160ff0219169083151502179055506020600d819055506224ea00600e819055506001600f5f6101000a81548160ff021916908315150217905550601a6012819055506224ea00601381905550600160145f6101000a81548160ff021916908315150217905550610302565b5f33905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6132e98061030f5f395ff3fe608060405234801561000f575f5ffd5b5060043610610288575f3560e01c8063817b1cd21161015a578063d0bcc009116100cc578063ea1b28e011610085578063ea1b28e0146107de578063f1cddd55146107fc578063f2fde38b14610818578063f908dc1314610834578063fb75b2c714610852578063fd2b52021461087057610288565b8063d0bcc0091461072c578063d19b090e1461074a578063d47c56e514610768578063d5c41d6914610786578063d7d4918e146107a2578063e7de2ceb146107c057610288565b80639d76ea581161011e5780639d76ea5814610668578063b39dc99614610686578063bba4fefd146106a4578063bef7d12e146106c2578063c3630edb146106f2578063cd5692ee1461071057610288565b8063817b1cd2146105c257806389b0040a146105e05780638a170ac1146106105780638da5cb5b1461062e578063943872891461064c57610288565b80634b0c10d8116101fe57806370a08231116101b757806370a08231146104fe578063715018a61461052e57806373dec718146105385780637908542514610556578063798cbe5e146105745780637b3e920c1461059257610288565b80634b0c10d81461042a5780634b5effc2146104485780634f51d090146104785780635cd5a159146104a85780635f75bcea146104c65780636cbde5cf146104e257610288565b806324ebd9d21161025057806324ebd9d2146103305780632e5f89ef1461036057806335e6305514610390578063375b3c0a146103ac57806338dc97fb146103ca5780634893afc1146103fa57610288565b8063058df0e81461028c5780630f9154b5146102bc5780631d95985b146102da5780631d95d52f146102f857806323dcdb8914610314575b5f5ffd5b6102a660048036038101906102a191906129ba565b61088c565b6040516102b391906129fd565b60405180910390f35b6102c46108a1565b6040516102d19190612a25565b60405180910390f35b6102e26108c6565b6040516102ef91906129fd565b60405180910390f35b610312600480360381019061030d9190612a73565b6108cc565b005b61032e60048036038101906103299190612ac8565b610964565b005b61034a600480360381019061034591906129ba565b6109ea565b60405161035791906129fd565b60405180910390f35b61037a600480360381019061037591906129ba565b6109ff565b60405161038791906129fd565b60405180910390f35b6103aa60048036038101906103a59190612ac8565b610a14565b005b6103b4611587565b6040516103c191906129fd565b60405180910390f35b6103e460048036038101906103df91906129ba565b61158d565b6040516103f191906129fd565b60405180910390f35b610414600480360381019061040f91906129ba565b6115a2565b60405161042191906129fd565b60405180910390f35b6104326115b7565b60405161043f91906129fd565b60405180910390f35b610462600480360381019061045d9190612af3565b6115bd565b60405161046f91906129fd565b60405180910390f35b610492600480360381019061048d91906129ba565b6116fc565b60405161049f91906129fd565b60405180910390f35b6104b0611711565b6040516104bd9190612b40565b60405180910390f35b6104e060048036038101906104db9190612a73565b611723565b005b6104fc60048036038101906104f79190612a73565b6117bb565b005b610518600480360381019061051391906129ba565b611853565b60405161052591906129fd565b60405180910390f35b610536611976565b005b6105406119fd565b60405161054d9190612b40565b60405180910390f35b61055e611a0f565b60405161056b91906129fd565b60405180910390f35b61057c611a15565b60405161058991906129fd565b60405180910390f35b6105ac60048036038101906105a791906129ba565b611a1b565b6040516105b991906129fd565b60405180910390f35b6105ca611a30565b6040516105d791906129fd565b60405180910390f35b6105fa60048036038101906105f591906129ba565b611a36565b60405161060791906129fd565b60405180910390f35b610618611a4b565b6040516106259190612b40565b60405180910390f35b610636611a5d565b6040516106439190612a25565b60405180910390f35b61066660048036038101906106619190612ac8565b611a84565b005b610670611b0a565b60405161067d9190612a25565b60405180910390f35b61068e611b2f565b60405161069b91906129fd565b60405180910390f35b6106ac611b35565b6040516106b991906129fd565b60405180910390f35b6106dc60048036038101906106d79190612af3565b611b3b565b6040516106e991906129fd565b60405180910390f35b6106fa611cca565b60405161070791906129fd565b60405180910390f35b61072a60048036038101906107259190612ac8565b611cd0565b005b610734611d56565b6040516107419190612b40565b60405180910390f35b610752611d68565b60405161075f91906129fd565b60405180910390f35b610770611d6e565b60405161077d91906129fd565b60405180910390f35b6107a0600480360381019061079b9190612a73565b611d74565b005b6107aa611e0c565b6040516107b791906129fd565b60405180910390f35b6107c8611e12565b6040516107d591906129fd565b60405180910390f35b6107e6611e18565b6040516107f391906129fd565b60405180910390f35b61081660048036038101906108119190612a73565b611e1e565b005b610832600480360381019061082d91906129ba565b611eb6565b005b61083c611fac565b6040516108499190612b40565b60405180910390f35b61085a611fbe565b6040516108679190612a25565b60405180910390f35b61088a60048036038101906108859190612b59565b611fe3565b005b6006602052805f5260405f205f915090505481565b60165f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600e5481565b6108d4612855565b73ffffffffffffffffffffffffffffffffffffffff166108f2611a5d565b73ffffffffffffffffffffffffffffffffffffffff1614610948576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093f90612bf1565b60405180910390fd5b8060145f6101000a81548160ff02191690831515021790555050565b61096c612855565b73ffffffffffffffffffffffffffffffffffffffff1661098a611a5d565b73ffffffffffffffffffffffffffffffffffffffff16146109e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d790612bf1565b60405180910390fd5b8060198190555050565b6010602052805f5260405f205f915090505481565b600b602052805f5260405f205f915090505481565b5f3390505f5f90505f5f90506001841480610a2f5750600284145b80610a3a5750600384145b80610a455750600484145b610a84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7b90612c59565b60405180910390fd5b60018403610ccc575f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411610b0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0290612ce7565b60405180910390fd5b601e5f9054906101000a900460ff16610bb35742610b7160045460025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461285c90919063ffffffff16565b1115610bb2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba990612d75565b60405180910390fd5b5b610c0560035460015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461287190919063ffffffff16565b915060015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b60028403610f14575f60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411610d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4a90612ce7565b60405180910390fd5b601e5f9054906101000a900460ff16610dfb5742610db960095460075f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461285c90919063ffffffff16565b1115610dfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df190612d75565b60405180910390fd5b5b610e4d60085460065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461287190919063ffffffff16565b915060065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60075f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b6003840361115c575f600b5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205411610f9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9290612ce7565b60405180910390fd5b601e5f9054906101000a900460ff166110435742611001600e54600c5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461285c90919063ffffffff16565b1115611042576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103990612d75565b60405180910390fd5b5b611095600d54600b5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461287190919063ffffffff16565b9150600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f600b5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f600c5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b600484036113a4575f60105f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054116111e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111da90612ce7565b60405180910390fd5b601e5f9054906101000a900460ff1661128b574261124960135460115f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461285c90919063ffffffff16565b111561128a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128190612d75565b60405180910390fd5b5b6112dd60125460105f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461287190919063ffffffff16565b915060105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60105f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f60115f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b601e5f9054906101000a900460ff166113ee576113cc82601b5461285c90919063ffffffff16565b601b819055506113e782601a5461288690919063ffffffff16565b601a819055505b61140381601c5461288690919063ffffffff16565b601c819055505f60185f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd60165f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686856040518463ffffffff1660e01b815260040161148c93929190612d93565b6020604051808303815f875af11580156114a8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114cc9190612ddc565b50601e5f9054906101000a900460ff16611580578073ffffffffffffffffffffffffffffffffffffffff166323b872dd60175f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1686866040518463ffffffff1660e01b815260040161153e93929190612d93565b6020604051808303815f875af115801561155a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061157e9190612ddc565b505b5050505050565b60195481565b6011602052805f5260405f205f915090505481565b6001602052805f5260405f205f915090505481565b60045481565b5f6001820361160b5760015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490506116f6565b600282036116585760065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490506116f6565b600382036116a557600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490506116f6565b600482036116f25760105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490506116f6565b5f90505b92915050565b6002602052805f5260405f205f915090505481565b60145f9054906101000a900460ff1681565b61172b612855565b73ffffffffffffffffffffffffffffffffffffffff16611749611a5d565b73ffffffffffffffffffffffffffffffffffffffff161461179f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179690612bf1565b60405180910390fd5b80600a5f6101000a81548160ff02191690831515021790555050565b6117c3612855565b73ffffffffffffffffffffffffffffffffffffffff166117e1611a5d565b73ffffffffffffffffffffffffffffffffffffffff1614611837576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161182e90612bf1565b60405180910390fd5b8060055f6101000a81548160ff02191690831515021790555050565b5f5f60105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054600b5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546119579190612e34565b6119619190612e34565b61196b9190612e34565b905080915050919050565b61197e612855565b73ffffffffffffffffffffffffffffffffffffffff1661199c611a5d565b73ffffffffffffffffffffffffffffffffffffffff16146119f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119e990612bf1565b60405180910390fd5b6119fb5f61289b565b565b600a5f9054906101000a900460ff1681565b601b5481565b60135481565b6007602052805f5260405f205f915090505481565b601c5481565b600c602052805f5260405f205f915090505481565b60055f9054906101000a900460ff1681565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611a8c612855565b73ffffffffffffffffffffffffffffffffffffffff16611aaa611a5d565b73ffffffffffffffffffffffffffffffffffffffff1614611b00576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af790612bf1565b60405180910390fd5b80601d8190555050565b60185f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d5481565b601a5481565b5f60018203611b9d57611b9660045460025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461285c90919063ffffffff16565b9050611cc4565b60028203611bfe57611bf760095460075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461285c90919063ffffffff16565b9050611cc4565b60038203611c5f57611c58600e54600c5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461285c90919063ffffffff16565b9050611cc4565b60048203611cc057611cb960135460115f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461285c90919063ffffffff16565b9050611cc4565b5f90505b92915050565b60125481565b611cd8612855565b73ffffffffffffffffffffffffffffffffffffffff16611cf6611a5d565b73ffffffffffffffffffffffffffffffffffffffff1614611d4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d4390612bf1565b60405180910390fd5b8060158190555050565b600f5f9054906101000a900460ff1681565b601d5481565b60095481565b611d7c612855565b73ffffffffffffffffffffffffffffffffffffffff16611d9a611a5d565b73ffffffffffffffffffffffffffffffffffffffff1614611df0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de790612bf1565b60405180910390fd5b80600f5f6101000a81548160ff02191690831515021790555050565b60085481565b60035481565b60155481565b611e26612855565b73ffffffffffffffffffffffffffffffffffffffff16611e44611a5d565b73ffffffffffffffffffffffffffffffffffffffff1614611e9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e9190612bf1565b60405180910390fd5b80601e5f6101000a81548160ff02191690831515021790555050565b611ebe612855565b73ffffffffffffffffffffffffffffffffffffffff16611edc611a5d565b73ffffffffffffffffffffffffffffffffffffffff1614611f32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f2990612bf1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611fa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f9790612ed7565b60405180910390fd5b611fa98161289b565b50565b601e5f9054906101000a900460ff1681565b60175f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f3390505f5f9050601b54601d541015612032576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161202990612f65565b60405180910390fd5b60018314806120415750600283145b8061204c5750600383145b806120575750600483145b612096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161208d90612c59565b60405180910390fd5b6019548410156120db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120d290612fcd565b60405180910390fd5b601554841115612120576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161211790613035565b60405180910390fd5b5f1515601e5f9054906101000a900460ff16151514612174576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161216b906130c3565b60405180910390fd5b600183036122ec576001151560055f9054906101000a900460ff161515146121d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121c890613151565b60405180910390fd5b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414612250576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161224790613205565b60405180910390fd5b6122656003548561287190919063ffffffff16565b90504260025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508360015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b600283036124645760011515600a5f9054906101000a900460ff16151514612349576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161234090613151565b60405180910390fd5b5f60065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146123c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123bf90613205565b60405180910390fd5b6123dd6008548561287190919063ffffffff16565b90504260075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508360065f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b600383036125dc5760011515600f5f9054906101000a900460ff161515146124c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b890613151565b60405180910390fd5b5f600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205414612540576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161253790613205565b60405180910390fd5b612555600d548561287190919063ffffffff16565b905042600c5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555083600b5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b60048303612754576001151560145f9054906101000a900460ff16151514612639576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161263090613151565b60405180910390fd5b5f60105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054146126b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126af90613205565b60405180910390fd5b6126cd6012548561287190919063ffffffff16565b90504260115f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508360105f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b61276981601a5461285c90919063ffffffff16565b601a8190555061278484601c5461285c90919063ffffffff16565b601c819055505f60185f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8460165f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16886040518463ffffffff1660e01b815260040161280d93929190612d93565b6020604051808303815f875af1158015612829573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061284d9190612ddc565b505050505050565b5f33905090565b5f81836128699190612e34565b905092915050565b5f818361287e9190613250565b905092915050565b5f81836128939190613280565b905092915050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61298982612960565b9050919050565b6129998161297f565b81146129a3575f5ffd5b50565b5f813590506129b481612990565b92915050565b5f602082840312156129cf576129ce61295c565b5b5f6129dc848285016129a6565b91505092915050565b5f819050919050565b6129f7816129e5565b82525050565b5f602082019050612a105f8301846129ee565b92915050565b612a1f8161297f565b82525050565b5f602082019050612a385f830184612a16565b92915050565b5f8115159050919050565b612a5281612a3e565b8114612a5c575f5ffd5b50565b5f81359050612a6d81612a49565b92915050565b5f60208284031215612a8857612a8761295c565b5b5f612a9584828501612a5f565b91505092915050565b612aa7816129e5565b8114612ab1575f5ffd5b50565b5f81359050612ac281612a9e565b92915050565b5f60208284031215612add57612adc61295c565b5b5f612aea84828501612ab4565b91505092915050565b5f5f60408385031215612b0957612b0861295c565b5b5f612b16858286016129a6565b9250506020612b2785828601612ab4565b9150509250929050565b612b3a81612a3e565b82525050565b5f602082019050612b535f830184612b31565b92915050565b5f5f60408385031215612b6f57612b6e61295c565b5b5f612b7c85828601612ab4565b9250506020612b8d85828601612ab4565b9150509250929050565b5f82825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f612bdb602083612b97565b9150612be682612ba7565b602082019050919050565b5f6020820190508181035f830152612c0881612bcf565b9050919050565b7f496e76616c69642070726f647563742049442e000000000000000000000000005f82015250565b5f612c43601383612b97565b9150612c4e82612c0f565b602082019050919050565b5f6020820190508181035f830152612c7081612c37565b9050919050565b7f546869732077616c6c657420686173206e6f207374616b65206f6e20746869735f8201527f2070726f647563742e0000000000000000000000000000000000000000000000602082015250565b5f612cd1602983612b97565b9150612cdc82612c77565b604082019050919050565b5f6020820190508181035f830152612cfe81612cc5565b9050919050565b7f546865207374616b696e6720706572696f6420666f7220746869732070726f645f8201527f75637420686173206e6f7420656e646564207965742e00000000000000000000602082015250565b5f612d5f603683612b97565b9150612d6a82612d05565b604082019050919050565b5f6020820190508181035f830152612d8c81612d53565b9050919050565b5f606082019050612da65f830186612a16565b612db36020830185612a16565b612dc060408301846129ee565b949350505050565b5f81519050612dd681612a49565b92915050565b5f60208284031215612df157612df061295c565b5b5f612dfe84828501612dc8565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612e3e826129e5565b9150612e49836129e5565b9250828201905080821115612e6157612e60612e07565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f612ec1602683612b97565b9150612ecc82612e67565b604082019050919050565b5f6020820190508181035f830152612eee81612eb5565b9050919050565b7f5374616b696e67206f6e207468697320636f6e74726163742068617320656e645f8201527f6564210000000000000000000000000000000000000000000000000000000000602082015250565b5f612f4f602383612b97565b9150612f5a82612ef5565b604082019050919050565b5f6020820190508181035f830152612f7c81612f43565b9050919050565b7f5374616b656420616d6f756e74206d757374206265206869676865722e0000005f82015250565b5f612fb7601d83612b97565b9150612fc282612f83565b602082019050919050565b5f6020820190508181035f830152612fe481612fab565b9050919050565b7f5374616b656420616d6f756e74206d757374206265206c6f7765722e000000005f82015250565b5f61301f601c83612b97565b915061302a82612feb565b602082019050919050565b5f6020820190508181035f83015261304c81613013565b9050919050565b7f5374616b696e672069732063757272656e746c7920696e20756e6c6f636b65645f8201527f206d6f64652e0000000000000000000000000000000000000000000000000000602082015250565b5f6130ad602683612b97565b91506130b882613053565b604082019050919050565b5f6020820190508181035f8301526130da816130a1565b9050919050565b7f54686973207374616b696e672070726f647563742069732064697361626c65645f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61313b602183612b97565b9150613146826130e1565b604082019050919050565b5f6020820190508181035f8301526131688161312f565b9050919050565b7f546869732077616c6c65742068617320616c7265616479207374616b6564206f5f8201527f6e20746869732070726f64756374202d207761697420666f722074686520726560208201527f6c6561736520746f2072652d7374616b652e0000000000000000000000000000604082015250565b5f6131ef605283612b97565b91506131fa8261316f565b606082019050919050565b5f6020820190508181035f83015261321c816131e3565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61325a826129e5565b9150613265836129e5565b92508261327557613274613223565b5b828204905092915050565b5f61328a826129e5565b9150613295836129e5565b92508282039050818111156132ad576132ac612e07565b5b9291505056fea26469706673582212203ab1a6982f7f0fca90b0d859f0345f35610fca850dc8c02f47a1bb86b722961c64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C PUSH2 0x21 PUSH2 0x23A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x241 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 PUSH1 0x1A DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1B DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1C DUP2 SWAP1 SSTORE POP PUSH9 0x15AF1D78B58C400000 PUSH1 0x15 DUP2 SWAP1 SSTORE POP PUSH9 0x1B1AE4D6E2EF500000 PUSH1 0x1D DUP2 SWAP1 SSTORE POP PUSH7 0x2386F26FC10000 PUSH1 0x19 DUP2 SWAP1 SSTORE POP PUSH20 0x439AAB0EFAA9A646D4885FD8A245A501CA3D3237 PUSH1 0x16 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xB2C8CEC19BF5E73B28AA0193FFFF124055413E2E PUSH1 0x17 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x5C647208486231BECCABAACF5F2B7358937D3B99 PUSH1 0x18 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x1E PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x14D PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x53 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH3 0x127500 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x20 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH3 0x24EA00 PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xF PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1A PUSH1 0x12 DUP2 SWAP1 SSTORE POP PUSH3 0x24EA00 PUSH1 0x13 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x14 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x302 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x32E9 DUP1 PUSH2 0x30F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x288 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x15A JUMPI DUP1 PUSH4 0xD0BCC009 GT PUSH2 0xCC JUMPI DUP1 PUSH4 0xEA1B28E0 GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xEA1B28E0 EQ PUSH2 0x7DE JUMPI DUP1 PUSH4 0xF1CDDD55 EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x818 JUMPI DUP1 PUSH4 0xF908DC13 EQ PUSH2 0x834 JUMPI DUP1 PUSH4 0xFB75B2C7 EQ PUSH2 0x852 JUMPI DUP1 PUSH4 0xFD2B5202 EQ PUSH2 0x870 JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0xD0BCC009 EQ PUSH2 0x72C JUMPI DUP1 PUSH4 0xD19B090E EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0xD47C56E5 EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0xD5C41D69 EQ PUSH2 0x786 JUMPI DUP1 PUSH4 0xD7D4918E EQ PUSH2 0x7A2 JUMPI DUP1 PUSH4 0xE7DE2CEB EQ PUSH2 0x7C0 JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0x9D76EA58 GT PUSH2 0x11E JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x668 JUMPI DUP1 PUSH4 0xB39DC996 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0xBBA4FEFD EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xBEF7D12E EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xC3630EDB EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0xCD5692EE EQ PUSH2 0x710 JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0x89B0040A EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x8A170AC1 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0x94387289 EQ PUSH2 0x64C JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0x4B0C10D8 GT PUSH2 0x1FE JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0x73DEC718 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x79085425 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0x798CBE5E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0x7B3E920C EQ PUSH2 0x592 JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0x4B0C10D8 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x4B5EFFC2 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x4F51D090 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x5CD5A159 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x5F75BCEA EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x6CBDE5CF EQ PUSH2 0x4E2 JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0x24EBD9D2 GT PUSH2 0x250 JUMPI DUP1 PUSH4 0x24EBD9D2 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x2E5F89EF EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x35E63055 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x375B3C0A EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x38DC97FB EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x4893AFC1 EQ PUSH2 0x3FA JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0x58DF0E8 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xF9154B5 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x1D95985B EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x1D95D52F EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x23DCDB89 EQ PUSH2 0x314 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0xA14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B4 PUSH2 0x1587 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x158D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x432 PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x15BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x1723 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x17BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x518 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x525 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x536 PUSH2 0x1976 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x540 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55E PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57C PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CA PUSH2 0x1A30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x618 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x625 SWAP2 SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x636 PUSH2 0x1A5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x643 SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x666 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0x1A84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x670 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68E PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AC PUSH2 0x1B35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6FA PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x707 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0x1CD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x734 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x752 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75F SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x770 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79B SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x1D74 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7AA PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C8 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E6 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x816 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x811 SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x1E1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x832 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x1EB6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x83C PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x849 SWAP2 SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85A PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x867 SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x2B59 JUMP JUMPDEST PUSH2 0x1FE3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8D4 PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8F2 PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93F SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x14 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x96C PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x98A PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D7 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x19 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH1 0x1 DUP5 EQ DUP1 PUSH2 0xA2F JUMPI POP PUSH1 0x2 DUP5 EQ JUMPDEST DUP1 PUSH2 0xA3A JUMPI POP PUSH1 0x3 DUP5 EQ JUMPDEST DUP1 PUSH2 0xA45 JUMPI POP PUSH1 0x4 DUP5 EQ JUMPDEST PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7B SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP5 SUB PUSH2 0xCCC JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP1 PUSH2 0x2CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBB3 JUMPI TIMESTAMP PUSH2 0xB71 PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA9 SWAP1 PUSH2 0x2D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0xC05 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 DUP5 SUB PUSH2 0xF14 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4A SWAP1 PUSH2 0x2CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDFB JUMPI TIMESTAMP PUSH2 0xDB9 PUSH1 0x9 SLOAD PUSH1 0x7 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF1 SWAP1 PUSH2 0x2D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0xE4D PUSH1 0x8 SLOAD PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x3 DUP5 SUB PUSH2 0x115C JUMPI PUSH0 PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xF9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF92 SWAP1 PUSH2 0x2CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1043 JUMPI TIMESTAMP PUSH2 0x1001 PUSH1 0xE SLOAD PUSH1 0xC PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x1042 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1039 SWAP1 PUSH2 0x2D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x1095 PUSH1 0xD SLOAD PUSH1 0xB PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xC PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x4 DUP5 SUB PUSH2 0x13A4 JUMPI PUSH0 PUSH1 0x10 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DA SWAP1 PUSH2 0x2CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x128B JUMPI TIMESTAMP PUSH2 0x1249 PUSH1 0x13 SLOAD PUSH1 0x11 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x128A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1281 SWAP1 PUSH2 0x2D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x12DD PUSH1 0x12 SLOAD PUSH1 0x10 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x10 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x11 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13EE JUMPI PUSH2 0x13CC DUP3 PUSH1 0x1B SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1B DUP2 SWAP1 SSTORE POP PUSH2 0x13E7 DUP3 PUSH1 0x1A SLOAD PUSH2 0x2886 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1A DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1403 DUP2 PUSH1 0x1C SLOAD PUSH2 0x2886 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1C DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x18 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x16 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14A8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14CC SWAP2 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST POP PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1580 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x17 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x155A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 SUB PUSH2 0x160B JUMPI PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x1658 JUMPI PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x16A5 JUMPI PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH2 0x16F2 JUMPI PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x16F6 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x172B PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1749 PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x179F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1796 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x17C3 PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17E1 PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1837 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182E SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1957 SWAP2 SWAP1 PUSH2 0x2E34 JUMP JUMPDEST PUSH2 0x1961 SWAP2 SWAP1 PUSH2 0x2E34 JUMP JUMPDEST PUSH2 0x196B SWAP2 SWAP1 PUSH2 0x2E34 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197E PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x199C PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E9 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19FB PUSH0 PUSH2 0x289B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1C SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A8C PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AAA PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF7 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1D DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x18 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 SUB PUSH2 0x1B9D JUMPI PUSH2 0x1B96 PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x1BFE JUMPI PUSH2 0x1BF7 PUSH1 0x9 SLOAD PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x1C5F JUMPI PUSH2 0x1C58 PUSH1 0xE SLOAD PUSH1 0xC PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH2 0x1CC0 JUMPI PUSH2 0x1CB9 PUSH1 0x13 SLOAD PUSH1 0x11 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1CC4 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CD8 PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CF6 PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D43 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x15 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D7C PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D9A PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE7 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xF PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E26 PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E44 PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E91 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1E PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1EBE PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EDC PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F29 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F97 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FA9 DUP2 PUSH2 0x289B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x17 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH1 0x1B SLOAD PUSH1 0x1D SLOAD LT ISZERO PUSH2 0x2032 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2029 SWAP1 PUSH2 0x2F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 EQ DUP1 PUSH2 0x2041 JUMPI POP PUSH1 0x2 DUP4 EQ JUMPDEST DUP1 PUSH2 0x204C JUMPI POP PUSH1 0x3 DUP4 EQ JUMPDEST DUP1 PUSH2 0x2057 JUMPI POP PUSH1 0x4 DUP4 EQ JUMPDEST PUSH2 0x2096 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208D SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x19 SLOAD DUP5 LT ISZERO PUSH2 0x20DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20D2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x15 SLOAD DUP5 GT ISZERO PUSH2 0x2120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2117 SWAP1 PUSH2 0x3035 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 ISZERO ISZERO PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2174 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x216B SWAP1 PUSH2 0x30C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 SUB PUSH2 0x22EC JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x21D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C8 SWAP1 PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x2250 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2247 SWAP1 PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2265 PUSH1 0x3 SLOAD DUP6 PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP TIMESTAMP PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 DUP4 SUB PUSH2 0x2464 JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2349 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2340 SWAP1 PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x23C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23BF SWAP1 PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23DD PUSH1 0x8 SLOAD DUP6 PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP TIMESTAMP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x3 DUP4 SUB PUSH2 0x25DC JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x24C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B8 SWAP1 PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x2540 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2537 SWAP1 PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2555 PUSH1 0xD SLOAD DUP6 PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP TIMESTAMP PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x4 DUP4 SUB PUSH2 0x2754 JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2639 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2630 SWAP1 PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x26B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26AF SWAP1 PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26CD PUSH1 0x12 SLOAD DUP6 PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP TIMESTAMP PUSH1 0x11 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x2769 DUP2 PUSH1 0x1A SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1A DUP2 SWAP1 SSTORE POP PUSH2 0x2784 DUP5 PUSH1 0x1C SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1C DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x18 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP5 PUSH1 0x16 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2829 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284D SWAP2 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x2869 SWAP2 SWAP1 PUSH2 0x2E34 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x287E SWAP2 SWAP1 PUSH2 0x3250 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x2893 SWAP2 SWAP1 PUSH2 0x3280 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2989 DUP3 PUSH2 0x2960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2999 DUP2 PUSH2 0x297F JUMP JUMPDEST DUP2 EQ PUSH2 0x29A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29B4 DUP2 PUSH2 0x2990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29CF JUMPI PUSH2 0x29CE PUSH2 0x295C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29DC DUP5 DUP3 DUP6 ADD PUSH2 0x29A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29F7 DUP2 PUSH2 0x29E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A10 PUSH0 DUP4 ADD DUP5 PUSH2 0x29EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A1F DUP2 PUSH2 0x297F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A38 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A52 DUP2 PUSH2 0x2A3E JUMP JUMPDEST DUP2 EQ PUSH2 0x2A5C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A6D DUP2 PUSH2 0x2A49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A88 JUMPI PUSH2 0x2A87 PUSH2 0x295C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A95 DUP5 DUP3 DUP6 ADD PUSH2 0x2A5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AA7 DUP2 PUSH2 0x29E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AB1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AC2 DUP2 PUSH2 0x2A9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ADD JUMPI PUSH2 0x2ADC PUSH2 0x295C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AEA DUP5 DUP3 DUP6 ADD PUSH2 0x2AB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B09 JUMPI PUSH2 0x2B08 PUSH2 0x295C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B16 DUP6 DUP3 DUP7 ADD PUSH2 0x29A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B27 DUP6 DUP3 DUP7 ADD PUSH2 0x2AB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B3A DUP2 PUSH2 0x2A3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B53 PUSH0 DUP4 ADD DUP5 PUSH2 0x2B31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B6F JUMPI PUSH2 0x2B6E PUSH2 0x295C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B7C DUP6 DUP3 DUP7 ADD PUSH2 0x2AB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B8D DUP6 DUP3 DUP7 ADD PUSH2 0x2AB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BDB PUSH1 0x20 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE6 DUP3 PUSH2 0x2BA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C08 DUP2 PUSH2 0x2BCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726F647563742049442E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C43 PUSH1 0x13 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C4E DUP3 PUSH2 0x2C0F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C70 DUP2 PUSH2 0x2C37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546869732077616C6C657420686173206E6F207374616B65206F6E2074686973 PUSH0 DUP3 ADD MSTORE PUSH32 0x2070726F647563742E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD1 PUSH1 0x29 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CDC DUP3 PUSH2 0x2C77 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CFE DUP2 PUSH2 0x2CC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546865207374616B696E6720706572696F6420666F7220746869732070726F64 PUSH0 DUP3 ADD MSTORE PUSH32 0x75637420686173206E6F7420656E646564207965742E00000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D5F PUSH1 0x36 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D6A DUP3 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D8C DUP2 PUSH2 0x2D53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DA6 PUSH0 DUP4 ADD DUP7 PUSH2 0x2A16 JUMP JUMPDEST PUSH2 0x2DB3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A16 JUMP JUMPDEST PUSH2 0x2DC0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x29EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2DD6 DUP2 PUSH2 0x2A49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DF1 JUMPI PUSH2 0x2DF0 PUSH2 0x295C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DFE DUP5 DUP3 DUP6 ADD PUSH2 0x2DC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2E3E DUP3 PUSH2 0x29E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E49 DUP4 PUSH2 0x29E5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E61 JUMPI PUSH2 0x2E60 PUSH2 0x2E07 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EC1 PUSH1 0x26 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ECC DUP3 PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EEE DUP2 PUSH2 0x2EB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E67206F6E207468697320636F6E74726163742068617320656E64 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564210000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F4F PUSH1 0x23 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F5A DUP3 PUSH2 0x2EF5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F7C DUP2 PUSH2 0x2F43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B656420616D6F756E74206D757374206265206869676865722E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FB7 PUSH1 0x1D DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC2 DUP3 PUSH2 0x2F83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FE4 DUP2 PUSH2 0x2FAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B656420616D6F756E74206D757374206265206C6F7765722E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x301F PUSH1 0x1C DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x302A DUP3 PUSH2 0x2FEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x304C DUP2 PUSH2 0x3013 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E672069732063757272656E746C7920696E20756E6C6F636B6564 PUSH0 DUP3 ADD MSTORE PUSH32 0x206D6F64652E0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x30AD PUSH1 0x26 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x30B8 DUP3 PUSH2 0x3053 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30DA DUP2 PUSH2 0x30A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54686973207374616B696E672070726F647563742069732064697361626C6564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x313B PUSH1 0x21 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x3146 DUP3 PUSH2 0x30E1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3168 DUP2 PUSH2 0x312F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546869732077616C6C65742068617320616C7265616479207374616B6564206F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20746869732070726F64756374202D207761697420666F7220746865207265 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6C6561736520746F2072652D7374616B652E0000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x31EF PUSH1 0x52 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x31FA DUP3 PUSH2 0x316F JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x321C DUP2 PUSH2 0x31E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x325A DUP3 PUSH2 0x29E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3265 DUP4 PUSH2 0x29E5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3275 JUMPI PUSH2 0x3274 PUSH2 0x3223 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x328A DUP3 PUSH2 0x29E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3295 DUP4 PUSH2 0x29E5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x32AD JUMPI PUSH2 0x32AC PUSH2 0x2E07 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xB1 0xA6 SWAP9 0x2F PUSH32 0xFCA90B0D859F0345F35610FCA850DC8C02F47A1BB86B722961C64736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "654:10724:0:-:0;;;2609:989;;;;;;;;;;921:32:1;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;2651:1:0;2634:14;:18;;;;2677:1;2663:11;:15;;;;2703:1;2689:11;:15;;;;2730:21;2715:8;:36;;;;2785:21;2770:12;:36;;;;2840:17;2825:8;:32;;;;2889:42;2875:11;;:56;;;;;;;;;;;;;;;;;;2957:42;2942:12;;:57;;;;;;;;;;;;;;;;;;3025:42;3010:12;;:57;;;;;;;;;;;;;;;;;;3091:5;3078:10;;:18;;;;;;;;;;;;;;;;;;3138:3;3127:8;:14;;;;3163:6;3152:8;:17;;;;3214:4;3200:11;;:18;;;;;;;;;;;;;;;;;;3260:2;3249:8;:13;;;;3284:7;3273:8;:18;;;;3338:4;3324:11;;:18;;;;;;;;;;;;;;;;;;3384:2;3373:8;:13;;;;3408:7;3397:8;:18;;;;3462:4;3448:11;;:18;;;;;;;;;;;;;;;;;;3508:2;3497:8;:13;;;;3532:7;3521:8;:18;;;;3586:4;3572:11;;:18;;;;;;;;;;;;;;;;;;654:10724;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;654:10724:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_1725": {
									"entryPoint": 10325,
									"id": 1725,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1115": {
									"entryPoint": 10395,
									"id": 1115,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addStake_687": {
									"entryPoint": 8163,
									"id": 687,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1911": {
									"entryPoint": 10332,
									"id": 1911,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_321": {
									"entryPoint": 6227,
									"id": 321,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@box1Balance_30": {
									"entryPoint": 5538,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box1DepositDate_34": {
									"entryPoint": 5884,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box1Enabled_40": {
									"entryPoint": 6731,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box1Rate_36": {
									"entryPoint": 7698,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box1Time_38": {
									"entryPoint": 5559,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box2Balance_44": {
									"entryPoint": 2188,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box2DepositDate_48": {
									"entryPoint": 6683,
									"id": 48,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box2Enabled_54": {
									"entryPoint": 6653,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box2Rate_50": {
									"entryPoint": 7692,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box2Time_52": {
									"entryPoint": 7534,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box3Balance_58": {
									"entryPoint": 2559,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box3DepositDate_62": {
									"entryPoint": 6710,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box3Enabled_68": {
									"entryPoint": 7510,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box3Rate_64": {
									"entryPoint": 6959,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box3Time_66": {
									"entryPoint": 2246,
									"id": 66,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box4Balance_72": {
									"entryPoint": 2538,
									"id": 72,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box4DepositDate_76": {
									"entryPoint": 5517,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box4Enabled_82": {
									"entryPoint": 5905,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box4Rate_78": {
									"entryPoint": 7370,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@box4Time_80": {
									"entryPoint": 6677,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@changeBox1Status_209": {
									"entryPoint": 6075,
									"id": 209,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeBox2Status_221": {
									"entryPoint": 5923,
									"id": 221,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeBox3Status_233": {
									"entryPoint": 7540,
									"id": 233,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeBox4Status_245": {
									"entryPoint": 2252,
									"id": 245,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeFullUnlock_293": {
									"entryPoint": 7710,
									"id": 293,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMaxRewardDue_257": {
									"entryPoint": 6788,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMaxStake_269": {
									"entryPoint": 7376,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeMinStake_281": {
									"entryPoint": 2404,
									"id": 281,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_1956": {
									"entryPoint": 10353,
									"id": 1956,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@fullUnlock_105": {
									"entryPoint": 8108,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxRewardDue_103": {
									"entryPoint": 7528,
									"id": 103,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxStake_87": {
									"entryPoint": 7704,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minStake_95": {
									"entryPoint": 5511,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_1044": {
									"entryPoint": 6749,
									"id": 1044,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pullStake_1010": {
									"entryPoint": 2580,
									"id": 1010,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_1072": {
									"entryPoint": 6518,
									"id": 1072,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardCountDue_97": {
									"entryPoint": 6965,
									"id": 97,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardCount_99": {
									"entryPoint": 6671,
									"id": 99,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardWallet_91": {
									"entryPoint": 8126,
									"id": 91,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakeAmount_429": {
									"entryPoint": 5565,
									"id": 429,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@stakeUnlockTime_381": {
									"entryPoint": 6971,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@stakeWallet_89": {
									"entryPoint": 2209,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1926": {
									"entryPoint": 10374,
									"id": 1926,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenAddress_93": {
									"entryPoint": 6922,
									"id": 93,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_101": {
									"entryPoint": 6704,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1095": {
									"entryPoint": 7862,
									"id": 1095,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 10662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 10847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 11720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 10932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 10995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 10867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 11097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 11057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12591,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 10734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11667,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 11072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11495,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 11159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 12880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 12928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11783,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 12835,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10588,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 11879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575": {
									"entryPoint": 11383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740": {
									"entryPoint": 11279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9": {
									"entryPoint": 12371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e": {
									"entryPoint": 11525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc": {
									"entryPoint": 12655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 11175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb": {
									"entryPoint": 12163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9": {
									"entryPoint": 12513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95": {
									"entryPoint": 12021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d": {
									"entryPoint": 12267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17830:7",
										"nodeType": "YulBlock",
										"src": "0:17830:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "748:87:7",
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nativeSrc": "758:29:7",
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nativeSrc": "767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nativeSrc": "796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nativeSrc": "796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:7",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:7",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:7",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nativeSrc": "907:263:7",
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:7",
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nativeSrc": "955:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nativeSrc": "955:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nativeSrc": "924:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:7",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nativeSrc": "920:32:7",
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nativeSrc": "917:119:7",
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nativeSrc": "1046:117:7",
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nativeSrc": "1061:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nativeSrc": "1121:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nativeSrc": "1100:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:7",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:7",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:7",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nativeSrc": "1221:32:7",
													"nodeType": "YulBlock",
													"src": "1221:32:7",
													"statements": [
														{
															"nativeSrc": "1231:16:7",
															"nodeType": "YulAssignment",
															"src": "1231:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:7",
																"nodeType": "YulIdentifier",
																"src": "1242:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:7",
														"nodeType": "YulTypedName",
														"src": "1203:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:7",
														"nodeType": "YulTypedName",
														"src": "1213:7:7",
														"type": ""
													}
												],
												"src": "1176:77:7"
											},
											{
												"body": {
													"nativeSrc": "1324:53:7",
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nativeSrc": "1346:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nativeSrc": "1334:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nativeSrc": "1334:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:7",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:7",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nativeSrc": "1481:124:7",
													"nodeType": "YulBlock",
													"src": "1481:124:7",
													"statements": [
														{
															"nativeSrc": "1491:26:7",
															"nodeType": "YulAssignment",
															"src": "1491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:7"
																},
																"nativeSrc": "1499:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:7"
																		},
																		"nativeSrc": "1580:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:7"
																},
																"nativeSrc": "1527:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:7"
															},
															"nativeSrc": "1527:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:7",
														"nodeType": "YulTypedName",
														"src": "1453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:7",
														"nodeType": "YulTypedName",
														"src": "1465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:7",
														"nodeType": "YulTypedName",
														"src": "1476:4:7",
														"type": ""
													}
												],
												"src": "1383:222:7"
											},
											{
												"body": {
													"nativeSrc": "1676:53:7",
													"nodeType": "YulBlock",
													"src": "1676:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:7"
																		},
																		"nativeSrc": "1698:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:7"
																},
																"nativeSrc": "1686:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:7"
															},
															"nativeSrc": "1686:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:7",
														"nodeType": "YulTypedName",
														"src": "1664:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:7",
														"nodeType": "YulTypedName",
														"src": "1671:3:7",
														"type": ""
													}
												],
												"src": "1611:118:7"
											},
											{
												"body": {
													"nativeSrc": "1833:124:7",
													"nodeType": "YulBlock",
													"src": "1833:124:7",
													"statements": [
														{
															"nativeSrc": "1843:26:7",
															"nodeType": "YulAssignment",
															"src": "1843:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:7"
																},
																"nativeSrc": "1851:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:7"
																		},
																		"nativeSrc": "1932:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:7"
																},
																"nativeSrc": "1879:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:7"
															},
															"nativeSrc": "1879:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:7",
														"nodeType": "YulTypedName",
														"src": "1805:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:7",
														"nodeType": "YulTypedName",
														"src": "1817:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:7",
														"nodeType": "YulTypedName",
														"src": "1828:4:7",
														"type": ""
													}
												],
												"src": "1735:222:7"
											},
											{
												"body": {
													"nativeSrc": "2005:48:7",
													"nodeType": "YulBlock",
													"src": "2005:48:7",
													"statements": [
														{
															"nativeSrc": "2015:32:7",
															"nodeType": "YulAssignment",
															"src": "2015:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2040:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2040:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2033:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2033:6:7"
																		},
																		"nativeSrc": "2033:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2033:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2026:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2026:6:7"
																},
																"nativeSrc": "2026:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2026:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2015:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2015:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1963:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1987:5:7",
														"nodeType": "YulTypedName",
														"src": "1987:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1997:7:7",
														"nodeType": "YulTypedName",
														"src": "1997:7:7",
														"type": ""
													}
												],
												"src": "1963:90:7"
											},
											{
												"body": {
													"nativeSrc": "2099:76:7",
													"nodeType": "YulBlock",
													"src": "2099:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2153:16:7",
																"nodeType": "YulBlock",
																"src": "2153:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2162:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2162:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2165:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2165:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2155:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2155:6:7"
																			},
																			"nativeSrc": "2155:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2155:12:7"
																		},
																		"nativeSrc": "2155:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2155:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2122:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2122:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2144:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2144:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "2129:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "2129:14:7"
																				},
																				"nativeSrc": "2129:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2129:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2119:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2119:2:7"
																		},
																		"nativeSrc": "2119:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2119:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2112:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:7"
																},
																"nativeSrc": "2112:40:7",
																"nodeType": "YulFunctionCall",
																"src": "2112:40:7"
															},
															"nativeSrc": "2109:60:7",
															"nodeType": "YulIf",
															"src": "2109:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "2059:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2092:5:7",
														"nodeType": "YulTypedName",
														"src": "2092:5:7",
														"type": ""
													}
												],
												"src": "2059:116:7"
											},
											{
												"body": {
													"nativeSrc": "2230:84:7",
													"nodeType": "YulBlock",
													"src": "2230:84:7",
													"statements": [
														{
															"nativeSrc": "2240:29:7",
															"nodeType": "YulAssignment",
															"src": "2240:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2262:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2262:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2249:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2249:12:7"
																},
																"nativeSrc": "2249:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2249:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2240:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2240:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2302:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2302:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "2278:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "2278:23:7"
																},
																"nativeSrc": "2278:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2278:30:7"
															},
															"nativeSrc": "2278:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "2278:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "2181:133:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2208:6:7",
														"nodeType": "YulTypedName",
														"src": "2208:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2216:3:7",
														"nodeType": "YulTypedName",
														"src": "2216:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2224:5:7",
														"nodeType": "YulTypedName",
														"src": "2224:5:7",
														"type": ""
													}
												],
												"src": "2181:133:7"
											},
											{
												"body": {
													"nativeSrc": "2383:260:7",
													"nodeType": "YulBlock",
													"src": "2383:260:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2429:83:7",
																"nodeType": "YulBlock",
																"src": "2429:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2431:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2431:77:7"
																			},
																			"nativeSrc": "2431:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2431:79:7"
																		},
																		"nativeSrc": "2431:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2431:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2404:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2404:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2413:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2413:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2400:3:7"
																		},
																		"nativeSrc": "2400:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2400:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2425:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2425:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2396:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2396:3:7"
																},
																"nativeSrc": "2396:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2396:32:7"
															},
															"nativeSrc": "2393:119:7",
															"nodeType": "YulIf",
															"src": "2393:119:7"
														},
														{
															"nativeSrc": "2522:114:7",
															"nodeType": "YulBlock",
															"src": "2522:114:7",
															"statements": [
																{
																	"nativeSrc": "2537:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2537:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2551:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2551:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2541:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2541:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2566:60:7",
																	"nodeType": "YulAssignment",
																	"src": "2566:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2598:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2598:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2609:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2609:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2594:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2594:3:7"
																				},
																				"nativeSrc": "2594:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2594:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2618:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2618:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "2576:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2576:17:7"
																		},
																		"nativeSrc": "2576:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2576:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2566:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2566:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "2320:323:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2353:9:7",
														"nodeType": "YulTypedName",
														"src": "2353:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2364:7:7",
														"nodeType": "YulTypedName",
														"src": "2364:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2376:6:7",
														"nodeType": "YulTypedName",
														"src": "2376:6:7",
														"type": ""
													}
												],
												"src": "2320:323:7"
											},
											{
												"body": {
													"nativeSrc": "2692:79:7",
													"nodeType": "YulBlock",
													"src": "2692:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2749:16:7",
																"nodeType": "YulBlock",
																"src": "2749:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2758:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2758:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2761:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2751:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2751:6:7"
																			},
																			"nativeSrc": "2751:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2751:12:7"
																		},
																		"nativeSrc": "2751:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2751:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2715:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2715:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2740:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2740:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2722:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2722:17:7"
																				},
																				"nativeSrc": "2722:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2722:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2712:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2712:2:7"
																		},
																		"nativeSrc": "2712:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2705:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:7"
																},
																"nativeSrc": "2705:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2705:43:7"
															},
															"nativeSrc": "2702:63:7",
															"nodeType": "YulIf",
															"src": "2702:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2649:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2685:5:7",
														"nodeType": "YulTypedName",
														"src": "2685:5:7",
														"type": ""
													}
												],
												"src": "2649:122:7"
											},
											{
												"body": {
													"nativeSrc": "2829:87:7",
													"nodeType": "YulBlock",
													"src": "2829:87:7",
													"statements": [
														{
															"nativeSrc": "2839:29:7",
															"nodeType": "YulAssignment",
															"src": "2839:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2861:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2861:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2848:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2848:12:7"
																},
																"nativeSrc": "2848:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2848:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2839:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2839:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2904:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2904:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2877:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2877:26:7"
																},
																"nativeSrc": "2877:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2877:33:7"
															},
															"nativeSrc": "2877:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2877:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2777:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2807:6:7",
														"nodeType": "YulTypedName",
														"src": "2807:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2815:3:7",
														"nodeType": "YulTypedName",
														"src": "2815:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2823:5:7",
														"nodeType": "YulTypedName",
														"src": "2823:5:7",
														"type": ""
													}
												],
												"src": "2777:139:7"
											},
											{
												"body": {
													"nativeSrc": "2988:263:7",
													"nodeType": "YulBlock",
													"src": "2988:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3034:83:7",
																"nodeType": "YulBlock",
																"src": "3034:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3036:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3036:77:7"
																			},
																			"nativeSrc": "3036:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3036:79:7"
																		},
																		"nativeSrc": "3036:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3036:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3009:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3009:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3018:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3018:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3005:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3005:3:7"
																		},
																		"nativeSrc": "3005:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3005:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3030:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3030:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3001:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3001:3:7"
																},
																"nativeSrc": "3001:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3001:32:7"
															},
															"nativeSrc": "2998:119:7",
															"nodeType": "YulIf",
															"src": "2998:119:7"
														},
														{
															"nativeSrc": "3127:117:7",
															"nodeType": "YulBlock",
															"src": "3127:117:7",
															"statements": [
																{
																	"nativeSrc": "3142:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3142:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3156:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3156:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3146:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3146:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3171:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3171:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3206:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3206:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3217:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3217:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3202:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3202:3:7"
																				},
																				"nativeSrc": "3202:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3202:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3226:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3226:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3181:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3181:20:7"
																		},
																		"nativeSrc": "3181:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3181:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3171:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3171:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2922:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2958:9:7",
														"nodeType": "YulTypedName",
														"src": "2958:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2969:7:7",
														"nodeType": "YulTypedName",
														"src": "2969:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2981:6:7",
														"nodeType": "YulTypedName",
														"src": "2981:6:7",
														"type": ""
													}
												],
												"src": "2922:329:7"
											},
											{
												"body": {
													"nativeSrc": "3340:391:7",
													"nodeType": "YulBlock",
													"src": "3340:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3386:83:7",
																"nodeType": "YulBlock",
																"src": "3386:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3388:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3388:77:7"
																			},
																			"nativeSrc": "3388:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3388:79:7"
																		},
																		"nativeSrc": "3388:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3388:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3361:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3361:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3370:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3370:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3357:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3357:3:7"
																		},
																		"nativeSrc": "3357:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3357:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3382:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3382:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3353:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3353:3:7"
																},
																"nativeSrc": "3353:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3353:32:7"
															},
															"nativeSrc": "3350:119:7",
															"nodeType": "YulIf",
															"src": "3350:119:7"
														},
														{
															"nativeSrc": "3479:117:7",
															"nodeType": "YulBlock",
															"src": "3479:117:7",
															"statements": [
																{
																	"nativeSrc": "3494:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3494:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3508:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3508:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3498:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3498:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3523:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3523:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3558:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3558:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3569:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3569:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3554:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3554:3:7"
																				},
																				"nativeSrc": "3554:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3554:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3578:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3578:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3533:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3533:20:7"
																		},
																		"nativeSrc": "3533:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3533:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3523:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3523:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3606:118:7",
															"nodeType": "YulBlock",
															"src": "3606:118:7",
															"statements": [
																{
																	"nativeSrc": "3621:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3621:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3635:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3635:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3625:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3625:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3651:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3651:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3686:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3686:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3697:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3697:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3682:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3682:3:7"
																				},
																				"nativeSrc": "3682:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3682:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3706:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3706:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3661:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3661:20:7"
																		},
																		"nativeSrc": "3661:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3661:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3651:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3651:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3257:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3302:9:7",
														"nodeType": "YulTypedName",
														"src": "3302:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3313:7:7",
														"nodeType": "YulTypedName",
														"src": "3313:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3325:6:7",
														"nodeType": "YulTypedName",
														"src": "3325:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3333:6:7",
														"nodeType": "YulTypedName",
														"src": "3333:6:7",
														"type": ""
													}
												],
												"src": "3257:474:7"
											},
											{
												"body": {
													"nativeSrc": "3796:50:7",
													"nodeType": "YulBlock",
													"src": "3796:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3813:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3813:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3833:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3833:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3818:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3818:14:7"
																		},
																		"nativeSrc": "3818:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3818:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3806:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3806:6:7"
																},
																"nativeSrc": "3806:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3806:34:7"
															},
															"nativeSrc": "3806:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3806:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3737:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3784:5:7",
														"nodeType": "YulTypedName",
														"src": "3784:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3791:3:7",
														"nodeType": "YulTypedName",
														"src": "3791:3:7",
														"type": ""
													}
												],
												"src": "3737:109:7"
											},
											{
												"body": {
													"nativeSrc": "3944:118:7",
													"nodeType": "YulBlock",
													"src": "3944:118:7",
													"statements": [
														{
															"nativeSrc": "3954:26:7",
															"nodeType": "YulAssignment",
															"src": "3954:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3966:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3966:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3977:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3977:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3962:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3962:3:7"
																},
																"nativeSrc": "3962:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3962:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3954:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3954:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4028:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4028:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4041:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4041:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4052:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4052:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4037:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4037:3:7"
																		},
																		"nativeSrc": "4037:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4037:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3990:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3990:37:7"
																},
																"nativeSrc": "3990:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3990:65:7"
															},
															"nativeSrc": "3990:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3990:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3852:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3916:9:7",
														"nodeType": "YulTypedName",
														"src": "3916:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3928:6:7",
														"nodeType": "YulTypedName",
														"src": "3928:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3939:4:7",
														"nodeType": "YulTypedName",
														"src": "3939:4:7",
														"type": ""
													}
												],
												"src": "3852:210:7"
											},
											{
												"body": {
													"nativeSrc": "4151:391:7",
													"nodeType": "YulBlock",
													"src": "4151:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4197:83:7",
																"nodeType": "YulBlock",
																"src": "4197:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4199:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4199:77:7"
																			},
																			"nativeSrc": "4199:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4199:79:7"
																		},
																		"nativeSrc": "4199:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4199:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4172:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4181:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4181:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4168:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4168:3:7"
																		},
																		"nativeSrc": "4168:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4168:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4193:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4164:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4164:3:7"
																},
																"nativeSrc": "4164:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4164:32:7"
															},
															"nativeSrc": "4161:119:7",
															"nodeType": "YulIf",
															"src": "4161:119:7"
														},
														{
															"nativeSrc": "4290:117:7",
															"nodeType": "YulBlock",
															"src": "4290:117:7",
															"statements": [
																{
																	"nativeSrc": "4305:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4305:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4319:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4319:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4309:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4309:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4334:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4334:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4369:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4369:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4380:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4380:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4365:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4365:3:7"
																				},
																				"nativeSrc": "4365:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4365:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4389:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4389:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4344:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4344:20:7"
																		},
																		"nativeSrc": "4344:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4344:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4334:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4334:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4417:118:7",
															"nodeType": "YulBlock",
															"src": "4417:118:7",
															"statements": [
																{
																	"nativeSrc": "4432:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4432:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4446:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4446:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4436:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4436:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4462:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4462:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4497:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4497:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4508:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4508:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4493:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4493:3:7"
																				},
																				"nativeSrc": "4493:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4493:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4517:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4517:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4472:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4472:20:7"
																		},
																		"nativeSrc": "4472:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4472:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4462:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4462:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4068:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4113:9:7",
														"nodeType": "YulTypedName",
														"src": "4113:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4124:7:7",
														"nodeType": "YulTypedName",
														"src": "4124:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4136:6:7",
														"nodeType": "YulTypedName",
														"src": "4136:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4144:6:7",
														"nodeType": "YulTypedName",
														"src": "4144:6:7",
														"type": ""
													}
												],
												"src": "4068:474:7"
											},
											{
												"body": {
													"nativeSrc": "4644:73:7",
													"nodeType": "YulBlock",
													"src": "4644:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4661:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4661:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4666:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4666:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4654:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:7"
																},
																"nativeSrc": "4654:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4654:19:7"
															},
															"nativeSrc": "4654:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "4654:19:7"
														},
														{
															"nativeSrc": "4682:29:7",
															"nodeType": "YulAssignment",
															"src": "4682:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4701:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4701:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4706:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4706:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4697:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4697:3:7"
																},
																"nativeSrc": "4697:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4697:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4682:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "4682:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4548:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4616:3:7",
														"nodeType": "YulTypedName",
														"src": "4616:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4621:6:7",
														"nodeType": "YulTypedName",
														"src": "4621:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4632:11:7",
														"nodeType": "YulTypedName",
														"src": "4632:11:7",
														"type": ""
													}
												],
												"src": "4548:169:7"
											},
											{
												"body": {
													"nativeSrc": "4829:76:7",
													"nodeType": "YulBlock",
													"src": "4829:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4851:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4851:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4859:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4859:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4847:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4847:3:7"
																		},
																		"nativeSrc": "4847:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4847:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "4863:34:7",
																		"nodeType": "YulLiteral",
																		"src": "4863:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4840:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4840:6:7"
																},
																"nativeSrc": "4840:58:7",
																"nodeType": "YulFunctionCall",
																"src": "4840:58:7"
															},
															"nativeSrc": "4840:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "4840:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nativeSrc": "4723:182:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4821:6:7",
														"nodeType": "YulTypedName",
														"src": "4821:6:7",
														"type": ""
													}
												],
												"src": "4723:182:7"
											},
											{
												"body": {
													"nativeSrc": "5057:220:7",
													"nodeType": "YulBlock",
													"src": "5057:220:7",
													"statements": [
														{
															"nativeSrc": "5067:74:7",
															"nodeType": "YulAssignment",
															"src": "5067:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5133:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5133:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5138:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5138:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5074:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "5074:58:7"
																},
																"nativeSrc": "5074:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5074:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5067:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5067:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5239:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5239:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nativeSrc": "5150:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "5150:88:7"
																},
																"nativeSrc": "5150:93:7",
																"nodeType": "YulFunctionCall",
																"src": "5150:93:7"
															},
															"nativeSrc": "5150:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "5150:93:7"
														},
														{
															"nativeSrc": "5252:19:7",
															"nodeType": "YulAssignment",
															"src": "5252:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5263:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5263:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5268:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5268:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5259:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5259:3:7"
																},
																"nativeSrc": "5259:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5259:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5252:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5252:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4911:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5045:3:7",
														"nodeType": "YulTypedName",
														"src": "5045:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5053:3:7",
														"nodeType": "YulTypedName",
														"src": "5053:3:7",
														"type": ""
													}
												],
												"src": "4911:366:7"
											},
											{
												"body": {
													"nativeSrc": "5454:248:7",
													"nodeType": "YulBlock",
													"src": "5454:248:7",
													"statements": [
														{
															"nativeSrc": "5464:26:7",
															"nodeType": "YulAssignment",
															"src": "5464:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5476:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5476:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5487:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5487:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5472:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5472:3:7"
																},
																"nativeSrc": "5472:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5472:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5464:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5464:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5511:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5511:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5522:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5522:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5507:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5507:3:7"
																		},
																		"nativeSrc": "5507:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5507:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5530:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5530:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5536:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5536:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5526:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5526:3:7"
																		},
																		"nativeSrc": "5526:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5500:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5500:6:7"
																},
																"nativeSrc": "5500:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5500:47:7"
															},
															"nativeSrc": "5500:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "5500:47:7"
														},
														{
															"nativeSrc": "5556:139:7",
															"nodeType": "YulAssignment",
															"src": "5556:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5690:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5690:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5564:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "5564:124:7"
																},
																"nativeSrc": "5564:131:7",
																"nodeType": "YulFunctionCall",
																"src": "5564:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5556:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5556:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5283:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5434:9:7",
														"nodeType": "YulTypedName",
														"src": "5434:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5449:4:7",
														"nodeType": "YulTypedName",
														"src": "5449:4:7",
														"type": ""
													}
												],
												"src": "5283:419:7"
											},
											{
												"body": {
													"nativeSrc": "5814:63:7",
													"nodeType": "YulBlock",
													"src": "5814:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5836:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5836:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5844:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5844:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5832:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5832:3:7"
																		},
																		"nativeSrc": "5832:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5832:14:7"
																	},
																	{
																		"hexValue": "496e76616c69642070726f647563742049442e",
																		"kind": "string",
																		"nativeSrc": "5848:21:7",
																		"nodeType": "YulLiteral",
																		"src": "5848:21:7",
																		"type": "",
																		"value": "Invalid product ID."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5825:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5825:6:7"
																},
																"nativeSrc": "5825:45:7",
																"nodeType": "YulFunctionCall",
																"src": "5825:45:7"
															},
															"nativeSrc": "5825:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "5825:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740",
												"nativeSrc": "5708:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5806:6:7",
														"nodeType": "YulTypedName",
														"src": "5806:6:7",
														"type": ""
													}
												],
												"src": "5708:169:7"
											},
											{
												"body": {
													"nativeSrc": "6029:220:7",
													"nodeType": "YulBlock",
													"src": "6029:220:7",
													"statements": [
														{
															"nativeSrc": "6039:74:7",
															"nodeType": "YulAssignment",
															"src": "6039:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6105:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6105:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6110:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6110:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6046:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6046:58:7"
																},
																"nativeSrc": "6046:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6046:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6039:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6039:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6211:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6211:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740",
																	"nativeSrc": "6122:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6122:88:7"
																},
																"nativeSrc": "6122:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6122:93:7"
															},
															"nativeSrc": "6122:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6122:93:7"
														},
														{
															"nativeSrc": "6224:19:7",
															"nodeType": "YulAssignment",
															"src": "6224:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6235:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6235:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6240:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6240:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6231:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:7"
																},
																"nativeSrc": "6231:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6231:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6224:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6224:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5883:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6017:3:7",
														"nodeType": "YulTypedName",
														"src": "6017:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6025:3:7",
														"nodeType": "YulTypedName",
														"src": "6025:3:7",
														"type": ""
													}
												],
												"src": "5883:366:7"
											},
											{
												"body": {
													"nativeSrc": "6426:248:7",
													"nodeType": "YulBlock",
													"src": "6426:248:7",
													"statements": [
														{
															"nativeSrc": "6436:26:7",
															"nodeType": "YulAssignment",
															"src": "6436:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6448:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6448:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6459:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6459:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6444:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6444:3:7"
																},
																"nativeSrc": "6444:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6444:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6436:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6436:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6483:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6483:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6494:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6494:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6479:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6479:3:7"
																		},
																		"nativeSrc": "6479:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6479:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6502:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6502:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6508:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6508:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6498:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6498:3:7"
																		},
																		"nativeSrc": "6498:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6498:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6472:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6472:6:7"
																},
																"nativeSrc": "6472:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6472:47:7"
															},
															"nativeSrc": "6472:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6472:47:7"
														},
														{
															"nativeSrc": "6528:139:7",
															"nodeType": "YulAssignment",
															"src": "6528:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6662:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6662:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6536:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "6536:124:7"
																},
																"nativeSrc": "6536:131:7",
																"nodeType": "YulFunctionCall",
																"src": "6536:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6528:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6528:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6255:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6406:9:7",
														"nodeType": "YulTypedName",
														"src": "6406:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6421:4:7",
														"nodeType": "YulTypedName",
														"src": "6421:4:7",
														"type": ""
													}
												],
												"src": "6255:419:7"
											},
											{
												"body": {
													"nativeSrc": "6786:122:7",
													"nodeType": "YulBlock",
													"src": "6786:122:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6808:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6808:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6816:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6816:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6804:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6804:3:7"
																		},
																		"nativeSrc": "6804:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6804:14:7"
																	},
																	{
																		"hexValue": "546869732077616c6c657420686173206e6f207374616b65206f6e2074686973",
																		"kind": "string",
																		"nativeSrc": "6820:34:7",
																		"nodeType": "YulLiteral",
																		"src": "6820:34:7",
																		"type": "",
																		"value": "This wallet has no stake on this"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6797:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6797:6:7"
																},
																"nativeSrc": "6797:58:7",
																"nodeType": "YulFunctionCall",
																"src": "6797:58:7"
															},
															"nativeSrc": "6797:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "6797:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6876:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6876:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6884:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6884:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6872:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6872:3:7"
																		},
																		"nativeSrc": "6872:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6872:15:7"
																	},
																	{
																		"hexValue": "2070726f647563742e",
																		"kind": "string",
																		"nativeSrc": "6889:11:7",
																		"nodeType": "YulLiteral",
																		"src": "6889:11:7",
																		"type": "",
																		"value": " product."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6865:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6865:6:7"
																},
																"nativeSrc": "6865:36:7",
																"nodeType": "YulFunctionCall",
																"src": "6865:36:7"
															},
															"nativeSrc": "6865:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "6865:36:7"
														}
													]
												},
												"name": "store_literal_in_memory_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575",
												"nativeSrc": "6680:228:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6778:6:7",
														"nodeType": "YulTypedName",
														"src": "6778:6:7",
														"type": ""
													}
												],
												"src": "6680:228:7"
											},
											{
												"body": {
													"nativeSrc": "7060:220:7",
													"nodeType": "YulBlock",
													"src": "7060:220:7",
													"statements": [
														{
															"nativeSrc": "7070:74:7",
															"nodeType": "YulAssignment",
															"src": "7070:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7136:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7136:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7141:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7141:2:7",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7077:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7077:58:7"
																},
																"nativeSrc": "7077:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7077:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7070:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7070:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7242:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7242:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575",
																	"nativeSrc": "7153:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7153:88:7"
																},
																"nativeSrc": "7153:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7153:93:7"
															},
															"nativeSrc": "7153:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7153:93:7"
														},
														{
															"nativeSrc": "7255:19:7",
															"nodeType": "YulAssignment",
															"src": "7255:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7266:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7266:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7271:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7271:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7262:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7262:3:7"
																},
																"nativeSrc": "7262:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7262:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7255:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7255:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6914:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7048:3:7",
														"nodeType": "YulTypedName",
														"src": "7048:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7056:3:7",
														"nodeType": "YulTypedName",
														"src": "7056:3:7",
														"type": ""
													}
												],
												"src": "6914:366:7"
											},
											{
												"body": {
													"nativeSrc": "7457:248:7",
													"nodeType": "YulBlock",
													"src": "7457:248:7",
													"statements": [
														{
															"nativeSrc": "7467:26:7",
															"nodeType": "YulAssignment",
															"src": "7467:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7479:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7479:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7490:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7490:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7475:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7475:3:7"
																},
																"nativeSrc": "7475:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7475:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7467:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7467:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7514:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7514:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7525:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7525:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7510:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7510:3:7"
																		},
																		"nativeSrc": "7510:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7510:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7533:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7533:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7539:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7539:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7529:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7529:3:7"
																		},
																		"nativeSrc": "7529:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7529:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7503:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7503:6:7"
																},
																"nativeSrc": "7503:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7503:47:7"
															},
															"nativeSrc": "7503:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7503:47:7"
														},
														{
															"nativeSrc": "7559:139:7",
															"nodeType": "YulAssignment",
															"src": "7559:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7693:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7693:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7567:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "7567:124:7"
																},
																"nativeSrc": "7567:131:7",
																"nodeType": "YulFunctionCall",
																"src": "7567:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7559:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7559:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7286:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7437:9:7",
														"nodeType": "YulTypedName",
														"src": "7437:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7452:4:7",
														"nodeType": "YulTypedName",
														"src": "7452:4:7",
														"type": ""
													}
												],
												"src": "7286:419:7"
											},
											{
												"body": {
													"nativeSrc": "7817:135:7",
													"nodeType": "YulBlock",
													"src": "7817:135:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7839:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7839:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7847:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7847:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7835:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7835:3:7"
																		},
																		"nativeSrc": "7835:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7835:14:7"
																	},
																	{
																		"hexValue": "546865207374616b696e6720706572696f6420666f7220746869732070726f64",
																		"kind": "string",
																		"nativeSrc": "7851:34:7",
																		"nodeType": "YulLiteral",
																		"src": "7851:34:7",
																		"type": "",
																		"value": "The staking period for this prod"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7828:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7828:6:7"
																},
																"nativeSrc": "7828:58:7",
																"nodeType": "YulFunctionCall",
																"src": "7828:58:7"
															},
															"nativeSrc": "7828:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "7828:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7907:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7907:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7915:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7915:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7903:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:7"
																		},
																		"nativeSrc": "7903:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7903:15:7"
																	},
																	{
																		"hexValue": "75637420686173206e6f7420656e646564207965742e",
																		"kind": "string",
																		"nativeSrc": "7920:24:7",
																		"nodeType": "YulLiteral",
																		"src": "7920:24:7",
																		"type": "",
																		"value": "uct has not ended yet."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7896:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7896:6:7"
																},
																"nativeSrc": "7896:49:7",
																"nodeType": "YulFunctionCall",
																"src": "7896:49:7"
															},
															"nativeSrc": "7896:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "7896:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e",
												"nativeSrc": "7711:241:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7809:6:7",
														"nodeType": "YulTypedName",
														"src": "7809:6:7",
														"type": ""
													}
												],
												"src": "7711:241:7"
											},
											{
												"body": {
													"nativeSrc": "8104:220:7",
													"nodeType": "YulBlock",
													"src": "8104:220:7",
													"statements": [
														{
															"nativeSrc": "8114:74:7",
															"nodeType": "YulAssignment",
															"src": "8114:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8180:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8180:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8185:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8185:2:7",
																		"type": "",
																		"value": "54"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8121:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8121:58:7"
																},
																"nativeSrc": "8121:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8121:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8114:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8114:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8286:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8286:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e",
																	"nativeSrc": "8197:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8197:88:7"
																},
																"nativeSrc": "8197:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8197:93:7"
															},
															"nativeSrc": "8197:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8197:93:7"
														},
														{
															"nativeSrc": "8299:19:7",
															"nodeType": "YulAssignment",
															"src": "8299:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8310:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8310:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8315:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8315:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8306:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8306:3:7"
																},
																"nativeSrc": "8306:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8306:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8299:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8299:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7958:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8092:3:7",
														"nodeType": "YulTypedName",
														"src": "8092:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8100:3:7",
														"nodeType": "YulTypedName",
														"src": "8100:3:7",
														"type": ""
													}
												],
												"src": "7958:366:7"
											},
											{
												"body": {
													"nativeSrc": "8501:248:7",
													"nodeType": "YulBlock",
													"src": "8501:248:7",
													"statements": [
														{
															"nativeSrc": "8511:26:7",
															"nodeType": "YulAssignment",
															"src": "8511:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8523:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8523:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8534:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8534:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8519:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8519:3:7"
																},
																"nativeSrc": "8519:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8519:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8511:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8511:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8558:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8558:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8569:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8569:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8554:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8554:3:7"
																		},
																		"nativeSrc": "8554:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8554:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8577:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8577:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8583:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8583:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8573:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8573:3:7"
																		},
																		"nativeSrc": "8573:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8573:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8547:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8547:6:7"
																},
																"nativeSrc": "8547:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8547:47:7"
															},
															"nativeSrc": "8547:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8547:47:7"
														},
														{
															"nativeSrc": "8603:139:7",
															"nodeType": "YulAssignment",
															"src": "8603:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8737:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8737:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8611:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8611:124:7"
																},
																"nativeSrc": "8611:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8611:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8603:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8603:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8330:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8481:9:7",
														"nodeType": "YulTypedName",
														"src": "8481:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8496:4:7",
														"nodeType": "YulTypedName",
														"src": "8496:4:7",
														"type": ""
													}
												],
												"src": "8330:419:7"
											},
											{
												"body": {
													"nativeSrc": "8909:288:7",
													"nodeType": "YulBlock",
													"src": "8909:288:7",
													"statements": [
														{
															"nativeSrc": "8919:26:7",
															"nodeType": "YulAssignment",
															"src": "8919:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8931:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8931:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8942:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8942:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8927:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8927:3:7"
																},
																"nativeSrc": "8927:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8927:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8919:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8919:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8999:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8999:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9012:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9012:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9023:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9023:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9008:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9008:3:7"
																		},
																		"nativeSrc": "9008:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9008:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8955:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8955:43:7"
																},
																"nativeSrc": "8955:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8955:71:7"
															},
															"nativeSrc": "8955:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8955:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9080:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9080:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9093:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9104:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9104:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9089:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9089:3:7"
																		},
																		"nativeSrc": "9089:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9089:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9036:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9036:43:7"
																},
																"nativeSrc": "9036:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9036:72:7"
															},
															"nativeSrc": "9036:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9036:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9162:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9162:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9175:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9175:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9186:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9186:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9171:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9171:3:7"
																		},
																		"nativeSrc": "9171:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9171:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9118:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9118:43:7"
																},
																"nativeSrc": "9118:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9118:72:7"
															},
															"nativeSrc": "9118:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9118:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8755:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8865:9:7",
														"nodeType": "YulTypedName",
														"src": "8865:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8877:6:7",
														"nodeType": "YulTypedName",
														"src": "8877:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8885:6:7",
														"nodeType": "YulTypedName",
														"src": "8885:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8893:6:7",
														"nodeType": "YulTypedName",
														"src": "8893:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8904:4:7",
														"nodeType": "YulTypedName",
														"src": "8904:4:7",
														"type": ""
													}
												],
												"src": "8755:442:7"
											},
											{
												"body": {
													"nativeSrc": "9263:77:7",
													"nodeType": "YulBlock",
													"src": "9263:77:7",
													"statements": [
														{
															"nativeSrc": "9273:22:7",
															"nodeType": "YulAssignment",
															"src": "9273:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9288:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9288:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9282:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9282:5:7"
																},
																"nativeSrc": "9282:13:7",
																"nodeType": "YulFunctionCall",
																"src": "9282:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9273:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9273:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9328:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9328:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9304:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "9304:23:7"
																},
																"nativeSrc": "9304:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9304:30:7"
															},
															"nativeSrc": "9304:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9304:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9203:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9241:6:7",
														"nodeType": "YulTypedName",
														"src": "9241:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9249:3:7",
														"nodeType": "YulTypedName",
														"src": "9249:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9257:5:7",
														"nodeType": "YulTypedName",
														"src": "9257:5:7",
														"type": ""
													}
												],
												"src": "9203:137:7"
											},
											{
												"body": {
													"nativeSrc": "9420:271:7",
													"nodeType": "YulBlock",
													"src": "9420:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9466:83:7",
																"nodeType": "YulBlock",
																"src": "9466:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9468:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9468:77:7"
																			},
																			"nativeSrc": "9468:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9468:79:7"
																		},
																		"nativeSrc": "9468:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9468:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9441:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9441:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9450:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9450:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9437:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9437:3:7"
																		},
																		"nativeSrc": "9437:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9437:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9462:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9462:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9433:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9433:3:7"
																},
																"nativeSrc": "9433:32:7",
																"nodeType": "YulFunctionCall",
																"src": "9433:32:7"
															},
															"nativeSrc": "9430:119:7",
															"nodeType": "YulIf",
															"src": "9430:119:7"
														},
														{
															"nativeSrc": "9559:125:7",
															"nodeType": "YulBlock",
															"src": "9559:125:7",
															"statements": [
																{
																	"nativeSrc": "9574:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9574:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9588:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9588:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9578:6:7",
																			"nodeType": "YulTypedName",
																			"src": "9578:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9603:71:7",
																	"nodeType": "YulAssignment",
																	"src": "9603:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9646:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "9646:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9657:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9657:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9642:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9642:3:7"
																				},
																				"nativeSrc": "9642:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9642:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9666:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9666:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9613:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "9613:28:7"
																		},
																		"nativeSrc": "9613:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9613:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9603:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "9603:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9346:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9390:9:7",
														"nodeType": "YulTypedName",
														"src": "9390:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9401:7:7",
														"nodeType": "YulTypedName",
														"src": "9401:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9413:6:7",
														"nodeType": "YulTypedName",
														"src": "9413:6:7",
														"type": ""
													}
												],
												"src": "9346:345:7"
											},
											{
												"body": {
													"nativeSrc": "9725:152:7",
													"nodeType": "YulBlock",
													"src": "9725:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9742:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9742:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9745:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9745:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9735:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9735:6:7"
																},
																"nativeSrc": "9735:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9735:88:7"
															},
															"nativeSrc": "9735:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9735:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9842:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9842:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9832:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9832:6:7"
																},
																"nativeSrc": "9832:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9832:15:7"
															},
															"nativeSrc": "9832:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9832:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9863:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9866:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9866:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9856:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:7"
																},
																"nativeSrc": "9856:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9856:15:7"
															},
															"nativeSrc": "9856:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9856:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9697:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9697:180:7"
											},
											{
												"body": {
													"nativeSrc": "9927:147:7",
													"nodeType": "YulBlock",
													"src": "9927:147:7",
													"statements": [
														{
															"nativeSrc": "9937:25:7",
															"nodeType": "YulAssignment",
															"src": "9937:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9960:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9960:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9942:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9942:17:7"
																},
																"nativeSrc": "9942:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9942:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9937:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9937:1:7"
																}
															]
														},
														{
															"nativeSrc": "9971:25:7",
															"nodeType": "YulAssignment",
															"src": "9971:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9994:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9994:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9976:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9976:17:7"
																},
																"nativeSrc": "9976:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9976:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9971:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9971:1:7"
																}
															]
														},
														{
															"nativeSrc": "10005:16:7",
															"nodeType": "YulAssignment",
															"src": "10005:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10016:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10016:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10019:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10019:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10012:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10012:3:7"
																},
																"nativeSrc": "10012:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10012:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10005:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10005:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10045:22:7",
																"nodeType": "YulBlock",
																"src": "10045:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10047:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10047:16:7"
																			},
																			"nativeSrc": "10047:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10047:18:7"
																		},
																		"nativeSrc": "10047:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10047:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10037:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10037:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10040:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10040:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10034:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "10034:2:7"
																},
																"nativeSrc": "10034:10:7",
																"nodeType": "YulFunctionCall",
																"src": "10034:10:7"
															},
															"nativeSrc": "10031:36:7",
															"nodeType": "YulIf",
															"src": "10031:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9883:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9914:1:7",
														"nodeType": "YulTypedName",
														"src": "9914:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9917:1:7",
														"nodeType": "YulTypedName",
														"src": "9917:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9923:3:7",
														"nodeType": "YulTypedName",
														"src": "9923:3:7",
														"type": ""
													}
												],
												"src": "9883:191:7"
											},
											{
												"body": {
													"nativeSrc": "10186:119:7",
													"nodeType": "YulBlock",
													"src": "10186:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10208:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10208:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10216:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10216:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10204:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10204:3:7"
																		},
																		"nativeSrc": "10204:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10204:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "10220:34:7",
																		"nodeType": "YulLiteral",
																		"src": "10220:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10197:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10197:6:7"
																},
																"nativeSrc": "10197:58:7",
																"nodeType": "YulFunctionCall",
																"src": "10197:58:7"
															},
															"nativeSrc": "10197:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "10197:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10276:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10276:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10284:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10284:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10272:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10272:3:7"
																		},
																		"nativeSrc": "10272:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10272:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "10289:8:7",
																		"nodeType": "YulLiteral",
																		"src": "10289:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10265:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10265:6:7"
																},
																"nativeSrc": "10265:33:7",
																"nodeType": "YulFunctionCall",
																"src": "10265:33:7"
															},
															"nativeSrc": "10265:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "10265:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nativeSrc": "10080:225:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10178:6:7",
														"nodeType": "YulTypedName",
														"src": "10178:6:7",
														"type": ""
													}
												],
												"src": "10080:225:7"
											},
											{
												"body": {
													"nativeSrc": "10457:220:7",
													"nodeType": "YulBlock",
													"src": "10457:220:7",
													"statements": [
														{
															"nativeSrc": "10467:74:7",
															"nodeType": "YulAssignment",
															"src": "10467:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10533:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10533:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10538:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10538:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10474:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10474:58:7"
																},
																"nativeSrc": "10474:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10474:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10467:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10467:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10639:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10639:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nativeSrc": "10550:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10550:88:7"
																},
																"nativeSrc": "10550:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10550:93:7"
															},
															"nativeSrc": "10550:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10550:93:7"
														},
														{
															"nativeSrc": "10652:19:7",
															"nodeType": "YulAssignment",
															"src": "10652:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10663:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10663:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10668:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10668:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10659:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10659:3:7"
																},
																"nativeSrc": "10659:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10659:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10652:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10652:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10311:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10445:3:7",
														"nodeType": "YulTypedName",
														"src": "10445:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10453:3:7",
														"nodeType": "YulTypedName",
														"src": "10453:3:7",
														"type": ""
													}
												],
												"src": "10311:366:7"
											},
											{
												"body": {
													"nativeSrc": "10854:248:7",
													"nodeType": "YulBlock",
													"src": "10854:248:7",
													"statements": [
														{
															"nativeSrc": "10864:26:7",
															"nodeType": "YulAssignment",
															"src": "10864:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10876:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10876:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10887:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10887:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10872:3:7"
																},
																"nativeSrc": "10872:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10872:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10864:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10864:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10911:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10911:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10922:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10922:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10907:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10907:3:7"
																		},
																		"nativeSrc": "10907:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10907:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10930:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10930:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10936:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10936:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10926:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10926:3:7"
																		},
																		"nativeSrc": "10926:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10926:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10900:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10900:6:7"
																},
																"nativeSrc": "10900:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10900:47:7"
															},
															"nativeSrc": "10900:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10900:47:7"
														},
														{
															"nativeSrc": "10956:139:7",
															"nodeType": "YulAssignment",
															"src": "10956:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11090:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11090:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10964:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10964:124:7"
																},
																"nativeSrc": "10964:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10964:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10956:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10956:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10683:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10834:9:7",
														"nodeType": "YulTypedName",
														"src": "10834:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10849:4:7",
														"nodeType": "YulTypedName",
														"src": "10849:4:7",
														"type": ""
													}
												],
												"src": "10683:419:7"
											},
											{
												"body": {
													"nativeSrc": "11214:116:7",
													"nodeType": "YulBlock",
													"src": "11214:116:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11236:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11236:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11244:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11244:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11232:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11232:3:7"
																		},
																		"nativeSrc": "11232:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11232:14:7"
																	},
																	{
																		"hexValue": "5374616b696e67206f6e207468697320636f6e74726163742068617320656e64",
																		"kind": "string",
																		"nativeSrc": "11248:34:7",
																		"nodeType": "YulLiteral",
																		"src": "11248:34:7",
																		"type": "",
																		"value": "Staking on this contract has end"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11225:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11225:6:7"
																},
																"nativeSrc": "11225:58:7",
																"nodeType": "YulFunctionCall",
																"src": "11225:58:7"
															},
															"nativeSrc": "11225:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "11225:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11304:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11304:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11312:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11312:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11300:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11300:3:7"
																		},
																		"nativeSrc": "11300:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11300:15:7"
																	},
																	{
																		"hexValue": "656421",
																		"kind": "string",
																		"nativeSrc": "11317:5:7",
																		"nodeType": "YulLiteral",
																		"src": "11317:5:7",
																		"type": "",
																		"value": "ed!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11293:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11293:6:7"
																},
																"nativeSrc": "11293:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11293:30:7"
															},
															"nativeSrc": "11293:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "11293:30:7"
														}
													]
												},
												"name": "store_literal_in_memory_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95",
												"nativeSrc": "11108:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11206:6:7",
														"nodeType": "YulTypedName",
														"src": "11206:6:7",
														"type": ""
													}
												],
												"src": "11108:222:7"
											},
											{
												"body": {
													"nativeSrc": "11482:220:7",
													"nodeType": "YulBlock",
													"src": "11482:220:7",
													"statements": [
														{
															"nativeSrc": "11492:74:7",
															"nodeType": "YulAssignment",
															"src": "11492:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11558:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11558:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11563:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11563:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11499:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11499:58:7"
																},
																"nativeSrc": "11499:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11499:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11492:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11492:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11664:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11664:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95",
																	"nativeSrc": "11575:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11575:88:7"
																},
																"nativeSrc": "11575:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11575:93:7"
															},
															"nativeSrc": "11575:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11575:93:7"
														},
														{
															"nativeSrc": "11677:19:7",
															"nodeType": "YulAssignment",
															"src": "11677:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11688:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11688:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11693:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11693:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11684:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11684:3:7"
																},
																"nativeSrc": "11684:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11684:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11677:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11677:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11336:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11470:3:7",
														"nodeType": "YulTypedName",
														"src": "11470:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11478:3:7",
														"nodeType": "YulTypedName",
														"src": "11478:3:7",
														"type": ""
													}
												],
												"src": "11336:366:7"
											},
											{
												"body": {
													"nativeSrc": "11879:248:7",
													"nodeType": "YulBlock",
													"src": "11879:248:7",
													"statements": [
														{
															"nativeSrc": "11889:26:7",
															"nodeType": "YulAssignment",
															"src": "11889:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11901:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11901:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11912:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11912:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11897:3:7"
																},
																"nativeSrc": "11897:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11897:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11889:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11889:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11936:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11936:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11947:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11947:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11932:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11932:3:7"
																		},
																		"nativeSrc": "11932:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11932:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11955:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11955:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11961:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11961:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11951:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11951:3:7"
																		},
																		"nativeSrc": "11951:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11951:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11925:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11925:6:7"
																},
																"nativeSrc": "11925:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11925:47:7"
															},
															"nativeSrc": "11925:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11925:47:7"
														},
														{
															"nativeSrc": "11981:139:7",
															"nodeType": "YulAssignment",
															"src": "11981:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12115:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12115:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11989:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11989:124:7"
																},
																"nativeSrc": "11989:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11989:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11981:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11981:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11708:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11859:9:7",
														"nodeType": "YulTypedName",
														"src": "11859:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11874:4:7",
														"nodeType": "YulTypedName",
														"src": "11874:4:7",
														"type": ""
													}
												],
												"src": "11708:419:7"
											},
											{
												"body": {
													"nativeSrc": "12239:73:7",
													"nodeType": "YulBlock",
													"src": "12239:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12261:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12269:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12269:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12257:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12257:3:7"
																		},
																		"nativeSrc": "12257:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12257:14:7"
																	},
																	{
																		"hexValue": "5374616b656420616d6f756e74206d757374206265206869676865722e",
																		"kind": "string",
																		"nativeSrc": "12273:31:7",
																		"nodeType": "YulLiteral",
																		"src": "12273:31:7",
																		"type": "",
																		"value": "Staked amount must be higher."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12250:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12250:6:7"
																},
																"nativeSrc": "12250:55:7",
																"nodeType": "YulFunctionCall",
																"src": "12250:55:7"
															},
															"nativeSrc": "12250:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "12250:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb",
												"nativeSrc": "12133:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12231:6:7",
														"nodeType": "YulTypedName",
														"src": "12231:6:7",
														"type": ""
													}
												],
												"src": "12133:179:7"
											},
											{
												"body": {
													"nativeSrc": "12464:220:7",
													"nodeType": "YulBlock",
													"src": "12464:220:7",
													"statements": [
														{
															"nativeSrc": "12474:74:7",
															"nodeType": "YulAssignment",
															"src": "12474:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12540:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12540:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12545:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12545:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12481:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12481:58:7"
																},
																"nativeSrc": "12481:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12481:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12474:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12474:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12646:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12646:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb",
																	"nativeSrc": "12557:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12557:88:7"
																},
																"nativeSrc": "12557:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12557:93:7"
															},
															"nativeSrc": "12557:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12557:93:7"
														},
														{
															"nativeSrc": "12659:19:7",
															"nodeType": "YulAssignment",
															"src": "12659:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12670:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12670:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12675:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12675:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12666:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12666:3:7"
																},
																"nativeSrc": "12666:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12666:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12659:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12659:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12318:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12452:3:7",
														"nodeType": "YulTypedName",
														"src": "12452:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12460:3:7",
														"nodeType": "YulTypedName",
														"src": "12460:3:7",
														"type": ""
													}
												],
												"src": "12318:366:7"
											},
											{
												"body": {
													"nativeSrc": "12861:248:7",
													"nodeType": "YulBlock",
													"src": "12861:248:7",
													"statements": [
														{
															"nativeSrc": "12871:26:7",
															"nodeType": "YulAssignment",
															"src": "12871:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12883:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12883:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12894:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12894:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12879:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12879:3:7"
																},
																"nativeSrc": "12879:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12879:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12871:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12871:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12918:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12918:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12929:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12929:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12914:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12914:3:7"
																		},
																		"nativeSrc": "12914:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12914:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12937:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12937:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12943:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12943:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12933:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12933:3:7"
																		},
																		"nativeSrc": "12933:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12933:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12907:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12907:6:7"
																},
																"nativeSrc": "12907:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12907:47:7"
															},
															"nativeSrc": "12907:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12907:47:7"
														},
														{
															"nativeSrc": "12963:139:7",
															"nodeType": "YulAssignment",
															"src": "12963:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13097:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13097:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12971:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12971:124:7"
																},
																"nativeSrc": "12971:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12971:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12963:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12963:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12690:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12841:9:7",
														"nodeType": "YulTypedName",
														"src": "12841:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12856:4:7",
														"nodeType": "YulTypedName",
														"src": "12856:4:7",
														"type": ""
													}
												],
												"src": "12690:419:7"
											},
											{
												"body": {
													"nativeSrc": "13221:72:7",
													"nodeType": "YulBlock",
													"src": "13221:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13243:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13243:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13251:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13251:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13239:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13239:3:7"
																		},
																		"nativeSrc": "13239:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13239:14:7"
																	},
																	{
																		"hexValue": "5374616b656420616d6f756e74206d757374206265206c6f7765722e",
																		"kind": "string",
																		"nativeSrc": "13255:30:7",
																		"nodeType": "YulLiteral",
																		"src": "13255:30:7",
																		"type": "",
																		"value": "Staked amount must be lower."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13232:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13232:6:7"
																},
																"nativeSrc": "13232:54:7",
																"nodeType": "YulFunctionCall",
																"src": "13232:54:7"
															},
															"nativeSrc": "13232:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "13232:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d",
												"nativeSrc": "13115:178:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13213:6:7",
														"nodeType": "YulTypedName",
														"src": "13213:6:7",
														"type": ""
													}
												],
												"src": "13115:178:7"
											},
											{
												"body": {
													"nativeSrc": "13445:220:7",
													"nodeType": "YulBlock",
													"src": "13445:220:7",
													"statements": [
														{
															"nativeSrc": "13455:74:7",
															"nodeType": "YulAssignment",
															"src": "13455:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13521:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13521:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13526:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13526:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13462:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "13462:58:7"
																},
																"nativeSrc": "13462:67:7",
																"nodeType": "YulFunctionCall",
																"src": "13462:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13455:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13455:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13627:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13627:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d",
																	"nativeSrc": "13538:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13538:88:7"
																},
																"nativeSrc": "13538:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13538:93:7"
															},
															"nativeSrc": "13538:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13538:93:7"
														},
														{
															"nativeSrc": "13640:19:7",
															"nodeType": "YulAssignment",
															"src": "13640:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13651:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13651:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13656:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13656:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13647:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13647:3:7"
																},
																"nativeSrc": "13647:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13647:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13640:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13640:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13299:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13433:3:7",
														"nodeType": "YulTypedName",
														"src": "13433:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13441:3:7",
														"nodeType": "YulTypedName",
														"src": "13441:3:7",
														"type": ""
													}
												],
												"src": "13299:366:7"
											},
											{
												"body": {
													"nativeSrc": "13842:248:7",
													"nodeType": "YulBlock",
													"src": "13842:248:7",
													"statements": [
														{
															"nativeSrc": "13852:26:7",
															"nodeType": "YulAssignment",
															"src": "13852:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13864:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13864:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13875:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13875:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13860:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13860:3:7"
																},
																"nativeSrc": "13860:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13860:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13852:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13852:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13899:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13899:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13910:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13910:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13895:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13895:3:7"
																		},
																		"nativeSrc": "13895:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13895:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13918:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13918:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13924:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13924:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13914:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13914:3:7"
																		},
																		"nativeSrc": "13914:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13914:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13888:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13888:6:7"
																},
																"nativeSrc": "13888:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13888:47:7"
															},
															"nativeSrc": "13888:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13888:47:7"
														},
														{
															"nativeSrc": "13944:139:7",
															"nodeType": "YulAssignment",
															"src": "13944:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14078:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14078:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13952:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13952:124:7"
																},
																"nativeSrc": "13952:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13952:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13944:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13944:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13671:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13822:9:7",
														"nodeType": "YulTypedName",
														"src": "13822:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13837:4:7",
														"nodeType": "YulTypedName",
														"src": "13837:4:7",
														"type": ""
													}
												],
												"src": "13671:419:7"
											},
											{
												"body": {
													"nativeSrc": "14202:119:7",
													"nodeType": "YulBlock",
													"src": "14202:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14224:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14224:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14232:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14232:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14220:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14220:3:7"
																		},
																		"nativeSrc": "14220:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14220:14:7"
																	},
																	{
																		"hexValue": "5374616b696e672069732063757272656e746c7920696e20756e6c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "14236:34:7",
																		"nodeType": "YulLiteral",
																		"src": "14236:34:7",
																		"type": "",
																		"value": "Staking is currently in unlocked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14213:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14213:6:7"
																},
																"nativeSrc": "14213:58:7",
																"nodeType": "YulFunctionCall",
																"src": "14213:58:7"
															},
															"nativeSrc": "14213:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "14213:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14292:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14292:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14300:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14300:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14288:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14288:3:7"
																		},
																		"nativeSrc": "14288:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14288:15:7"
																	},
																	{
																		"hexValue": "206d6f64652e",
																		"kind": "string",
																		"nativeSrc": "14305:8:7",
																		"nodeType": "YulLiteral",
																		"src": "14305:8:7",
																		"type": "",
																		"value": " mode."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14281:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14281:6:7"
																},
																"nativeSrc": "14281:33:7",
																"nodeType": "YulFunctionCall",
																"src": "14281:33:7"
															},
															"nativeSrc": "14281:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "14281:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9",
												"nativeSrc": "14096:225:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14194:6:7",
														"nodeType": "YulTypedName",
														"src": "14194:6:7",
														"type": ""
													}
												],
												"src": "14096:225:7"
											},
											{
												"body": {
													"nativeSrc": "14473:220:7",
													"nodeType": "YulBlock",
													"src": "14473:220:7",
													"statements": [
														{
															"nativeSrc": "14483:74:7",
															"nodeType": "YulAssignment",
															"src": "14483:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14549:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14549:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14554:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14554:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14490:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14490:58:7"
																},
																"nativeSrc": "14490:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14490:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14483:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14483:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14655:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14655:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9",
																	"nativeSrc": "14566:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14566:88:7"
																},
																"nativeSrc": "14566:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14566:93:7"
															},
															"nativeSrc": "14566:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14566:93:7"
														},
														{
															"nativeSrc": "14668:19:7",
															"nodeType": "YulAssignment",
															"src": "14668:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14679:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14679:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14684:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14684:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14675:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14675:3:7"
																},
																"nativeSrc": "14675:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14675:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14668:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14668:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14327:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14461:3:7",
														"nodeType": "YulTypedName",
														"src": "14461:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14469:3:7",
														"nodeType": "YulTypedName",
														"src": "14469:3:7",
														"type": ""
													}
												],
												"src": "14327:366:7"
											},
											{
												"body": {
													"nativeSrc": "14870:248:7",
													"nodeType": "YulBlock",
													"src": "14870:248:7",
													"statements": [
														{
															"nativeSrc": "14880:26:7",
															"nodeType": "YulAssignment",
															"src": "14880:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14892:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14892:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14903:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14903:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14888:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14888:3:7"
																},
																"nativeSrc": "14888:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14888:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14880:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14880:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14927:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14927:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14938:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14938:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14923:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14923:3:7"
																		},
																		"nativeSrc": "14923:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14923:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14946:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14946:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14952:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14942:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14942:3:7"
																		},
																		"nativeSrc": "14942:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14942:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14916:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14916:6:7"
																},
																"nativeSrc": "14916:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14916:47:7"
															},
															"nativeSrc": "14916:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14916:47:7"
														},
														{
															"nativeSrc": "14972:139:7",
															"nodeType": "YulAssignment",
															"src": "14972:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15106:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15106:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14980:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14980:124:7"
																},
																"nativeSrc": "14980:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14980:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14972:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14972:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14699:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14850:9:7",
														"nodeType": "YulTypedName",
														"src": "14850:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14865:4:7",
														"nodeType": "YulTypedName",
														"src": "14865:4:7",
														"type": ""
													}
												],
												"src": "14699:419:7"
											},
											{
												"body": {
													"nativeSrc": "15230:114:7",
													"nodeType": "YulBlock",
													"src": "15230:114:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15252:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15252:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15260:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15260:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15248:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15248:3:7"
																		},
																		"nativeSrc": "15248:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15248:14:7"
																	},
																	{
																		"hexValue": "54686973207374616b696e672070726f647563742069732064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "15264:34:7",
																		"nodeType": "YulLiteral",
																		"src": "15264:34:7",
																		"type": "",
																		"value": "This staking product is disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15241:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15241:6:7"
																},
																"nativeSrc": "15241:58:7",
																"nodeType": "YulFunctionCall",
																"src": "15241:58:7"
															},
															"nativeSrc": "15241:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "15241:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15320:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15320:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15328:2:7",
																				"nodeType": "YulLiteral",
																				"src": "15328:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15316:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15316:3:7"
																		},
																		"nativeSrc": "15316:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15316:15:7"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "15333:3:7",
																		"nodeType": "YulLiteral",
																		"src": "15333:3:7",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15309:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15309:6:7"
																},
																"nativeSrc": "15309:28:7",
																"nodeType": "YulFunctionCall",
																"src": "15309:28:7"
															},
															"nativeSrc": "15309:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "15309:28:7"
														}
													]
												},
												"name": "store_literal_in_memory_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9",
												"nativeSrc": "15124:220:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15222:6:7",
														"nodeType": "YulTypedName",
														"src": "15222:6:7",
														"type": ""
													}
												],
												"src": "15124:220:7"
											},
											{
												"body": {
													"nativeSrc": "15496:220:7",
													"nodeType": "YulBlock",
													"src": "15496:220:7",
													"statements": [
														{
															"nativeSrc": "15506:74:7",
															"nodeType": "YulAssignment",
															"src": "15506:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15572:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15572:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15577:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15577:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15513:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15513:58:7"
																},
																"nativeSrc": "15513:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15513:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15506:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15506:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15678:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15678:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9",
																	"nativeSrc": "15589:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15589:88:7"
																},
																"nativeSrc": "15589:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15589:93:7"
															},
															"nativeSrc": "15589:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15589:93:7"
														},
														{
															"nativeSrc": "15691:19:7",
															"nodeType": "YulAssignment",
															"src": "15691:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15702:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15702:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15707:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15707:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15698:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15698:3:7"
																},
																"nativeSrc": "15698:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15698:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15691:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15691:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15350:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15484:3:7",
														"nodeType": "YulTypedName",
														"src": "15484:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15492:3:7",
														"nodeType": "YulTypedName",
														"src": "15492:3:7",
														"type": ""
													}
												],
												"src": "15350:366:7"
											},
											{
												"body": {
													"nativeSrc": "15893:248:7",
													"nodeType": "YulBlock",
													"src": "15893:248:7",
													"statements": [
														{
															"nativeSrc": "15903:26:7",
															"nodeType": "YulAssignment",
															"src": "15903:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15915:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15915:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15926:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15926:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15911:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15911:3:7"
																},
																"nativeSrc": "15911:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15911:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15903:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15903:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15950:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15950:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15961:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15961:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15946:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15946:3:7"
																		},
																		"nativeSrc": "15946:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15946:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15969:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15969:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15975:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15975:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15965:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15965:3:7"
																		},
																		"nativeSrc": "15965:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15965:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15939:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15939:6:7"
																},
																"nativeSrc": "15939:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15939:47:7"
															},
															"nativeSrc": "15939:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15939:47:7"
														},
														{
															"nativeSrc": "15995:139:7",
															"nodeType": "YulAssignment",
															"src": "15995:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16129:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16129:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16003:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16003:124:7"
																},
																"nativeSrc": "16003:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16003:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15995:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15995:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15722:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15873:9:7",
														"nodeType": "YulTypedName",
														"src": "15873:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15888:4:7",
														"nodeType": "YulTypedName",
														"src": "15888:4:7",
														"type": ""
													}
												],
												"src": "15722:419:7"
											},
											{
												"body": {
													"nativeSrc": "16253:200:7",
													"nodeType": "YulBlock",
													"src": "16253:200:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16275:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16275:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16283:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16283:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16271:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16271:3:7"
																		},
																		"nativeSrc": "16271:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16271:14:7"
																	},
																	{
																		"hexValue": "546869732077616c6c65742068617320616c7265616479207374616b6564206f",
																		"kind": "string",
																		"nativeSrc": "16287:34:7",
																		"nodeType": "YulLiteral",
																		"src": "16287:34:7",
																		"type": "",
																		"value": "This wallet has already staked o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16264:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16264:6:7"
																},
																"nativeSrc": "16264:58:7",
																"nodeType": "YulFunctionCall",
																"src": "16264:58:7"
															},
															"nativeSrc": "16264:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "16264:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16343:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16343:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16351:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16351:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16339:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16339:3:7"
																		},
																		"nativeSrc": "16339:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16339:15:7"
																	},
																	{
																		"hexValue": "6e20746869732070726f64756374202d207761697420666f7220746865207265",
																		"kind": "string",
																		"nativeSrc": "16356:34:7",
																		"nodeType": "YulLiteral",
																		"src": "16356:34:7",
																		"type": "",
																		"value": "n this product - wait for the re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16332:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16332:6:7"
																},
																"nativeSrc": "16332:59:7",
																"nodeType": "YulFunctionCall",
																"src": "16332:59:7"
															},
															"nativeSrc": "16332:59:7",
															"nodeType": "YulExpressionStatement",
															"src": "16332:59:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16412:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16412:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16420:2:7",
																				"nodeType": "YulLiteral",
																				"src": "16420:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16408:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16408:3:7"
																		},
																		"nativeSrc": "16408:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16408:15:7"
																	},
																	{
																		"hexValue": "6c6561736520746f2072652d7374616b652e",
																		"kind": "string",
																		"nativeSrc": "16425:20:7",
																		"nodeType": "YulLiteral",
																		"src": "16425:20:7",
																		"type": "",
																		"value": "lease to re-stake."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16401:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16401:6:7"
																},
																"nativeSrc": "16401:45:7",
																"nodeType": "YulFunctionCall",
																"src": "16401:45:7"
															},
															"nativeSrc": "16401:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "16401:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc",
												"nativeSrc": "16147:306:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16245:6:7",
														"nodeType": "YulTypedName",
														"src": "16245:6:7",
														"type": ""
													}
												],
												"src": "16147:306:7"
											},
											{
												"body": {
													"nativeSrc": "16605:220:7",
													"nodeType": "YulBlock",
													"src": "16605:220:7",
													"statements": [
														{
															"nativeSrc": "16615:74:7",
															"nodeType": "YulAssignment",
															"src": "16615:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16681:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16681:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16686:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16686:2:7",
																		"type": "",
																		"value": "82"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16622:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16622:58:7"
																},
																"nativeSrc": "16622:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16622:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16615:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16615:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16787:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16787:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc",
																	"nativeSrc": "16698:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16698:88:7"
																},
																"nativeSrc": "16698:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16698:93:7"
															},
															"nativeSrc": "16698:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16698:93:7"
														},
														{
															"nativeSrc": "16800:19:7",
															"nodeType": "YulAssignment",
															"src": "16800:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16811:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16811:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16816:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16816:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16807:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16807:3:7"
																},
																"nativeSrc": "16807:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16807:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16800:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16800:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16459:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16593:3:7",
														"nodeType": "YulTypedName",
														"src": "16593:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16601:3:7",
														"nodeType": "YulTypedName",
														"src": "16601:3:7",
														"type": ""
													}
												],
												"src": "16459:366:7"
											},
											{
												"body": {
													"nativeSrc": "17002:248:7",
													"nodeType": "YulBlock",
													"src": "17002:248:7",
													"statements": [
														{
															"nativeSrc": "17012:26:7",
															"nodeType": "YulAssignment",
															"src": "17012:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17024:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17024:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17035:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17035:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17020:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17020:3:7"
																},
																"nativeSrc": "17020:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17020:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17012:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17012:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17059:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17059:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17070:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17070:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17055:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17055:3:7"
																		},
																		"nativeSrc": "17055:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17055:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17078:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17078:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17084:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17084:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17074:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17074:3:7"
																		},
																		"nativeSrc": "17074:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17074:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17048:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17048:6:7"
																},
																"nativeSrc": "17048:47:7",
																"nodeType": "YulFunctionCall",
																"src": "17048:47:7"
															},
															"nativeSrc": "17048:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "17048:47:7"
														},
														{
															"nativeSrc": "17104:139:7",
															"nodeType": "YulAssignment",
															"src": "17104:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17238:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17238:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17112:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "17112:124:7"
																},
																"nativeSrc": "17112:131:7",
																"nodeType": "YulFunctionCall",
																"src": "17112:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17104:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17104:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16831:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16982:9:7",
														"nodeType": "YulTypedName",
														"src": "16982:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16997:4:7",
														"nodeType": "YulTypedName",
														"src": "16997:4:7",
														"type": ""
													}
												],
												"src": "16831:419:7"
											},
											{
												"body": {
													"nativeSrc": "17284:152:7",
													"nodeType": "YulBlock",
													"src": "17284:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17301:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17301:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17304:77:7",
																		"nodeType": "YulLiteral",
																		"src": "17304:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17294:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17294:6:7"
																},
																"nativeSrc": "17294:88:7",
																"nodeType": "YulFunctionCall",
																"src": "17294:88:7"
															},
															"nativeSrc": "17294:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "17294:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17398:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17398:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17401:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17401:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17391:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17391:6:7"
																},
																"nativeSrc": "17391:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17391:15:7"
															},
															"nativeSrc": "17391:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17391:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17422:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17422:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17425:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17425:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17415:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17415:6:7"
																},
																"nativeSrc": "17415:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17415:15:7"
															},
															"nativeSrc": "17415:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17415:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "17256:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "17256:180:7"
											},
											{
												"body": {
													"nativeSrc": "17484:143:7",
													"nodeType": "YulBlock",
													"src": "17484:143:7",
													"statements": [
														{
															"nativeSrc": "17494:25:7",
															"nodeType": "YulAssignment",
															"src": "17494:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17517:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17517:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17499:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17499:17:7"
																},
																"nativeSrc": "17499:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17499:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17494:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17494:1:7"
																}
															]
														},
														{
															"nativeSrc": "17528:25:7",
															"nodeType": "YulAssignment",
															"src": "17528:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17551:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17551:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17533:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17533:17:7"
																},
																"nativeSrc": "17533:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17533:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17528:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17528:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17575:22:7",
																"nodeType": "YulBlock",
																"src": "17575:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "17577:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17577:16:7"
																			},
																			"nativeSrc": "17577:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17577:18:7"
																		},
																		"nativeSrc": "17577:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17577:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17572:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17572:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17565:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17565:6:7"
																},
																"nativeSrc": "17565:9:7",
																"nodeType": "YulFunctionCall",
																"src": "17565:9:7"
															},
															"nativeSrc": "17562:35:7",
															"nodeType": "YulIf",
															"src": "17562:35:7"
														},
														{
															"nativeSrc": "17607:14:7",
															"nodeType": "YulAssignment",
															"src": "17607:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17616:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17616:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17619:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17619:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17612:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17612:3:7"
																},
																"nativeSrc": "17612:9:7",
																"nodeType": "YulFunctionCall",
																"src": "17612:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "17607:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17607:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "17442:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17473:1:7",
														"nodeType": "YulTypedName",
														"src": "17473:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17476:1:7",
														"nodeType": "YulTypedName",
														"src": "17476:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17482:1:7",
														"nodeType": "YulTypedName",
														"src": "17482:1:7",
														"type": ""
													}
												],
												"src": "17442:185:7"
											},
											{
												"body": {
													"nativeSrc": "17678:149:7",
													"nodeType": "YulBlock",
													"src": "17678:149:7",
													"statements": [
														{
															"nativeSrc": "17688:25:7",
															"nodeType": "YulAssignment",
															"src": "17688:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17711:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17711:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17693:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17693:17:7"
																},
																"nativeSrc": "17693:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17693:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17688:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17688:1:7"
																}
															]
														},
														{
															"nativeSrc": "17722:25:7",
															"nodeType": "YulAssignment",
															"src": "17722:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17745:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17745:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17727:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "17727:17:7"
																},
																"nativeSrc": "17727:20:7",
																"nodeType": "YulFunctionCall",
																"src": "17727:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17722:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "17722:1:7"
																}
															]
														},
														{
															"nativeSrc": "17756:17:7",
															"nodeType": "YulAssignment",
															"src": "17756:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17768:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17768:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17771:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17771:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "17764:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17764:3:7"
																},
																"nativeSrc": "17764:9:7",
																"nodeType": "YulFunctionCall",
																"src": "17764:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "17756:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17756:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17798:22:7",
																"nodeType": "YulBlock",
																"src": "17798:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17800:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "17800:16:7"
																			},
																			"nativeSrc": "17800:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "17800:18:7"
																		},
																		"nativeSrc": "17800:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "17800:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "17789:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17789:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "17795:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "17795:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17786:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "17786:2:7"
																},
																"nativeSrc": "17786:11:7",
																"nodeType": "YulFunctionCall",
																"src": "17786:11:7"
															},
															"nativeSrc": "17783:37:7",
															"nodeType": "YulIf",
															"src": "17783:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "17633:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17664:1:7",
														"nodeType": "YulTypedName",
														"src": "17664:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17667:1:7",
														"nodeType": "YulTypedName",
														"src": "17667:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "17673:4:7",
														"nodeType": "YulTypedName",
														"src": "17673:4:7",
														"type": ""
													}
												],
												"src": "17633:194:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid product ID.\")\n\n    }\n\n    function abi_encode_t_stringliteral_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575(memPtr) {\n\n        mstore(add(memPtr, 0), \"This wallet has no stake on this\")\n\n        mstore(add(memPtr, 32), \" product.\")\n\n    }\n\n    function abi_encode_t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e(memPtr) {\n\n        mstore(add(memPtr, 0), \"The staking period for this prod\")\n\n        mstore(add(memPtr, 32), \"uct has not ended yet.\")\n\n    }\n\n    function abi_encode_t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 54)\n        store_literal_in_memory_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking on this contract has end\")\n\n        mstore(add(memPtr, 32), \"ed!\")\n\n    }\n\n    function abi_encode_t_stringliteral_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staked amount must be higher.\")\n\n    }\n\n    function abi_encode_t_stringliteral_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staked amount must be lower.\")\n\n    }\n\n    function abi_encode_t_stringliteral_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking is currently in unlocked\")\n\n        mstore(add(memPtr, 32), \" mode.\")\n\n    }\n\n    function abi_encode_t_stringliteral_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9(memPtr) {\n\n        mstore(add(memPtr, 0), \"This staking product is disabled\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"This wallet has already staked o\")\n\n        mstore(add(memPtr, 32), \"n this product - wait for the re\")\n\n        mstore(add(memPtr, 64), \"lease to re-stake.\")\n\n    }\n\n    function abi_encode_t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 82)\n        store_literal_in_memory_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x288 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x15A JUMPI DUP1 PUSH4 0xD0BCC009 GT PUSH2 0xCC JUMPI DUP1 PUSH4 0xEA1B28E0 GT PUSH2 0x85 JUMPI DUP1 PUSH4 0xEA1B28E0 EQ PUSH2 0x7DE JUMPI DUP1 PUSH4 0xF1CDDD55 EQ PUSH2 0x7FC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x818 JUMPI DUP1 PUSH4 0xF908DC13 EQ PUSH2 0x834 JUMPI DUP1 PUSH4 0xFB75B2C7 EQ PUSH2 0x852 JUMPI DUP1 PUSH4 0xFD2B5202 EQ PUSH2 0x870 JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0xD0BCC009 EQ PUSH2 0x72C JUMPI DUP1 PUSH4 0xD19B090E EQ PUSH2 0x74A JUMPI DUP1 PUSH4 0xD47C56E5 EQ PUSH2 0x768 JUMPI DUP1 PUSH4 0xD5C41D69 EQ PUSH2 0x786 JUMPI DUP1 PUSH4 0xD7D4918E EQ PUSH2 0x7A2 JUMPI DUP1 PUSH4 0xE7DE2CEB EQ PUSH2 0x7C0 JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0x9D76EA58 GT PUSH2 0x11E JUMPI DUP1 PUSH4 0x9D76EA58 EQ PUSH2 0x668 JUMPI DUP1 PUSH4 0xB39DC996 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0xBBA4FEFD EQ PUSH2 0x6A4 JUMPI DUP1 PUSH4 0xBEF7D12E EQ PUSH2 0x6C2 JUMPI DUP1 PUSH4 0xC3630EDB EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0xCD5692EE EQ PUSH2 0x710 JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0x89B0040A EQ PUSH2 0x5E0 JUMPI DUP1 PUSH4 0x8A170AC1 EQ PUSH2 0x610 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0x94387289 EQ PUSH2 0x64C JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0x4B0C10D8 GT PUSH2 0x1FE JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0x73DEC718 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x79085425 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0x798CBE5E EQ PUSH2 0x574 JUMPI DUP1 PUSH4 0x7B3E920C EQ PUSH2 0x592 JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0x4B0C10D8 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0x4B5EFFC2 EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x4F51D090 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x5CD5A159 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x5F75BCEA EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x6CBDE5CF EQ PUSH2 0x4E2 JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0x24EBD9D2 GT PUSH2 0x250 JUMPI DUP1 PUSH4 0x24EBD9D2 EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x2E5F89EF EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x35E63055 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x375B3C0A EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x38DC97FB EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x4893AFC1 EQ PUSH2 0x3FA JUMPI PUSH2 0x288 JUMP JUMPDEST DUP1 PUSH4 0x58DF0E8 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xF9154B5 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x1D95985B EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x1D95D52F EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x23DCDB89 EQ PUSH2 0x314 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x88C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C4 PUSH2 0x8A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D1 SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E2 PUSH2 0x8C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x312 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x8CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x329 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A5 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0xA14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B4 PUSH2 0x1587 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x158D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x414 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40F SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x432 PUSH2 0x15B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x462 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45D SWAP2 SWAP1 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x15BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x492 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x48D SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49F SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B0 PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BD SWAP2 SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DB SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x1723 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F7 SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x17BB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x518 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x525 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x536 PUSH2 0x1976 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x540 PUSH2 0x19FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54D SWAP2 SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55E PUSH2 0x1A0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57C PUSH2 0x1A15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CA PUSH2 0x1A30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x1A36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x618 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x625 SWAP2 SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x636 PUSH2 0x1A5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x643 SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x666 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x661 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0x1A84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x670 PUSH2 0x1B0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67D SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x68E PUSH2 0x1B2F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69B SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6AC PUSH2 0x1B35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0x1B3B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6FA PUSH2 0x1CCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x707 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x72A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x2AC8 JUMP JUMPDEST PUSH2 0x1CD0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x734 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x741 SWAP2 SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x752 PUSH2 0x1D68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x75F SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x770 PUSH2 0x1D6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x79B SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x1D74 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7AA PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7C8 PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D5 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E6 PUSH2 0x1E18 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x29FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x816 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x811 SWAP2 SWAP1 PUSH2 0x2A73 JUMP JUMPDEST PUSH2 0x1E1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x832 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x82D SWAP2 SWAP1 PUSH2 0x29BA JUMP JUMPDEST PUSH2 0x1EB6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x83C PUSH2 0x1FAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x849 SWAP2 SWAP1 PUSH2 0x2B40 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85A PUSH2 0x1FBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x867 SWAP2 SWAP1 PUSH2 0x2A25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x2B59 JUMP JUMPDEST PUSH2 0x1FE3 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x16 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x8D4 PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8F2 PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x948 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93F SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x14 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x96C PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x98A PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D7 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x19 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH1 0x1 DUP5 EQ DUP1 PUSH2 0xA2F JUMPI POP PUSH1 0x2 DUP5 EQ JUMPDEST DUP1 PUSH2 0xA3A JUMPI POP PUSH1 0x3 DUP5 EQ JUMPDEST DUP1 PUSH2 0xA45 JUMPI POP PUSH1 0x4 DUP5 EQ JUMPDEST PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7B SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP5 SUB PUSH2 0xCCC JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP1 PUSH2 0x2CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBB3 JUMPI TIMESTAMP PUSH2 0xB71 PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xBB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA9 SWAP1 PUSH2 0x2D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0xC05 PUSH1 0x3 SLOAD PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 DUP5 SUB PUSH2 0xF14 JUMPI PUSH0 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4A SWAP1 PUSH2 0x2CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDFB JUMPI TIMESTAMP PUSH2 0xDB9 PUSH1 0x9 SLOAD PUSH1 0x7 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF1 SWAP1 PUSH2 0x2D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0xE4D PUSH1 0x8 SLOAD PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x7 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x3 DUP5 SUB PUSH2 0x115C JUMPI PUSH0 PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0xF9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF92 SWAP1 PUSH2 0x2CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1043 JUMPI TIMESTAMP PUSH2 0x1001 PUSH1 0xE SLOAD PUSH1 0xC PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x1042 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1039 SWAP1 PUSH2 0x2D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x1095 PUSH1 0xD SLOAD PUSH1 0xB PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xC PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x4 DUP5 SUB PUSH2 0x13A4 JUMPI PUSH0 PUSH1 0x10 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11DA SWAP1 PUSH2 0x2CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x128B JUMPI TIMESTAMP PUSH2 0x1249 PUSH1 0x13 SLOAD PUSH1 0x11 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x128A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1281 SWAP1 PUSH2 0x2D75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x12DD PUSH1 0x12 SLOAD PUSH1 0x10 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x10 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x11 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x13EE JUMPI PUSH2 0x13CC DUP3 PUSH1 0x1B SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1B DUP2 SWAP1 SSTORE POP PUSH2 0x13E7 DUP3 PUSH1 0x1A SLOAD PUSH2 0x2886 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1A DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x1403 DUP2 PUSH1 0x1C SLOAD PUSH2 0x2886 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1C DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x18 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x16 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x148C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14A8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14CC SWAP2 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST POP PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1580 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH1 0x17 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x155A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x157E SWAP2 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x19 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 SUB PUSH2 0x160B JUMPI PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x1658 JUMPI PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x16A5 JUMPI PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH2 0x16F2 JUMPI PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x16F6 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x172B PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1749 PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x179F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1796 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x17C3 PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17E1 PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1837 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x182E SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xB PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x1 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1957 SWAP2 SWAP1 PUSH2 0x2E34 JUMP JUMPDEST PUSH2 0x1961 SWAP2 SWAP1 PUSH2 0x2E34 JUMP JUMPDEST PUSH2 0x196B SWAP2 SWAP1 PUSH2 0x2E34 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x197E PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x199C PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x19F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19E9 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19FB PUSH0 PUSH2 0x289B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1B SLOAD DUP2 JUMP JUMPDEST PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1C SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A8C PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AAA PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B00 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF7 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1D DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x18 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1A SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 SUB PUSH2 0x1B9D JUMPI PUSH2 0x1B96 PUSH1 0x4 SLOAD PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x1BFE JUMPI PUSH2 0x1BF7 PUSH1 0x9 SLOAD PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x3 DUP3 SUB PUSH2 0x1C5F JUMPI PUSH2 0x1C58 PUSH1 0xE SLOAD PUSH1 0xC PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x4 DUP3 SUB PUSH2 0x1CC0 JUMPI PUSH2 0x1CB9 PUSH1 0x13 SLOAD PUSH1 0x11 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1CC4 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1CD8 PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CF6 PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D43 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x15 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1D SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D7C PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D9A PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1DF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DE7 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xF PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E26 PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E44 PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1E9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E91 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1E PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1EBE PUSH2 0x2855 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1EDC PUSH2 0x1A5D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1F32 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F29 SWAP1 PUSH2 0x2BF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F97 SWAP1 PUSH2 0x2ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FA9 DUP2 PUSH2 0x289B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x17 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH0 SWAP1 POP PUSH1 0x1B SLOAD PUSH1 0x1D SLOAD LT ISZERO PUSH2 0x2032 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2029 SWAP1 PUSH2 0x2F65 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 EQ DUP1 PUSH2 0x2041 JUMPI POP PUSH1 0x2 DUP4 EQ JUMPDEST DUP1 PUSH2 0x204C JUMPI POP PUSH1 0x3 DUP4 EQ JUMPDEST DUP1 PUSH2 0x2057 JUMPI POP PUSH1 0x4 DUP4 EQ JUMPDEST PUSH2 0x2096 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208D SWAP1 PUSH2 0x2C59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x19 SLOAD DUP5 LT ISZERO PUSH2 0x20DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20D2 SWAP1 PUSH2 0x2FCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x15 SLOAD DUP5 GT ISZERO PUSH2 0x2120 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2117 SWAP1 PUSH2 0x3035 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 ISZERO ISZERO PUSH1 0x1E PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2174 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x216B SWAP1 PUSH2 0x30C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 SUB PUSH2 0x22EC JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x21D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C8 SWAP1 PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x2250 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2247 SWAP1 PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2265 PUSH1 0x3 SLOAD DUP6 PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP TIMESTAMP PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 DUP4 SUB PUSH2 0x2464 JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2349 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2340 SWAP1 PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x23C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23BF SWAP1 PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23DD PUSH1 0x8 SLOAD DUP6 PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP TIMESTAMP PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x3 DUP4 SUB PUSH2 0x25DC JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0xF PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x24C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B8 SWAP1 PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x2540 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2537 SWAP1 PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2555 PUSH1 0xD SLOAD DUP6 PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP TIMESTAMP PUSH1 0xC PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xB PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x4 DUP4 SUB PUSH2 0x2754 JUMPI PUSH1 0x1 ISZERO ISZERO PUSH1 0x14 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2639 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2630 SWAP1 PUSH2 0x3151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ PUSH2 0x26B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26AF SWAP1 PUSH2 0x3205 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26CD PUSH1 0x12 SLOAD DUP6 PUSH2 0x2871 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP TIMESTAMP PUSH1 0x11 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x10 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x2769 DUP2 PUSH1 0x1A SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1A DUP2 SWAP1 SSTORE POP PUSH2 0x2784 DUP5 PUSH1 0x1C SLOAD PUSH2 0x285C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x1C DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x18 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP5 PUSH1 0x16 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x280D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D93 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2829 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x284D SWAP2 SWAP1 PUSH2 0x2DDC JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x2869 SWAP2 SWAP1 PUSH2 0x2E34 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x287E SWAP2 SWAP1 PUSH2 0x3250 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0x2893 SWAP2 SWAP1 PUSH2 0x3280 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2989 DUP3 PUSH2 0x2960 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2999 DUP2 PUSH2 0x297F JUMP JUMPDEST DUP2 EQ PUSH2 0x29A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x29B4 DUP2 PUSH2 0x2990 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29CF JUMPI PUSH2 0x29CE PUSH2 0x295C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x29DC DUP5 DUP3 DUP6 ADD PUSH2 0x29A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29F7 DUP2 PUSH2 0x29E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A10 PUSH0 DUP4 ADD DUP5 PUSH2 0x29EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A1F DUP2 PUSH2 0x297F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A38 PUSH0 DUP4 ADD DUP5 PUSH2 0x2A16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A52 DUP2 PUSH2 0x2A3E JUMP JUMPDEST DUP2 EQ PUSH2 0x2A5C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A6D DUP2 PUSH2 0x2A49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A88 JUMPI PUSH2 0x2A87 PUSH2 0x295C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A95 DUP5 DUP3 DUP6 ADD PUSH2 0x2A5F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AA7 DUP2 PUSH2 0x29E5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AB1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AC2 DUP2 PUSH2 0x2A9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2ADD JUMPI PUSH2 0x2ADC PUSH2 0x295C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2AEA DUP5 DUP3 DUP6 ADD PUSH2 0x2AB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B09 JUMPI PUSH2 0x2B08 PUSH2 0x295C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B16 DUP6 DUP3 DUP7 ADD PUSH2 0x29A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B27 DUP6 DUP3 DUP7 ADD PUSH2 0x2AB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B3A DUP2 PUSH2 0x2A3E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B53 PUSH0 DUP4 ADD DUP5 PUSH2 0x2B31 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B6F JUMPI PUSH2 0x2B6E PUSH2 0x295C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B7C DUP6 DUP3 DUP7 ADD PUSH2 0x2AB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B8D DUP6 DUP3 DUP7 ADD PUSH2 0x2AB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BDB PUSH1 0x20 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE6 DUP3 PUSH2 0x2BA7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C08 DUP2 PUSH2 0x2BCF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642070726F647563742049442E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C43 PUSH1 0x13 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C4E DUP3 PUSH2 0x2C0F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C70 DUP2 PUSH2 0x2C37 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546869732077616C6C657420686173206E6F207374616B65206F6E2074686973 PUSH0 DUP3 ADD MSTORE PUSH32 0x2070726F647563742E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CD1 PUSH1 0x29 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CDC DUP3 PUSH2 0x2C77 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CFE DUP2 PUSH2 0x2CC5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546865207374616B696E6720706572696F6420666F7220746869732070726F64 PUSH0 DUP3 ADD MSTORE PUSH32 0x75637420686173206E6F7420656E646564207965742E00000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D5F PUSH1 0x36 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D6A DUP3 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D8C DUP2 PUSH2 0x2D53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DA6 PUSH0 DUP4 ADD DUP7 PUSH2 0x2A16 JUMP JUMPDEST PUSH2 0x2DB3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2A16 JUMP JUMPDEST PUSH2 0x2DC0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x29EE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2DD6 DUP2 PUSH2 0x2A49 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DF1 JUMPI PUSH2 0x2DF0 PUSH2 0x295C JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2DFE DUP5 DUP3 DUP6 ADD PUSH2 0x2DC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2E3E DUP3 PUSH2 0x29E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E49 DUP4 PUSH2 0x29E5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2E61 JUMPI PUSH2 0x2E60 PUSH2 0x2E07 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EC1 PUSH1 0x26 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2ECC DUP3 PUSH2 0x2E67 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EEE DUP2 PUSH2 0x2EB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E67206F6E207468697320636F6E74726163742068617320656E64 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564210000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F4F PUSH1 0x23 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F5A DUP3 PUSH2 0x2EF5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F7C DUP2 PUSH2 0x2F43 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B656420616D6F756E74206D757374206265206869676865722E000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FB7 PUSH1 0x1D DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC2 DUP3 PUSH2 0x2F83 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FE4 DUP2 PUSH2 0x2FAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B656420616D6F756E74206D757374206265206C6F7765722E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x301F PUSH1 0x1C DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x302A DUP3 PUSH2 0x2FEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x304C DUP2 PUSH2 0x3013 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E672069732063757272656E746C7920696E20756E6C6F636B6564 PUSH0 DUP3 ADD MSTORE PUSH32 0x206D6F64652E0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x30AD PUSH1 0x26 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x30B8 DUP3 PUSH2 0x3053 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30DA DUP2 PUSH2 0x30A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54686973207374616B696E672070726F647563742069732064697361626C6564 PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x313B PUSH1 0x21 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x3146 DUP3 PUSH2 0x30E1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3168 DUP2 PUSH2 0x312F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546869732077616C6C65742068617320616C7265616479207374616B6564206F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E20746869732070726F64756374202D207761697420666F7220746865207265 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6C6561736520746F2072652D7374616B652E0000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x31EF PUSH1 0x52 DUP4 PUSH2 0x2B97 JUMP JUMPDEST SWAP2 POP PUSH2 0x31FA DUP3 PUSH2 0x316F JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x321C DUP2 PUSH2 0x31E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x325A DUP3 PUSH2 0x29E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3265 DUP4 PUSH2 0x29E5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3275 JUMPI PUSH2 0x3274 PUSH2 0x3223 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x328A DUP3 PUSH2 0x29E5 JUMP JUMPDEST SWAP2 POP PUSH2 0x3295 DUP4 PUSH2 0x29E5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x32AD JUMPI PUSH2 0x32AC PUSH2 0x2E07 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xB1 0xA6 SWAP9 0x2F PUSH32 0xFCA90B0D859F0345F35610FCA850DC8C02F47A1BB86B722961C64736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "654:10724:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;994:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1858:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1354:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3975:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4348:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1430:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8453:2920;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2108:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1484:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;776:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;918:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5398:462;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;830:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1602:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3606;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4595:249;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:1;;;:::i;:::-;;1166:23:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2272:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1572:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1048:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2349:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1266:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;948:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4098:127:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2003:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1324:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2183:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4852:538;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1542:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4231:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1384:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2484:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1136:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3852:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1106:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;888;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1789;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4467:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2578:22:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1931:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5886:2538;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;994:47;;;;;;;;;;;;;;;;;:::o;1858:26::-;;;;;;;;;;;;;:::o;1354:23::-;;;;:::o;3975:117::-;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4071:13:0::1;4057:11;;:27;;;;;;;;;;;;;;;;;;3975:117:::0;:::o;4348:111::-;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4440:11:0::1;4429:8;:22;;;;4348:111:::0;:::o;1430:47::-;;;;;;;;;;;;;;;;;:::o;1212:::-;;;;;;;;;;;;;;;;;:::o;8453:2920::-;8505:12;8520:10;8505:25;;8549:20;8572:1;8549:24;;8589:19;8611:1;8589:23;;8642:1;8633:5;:10;:24;;;;8656:1;8647:5;:10;8633:24;:38;;;;8670:1;8661:5;:10;8633:38;:52;;;;8684:1;8675:5;:10;8633:52;8625:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;8735:1;8726:5;:10;8722:492;;8781:1;8761:11;:17;8773:4;8761:17;;;;;;;;;;;;;;;;:21;8753:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;8850:10;;;;;;;;;;;8845:173;;8928:15;8889:35;8915:8;;8889:15;:21;8905:4;8889:21;;;;;;;;;;;;;;;;:25;;:35;;;;:::i;:::-;:54;;8881:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;8845:173;9049:31;9071:8;;9049:11;:17;9061:4;9049:17;;;;;;;;;;;;;;;;:21;;:31;;;;:::i;:::-;9034:46;;9109:11;:17;9121:4;9109:17;;;;;;;;;;;;;;;;9095:31;;9161:1;9141:11;:17;9153:4;9141:17;;;;;;;;;;;;;;;:21;;;;9201:1;9177:15;:21;9193:4;9177:21;;;;;;;;;;;;;;;:25;;;;8722:492;9237:1;9228:5;:10;9224:492;;9283:1;9263:11;:17;9275:4;9263:17;;;;;;;;;;;;;;;;:21;9255:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;9352:10;;;;;;;;;;;9347:173;;9430:15;9391:35;9417:8;;9391:15;:21;9407:4;9391:21;;;;;;;;;;;;;;;;:25;;:35;;;;:::i;:::-;:54;;9383:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;9347:173;9551:31;9573:8;;9551:11;:17;9563:4;9551:17;;;;;;;;;;;;;;;;:21;;:31;;;;:::i;:::-;9536:46;;9611:11;:17;9623:4;9611:17;;;;;;;;;;;;;;;;9597:31;;9663:1;9643:11;:17;9655:4;9643:17;;;;;;;;;;;;;;;:21;;;;9703:1;9679:15;:21;9695:4;9679:21;;;;;;;;;;;;;;;:25;;;;9224:492;9739:1;9730:5;:10;9726:492;;9785:1;9765:11;:17;9777:4;9765:17;;;;;;;;;;;;;;;;:21;9757:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;9854:10;;;;;;;;;;;9849:173;;9932:15;9893:35;9919:8;;9893:15;:21;9909:4;9893:21;;;;;;;;;;;;;;;;:25;;:35;;;;:::i;:::-;:54;;9885:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;9849:173;10053:31;10075:8;;10053:11;:17;10065:4;10053:17;;;;;;;;;;;;;;;;:21;;:31;;;;:::i;:::-;10038:46;;10113:11;:17;10125:4;10113:17;;;;;;;;;;;;;;;;10099:31;;10165:1;10145:11;:17;10157:4;10145:17;;;;;;;;;;;;;;;:21;;;;10205:1;10181:15;:21;10197:4;10181:21;;;;;;;;;;;;;;;:25;;;;9726:492;10243:1;10234:5;:10;10230:492;;10289:1;10269:11;:17;10281:4;10269:17;;;;;;;;;;;;;;;;:21;10261:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;10358:10;;;;;;;;;;;10353:173;;10436:15;10397:35;10423:8;;10397:15;:21;10413:4;10397:21;;;;;;;;;;;;;;;;:25;;:35;;;;:::i;:::-;:54;;10389:121;;;;;;;;;;;;:::i;:::-;;;;;;;;;10353:173;10557:31;10579:8;;10557:11;:17;10569:4;10557:17;;;;;;;;;;;;;;;;:21;;:31;;;;:::i;:::-;10542:46;;10617:11;:17;10629:4;10617:17;;;;;;;;;;;;;;;;10603:31;;10669:1;10649:11;:17;10661:4;10649:17;;;;;;;;;;;;;;;:21;;;;10709:1;10685:15;:21;10701:4;10685:21;;;;;;;;;;;;;;;:25;;;;10230:492;10739:10;;;;;;;;;;;10734:151;;10780:29;10796:12;10780:11;;:15;;:29;;;;:::i;:::-;10766:11;:43;;;;10841:32;10860:12;10841:14;;:18;;:32;;;;:::i;:::-;10824:14;:49;;;;10734:151;10919:28;10935:11;10919;;:15;;:28;;;;:::i;:::-;10905:11;:42;;;;10960:24;10999:12;;;;;;;;;;;10960:52;;11059:12;:25;;;11085:11;;;;;;;;;;;11098:4;11104:11;11059:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11184:10;;;;;;;;;;;11179:168;;11275:12;:25;;;11301:12;;;;;;;;;;;11315:4;11321:12;11275:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11179:168;11359:7;;;;8453:2920;:::o;2108:23::-;;;;:::o;1484:51::-;;;;;;;;;;;;;;;;;:::o;776:47::-;;;;;;;;;;;;;;;;;:::o;918:23::-;;;;:::o;5398:462::-;5478:7;5511:1;5502:5;:10;5498:76;;5536:11;:26;5548:13;5536:26;;;;;;;;;;;;;;;;5529:33;;;;5498:76;5597:1;5588:5;:10;5584:76;;5622:11;:26;5634:13;5622:26;;;;;;;;;;;;;;;;5615:33;;;;5584:76;5683:1;5674:5;:10;5670:76;;5708:11;:26;5720:13;5708:26;;;;;;;;;;;;;;;;5701:33;;;;5670:76;5769:1;5760:5;:10;5756:76;;5794:11;:26;5806:13;5794:26;;;;;;;;;;;;;;;;5787:33;;;;5756:76;5851:1;5844:8;;5398:462;;;;;:::o;830:51::-;;;;;;;;;;;;;;;;;:::o;1602:23::-;;;;;;;;;;;;;:::o;3729:117::-;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3825:13:0::1;3811:11;;:27;;;;;;;;;;;;;;;;;;3729:117:::0;:::o;3606:::-;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:13:0::1;3688:11;;:27;;;;;;;;;;;;;;;;;;3606:117:::0;:::o;4595:249::-;4658:7;4678:15;4783:11;:26;4795:13;4783:26;;;;;;;;;;;;;;;;4754:11;:26;4766:13;4754:26;;;;;;;;;;;;;;;;4725:11;:26;4737:13;4725:26;;;;;;;;;;;;;;;;4696:11;:26;4708:13;4696:26;;;;;;;;;;;;;;;;:55;;;;:::i;:::-;:84;;;;:::i;:::-;:113;;;;:::i;:::-;4678:131;;4829:7;4822:14;;;4595:249;;;:::o;1668:101:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1166:23:0:-;;;;;;;;;;;;;:::o;2272:26::-;;;;:::o;1572:23::-;;;;:::o;1048:51::-;;;;;;;;;;;;;;;;;:::o;2349:26::-;;;;:::o;1266:51::-;;;;;;;;;;;;;;;;;:::o;948:23::-;;;;;;;;;;;;;:::o;1036:85:1:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;4098:127:0:-;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4202:15:0::1;4187:12;:30;;;;4098:127:::0;:::o;2003:27::-;;;;;;;;;;;;;:::o;1324:23::-;;;;:::o;2183:29::-;;;;:::o;4852:538::-;4936:7;4969:1;4960:5;:10;4956:94;;4994:44;5029:8;;4994:15;:30;5010:13;4994:30;;;;;;;;;;;;;;;;:34;;:44;;;;:::i;:::-;4987:51;;;;4956:94;5073:1;5064:5;:10;5060:94;;5098:44;5133:8;;5098:15;:30;5114:13;5098:30;;;;;;;;;;;;;;;;:34;;:44;;;;:::i;:::-;5091:51;;;;5060:94;5177:1;5168:5;:10;5164:94;;5202:44;5237:8;;5202:15;:30;5218:13;5202:30;;;;;;;;;;;;;;;;:34;;:44;;;;:::i;:::-;5195:51;;;;5164:94;5281:1;5272:5;:10;5268:94;;5306:44;5341:8;;5306:15;:30;5322:13;5306:30;;;;;;;;;;;;;;;;:34;;:44;;;;:::i;:::-;5299:51;;;;5268:94;5381:1;5374:8;;4852:538;;;;;:::o;1542:23::-;;;;:::o;4231:111::-;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4323:11:0::1;4312:8;:22;;;;4231:111:::0;:::o;1384:23::-;;;;;;;;;;;;;:::o;2484:27::-;;;;:::o;1136:23::-;;;;:::o;3852:117::-;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;3948:13:0::1;3934:11;;:27;;;;;;;;;;;;;;;;;;3852:117:::0;:::o;1106:23::-;;;;:::o;888:::-;;;;:::o;1789:::-;;;;:::o;4467:116::-;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4562:13:0::1;4549:10;;:26;;;;;;;;;;;;;;;;;;4467:116:::0;:::o;1918:198:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2578:22:0:-;;;;;;;;;;;;;:::o;1931:27::-;;;;;;;;;;;;;:::o;5886:2538::-;5958:12;5973:10;5958:25;;6002:20;6025:1;6002:24;;6063:11;;6047:12;;:27;;6039:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;6142:1;6133:5;:10;:24;;;;6156:1;6147:5;:10;6133:24;:38;;;;6170:1;6161:5;:10;6133:38;:52;;;;6184:1;6175:5;:10;6133:52;6125:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;6243:8;;6228:11;:23;;6220:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;6319:8;;6304:11;:23;;6296:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;6393:5;6379:19;;:10;;;;;;;;;;;:19;;;6371:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6467:1;6458:5;:10;6454:395;;6508:4;6493:19;;:11;;;;;;;;;;;:19;;;6485:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;6594:1;6573:11;:17;6585:4;6573:17;;;;;;;;;;;;;;;;:22;6565:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;6712:25;6728:8;;6712:11;:15;;:25;;;;:::i;:::-;6697:40;;6776:15;6752;:21;6768:4;6752:21;;;;;;;;;;;;;;;:39;;;;6826:11;6806;:17;6818:4;6806:17;;;;;;;;;;;;;;;:31;;;;6454:395;6872:1;6863:5;:10;6859:395;;6913:4;6898:19;;:11;;;;;;;;;;;:19;;;6890:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;6999:1;6978:11;:17;6990:4;6978:17;;;;;;;;;;;;;;;;:22;6970:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;7117:25;7133:8;;7117:11;:15;;:25;;;;:::i;:::-;7102:40;;7181:15;7157;:21;7173:4;7157:21;;;;;;;;;;;;;;;:39;;;;7231:11;7211;:17;7223:4;7211:17;;;;;;;;;;;;;;;:31;;;;6859:395;7277:1;7268:5;:10;7264:395;;7318:4;7303:19;;:11;;;;;;;;;;;:19;;;7295:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;7404:1;7383:11;:17;7395:4;7383:17;;;;;;;;;;;;;;;;:22;7375:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;7522:25;7538:8;;7522:11;:15;;:25;;;;:::i;:::-;7507:40;;7586:15;7562;:21;7578:4;7562:21;;;;;;;;;;;;;;;:39;;;;7636:11;7616;:17;7628:4;7616:17;;;;;;;;;;;;;;;:31;;;;7264:395;7682:1;7673:5;:10;7669:395;;7723:4;7708:19;;:11;;;;;;;;;;;:19;;;7700:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;7809:1;7788:11;:17;7800:4;7788:17;;;;;;;;;;;;;;;;:22;7780:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;7927:25;7943:8;;7927:11;:15;;:25;;;;:::i;:::-;7912:40;;7991:15;7967;:21;7983:4;7967:21;;;;;;;;;;;;;;;:39;;;;8041:11;8021;:17;8033:4;8021:17;;;;;;;;;;;;;;;:31;;;;7669:395;8093:32;8112:12;8093:14;;:18;;:32;;;;:::i;:::-;8076:14;:49;;;;8150:28;8166:11;8150;;:15;;:28;;;;:::i;:::-;8136:11;:42;;;;8191:24;8230:12;;;;;;;;;;;8191:52;;8290:12;:25;;;8316:4;8322:11;;;;;;;;;;;8335;8290:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8410:7;;;5886:2538;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;2741::6:-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;3108:::-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:90::-;1997:7;2040:5;2033:13;2026:21;2015:32;;1963:90;;;:::o;2059:116::-;2129:21;2144:5;2129:21;:::i;:::-;2122:5;2119:32;2109:60;;2165:1;2162;2155:12;2109:60;2059:116;:::o;2181:133::-;2224:5;2262:6;2249:20;2240:29;;2278:30;2302:5;2278:30;:::i;:::-;2181:133;;;;:::o;2320:323::-;2376:6;2425:2;2413:9;2404:7;2400:23;2396:32;2393:119;;;2431:79;;:::i;:::-;2393:119;2551:1;2576:50;2618:7;2609:6;2598:9;2594:22;2576:50;:::i;:::-;2566:60;;2522:114;2320:323;;;;:::o;2649:122::-;2722:24;2740:5;2722:24;:::i;:::-;2715:5;2712:35;2702:63;;2761:1;2758;2751:12;2702:63;2649:122;:::o;2777:139::-;2823:5;2861:6;2848:20;2839:29;;2877:33;2904:5;2877:33;:::i;:::-;2777:139;;;;:::o;2922:329::-;2981:6;3030:2;3018:9;3009:7;3005:23;3001:32;2998:119;;;3036:79;;:::i;:::-;2998:119;3156:1;3181:53;3226:7;3217:6;3206:9;3202:22;3181:53;:::i;:::-;3171:63;;3127:117;2922:329;;;;:::o;3257:474::-;3325:6;3333;3382:2;3370:9;3361:7;3357:23;3353:32;3350:119;;;3388:79;;:::i;:::-;3350:119;3508:1;3533:53;3578:7;3569:6;3558:9;3554:22;3533:53;:::i;:::-;3523:63;;3479:117;3635:2;3661:53;3706:7;3697:6;3686:9;3682:22;3661:53;:::i;:::-;3651:63;;3606:118;3257:474;;;;;:::o;3737:109::-;3818:21;3833:5;3818:21;:::i;:::-;3813:3;3806:34;3737:109;;:::o;3852:210::-;3939:4;3977:2;3966:9;3962:18;3954:26;;3990:65;4052:1;4041:9;4037:17;4028:6;3990:65;:::i;:::-;3852:210;;;;:::o;4068:474::-;4136:6;4144;4193:2;4181:9;4172:7;4168:23;4164:32;4161:119;;;4199:79;;:::i;:::-;4161:119;4319:1;4344:53;4389:7;4380:6;4369:9;4365:22;4344:53;:::i;:::-;4334:63;;4290:117;4446:2;4472:53;4517:7;4508:6;4497:9;4493:22;4472:53;:::i;:::-;4462:63;;4417:118;4068:474;;;;;:::o;4548:169::-;4632:11;4666:6;4661:3;4654:19;4706:4;4701:3;4697:14;4682:29;;4548:169;;;;:::o;4723:182::-;4863:34;4859:1;4851:6;4847:14;4840:58;4723:182;:::o;4911:366::-;5053:3;5074:67;5138:2;5133:3;5074:67;:::i;:::-;5067:74;;5150:93;5239:3;5150:93;:::i;:::-;5268:2;5263:3;5259:12;5252:19;;4911:366;;;:::o;5283:419::-;5449:4;5487:2;5476:9;5472:18;5464:26;;5536:9;5530:4;5526:20;5522:1;5511:9;5507:17;5500:47;5564:131;5690:4;5564:131;:::i;:::-;5556:139;;5283:419;;;:::o;5708:169::-;5848:21;5844:1;5836:6;5832:14;5825:45;5708:169;:::o;5883:366::-;6025:3;6046:67;6110:2;6105:3;6046:67;:::i;:::-;6039:74;;6122:93;6211:3;6122:93;:::i;:::-;6240:2;6235:3;6231:12;6224:19;;5883:366;;;:::o;6255:419::-;6421:4;6459:2;6448:9;6444:18;6436:26;;6508:9;6502:4;6498:20;6494:1;6483:9;6479:17;6472:47;6536:131;6662:4;6536:131;:::i;:::-;6528:139;;6255:419;;;:::o;6680:228::-;6820:34;6816:1;6808:6;6804:14;6797:58;6889:11;6884:2;6876:6;6872:15;6865:36;6680:228;:::o;6914:366::-;7056:3;7077:67;7141:2;7136:3;7077:67;:::i;:::-;7070:74;;7153:93;7242:3;7153:93;:::i;:::-;7271:2;7266:3;7262:12;7255:19;;6914:366;;;:::o;7286:419::-;7452:4;7490:2;7479:9;7475:18;7467:26;;7539:9;7533:4;7529:20;7525:1;7514:9;7510:17;7503:47;7567:131;7693:4;7567:131;:::i;:::-;7559:139;;7286:419;;;:::o;7711:241::-;7851:34;7847:1;7839:6;7835:14;7828:58;7920:24;7915:2;7907:6;7903:15;7896:49;7711:241;:::o;7958:366::-;8100:3;8121:67;8185:2;8180:3;8121:67;:::i;:::-;8114:74;;8197:93;8286:3;8197:93;:::i;:::-;8315:2;8310:3;8306:12;8299:19;;7958:366;;;:::o;8330:419::-;8496:4;8534:2;8523:9;8519:18;8511:26;;8583:9;8577:4;8573:20;8569:1;8558:9;8554:17;8547:47;8611:131;8737:4;8611:131;:::i;:::-;8603:139;;8330:419;;;:::o;8755:442::-;8904:4;8942:2;8931:9;8927:18;8919:26;;8955:71;9023:1;9012:9;9008:17;8999:6;8955:71;:::i;:::-;9036:72;9104:2;9093:9;9089:18;9080:6;9036:72;:::i;:::-;9118;9186:2;9175:9;9171:18;9162:6;9118:72;:::i;:::-;8755:442;;;;;;:::o;9203:137::-;9257:5;9288:6;9282:13;9273:22;;9304:30;9328:5;9304:30;:::i;:::-;9203:137;;;;:::o;9346:345::-;9413:6;9462:2;9450:9;9441:7;9437:23;9433:32;9430:119;;;9468:79;;:::i;:::-;9430:119;9588:1;9613:61;9666:7;9657:6;9646:9;9642:22;9613:61;:::i;:::-;9603:71;;9559:125;9346:345;;;;:::o;9697:180::-;9745:77;9742:1;9735:88;9842:4;9839:1;9832:15;9866:4;9863:1;9856:15;9883:191;9923:3;9942:20;9960:1;9942:20;:::i;:::-;9937:25;;9976:20;9994:1;9976:20;:::i;:::-;9971:25;;10019:1;10016;10012:9;10005:16;;10040:3;10037:1;10034:10;10031:36;;;10047:18;;:::i;:::-;10031:36;9883:191;;;;:::o;10080:225::-;10220:34;10216:1;10208:6;10204:14;10197:58;10289:8;10284:2;10276:6;10272:15;10265:33;10080:225;:::o;10311:366::-;10453:3;10474:67;10538:2;10533:3;10474:67;:::i;:::-;10467:74;;10550:93;10639:3;10550:93;:::i;:::-;10668:2;10663:3;10659:12;10652:19;;10311:366;;;:::o;10683:419::-;10849:4;10887:2;10876:9;10872:18;10864:26;;10936:9;10930:4;10926:20;10922:1;10911:9;10907:17;10900:47;10964:131;11090:4;10964:131;:::i;:::-;10956:139;;10683:419;;;:::o;11108:222::-;11248:34;11244:1;11236:6;11232:14;11225:58;11317:5;11312:2;11304:6;11300:15;11293:30;11108:222;:::o;11336:366::-;11478:3;11499:67;11563:2;11558:3;11499:67;:::i;:::-;11492:74;;11575:93;11664:3;11575:93;:::i;:::-;11693:2;11688:3;11684:12;11677:19;;11336:366;;;:::o;11708:419::-;11874:4;11912:2;11901:9;11897:18;11889:26;;11961:9;11955:4;11951:20;11947:1;11936:9;11932:17;11925:47;11989:131;12115:4;11989:131;:::i;:::-;11981:139;;11708:419;;;:::o;12133:179::-;12273:31;12269:1;12261:6;12257:14;12250:55;12133:179;:::o;12318:366::-;12460:3;12481:67;12545:2;12540:3;12481:67;:::i;:::-;12474:74;;12557:93;12646:3;12557:93;:::i;:::-;12675:2;12670:3;12666:12;12659:19;;12318:366;;;:::o;12690:419::-;12856:4;12894:2;12883:9;12879:18;12871:26;;12943:9;12937:4;12933:20;12929:1;12918:9;12914:17;12907:47;12971:131;13097:4;12971:131;:::i;:::-;12963:139;;12690:419;;;:::o;13115:178::-;13255:30;13251:1;13243:6;13239:14;13232:54;13115:178;:::o;13299:366::-;13441:3;13462:67;13526:2;13521:3;13462:67;:::i;:::-;13455:74;;13538:93;13627:3;13538:93;:::i;:::-;13656:2;13651:3;13647:12;13640:19;;13299:366;;;:::o;13671:419::-;13837:4;13875:2;13864:9;13860:18;13852:26;;13924:9;13918:4;13914:20;13910:1;13899:9;13895:17;13888:47;13952:131;14078:4;13952:131;:::i;:::-;13944:139;;13671:419;;;:::o;14096:225::-;14236:34;14232:1;14224:6;14220:14;14213:58;14305:8;14300:2;14292:6;14288:15;14281:33;14096:225;:::o;14327:366::-;14469:3;14490:67;14554:2;14549:3;14490:67;:::i;:::-;14483:74;;14566:93;14655:3;14566:93;:::i;:::-;14684:2;14679:3;14675:12;14668:19;;14327:366;;;:::o;14699:419::-;14865:4;14903:2;14892:9;14888:18;14880:26;;14952:9;14946:4;14942:20;14938:1;14927:9;14923:17;14916:47;14980:131;15106:4;14980:131;:::i;:::-;14972:139;;14699:419;;;:::o;15124:220::-;15264:34;15260:1;15252:6;15248:14;15241:58;15333:3;15328:2;15320:6;15316:15;15309:28;15124:220;:::o;15350:366::-;15492:3;15513:67;15577:2;15572:3;15513:67;:::i;:::-;15506:74;;15589:93;15678:3;15589:93;:::i;:::-;15707:2;15702:3;15698:12;15691:19;;15350:366;;;:::o;15722:419::-;15888:4;15926:2;15915:9;15911:18;15903:26;;15975:9;15969:4;15965:20;15961:1;15950:9;15946:17;15939:47;16003:131;16129:4;16003:131;:::i;:::-;15995:139;;15722:419;;;:::o;16147:306::-;16287:34;16283:1;16275:6;16271:14;16264:58;16356:34;16351:2;16343:6;16339:15;16332:59;16425:20;16420:2;16412:6;16408:15;16401:45;16147:306;:::o;16459:366::-;16601:3;16622:67;16686:2;16681:3;16622:67;:::i;:::-;16615:74;;16698:93;16787:3;16698:93;:::i;:::-;16816:2;16811:3;16807:12;16800:19;;16459:366;;;:::o;16831:419::-;16997:4;17035:2;17024:9;17020:18;17012:26;;17084:9;17078:4;17074:20;17070:1;17059:9;17055:17;17048:47;17112:131;17238:4;17112:131;:::i;:::-;17104:139;;16831:419;;;:::o;17256:180::-;17304:77;17301:1;17294:88;17401:4;17398:1;17391:15;17425:4;17422:1;17415:15;17442:185;17482:1;17499:20;17517:1;17499:20;:::i;:::-;17494:25;;17533:20;17551:1;17533:20;:::i;:::-;17528:25;;17572:1;17562:35;;17577:18;;:::i;:::-;17562:35;17619:1;17616;17612:9;17607:14;;17442:185;;;;:::o;17633:194::-;17673:4;17693:20;17711:1;17693:20;:::i;:::-;17688:25;;17727:20;17745:1;17727:20;:::i;:::-;17722:25;;17771:1;17768;17764:9;17756:17;;17795:1;17789:4;17786:11;17783:37;;;17800:18;;:::i;:::-;17783:37;17633:194;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2606600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addStake(uint256,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"box1Balance(address)": "2958",
								"box1DepositDate(address)": "2892",
								"box1Enabled()": "2556",
								"box1Rate()": "2580",
								"box1Time()": "2471",
								"box2Balance(address)": "2849",
								"box2DepositDate(address)": "2957",
								"box2Enabled()": "2555",
								"box2Rate()": "2558",
								"box2Time()": "2514",
								"box3Balance(address)": "2870",
								"box3DepositDate(address)": "2870",
								"box3Enabled()": "2511",
								"box3Rate()": "2492",
								"box3Time()": "2516",
								"box4Balance(address)": "2848",
								"box4DepositDate(address)": "2936",
								"box4Enabled()": "2578",
								"box4Rate()": "2558",
								"box4Time()": "2558",
								"changeBox1Status(bool)": "27065",
								"changeBox2Status(bool)": "27043",
								"changeBox3Status(bool)": "27020",
								"changeBox4Status(bool)": "27022",
								"changeFullUnlock(bool)": "26975",
								"changeMaxRewardDue(uint256)": "24885",
								"changeMaxStake(uint256)": "24906",
								"changeMinStake(uint256)": "24886",
								"fullUnlock()": "2576",
								"maxRewardDue()": "2492",
								"maxStake()": "2469",
								"minStake()": "2537",
								"owner()": "2626",
								"pullStake(uint256)": "infinite",
								"renounceOwnership()": "30430",
								"rewardCount()": "2536",
								"rewardCountDue()": "2514",
								"rewardWallet()": "2640",
								"stakeAmount(address,uint256)": "infinite",
								"stakeUnlockTime(address,uint256)": "infinite",
								"stakeWallet()": "2577",
								"tokenAddress()": "2553",
								"totalStaked()": "2471",
								"transferOwnership(address)": "30792"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 654,
									"end": 11378,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2609,
									"end": 3598,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2609,
									"end": 3598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2609,
									"end": 3598,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2609,
									"end": 3598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2609,
									"end": 3598,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2609,
									"end": 3598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2609,
									"end": 3598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2609,
									"end": 3598,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2609,
									"end": 3598,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2609,
									"end": 3598,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2609,
									"end": 3598,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 940,
									"end": 952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2651,
									"end": 2652,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2634,
									"end": 2648,
									"name": "PUSH",
									"source": 0,
									"value": "1A"
								},
								{
									"begin": 2634,
									"end": 2652,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2634,
									"end": 2652,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2634,
									"end": 2652,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2634,
									"end": 2652,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2677,
									"end": 2678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2663,
									"end": 2674,
									"name": "PUSH",
									"source": 0,
									"value": "1B"
								},
								{
									"begin": 2663,
									"end": 2678,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2663,
									"end": 2678,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2663,
									"end": 2678,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2663,
									"end": 2678,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2703,
									"end": 2704,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2689,
									"end": 2700,
									"name": "PUSH",
									"source": 0,
									"value": "1C"
								},
								{
									"begin": 2689,
									"end": 2704,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2689,
									"end": 2704,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2689,
									"end": 2704,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2689,
									"end": 2704,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2730,
									"end": 2751,
									"name": "PUSH",
									"source": 0,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 2715,
									"end": 2723,
									"name": "PUSH",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2715,
									"end": 2751,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2715,
									"end": 2751,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2715,
									"end": 2751,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2715,
									"end": 2751,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2785,
									"end": 2806,
									"name": "PUSH",
									"source": 0,
									"value": "1B1AE4D6E2EF500000"
								},
								{
									"begin": 2770,
									"end": 2782,
									"name": "PUSH",
									"source": 0,
									"value": "1D"
								},
								{
									"begin": 2770,
									"end": 2806,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2770,
									"end": 2806,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2770,
									"end": 2806,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2770,
									"end": 2806,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2840,
									"end": 2857,
									"name": "PUSH",
									"source": 0,
									"value": "2386F26FC10000"
								},
								{
									"begin": 2825,
									"end": 2833,
									"name": "PUSH",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 2825,
									"end": 2857,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2825,
									"end": 2857,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2825,
									"end": 2857,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2825,
									"end": 2857,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2889,
									"end": 2931,
									"name": "PUSH",
									"source": 0,
									"value": "439AAB0EFAA9A646D4885FD8A245A501CA3D3237"
								},
								{
									"begin": 2875,
									"end": 2886,
									"name": "PUSH",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2875,
									"end": 2886,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2875,
									"end": 2931,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2957,
									"end": 2999,
									"name": "PUSH",
									"source": 0,
									"value": "B2C8CEC19BF5E73B28AA0193FFFF124055413E2E"
								},
								{
									"begin": 2942,
									"end": 2954,
									"name": "PUSH",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2942,
									"end": 2954,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2942,
									"end": 2999,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3025,
									"end": 3067,
									"name": "PUSH",
									"source": 0,
									"value": "5C647208486231BECCABAACF5F2B7358937D3B99"
								},
								{
									"begin": 3010,
									"end": 3022,
									"name": "PUSH",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 3010,
									"end": 3022,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3010,
									"end": 3067,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3091,
									"end": 3096,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3078,
									"end": 3088,
									"name": "PUSH",
									"source": 0,
									"value": "1E"
								},
								{
									"begin": 3078,
									"end": 3088,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3078,
									"end": 3096,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3138,
									"end": 3141,
									"name": "PUSH",
									"source": 0,
									"value": "14D"
								},
								{
									"begin": 3127,
									"end": 3135,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3127,
									"end": 3141,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3127,
									"end": 3141,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3127,
									"end": 3141,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3127,
									"end": 3141,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3163,
									"end": 3169,
									"name": "PUSH",
									"source": 0,
									"value": "93A80"
								},
								{
									"begin": 3152,
									"end": 3160,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3152,
									"end": 3169,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3152,
									"end": 3169,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3152,
									"end": 3169,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3152,
									"end": 3169,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3214,
									"end": 3218,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3200,
									"end": 3211,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3200,
									"end": 3211,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3200,
									"end": 3218,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3260,
									"end": 3262,
									"name": "PUSH",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 3249,
									"end": 3257,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3249,
									"end": 3262,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3249,
									"end": 3262,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3249,
									"end": 3262,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3249,
									"end": 3262,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3284,
									"end": 3291,
									"name": "PUSH",
									"source": 0,
									"value": "127500"
								},
								{
									"begin": 3273,
									"end": 3281,
									"name": "PUSH",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 3273,
									"end": 3291,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3273,
									"end": 3291,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3273,
									"end": 3291,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3273,
									"end": 3291,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3338,
									"end": 3342,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3324,
									"end": 3335,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 3324,
									"end": 3335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3324,
									"end": 3342,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3384,
									"end": 3386,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3373,
									"end": 3381,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 3373,
									"end": 3386,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3373,
									"end": 3386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3373,
									"end": 3386,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3373,
									"end": 3386,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3408,
									"end": 3415,
									"name": "PUSH",
									"source": 0,
									"value": "24EA00"
								},
								{
									"begin": 3397,
									"end": 3405,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 3397,
									"end": 3415,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3397,
									"end": 3415,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3397,
									"end": 3415,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3397,
									"end": 3415,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3448,
									"end": 3459,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 3448,
									"end": 3459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3448,
									"end": 3466,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3508,
									"end": 3510,
									"name": "PUSH",
									"source": 0,
									"value": "1A"
								},
								{
									"begin": 3497,
									"end": 3505,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 3497,
									"end": 3510,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3497,
									"end": 3510,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3497,
									"end": 3510,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3497,
									"end": 3510,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3532,
									"end": 3539,
									"name": "PUSH",
									"source": 0,
									"value": "24EA00"
								},
								{
									"begin": 3521,
									"end": 3529,
									"name": "PUSH",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 3521,
									"end": 3539,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3521,
									"end": 3539,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3521,
									"end": 3539,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3521,
									"end": 3539,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3586,
									"end": 3590,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3572,
									"end": 3583,
									"name": "PUSH",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3572,
									"end": 3583,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3572,
									"end": 3590,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 654,
									"end": 11378,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203ab1a6982f7f0fca90b0d859f0345f35610fca850dc8c02f47a1bb86b722961c64736f6c634300081e0033",
									".code": [
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "817B1CD2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "D0BCC009"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "EA1B28E0"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "EA1B28E0"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "F1CDDD55"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "F908DC13"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "FB75B2C7"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "FD2B5202"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "D0BCC009"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "D19B090E"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "D47C56E5"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "D5C41D69"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "D7D4918E"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "E7DE2CEB"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "9D76EA58"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "9D76EA58"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "B39DC996"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "BBA4FEFD"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "BEF7D12E"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "C3630EDB"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "CD5692EE"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "817B1CD2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "89B0040A"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "8A170AC1"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "94387289"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "4B0C10D8"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "73DEC718"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "79085425"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "798CBE5E"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "7B3E920C"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "4B0C10D8"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "4B5EFFC2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "4F51D090"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "5CD5A159"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "5F75BCEA"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "6CBDE5CF"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "24EBD9D2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "24EBD9D2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "2E5F89EF"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "35E63055"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "375B3C0A"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "38DC97FB"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "4893AFC1"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "58DF0E8"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "F9154B5"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "1D95985B"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "1D95D52F"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "23DCDB89"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 11378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 994,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 994,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 994,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1858,
											"end": 1884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1858,
											"end": 1884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1354,
											"end": 1377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1354,
											"end": 1377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3975,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3975,
											"end": 4092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4348,
											"end": 4459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4348,
											"end": 4459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1430,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1430,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1430,
											"end": 1477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1212,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1212,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1212,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8453,
											"end": 11373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8453,
											"end": 11373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2108,
											"end": 2131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2108,
											"end": 2131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1484,
											"end": 1535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1484,
											"end": 1535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1484,
											"end": 1535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 776,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 776,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 776,
											"end": 823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 918,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 918,
											"end": 941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5398,
											"end": 5860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5398,
											"end": 5860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5398,
											"end": 5860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 830,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 830,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 830,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1602,
											"end": 1625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1602,
											"end": 1625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3729,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3729,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3606,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3606,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4595,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4595,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4595,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1166,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1166,
											"end": 1189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2272,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2272,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1572,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1572,
											"end": 1595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1048,
											"end": 1099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1048,
											"end": 1099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1048,
											"end": 1099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2349,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2349,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1266,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1266,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1266,
											"end": 1317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 948,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 948,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4098,
											"end": 4225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4098,
											"end": 4225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2003,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2003,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1324,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1324,
											"end": 1347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2183,
											"end": 2212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2183,
											"end": 2212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4852,
											"end": 5390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4852,
											"end": 5390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4852,
											"end": 5390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1542,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1542,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 4231,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4231,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1384,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1384,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2484,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2484,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1136,
											"end": 1159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1136,
											"end": 1159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3852,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3852,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1106,
											"end": 1129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1106,
											"end": 1129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 888,
											"end": 911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 888,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 888,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 888,
											"end": 911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 888,
											"end": 911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 888,
											"end": 911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 888,
											"end": 911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 911,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1789,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1789,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4467,
											"end": 4583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4467,
											"end": 4583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2578,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2578,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1931,
											"end": 1958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1931,
											"end": 1958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 5886,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5886,
											"end": 8424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 994,
											"end": 1041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1354,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4071,
											"end": 4084,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 4057,
											"end": 4068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4057,
											"end": 4084,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4440,
											"end": 4451,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4429,
											"end": 4437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4429,
											"end": 4451,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4429,
											"end": 4451,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4429,
											"end": 4451,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4429,
											"end": 4451,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1430,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1212,
											"end": 1259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8520,
											"end": 8530,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8505,
											"end": 8530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8572,
											"end": 8573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8549,
											"end": 8573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8549,
											"end": 8573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8589,
											"end": 8608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8611,
											"end": 8612,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8589,
											"end": 8612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8589,
											"end": 8612,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8643,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8633,
											"end": 8638,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8643,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 8633,
											"end": 8657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8656,
											"end": 8657,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8647,
											"end": 8652,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8647,
											"end": 8657,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8657,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 8633,
											"end": 8657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8671,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 8633,
											"end": 8671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8670,
											"end": 8671,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8661,
											"end": 8666,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8661,
											"end": 8671,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8671,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 8633,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 8633,
											"end": 8685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8684,
											"end": 8685,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8675,
											"end": 8680,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8633,
											"end": 8685,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 8633,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 8625,
											"end": 8709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 8625,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8735,
											"end": 8736,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8726,
											"end": 8731,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8736,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8722,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 8722,
											"end": 9214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8781,
											"end": 8782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8761,
											"end": 8772,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8773,
											"end": 8777,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8778,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8761,
											"end": 8782,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 8753,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 8753,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8850,
											"end": 8860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8845,
											"end": 9018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8845,
											"end": 9018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8928,
											"end": 8943,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8924,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8915,
											"end": 8923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8915,
											"end": 8923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8904,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8905,
											"end": 8909,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8910,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 8889,
											"end": 8914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8924,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8889,
											"end": 8924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8924,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 8889,
											"end": 8924,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8943,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8889,
											"end": 8943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 8881,
											"end": 9002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 8881,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8845,
											"end": 9018,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 8845,
											"end": 9018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 9071,
											"end": 9079,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9071,
											"end": 9079,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9060,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9061,
											"end": 9065,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9066,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 9049,
											"end": 9070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9049,
											"end": 9080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9080,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 9049,
											"end": 9080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9034,
											"end": 9080,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9120,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9121,
											"end": 9125,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9109,
											"end": 9126,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9095,
											"end": 9126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9095,
											"end": 9126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9161,
											"end": 9162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9141,
											"end": 9152,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9153,
											"end": 9157,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9141,
											"end": 9158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9162,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9141,
											"end": 9162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9201,
											"end": 9202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9177,
											"end": 9192,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9193,
											"end": 9197,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9177,
											"end": 9198,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9202,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9177,
											"end": 9202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8722,
											"end": 9214,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 8722,
											"end": 9214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9237,
											"end": 9238,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9228,
											"end": 9233,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9228,
											"end": 9238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 9224,
											"end": 9716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9283,
											"end": 9284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9263,
											"end": 9274,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9279,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9263,
											"end": 9284,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9255,
											"end": 9330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 9255,
											"end": 9330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9362,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 9352,
											"end": 9362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9352,
											"end": 9362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9362,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9362,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9352,
											"end": 9362,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9362,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9352,
											"end": 9362,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9352,
											"end": 9362,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 9347,
											"end": 9520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9430,
											"end": 9445,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 9417,
											"end": 9425,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9417,
											"end": 9425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9406,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9407,
											"end": 9411,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 9391,
											"end": 9416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9426,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9391,
											"end": 9426,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9426,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 9391,
											"end": 9426,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9445,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9391,
											"end": 9445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 9383,
											"end": 9504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 9383,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9347,
											"end": 9520,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 9347,
											"end": 9520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 9573,
											"end": 9581,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9573,
											"end": 9581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9562,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9563,
											"end": 9567,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9568,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 9551,
											"end": 9572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9582,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9582,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9551,
											"end": 9582,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9582,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 9551,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9582,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9622,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9623,
											"end": 9627,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9597,
											"end": 9628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9663,
											"end": 9664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9643,
											"end": 9654,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9655,
											"end": 9659,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9643,
											"end": 9660,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9664,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9664,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9643,
											"end": 9664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9703,
											"end": 9704,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9694,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9695,
											"end": 9699,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9700,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9679,
											"end": 9704,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9224,
											"end": 9716,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 9224,
											"end": 9716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9739,
											"end": 9740,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9730,
											"end": 9735,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9730,
											"end": 9740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 9726,
											"end": 10218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9785,
											"end": 9786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9776,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9781,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9765,
											"end": 9786,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9757,
											"end": 9832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 9757,
											"end": 9832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 9854,
											"end": 9864,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9849,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 9849,
											"end": 10022,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 9947,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 9919,
											"end": 9927,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 9919,
											"end": 9927,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9908,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9909,
											"end": 9913,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 9893,
											"end": 9918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9928,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9928,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9928,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9893,
											"end": 9928,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9928,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 9893,
											"end": 9928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9947,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9893,
											"end": 9947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 9885,
											"end": 10006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 9885,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9849,
											"end": 10022,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 9849,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 10075,
											"end": 10083,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 10075,
											"end": 10083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10064,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10065,
											"end": 10069,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10070,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 10053,
											"end": 10074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10053,
											"end": 10084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10053,
											"end": 10084,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 10053,
											"end": 10084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10038,
											"end": 10084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10038,
											"end": 10084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10125,
											"end": 10129,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10166,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10145,
											"end": 10156,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10157,
											"end": 10161,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10145,
											"end": 10162,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10145,
											"end": 10166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10205,
											"end": 10206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10181,
											"end": 10196,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10197,
											"end": 10201,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10181,
											"end": 10202,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10206,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10181,
											"end": 10206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9726,
											"end": 10218,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 9726,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10243,
											"end": 10244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10234,
											"end": 10239,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10234,
											"end": 10244,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 10230,
											"end": 10722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10289,
											"end": 10290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10269,
											"end": 10280,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10281,
											"end": 10285,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10290,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 10261,
											"end": 10336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 10261,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10358,
											"end": 10368,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 10358,
											"end": 10368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10358,
											"end": 10368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10358,
											"end": 10368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10358,
											"end": 10368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10358,
											"end": 10368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10358,
											"end": 10368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10358,
											"end": 10368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10358,
											"end": 10368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10358,
											"end": 10368,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10358,
											"end": 10368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 10353,
											"end": 10526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10436,
											"end": 10451,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 10423,
											"end": 10431,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 10423,
											"end": 10431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10412,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10413,
											"end": 10417,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10418,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 10397,
											"end": 10422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10432,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10397,
											"end": 10432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10432,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 10397,
											"end": 10432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10451,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10397,
											"end": 10451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 10389,
											"end": 10510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 10389,
											"end": 10510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10353,
											"end": 10526,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 10353,
											"end": 10526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 10579,
											"end": 10587,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 10579,
											"end": 10587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10568,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10569,
											"end": 10573,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 10557,
											"end": 10578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10557,
											"end": 10588,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10557,
											"end": 10588,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 10557,
											"end": 10588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10542,
											"end": 10588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10628,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10629,
											"end": 10633,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10634,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10603,
											"end": 10634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10669,
											"end": 10670,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10649,
											"end": 10660,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10661,
											"end": 10665,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10649,
											"end": 10666,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10670,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10670,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10649,
											"end": 10670,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10709,
											"end": 10710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10685,
											"end": 10700,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10701,
											"end": 10705,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10685,
											"end": 10706,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10710,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10710,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10685,
											"end": 10710,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10722,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 10230,
											"end": 10722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 10739,
											"end": 10749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 10734,
											"end": 10885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 10796,
											"end": 10808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10791,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 10780,
											"end": 10791,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 10780,
											"end": 10795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 10780,
											"end": 10809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10766,
											"end": 10777,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 10766,
											"end": 10809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10766,
											"end": 10809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10766,
											"end": 10809,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10766,
											"end": 10809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 10860,
											"end": 10872,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10855,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 10841,
											"end": 10855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 10841,
											"end": 10859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10873,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10841,
											"end": 10873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 10873,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 10841,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10824,
											"end": 10838,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 10824,
											"end": 10873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10824,
											"end": 10873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10824,
											"end": 10873,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10824,
											"end": 10873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10734,
											"end": 10885,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 10734,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 10935,
											"end": 10946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10930,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 10919,
											"end": 10930,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 10919,
											"end": 10934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10919,
											"end": 10947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10919,
											"end": 10947,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 10919,
											"end": 10947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10905,
											"end": 10916,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 10905,
											"end": 10947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10905,
											"end": 10947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10905,
											"end": 10947,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10905,
											"end": 10947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10960,
											"end": 10984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10999,
											"end": 11011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10960,
											"end": 11012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10960,
											"end": 11012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11059,
											"end": 11084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11084,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11085,
											"end": 11096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11098,
											"end": 11102,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11104,
											"end": 11115,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 11059,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 11059,
											"end": 11116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11059,
											"end": 11116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 11184,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11184,
											"end": 11194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11184,
											"end": 11194,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11194,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11184,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 11184,
											"end": 11194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 11179,
											"end": 11347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11300,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11275,
											"end": 11300,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11300,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11301,
											"end": 11313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11315,
											"end": 11319,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11321,
											"end": 11333,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 11275,
											"end": 11334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 11275,
											"end": 11334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11275,
											"end": 11334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11179,
											"end": 11347,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 11179,
											"end": 11347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11359,
											"end": 11366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8453,
											"end": 11373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1484,
											"end": 1535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 776,
											"end": 823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 918,
											"end": 941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 918,
											"end": 941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5485,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5512,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5502,
											"end": 5507,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5502,
											"end": 5512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 5498,
											"end": 5574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5547,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5561,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 5529,
											"end": 5562,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5498,
											"end": 5574,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 5498,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5597,
											"end": 5598,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5588,
											"end": 5593,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5588,
											"end": 5598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5584,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 5584,
											"end": 5660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5647,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5622,
											"end": 5648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5615,
											"end": 5648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5615,
											"end": 5648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5615,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 5615,
											"end": 5648,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5584,
											"end": 5660,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 5584,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5683,
											"end": 5684,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5674,
											"end": 5679,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5674,
											"end": 5684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 5670,
											"end": 5746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5719,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5733,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5708,
											"end": 5734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5734,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5734,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 5701,
											"end": 5734,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5670,
											"end": 5746,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 5670,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5769,
											"end": 5770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5760,
											"end": 5765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5760,
											"end": 5770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 5756,
											"end": 5832,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5805,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5806,
											"end": 5819,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5794,
											"end": 5820,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5787,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 5787,
											"end": 5820,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5756,
											"end": 5832,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 5756,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5851,
											"end": 5852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5844,
											"end": 5852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 830,
											"end": 881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1602,
											"end": 1625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3838,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 3811,
											"end": 3822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3811,
											"end": 3838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3702,
											"end": 3715,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3688,
											"end": 3699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3715,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4658,
											"end": 4665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4794,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4808,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4809,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4765,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4766,
											"end": 4779,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4780,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4736,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4750,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4725,
											"end": 4751,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4707,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4721,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 4696,
											"end": 4751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 4696,
											"end": 4751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4751,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 4696,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 4696,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 4696,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 4696,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 4696,
											"end": 4809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 4696,
											"end": 4809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4696,
											"end": 4809,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 4696,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4678,
											"end": 4809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4829,
											"end": 4836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4822,
											"end": 4836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4595,
											"end": 4844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 1759,
											"end": 1760,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 1732,
											"end": 1762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 1732,
											"end": 1762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1166,
											"end": 1189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1048,
											"end": 1099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2349,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 948,
											"end": 971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 948,
											"end": 971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4217,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4187,
											"end": 4199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4187,
											"end": 4217,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4098,
											"end": 4225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2003,
											"end": 2030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1324,
											"end": 1347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2183,
											"end": 2212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4936,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 4970,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4960,
											"end": 4965,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4960,
											"end": 4970,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4956,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 4956,
											"end": 5050,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 5029,
											"end": 5037,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5029,
											"end": 5037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5009,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5010,
											"end": 5023,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 4994,
											"end": 5028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4994,
											"end": 5038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4994,
											"end": 5038,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 4994,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4987,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 4987,
											"end": 5038,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4956,
											"end": 5050,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 4956,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5073,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5064,
											"end": 5069,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5064,
											"end": 5074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 5060,
											"end": 5154,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 5133,
											"end": 5141,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5133,
											"end": 5141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5127,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5128,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 5098,
											"end": 5132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5098,
											"end": 5142,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 5098,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5091,
											"end": 5142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5091,
											"end": 5142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5091,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 5091,
											"end": 5142,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5154,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 5060,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5178,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5168,
											"end": 5173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5168,
											"end": 5178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 5164,
											"end": 5258,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 5237,
											"end": 5245,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 5237,
											"end": 5245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5217,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5231,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5232,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 5202,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5195,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 5195,
											"end": 5246,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5164,
											"end": 5258,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 5164,
											"end": 5258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5281,
											"end": 5282,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5272,
											"end": 5277,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5272,
											"end": 5282,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 5268,
											"end": 5362,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 5341,
											"end": 5349,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5341,
											"end": 5349,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5321,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5335,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 5306,
											"end": 5340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5350,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5306,
											"end": 5350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5306,
											"end": 5350,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 5306,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5299,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 5299,
											"end": 5350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5268,
											"end": 5362,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 5268,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5381,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4852,
											"end": 5390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4334,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4312,
											"end": 4334,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4334,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4334,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4312,
											"end": 4334,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4231,
											"end": 4342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1384,
											"end": 1407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1136,
											"end": 1159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3948,
											"end": 3961,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 3934,
											"end": 3945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3934,
											"end": 3961,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 888,
											"end": 911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 888,
											"end": 911,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 888,
											"end": 911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1789,
											"end": 1812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4575,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 4549,
											"end": 4559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4549,
											"end": 4575,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4467,
											"end": 4583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1259,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1248,
											"end": 1255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2014,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 1998,
											"end": 2071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 1998,
											"end": 2071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2100,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2081,
											"end": 2109,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 2081,
											"end": 2109,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2578,
											"end": 2600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1931,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5958,
											"end": 5970,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 5983,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5958,
											"end": 5983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5958,
											"end": 5983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6002,
											"end": 6022,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6002,
											"end": 6026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6002,
											"end": 6026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6063,
											"end": 6074,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 6063,
											"end": 6074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6059,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 6047,
											"end": 6059,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6074,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6047,
											"end": 6074,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 6039,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 6039,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6142,
											"end": 6143,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6133,
											"end": 6138,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6143,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 6133,
											"end": 6157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6156,
											"end": 6157,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6147,
											"end": 6152,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6147,
											"end": 6157,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6157,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 6133,
											"end": 6157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6171,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 6133,
											"end": 6171,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6170,
											"end": 6171,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6161,
											"end": 6166,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6161,
											"end": 6171,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6171,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 6133,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 6133,
											"end": 6185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6184,
											"end": 6185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6175,
											"end": 6180,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6185,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6185,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 6133,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 6125,
											"end": 6209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 6125,
											"end": 6209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6251,
											"name": "PUSH",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6243,
											"end": 6251,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6228,
											"end": 6239,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6228,
											"end": 6251,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6228,
											"end": 6251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 6220,
											"end": 6285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 6220,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6319,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6319,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6315,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6327,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6327,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 6296,
											"end": 6360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 6296,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6393,
											"end": 6398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6379,
											"end": 6398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6389,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 6379,
											"end": 6389,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6379,
											"end": 6389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6389,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6389,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6379,
											"end": 6389,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6389,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6389,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6389,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6379,
											"end": 6389,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6379,
											"end": 6398,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 6371,
											"end": 6441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 6371,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6467,
											"end": 6468,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6458,
											"end": 6463,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6458,
											"end": 6468,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6454,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 6454,
											"end": 6849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6508,
											"end": 6512,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6493,
											"end": 6504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6493,
											"end": 6512,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 6485,
											"end": 6550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 6485,
											"end": 6550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6584,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6589,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6573,
											"end": 6595,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 6565,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 6565,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 6728,
											"end": 6736,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6728,
											"end": 6736,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6723,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 6712,
											"end": 6727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6712,
											"end": 6737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6737,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 6712,
											"end": 6737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6697,
											"end": 6737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6776,
											"end": 6791,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6767,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6772,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6752,
											"end": 6773,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6791,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6752,
											"end": 6791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6817,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6818,
											"end": 6822,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6837,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6454,
											"end": 6849,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 6454,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6872,
											"end": 6873,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6863,
											"end": 6868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6863,
											"end": 6873,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6859,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 6859,
											"end": 7254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6913,
											"end": 6917,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6898,
											"end": 6917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6909,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 6898,
											"end": 6909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6898,
											"end": 6909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6898,
											"end": 6909,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6909,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6909,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6898,
											"end": 6909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6917,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 6890,
											"end": 6955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "tag",
											"source": 0,
											"value": "387"
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 6890,
											"end": 6955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6999,
											"end": 7000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6990,
											"end": 6994,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6978,
											"end": 7000,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 6970,
											"end": 7087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 6970,
											"end": 7087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7133,
											"end": 7141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7128,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7117,
											"end": 7132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7142,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7117,
											"end": 7142,
											"name": "tag",
											"source": 0,
											"value": "390"
										},
										{
											"begin": 7117,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7102,
											"end": 7142,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7181,
											"end": 7196,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7172,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7177,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7196,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7196,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7196,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7157,
											"end": 7196,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7231,
											"end": 7242,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7222,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7223,
											"end": 7227,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7211,
											"end": 7228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7242,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7211,
											"end": 7242,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6859,
											"end": 7254,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 6859,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7277,
											"end": 7278,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7268,
											"end": 7273,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7278,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 7264,
											"end": 7659,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7318,
											"end": 7322,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7303,
											"end": 7322,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7322,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7314,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 7303,
											"end": 7314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7314,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7314,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7303,
											"end": 7314,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7314,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7314,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7314,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7303,
											"end": 7314,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7322,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7322,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7303,
											"end": 7322,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 7295,
											"end": 7360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 7295,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7404,
											"end": 7405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7383,
											"end": 7394,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7395,
											"end": 7399,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7383,
											"end": 7405,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 7375,
											"end": 7492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 7375,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 7538,
											"end": 7546,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 7538,
											"end": 7546,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7533,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7522,
											"end": 7537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7547,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7522,
											"end": 7547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7522,
											"end": 7547,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 7522,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7507,
											"end": 7547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7507,
											"end": 7547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7601,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7577,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7582,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7583,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7601,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7601,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7601,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7562,
											"end": 7601,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7647,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7627,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7632,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7616,
											"end": 7633,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7647,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7616,
											"end": 7647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7264,
											"end": 7659,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 7264,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7682,
											"end": 7683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7673,
											"end": 7678,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7673,
											"end": 7683,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 7669,
											"end": 8064,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7723,
											"end": 7727,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7708,
											"end": 7727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7719,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7708,
											"end": 7719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7719,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7719,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7708,
											"end": 7719,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7719,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7719,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7708,
											"end": 7719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7727,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7727,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "380"
										},
										{
											"begin": 7700,
											"end": 7765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 7700,
											"end": 7765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7809,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7788,
											"end": 7799,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7800,
											"end": 7804,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7788,
											"end": 7810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 7780,
											"end": 7897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 7780,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 7943,
											"end": 7951,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7943,
											"end": 7951,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7938,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 7927,
											"end": 7942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7952,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7927,
											"end": 7952,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7952,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 7927,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7912,
											"end": 7952,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7912,
											"end": 7952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8006,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 7982,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7983,
											"end": 7987,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 7988,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 8006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 8006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 8006,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7967,
											"end": 8006,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8052,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8032,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8021,
											"end": 8038,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8052,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8052,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7669,
											"end": 8064,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 7669,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8107,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 8093,
											"end": 8107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 8093,
											"end": 8111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8093,
											"end": 8125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8093,
											"end": 8125,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 8093,
											"end": 8125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8090,
											"name": "PUSH",
											"source": 0,
											"value": "1A"
										},
										{
											"begin": 8076,
											"end": 8125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8125,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 8166,
											"end": 8177,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8161,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 8150,
											"end": 8161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 8150,
											"end": 8165,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8178,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8150,
											"end": 8178,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8150,
											"end": 8178,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 8150,
											"end": 8178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8147,
											"name": "PUSH",
											"source": 0,
											"value": "1C"
										},
										{
											"begin": 8136,
											"end": 8178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8178,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8136,
											"end": 8178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8191,
											"end": 8215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "PUSH",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8230,
											"end": 8242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8191,
											"end": 8243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8191,
											"end": 8243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8290,
											"end": 8315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8315,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 8316,
											"end": 8320,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8322,
											"end": 8333,
											"name": "PUSH",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8322,
											"end": 8333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8322,
											"end": 8333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8322,
											"end": 8333,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8322,
											"end": 8333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8322,
											"end": 8333,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8322,
											"end": 8333,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8322,
											"end": 8333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8322,
											"end": 8333,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8322,
											"end": 8333,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8322,
											"end": 8333,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8335,
											"end": 8346,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 8290,
											"end": 8347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "tag",
											"source": 0,
											"value": "407"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 8290,
											"end": 8347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8290,
											"end": 8347,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8410,
											"end": 8417,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5886,
											"end": 8424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 2825,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 3920,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 3192,
											"end": 3197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2053,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 1963,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1997,
											"end": 2004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2046,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2047,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2015,
											"end": 2047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2053,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 2053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2175,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 2059,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 2144,
											"end": 2149,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 2129,
											"end": 2150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2129,
											"end": 2150,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 2129,
											"end": 2150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2122,
											"end": 2127,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2151,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 2109,
											"end": 2169,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2167,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2109,
											"end": 2169,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 2109,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2314,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 2181,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2224,
											"end": 2229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2268,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2269,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 2302,
											"end": 2307,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 2278,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2278,
											"end": 2308,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 2278,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2314,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2314,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2643,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 2320,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2382,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2425,
											"end": 2427,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2413,
											"end": 2422,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2404,
											"end": 2411,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2423,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2396,
											"end": 2428,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2512,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 2393,
											"end": 2512,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 2431,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 2431,
											"end": 2510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2510,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 2431,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2393,
											"end": 2512,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 2393,
											"end": 2512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2607,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2594,
											"end": 2616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2576,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 2576,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2576,
											"end": 2626,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 2576,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2566,
											"end": 2626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2566,
											"end": 2626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2643,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2649,
											"end": 2771,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 2649,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 2740,
											"end": 2745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 2722,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 2722,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2720,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2712,
											"end": 2747,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 2702,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2649,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2649,
											"end": 2771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2868,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 2877,
											"end": 2910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 2877,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2916,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2777,
											"end": 2916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 3251,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2922,
											"end": 3251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3032,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3018,
											"end": 3027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3009,
											"end": 3016,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3028,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3001,
											"end": 3033,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 3117,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 2998,
											"end": 3117,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 3036,
											"end": 3115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 3036,
											"end": 3115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3036,
											"end": 3115,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 3036,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2998,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 2998,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3181,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 3226,
											"end": 3233,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3223,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3206,
											"end": 3215,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 3181,
											"end": 3234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3181,
											"end": 3234,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 3181,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3127,
											"end": 3244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 3251,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 3251,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2922,
											"end": 3251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3731,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 3257,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3333,
											"end": 3339,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3384,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3370,
											"end": 3379,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3368,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3380,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3385,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3469,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 3350,
											"end": 3469,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3388,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 3388,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 3388,
											"end": 3467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3388,
											"end": 3467,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 3388,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3350,
											"end": 3469,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 3350,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3509,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 3578,
											"end": 3585,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3569,
											"end": 3575,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 3567,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3533,
											"end": 3586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3533,
											"end": 3586,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 3533,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3586,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3479,
											"end": 3596,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3635,
											"end": 3637,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 3706,
											"end": 3713,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3697,
											"end": 3703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3695,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3682,
											"end": 3704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 3661,
											"end": 3714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3714,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 3661,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3714,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3714,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3724,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3731,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3731,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3731,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3846,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 3737,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 3833,
											"end": 3838,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 3818,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3839,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 3818,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3813,
											"end": 3816,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3840,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 4062,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 3852,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 3943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3977,
											"end": 3979,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3966,
											"end": 3975,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3954,
											"end": 3980,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3954,
											"end": 3980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 4052,
											"end": 4053,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4041,
											"end": 4050,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4054,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4028,
											"end": 4034,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 3990,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4055,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 3990,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 4062,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 4062,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 4062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 4062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3852,
											"end": 4062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4542,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 4068,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4181,
											"end": 4190,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4168,
											"end": 4191,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4164,
											"end": 4196,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4161,
											"end": 4280,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4161,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 4161,
											"end": 4280,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 4199,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 4199,
											"end": 4278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4278,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 4199,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4161,
											"end": 4280,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 4161,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4320,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 4389,
											"end": 4396,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4378,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 4344,
											"end": 4397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4397,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 4344,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4397,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4334,
											"end": 4397,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4290,
											"end": 4407,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4446,
											"end": 4448,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4472,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 4517,
											"end": 4524,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4508,
											"end": 4514,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4506,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4493,
											"end": 4515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 4472,
											"end": 4525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4525,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 4472,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4525,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4417,
											"end": 4535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4542,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4542,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4068,
											"end": 4542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4717,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 4548,
											"end": 4717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4672,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4661,
											"end": 4664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4654,
											"end": 4673,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4701,
											"end": 4704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 4711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4717,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4717,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4723,
											"end": 4905,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 4723,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4863,
											"end": 4897,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 4859,
											"end": 4860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4847,
											"end": 4861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4840,
											"end": 4898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4723,
											"end": 4905,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4723,
											"end": 4905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4911,
											"end": 5277,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 4911,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5056,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5074,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 5138,
											"end": 5140,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5133,
											"end": 5136,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5074,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 5074,
											"end": 5141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5074,
											"end": 5141,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 5074,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5067,
											"end": 5141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5067,
											"end": 5141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5150,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 5239,
											"end": 5242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5150,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 5150,
											"end": 5243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5150,
											"end": 5243,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 5150,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5268,
											"end": 5270,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5263,
											"end": 5266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5259,
											"end": 5271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5271,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5252,
											"end": 5271,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4911,
											"end": 5277,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4911,
											"end": 5277,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4911,
											"end": 5277,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4911,
											"end": 5277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5702,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5283,
											"end": 5702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5449,
											"end": 5453,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5476,
											"end": 5485,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5536,
											"end": 5545,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5534,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5546,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5522,
											"end": 5523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5520,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5524,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5500,
											"end": 5547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 5690,
											"end": 5694,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 5564,
											"end": 5695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5695,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 5564,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5556,
											"end": 5695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5556,
											"end": 5695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5702,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5877,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 5708,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5848,
											"end": 5869,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C69642070726F647563742049442E00000000000000000000000000"
										},
										{
											"begin": 5844,
											"end": 5845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5836,
											"end": 5842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5832,
											"end": 5846,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5825,
											"end": 5870,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5877,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5708,
											"end": 5877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6249,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 5883,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6046,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 6110,
											"end": 6112,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 6105,
											"end": 6108,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 6046,
											"end": 6113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6046,
											"end": 6113,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 6046,
											"end": 6113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6039,
											"end": 6113,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6039,
											"end": 6113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6122,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 6211,
											"end": 6214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6122,
											"end": 6215,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 6122,
											"end": 6215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6122,
											"end": 6215,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 6122,
											"end": 6215,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6240,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6235,
											"end": 6238,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6231,
											"end": 6243,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6224,
											"end": 6243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6249,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6249,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5883,
											"end": 6249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6674,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 6255,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6461,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6448,
											"end": 6457,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6444,
											"end": 6462,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6436,
											"end": 6462,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6436,
											"end": 6462,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6508,
											"end": 6517,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6502,
											"end": 6506,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6498,
											"end": 6518,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6492,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6479,
											"end": 6496,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6472,
											"end": 6519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6536,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 6662,
											"end": 6666,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6536,
											"end": 6667,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 6536,
											"end": 6667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6536,
											"end": 6667,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 6536,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6674,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6255,
											"end": 6674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6680,
											"end": 6908,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 6680,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6820,
											"end": 6854,
											"name": "PUSH",
											"source": 7,
											"value": "546869732077616C6C657420686173206E6F207374616B65206F6E2074686973"
										},
										{
											"begin": 6816,
											"end": 6817,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6814,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6804,
											"end": 6818,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6797,
											"end": 6855,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6900,
											"name": "PUSH",
											"source": 7,
											"value": "2070726F647563742E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6884,
											"end": 6886,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6876,
											"end": 6882,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6872,
											"end": 6887,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6865,
											"end": 6901,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6680,
											"end": 6908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6680,
											"end": 6908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 7280,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 6914,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7056,
											"end": 7059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 7141,
											"end": 7143,
											"name": "PUSH",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 7136,
											"end": 7139,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7077,
											"end": 7144,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 7077,
											"end": 7144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7077,
											"end": 7144,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 7077,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7070,
											"end": 7144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7070,
											"end": 7144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 7242,
											"end": 7245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 7153,
											"end": 7246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7246,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 7153,
											"end": 7246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7271,
											"end": 7273,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7266,
											"end": 7269,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7262,
											"end": 7274,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7255,
											"end": 7274,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7255,
											"end": 7274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 7280,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 7280,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 7280,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 7280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7705,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7286,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7452,
											"end": 7456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7492,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7479,
											"end": 7488,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7475,
											"end": 7493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7539,
											"end": 7548,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7533,
											"end": 7537,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7529,
											"end": 7549,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7525,
											"end": 7526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7514,
											"end": 7523,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7510,
											"end": 7527,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7503,
											"end": 7550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 7693,
											"end": 7697,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 7698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 7567,
											"end": 7698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 7698,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 7567,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7705,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7711,
											"end": 7952,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 7711,
											"end": 7952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7885,
											"name": "PUSH",
											"source": 7,
											"value": "546865207374616B696E6720706572696F6420666F7220746869732070726F64"
										},
										{
											"begin": 7847,
											"end": 7848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7839,
											"end": 7845,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7835,
											"end": 7849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7828,
											"end": 7886,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7920,
											"end": 7944,
											"name": "PUSH",
											"source": 7,
											"value": "75637420686173206E6F7420656E646564207965742E00000000000000000000"
										},
										{
											"begin": 7915,
											"end": 7917,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7903,
											"end": 7918,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7896,
											"end": 7945,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7711,
											"end": 7952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7711,
											"end": 7952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8324,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 7958,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8100,
											"end": 8103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8121,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 8185,
											"end": 8187,
											"name": "PUSH",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 8180,
											"end": 8183,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8121,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 8121,
											"end": 8188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8121,
											"end": 8188,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 8121,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8188,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8114,
											"end": 8188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8197,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 8286,
											"end": 8289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8197,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 8197,
											"end": 8290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8197,
											"end": 8290,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 8197,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8315,
											"end": 8317,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8310,
											"end": 8313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8318,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8324,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8324,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 8324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8330,
											"end": 8749,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 8330,
											"end": 8749,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8496,
											"end": 8500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8534,
											"end": 8536,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8523,
											"end": 8532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8583,
											"end": 8592,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8577,
											"end": 8581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8573,
											"end": 8593,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8569,
											"end": 8570,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8567,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8554,
											"end": 8571,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8547,
											"end": 8594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8611,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 8737,
											"end": 8741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8611,
											"end": 8742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 8611,
											"end": 8742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8611,
											"end": 8742,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 8611,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8603,
											"end": 8742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8603,
											"end": 8742,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8330,
											"end": 8749,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8330,
											"end": 8749,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8330,
											"end": 8749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8330,
											"end": 8749,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 9197,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 8755,
											"end": 9197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8904,
											"end": 8908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8944,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 8931,
											"end": 8940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8927,
											"end": 8945,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 8945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 8945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8955,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 9023,
											"end": 9024,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9021,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9008,
											"end": 9025,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8999,
											"end": 9005,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8955,
											"end": 9026,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 8955,
											"end": 9026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8955,
											"end": 9026,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 8955,
											"end": 9026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9036,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 9104,
											"end": 9106,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9080,
											"end": 9086,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9036,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 9036,
											"end": 9108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9036,
											"end": 9108,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 9036,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 9186,
											"end": 9188,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9175,
											"end": 9184,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9171,
											"end": 9189,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9168,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 9118,
											"end": 9190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9118,
											"end": 9190,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 9118,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 9197,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 9197,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 9197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 9197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 9197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 9197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8755,
											"end": 9197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9203,
											"end": 9340,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 9203,
											"end": 9340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9257,
											"end": 9262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9288,
											"end": 9294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9282,
											"end": 9295,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9295,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9304,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 9328,
											"end": 9333,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9304,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 9304,
											"end": 9334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9304,
											"end": 9334,
											"name": "tag",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 9304,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9203,
											"end": 9340,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9203,
											"end": 9340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9203,
											"end": 9340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9203,
											"end": 9340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9203,
											"end": 9340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9691,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 9346,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9413,
											"end": 9419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9462,
											"end": 9464,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9450,
											"end": 9459,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9441,
											"end": 9448,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9437,
											"end": 9460,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9433,
											"end": 9465,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9549,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 9430,
											"end": 9549,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9468,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 9468,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 9468,
											"end": 9547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9468,
											"end": 9547,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 9468,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9430,
											"end": 9549,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 9430,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9588,
											"end": 9589,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 9666,
											"end": 9673,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9657,
											"end": 9663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9646,
											"end": 9655,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9642,
											"end": 9664,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9613,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 9613,
											"end": 9674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9613,
											"end": 9674,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 9613,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9674,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9603,
											"end": 9674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9691,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9691,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9346,
											"end": 9691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9697,
											"end": 9877,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 9697,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9745,
											"end": 9822,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9742,
											"end": 9743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 9823,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9842,
											"end": 9846,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 9839,
											"end": 9840,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9832,
											"end": 9847,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9866,
											"end": 9870,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9871,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9883,
											"end": 10074,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 9883,
											"end": 10074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9923,
											"end": 9926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9942,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 9960,
											"end": 9961,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9942,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 9942,
											"end": 9962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9942,
											"end": 9962,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 9942,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9937,
											"end": 9962,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9937,
											"end": 9962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9976,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 9994,
											"end": 9995,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9976,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 9976,
											"end": 9996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9976,
											"end": 9996,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 9976,
											"end": 9996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9971,
											"end": 9996,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9971,
											"end": 9996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10019,
											"end": 10020,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10016,
											"end": 10017,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10012,
											"end": 10021,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10005,
											"end": 10021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10005,
											"end": 10021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10040,
											"end": 10043,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10034,
											"end": 10044,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10031,
											"end": 10067,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10031,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 10031,
											"end": 10067,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 10047,
											"end": 10065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "tag",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10031,
											"end": 10067,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 10031,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9883,
											"end": 10074,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9883,
											"end": 10074,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9883,
											"end": 10074,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9883,
											"end": 10074,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9883,
											"end": 10074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10305,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 10080,
											"end": 10305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10220,
											"end": 10254,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10216,
											"end": 10217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10208,
											"end": 10214,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10204,
											"end": 10218,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10197,
											"end": 10255,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10289,
											"end": 10297,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10284,
											"end": 10286,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10276,
											"end": 10282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10272,
											"end": 10287,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10265,
											"end": 10298,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10080,
											"end": 10305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10311,
											"end": 10677,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 10311,
											"end": 10677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10453,
											"end": 10456,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10474,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 10538,
											"end": 10540,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 10533,
											"end": 10536,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10474,
											"end": 10541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10474,
											"end": 10541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10474,
											"end": 10541,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 10474,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10467,
											"end": 10541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10467,
											"end": 10541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 10639,
											"end": 10642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 10550,
											"end": 10643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10550,
											"end": 10643,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 10550,
											"end": 10643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10668,
											"end": 10670,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10663,
											"end": 10666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10659,
											"end": 10671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10652,
											"end": 10671,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10652,
											"end": 10671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10311,
											"end": 10677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10311,
											"end": 10677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10311,
											"end": 10677,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10311,
											"end": 10677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10849,
											"end": 10853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10887,
											"end": 10889,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10876,
											"end": 10885,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10872,
											"end": 10890,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 10890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 10890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10936,
											"end": 10945,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10930,
											"end": 10934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10926,
											"end": 10946,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10922,
											"end": 10923,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10911,
											"end": 10920,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10907,
											"end": 10924,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10900,
											"end": 10947,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 11090,
											"end": 11094,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 10964,
											"end": 11095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 10964,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 11095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10956,
											"end": 11095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 11102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10683,
											"end": 11102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11108,
											"end": 11330,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 11108,
											"end": 11330,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11248,
											"end": 11282,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B696E67206F6E207468697320636F6E74726163742068617320656E64"
										},
										{
											"begin": 11244,
											"end": 11245,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11236,
											"end": 11242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11232,
											"end": 11246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11225,
											"end": 11283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11317,
											"end": 11322,
											"name": "PUSH",
											"source": 7,
											"value": "6564210000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11312,
											"end": 11314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11304,
											"end": 11310,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11300,
											"end": 11315,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11293,
											"end": 11323,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11108,
											"end": 11330,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11108,
											"end": 11330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11336,
											"end": 11702,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11336,
											"end": 11702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11478,
											"end": 11481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11499,
											"end": 11566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 11563,
											"end": 11565,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 11558,
											"end": 11561,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11499,
											"end": 11566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 11499,
											"end": 11566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11499,
											"end": 11566,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 11499,
											"end": 11566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11492,
											"end": 11566,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11492,
											"end": 11566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11575,
											"end": 11668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 11664,
											"end": 11667,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11575,
											"end": 11668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 11575,
											"end": 11668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11575,
											"end": 11668,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 11575,
											"end": 11668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11693,
											"end": 11695,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11688,
											"end": 11691,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11684,
											"end": 11696,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11677,
											"end": 11696,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11336,
											"end": 11702,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11336,
											"end": 11702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11336,
											"end": 11702,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11336,
											"end": 11702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11708,
											"end": 12127,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 11708,
											"end": 12127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11874,
											"end": 11878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11912,
											"end": 11914,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11901,
											"end": 11910,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11897,
											"end": 11915,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11889,
											"end": 11915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11889,
											"end": 11915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11961,
											"end": 11970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11955,
											"end": 11959,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11951,
											"end": 11971,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11947,
											"end": 11948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11936,
											"end": 11945,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11932,
											"end": 11949,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11925,
											"end": 11972,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11989,
											"end": 12120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 12115,
											"end": 12119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11989,
											"end": 12120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11989,
											"end": 12120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11989,
											"end": 12120,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 11989,
											"end": 12120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11981,
											"end": 12120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11981,
											"end": 12120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11708,
											"end": 12127,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11708,
											"end": 12127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11708,
											"end": 12127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11708,
											"end": 12127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12133,
											"end": 12312,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 12133,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12273,
											"end": 12304,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B656420616D6F756E74206D757374206265206869676865722E000000"
										},
										{
											"begin": 12269,
											"end": 12270,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12261,
											"end": 12267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12257,
											"end": 12271,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12250,
											"end": 12305,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12133,
											"end": 12312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12133,
											"end": 12312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12318,
											"end": 12684,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 12318,
											"end": 12684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12460,
											"end": 12463,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12481,
											"end": 12548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 12545,
											"end": 12547,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 12540,
											"end": 12543,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12481,
											"end": 12548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 12481,
											"end": 12548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12481,
											"end": 12548,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 12481,
											"end": 12548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12474,
											"end": 12548,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12474,
											"end": 12548,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12557,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 12646,
											"end": 12649,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12557,
											"end": 12650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 12557,
											"end": 12650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12557,
											"end": 12650,
											"name": "tag",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 12557,
											"end": 12650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12675,
											"end": 12677,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12670,
											"end": 12673,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12666,
											"end": 12678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12659,
											"end": 12678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12659,
											"end": 12678,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12318,
											"end": 12684,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12318,
											"end": 12684,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12318,
											"end": 12684,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12318,
											"end": 12684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12690,
											"end": 13109,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 12690,
											"end": 13109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12856,
											"end": 12860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12894,
											"end": 12896,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12883,
											"end": 12892,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12879,
											"end": 12897,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12871,
											"end": 12897,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12871,
											"end": 12897,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12943,
											"end": 12952,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12937,
											"end": 12941,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12933,
											"end": 12953,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12929,
											"end": 12930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12918,
											"end": 12927,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12914,
											"end": 12931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12907,
											"end": 12954,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12971,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 13097,
											"end": 13101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12971,
											"end": 13102,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 12971,
											"end": 13102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12971,
											"end": 13102,
											"name": "tag",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 12971,
											"end": 13102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 13102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 13102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12690,
											"end": 13109,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12690,
											"end": 13109,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12690,
											"end": 13109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12690,
											"end": 13109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13115,
											"end": 13293,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 13115,
											"end": 13293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13255,
											"end": 13285,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B656420616D6F756E74206D757374206265206C6F7765722E00000000"
										},
										{
											"begin": 13251,
											"end": 13252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13243,
											"end": 13249,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13239,
											"end": 13253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13232,
											"end": 13286,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13115,
											"end": 13293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13115,
											"end": 13293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13665,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 13299,
											"end": 13665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13441,
											"end": 13444,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13462,
											"end": 13529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 13526,
											"end": 13528,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 13521,
											"end": 13524,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13462,
											"end": 13529,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 13462,
											"end": 13529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13462,
											"end": 13529,
											"name": "tag",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 13462,
											"end": 13529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13455,
											"end": 13529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13455,
											"end": 13529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13538,
											"end": 13631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 13627,
											"end": 13630,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13538,
											"end": 13631,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 13538,
											"end": 13631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13538,
											"end": 13631,
											"name": "tag",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 13538,
											"end": 13631,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13656,
											"end": 13658,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13651,
											"end": 13654,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13647,
											"end": 13659,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13640,
											"end": 13659,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13640,
											"end": 13659,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13665,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13299,
											"end": 13665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 14090,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 13671,
											"end": 14090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13837,
											"end": 13841,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13875,
											"end": 13877,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13864,
											"end": 13873,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13860,
											"end": 13878,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13852,
											"end": 13878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13924,
											"end": 13933,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13918,
											"end": 13922,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13914,
											"end": 13934,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13910,
											"end": 13911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13899,
											"end": 13908,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13895,
											"end": 13912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13888,
											"end": 13935,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13952,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 14078,
											"end": 14082,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13952,
											"end": 14083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 13952,
											"end": 14083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13952,
											"end": 14083,
											"name": "tag",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 13952,
											"end": 14083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14083,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 14090,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 14090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 14090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 14090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14096,
											"end": 14321,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 14096,
											"end": 14321,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14236,
											"end": 14270,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B696E672069732063757272656E746C7920696E20756E6C6F636B6564"
										},
										{
											"begin": 14232,
											"end": 14233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14224,
											"end": 14230,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14220,
											"end": 14234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14213,
											"end": 14271,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14305,
											"end": 14313,
											"name": "PUSH",
											"source": 7,
											"value": "206D6F64652E0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14300,
											"end": 14302,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14292,
											"end": 14298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14288,
											"end": 14303,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14281,
											"end": 14314,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14096,
											"end": 14321,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14096,
											"end": 14321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14327,
											"end": 14693,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 14327,
											"end": 14693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14469,
											"end": 14472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14490,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 14554,
											"end": 14556,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 14549,
											"end": 14552,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14490,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 14490,
											"end": 14557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14490,
											"end": 14557,
											"name": "tag",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 14490,
											"end": 14557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14483,
											"end": 14557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14483,
											"end": 14557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14566,
											"end": 14659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 14655,
											"end": 14658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14566,
											"end": 14659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 14566,
											"end": 14659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14566,
											"end": 14659,
											"name": "tag",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 14566,
											"end": 14659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14684,
											"end": 14686,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14679,
											"end": 14682,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14675,
											"end": 14687,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14668,
											"end": 14687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14668,
											"end": 14687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14327,
											"end": 14693,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14327,
											"end": 14693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14327,
											"end": 14693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14327,
											"end": 14693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14699,
											"end": 15118,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 14699,
											"end": 15118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14865,
											"end": 14869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14903,
											"end": 14905,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14892,
											"end": 14901,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14888,
											"end": 14906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14880,
											"end": 14906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14880,
											"end": 14906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14952,
											"end": 14961,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14946,
											"end": 14950,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14942,
											"end": 14962,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14938,
											"end": 14939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14927,
											"end": 14936,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14923,
											"end": 14940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14916,
											"end": 14963,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14980,
											"end": 15111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 15106,
											"end": 15110,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14980,
											"end": 15111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 14980,
											"end": 15111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14980,
											"end": 15111,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 14980,
											"end": 15111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14972,
											"end": 15111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14972,
											"end": 15111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14699,
											"end": 15118,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14699,
											"end": 15118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14699,
											"end": 15118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14699,
											"end": 15118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15124,
											"end": 15344,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 15124,
											"end": 15344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15264,
											"end": 15298,
											"name": "PUSH",
											"source": 7,
											"value": "54686973207374616B696E672070726F647563742069732064697361626C6564"
										},
										{
											"begin": 15260,
											"end": 15261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15252,
											"end": 15258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15248,
											"end": 15262,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15241,
											"end": 15299,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15333,
											"end": 15336,
											"name": "PUSH",
											"source": 7,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15328,
											"end": 15330,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15320,
											"end": 15326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15316,
											"end": 15331,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15309,
											"end": 15337,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15124,
											"end": 15344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15124,
											"end": 15344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15350,
											"end": 15716,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 15350,
											"end": 15716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15492,
											"end": 15495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15513,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 15577,
											"end": 15579,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 15572,
											"end": 15575,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15513,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 15513,
											"end": 15580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15513,
											"end": 15580,
											"name": "tag",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 15513,
											"end": 15580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15506,
											"end": 15580,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15506,
											"end": 15580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15589,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 15678,
											"end": 15681,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15589,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 15589,
											"end": 15682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15589,
											"end": 15682,
											"name": "tag",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 15589,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15707,
											"end": 15709,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15702,
											"end": 15705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15698,
											"end": 15710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15691,
											"end": 15710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15350,
											"end": 15716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15350,
											"end": 15716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15350,
											"end": 15716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15350,
											"end": 15716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15722,
											"end": 16141,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 15722,
											"end": 16141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15888,
											"end": 15892,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15926,
											"end": 15928,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15915,
											"end": 15924,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15911,
											"end": 15929,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15903,
											"end": 15929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15903,
											"end": 15929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15975,
											"end": 15984,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15969,
											"end": 15973,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15965,
											"end": 15985,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15961,
											"end": 15962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15950,
											"end": 15959,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15946,
											"end": 15963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15939,
											"end": 15986,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16003,
											"end": 16134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 16129,
											"end": 16133,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16003,
											"end": 16134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 16003,
											"end": 16134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16003,
											"end": 16134,
											"name": "tag",
											"source": 7,
											"value": "595"
										},
										{
											"begin": 16003,
											"end": 16134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15995,
											"end": 16134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15995,
											"end": 16134,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15722,
											"end": 16141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15722,
											"end": 16141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15722,
											"end": 16141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15722,
											"end": 16141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16147,
											"end": 16453,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 16147,
											"end": 16453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16287,
											"end": 16321,
											"name": "PUSH",
											"source": 7,
											"value": "546869732077616C6C65742068617320616C7265616479207374616B6564206F"
										},
										{
											"begin": 16283,
											"end": 16284,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16275,
											"end": 16281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16271,
											"end": 16285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16264,
											"end": 16322,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16356,
											"end": 16390,
											"name": "PUSH",
											"source": 7,
											"value": "6E20746869732070726F64756374202D207761697420666F7220746865207265"
										},
										{
											"begin": 16351,
											"end": 16353,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16343,
											"end": 16349,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16339,
											"end": 16354,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16332,
											"end": 16391,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16425,
											"end": 16445,
											"name": "PUSH",
											"source": 7,
											"value": "6C6561736520746F2072652D7374616B652E0000000000000000000000000000"
										},
										{
											"begin": 16420,
											"end": 16422,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 16412,
											"end": 16418,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16408,
											"end": 16423,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16401,
											"end": 16446,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16147,
											"end": 16453,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16147,
											"end": 16453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16459,
											"end": 16825,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 16459,
											"end": 16825,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16601,
											"end": 16604,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16622,
											"end": 16689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 16686,
											"end": 16688,
											"name": "PUSH",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 16681,
											"end": 16684,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16622,
											"end": 16689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 16622,
											"end": 16689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16622,
											"end": 16689,
											"name": "tag",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 16622,
											"end": 16689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16615,
											"end": 16689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16615,
											"end": 16689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16698,
											"end": 16791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 16787,
											"end": 16790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16698,
											"end": 16791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 16698,
											"end": 16791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16698,
											"end": 16791,
											"name": "tag",
											"source": 7,
											"value": "599"
										},
										{
											"begin": 16698,
											"end": 16791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16816,
											"end": 16818,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 16811,
											"end": 16814,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16807,
											"end": 16819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16800,
											"end": 16819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16800,
											"end": 16819,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16459,
											"end": 16825,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16459,
											"end": 16825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16459,
											"end": 16825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16459,
											"end": 16825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16831,
											"end": 17250,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 16831,
											"end": 17250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16997,
											"end": 17001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17035,
											"end": 17037,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17024,
											"end": 17033,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17020,
											"end": 17038,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17012,
											"end": 17038,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17012,
											"end": 17038,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17084,
											"end": 17093,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17078,
											"end": 17082,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17074,
											"end": 17094,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17070,
											"end": 17071,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17059,
											"end": 17068,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17055,
											"end": 17072,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17048,
											"end": 17095,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17112,
											"end": 17243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "601"
										},
										{
											"begin": 17238,
											"end": 17242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17112,
											"end": 17243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 17112,
											"end": 17243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17112,
											"end": 17243,
											"name": "tag",
											"source": 7,
											"value": "601"
										},
										{
											"begin": 17112,
											"end": 17243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17104,
											"end": 17243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17104,
											"end": 17243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16831,
											"end": 17250,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16831,
											"end": 17250,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16831,
											"end": 17250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16831,
											"end": 17250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17256,
											"end": 17436,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 17256,
											"end": 17436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17304,
											"end": 17381,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17301,
											"end": 17302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17294,
											"end": 17382,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17401,
											"end": 17405,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17391,
											"end": 17406,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17425,
											"end": 17429,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 17422,
											"end": 17423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17415,
											"end": 17430,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17442,
											"end": 17627,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 17442,
											"end": 17627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17482,
											"end": 17483,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17499,
											"end": 17519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 17517,
											"end": 17518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17499,
											"end": 17519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 17499,
											"end": 17519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17499,
											"end": 17519,
											"name": "tag",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 17499,
											"end": 17519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17494,
											"end": 17519,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17494,
											"end": 17519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17533,
											"end": 17553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "605"
										},
										{
											"begin": 17551,
											"end": 17552,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17533,
											"end": 17553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 17533,
											"end": 17553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17533,
											"end": 17553,
											"name": "tag",
											"source": 7,
											"value": "605"
										},
										{
											"begin": 17533,
											"end": 17553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17528,
											"end": 17553,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17528,
											"end": 17553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17572,
											"end": 17573,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17562,
											"end": 17597,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 17562,
											"end": 17597,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "607"
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 17577,
											"end": 17595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "tag",
											"source": 7,
											"value": "607"
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17562,
											"end": 17597,
											"name": "tag",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 17562,
											"end": 17597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17619,
											"end": 17620,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17616,
											"end": 17617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17612,
											"end": 17621,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 17607,
											"end": 17621,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17607,
											"end": 17621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17442,
											"end": 17627,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17442,
											"end": 17627,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17442,
											"end": 17627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17442,
											"end": 17627,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17442,
											"end": 17627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17633,
											"end": 17827,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 17633,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17673,
											"end": 17677,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17693,
											"end": 17713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 17711,
											"end": 17712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17693,
											"end": 17713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 17693,
											"end": 17713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17693,
											"end": 17713,
											"name": "tag",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 17693,
											"end": 17713,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17688,
											"end": 17713,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17688,
											"end": 17713,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17727,
											"end": 17747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 17745,
											"end": 17746,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17727,
											"end": 17747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 17727,
											"end": 17747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17727,
											"end": 17747,
											"name": "tag",
											"source": 7,
											"value": "610"
										},
										{
											"begin": 17727,
											"end": 17747,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17722,
											"end": 17747,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17722,
											"end": 17747,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17771,
											"end": 17772,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17768,
											"end": 17769,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17764,
											"end": 17773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17756,
											"end": 17773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17756,
											"end": 17773,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17795,
											"end": 17796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17789,
											"end": 17793,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17786,
											"end": 17797,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 17783,
											"end": 17820,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 17783,
											"end": 17820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "611"
										},
										{
											"begin": 17783,
											"end": 17820,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 17800,
											"end": 17818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "612"
										},
										{
											"begin": 17800,
											"end": 17818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 17800,
											"end": 17818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17800,
											"end": 17818,
											"name": "tag",
											"source": 7,
											"value": "612"
										},
										{
											"begin": 17800,
											"end": 17818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17783,
											"end": 17820,
											"name": "tag",
											"source": 7,
											"value": "611"
										},
										{
											"begin": 17783,
											"end": 17820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17633,
											"end": 17827,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17633,
											"end": 17827,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17633,
											"end": 17827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17633,
											"end": 17827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17633,
											"end": 17827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/LandFiStake.sol",
								"contracts/access/Ownable.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/utils/SafeERC20.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addStake(uint256,uint256)": "fd2b5202",
							"balanceOf(address)": "70a08231",
							"box1Balance(address)": "4893afc1",
							"box1DepositDate(address)": "4f51d090",
							"box1Enabled()": "8a170ac1",
							"box1Rate()": "e7de2ceb",
							"box1Time()": "4b0c10d8",
							"box2Balance(address)": "058df0e8",
							"box2DepositDate(address)": "7b3e920c",
							"box2Enabled()": "73dec718",
							"box2Rate()": "d7d4918e",
							"box2Time()": "d47c56e5",
							"box3Balance(address)": "2e5f89ef",
							"box3DepositDate(address)": "89b0040a",
							"box3Enabled()": "d0bcc009",
							"box3Rate()": "b39dc996",
							"box3Time()": "1d95985b",
							"box4Balance(address)": "24ebd9d2",
							"box4DepositDate(address)": "38dc97fb",
							"box4Enabled()": "5cd5a159",
							"box4Rate()": "c3630edb",
							"box4Time()": "798cbe5e",
							"changeBox1Status(bool)": "6cbde5cf",
							"changeBox2Status(bool)": "5f75bcea",
							"changeBox3Status(bool)": "d5c41d69",
							"changeBox4Status(bool)": "1d95d52f",
							"changeFullUnlock(bool)": "f1cddd55",
							"changeMaxRewardDue(uint256)": "94387289",
							"changeMaxStake(uint256)": "cd5692ee",
							"changeMinStake(uint256)": "23dcdb89",
							"fullUnlock()": "f908dc13",
							"maxRewardDue()": "d19b090e",
							"maxStake()": "ea1b28e0",
							"minStake()": "375b3c0a",
							"owner()": "8da5cb5b",
							"pullStake(uint256)": "35e63055",
							"renounceOwnership()": "715018a6",
							"rewardCount()": "79085425",
							"rewardCountDue()": "bba4fefd",
							"rewardWallet()": "fb75b2c7",
							"stakeAmount(address,uint256)": "4b5effc2",
							"stakeUnlockTime(address,uint256)": "bef7d12e",
							"stakeWallet()": "0f9154b5",
							"tokenAddress()": "9d76ea58",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"boxNo\",\"type\":\"uint256\"}],\"name\":\"addStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box1Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box1DepositDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box1Enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box1Rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box1Time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box2Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box2DepositDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box2Enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box2Rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box2Time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box3Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box3DepositDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box3Enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box3Rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box3Time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box4Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"box4DepositDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box4Enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box4Rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"box4Time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newBox1Status\",\"type\":\"bool\"}],\"name\":\"changeBox1Status\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newBox2Status\",\"type\":\"bool\"}],\"name\":\"changeBox2Status\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newBox3Status\",\"type\":\"bool\"}],\"name\":\"changeBox3Status\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newBox4Status\",\"type\":\"bool\"}],\"name\":\"changeBox4Status\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newFullUnlock\",\"type\":\"bool\"}],\"name\":\"changeFullUnlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxRewardDue\",\"type\":\"uint256\"}],\"name\":\"changeMaxRewardDue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxStake\",\"type\":\"uint256\"}],\"name\":\"changeMaxStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMinStake\",\"type\":\"uint256\"}],\"name\":\"changeMinStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fullUnlock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxRewardDue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"boxNo\",\"type\":\"uint256\"}],\"name\":\"pullStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardCountDue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"boxNo\",\"type\":\"uint256\"}],\"name\":\"stakeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"boxNo\",\"type\":\"uint256\"}],\"name\":\"stakeUnlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LandFiStake.sol\":\"LandFiStaking\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LandFiStake.sol\":{\"keccak256\":\"0x1dcfe0df70455d9acbe3d98278a30d4b95fc6158fa633ef4ca0ad944e27fbad8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2d9baf387f8bc6cbe6b2e9e7e0ddb9e700413b6efb87bebdb4a3b38242eeb3ab\",\"dweb:/ipfs/QmY3WVBggKfdpznsYp3gynnKawqcYRu99czxsnSnNPKbcg\"]},\"contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0xe9abc4c299ea6f0f5b357c26c573f26de46eea260d8bc28c950d2dfb92c50178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a2261f75a2930e4cdd0320a1ed0337b0ed4ca32877a7bef6252433a47337205\",\"dweb:/ipfs/Qmaa5mykZdKWHexRbjrrvdVKR1ctU8dymDrmtWGsZ1vWhL\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1019,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 30,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box1Balance",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 34,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box1DepositDate",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 36,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box1Rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 38,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box1Time",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 40,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box1Enabled",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 44,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box2Balance",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 48,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box2DepositDate",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 50,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box2Rate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 52,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box2Time",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 54,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box2Enabled",
								"offset": 0,
								"slot": "10",
								"type": "t_bool"
							},
							{
								"astId": 58,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box3Balance",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 62,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box3DepositDate",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 64,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box3Rate",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 66,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box3Time",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 68,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box3Enabled",
								"offset": 0,
								"slot": "15",
								"type": "t_bool"
							},
							{
								"astId": 72,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box4Balance",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 76,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box4DepositDate",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 78,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box4Rate",
								"offset": 0,
								"slot": "18",
								"type": "t_uint256"
							},
							{
								"astId": 80,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box4Time",
								"offset": 0,
								"slot": "19",
								"type": "t_uint256"
							},
							{
								"astId": 82,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "box4Enabled",
								"offset": 0,
								"slot": "20",
								"type": "t_bool"
							},
							{
								"astId": 87,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "maxStake",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							},
							{
								"astId": 89,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "stakeWallet",
								"offset": 0,
								"slot": "22",
								"type": "t_address"
							},
							{
								"astId": 91,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "rewardWallet",
								"offset": 0,
								"slot": "23",
								"type": "t_address"
							},
							{
								"astId": 93,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "tokenAddress",
								"offset": 0,
								"slot": "24",
								"type": "t_address"
							},
							{
								"astId": 95,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "minStake",
								"offset": 0,
								"slot": "25",
								"type": "t_uint256"
							},
							{
								"astId": 97,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "rewardCountDue",
								"offset": 0,
								"slot": "26",
								"type": "t_uint256"
							},
							{
								"astId": 99,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "rewardCount",
								"offset": 0,
								"slot": "27",
								"type": "t_uint256"
							},
							{
								"astId": 101,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "totalStaked",
								"offset": 0,
								"slot": "28",
								"type": "t_uint256"
							},
							{
								"astId": 103,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "maxRewardDue",
								"offset": 0,
								"slot": "29",
								"type": "t_uint256"
							},
							{
								"astId": 105,
								"contract": "contracts/LandFiStake.sol:LandFiStaking",
								"label": "fullUnlock",
								"offset": 0,
								"slot": "30",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LandFiToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LandFiStake.sol\":532:650  contract LandFiToken {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LandFiStake.sol\":532:650  contract LandFiToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x23b872dd\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/LandFiStake.sol\":560:647  function transferFrom(address from, address to, uint256 value) public returns (bool) {} */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/LandFiStake.sol\":639:643  bool */\n      0x00\n        /* \"contracts/LandFiStake.sol\":560:647  function transferFrom(address from, address to, uint256 value) public returns (bool) {} */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_12:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_14:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_15:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_29\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_14\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_16:\n        /* \"#utility.yul\":641:665   */\n      tag_31\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_15\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_32\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_32:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_17:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_34\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_16\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_18:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_19:\n        /* \"#utility.yul\":997:1021   */\n      tag_37\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_18\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_38:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_20:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_40\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_19\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1816   */\n    tag_6:\n        /* \"#utility.yul\":1274:1280   */\n      0x00\n        /* \"#utility.yul\":1282:1288   */\n      0x00\n        /* \"#utility.yul\":1290:1296   */\n      0x00\n        /* \"#utility.yul\":1339:1341   */\n      0x60\n        /* \"#utility.yul\":1327:1336   */\n      dup5\n        /* \"#utility.yul\":1318:1325   */\n      dup7\n        /* \"#utility.yul\":1314:1337   */\n      sub\n        /* \"#utility.yul\":1310:1342   */\n      slt\n        /* \"#utility.yul\":1307:1426   */\n      iszero\n      tag_42\n      jumpi\n        /* \"#utility.yul\":1345:1424   */\n      tag_43\n      tag_12\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":1307:1426   */\n    tag_42:\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1490:1543   */\n      tag_44\n        /* \"#utility.yul\":1535:1542   */\n      dup7\n        /* \"#utility.yul\":1526:1532   */\n      dup3\n        /* \"#utility.yul\":1515:1524   */\n      dup8\n        /* \"#utility.yul\":1511:1533   */\n      add\n        /* \"#utility.yul\":1490:1543   */\n      tag_17\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1480:1543   */\n      swap4\n      pop\n        /* \"#utility.yul\":1436:1553   */\n      pop\n        /* \"#utility.yul\":1592:1594   */\n      0x20\n        /* \"#utility.yul\":1618:1671   */\n      tag_45\n        /* \"#utility.yul\":1663:1670   */\n      dup7\n        /* \"#utility.yul\":1654:1660   */\n      dup3\n        /* \"#utility.yul\":1643:1652   */\n      dup8\n        /* \"#utility.yul\":1639:1661   */\n      add\n        /* \"#utility.yul\":1618:1671   */\n      tag_17\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1608:1671   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1681   */\n      pop\n        /* \"#utility.yul\":1720:1722   */\n      0x40\n        /* \"#utility.yul\":1746:1799   */\n      tag_46\n        /* \"#utility.yul\":1791:1798   */\n      dup7\n        /* \"#utility.yul\":1782:1788   */\n      dup3\n        /* \"#utility.yul\":1771:1780   */\n      dup8\n        /* \"#utility.yul\":1767:1789   */\n      add\n        /* \"#utility.yul\":1746:1799   */\n      tag_20\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1736:1799   */\n      swap2\n      pop\n        /* \"#utility.yul\":1691:1809   */\n      pop\n        /* \"#utility.yul\":1197:1816   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1822:1912   */\n    tag_21:\n        /* \"#utility.yul\":1856:1863   */\n      0x00\n        /* \"#utility.yul\":1899:1904   */\n      dup2\n        /* \"#utility.yul\":1892:1905   */\n      iszero\n        /* \"#utility.yul\":1885:1906   */\n      iszero\n        /* \"#utility.yul\":1874:1906   */\n      swap1\n      pop\n        /* \"#utility.yul\":1822:1912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1918:2027   */\n    tag_22:\n        /* \"#utility.yul\":1999:2020   */\n      tag_49\n        /* \"#utility.yul\":2014:2019   */\n      dup2\n        /* \"#utility.yul\":1999:2020   */\n      tag_21\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1994:1997   */\n      dup3\n        /* \"#utility.yul\":1987:2021   */\n      mstore\n        /* \"#utility.yul\":1918:2027   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2033:2243   */\n    tag_9:\n        /* \"#utility.yul\":2120:2124   */\n      0x00\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2147:2156   */\n      dup3\n        /* \"#utility.yul\":2143:2161   */\n      add\n        /* \"#utility.yul\":2135:2161   */\n      swap1\n      pop\n        /* \"#utility.yul\":2171:2236   */\n      tag_51\n        /* \"#utility.yul\":2233:2234   */\n      0x00\n        /* \"#utility.yul\":2222:2231   */\n      dup4\n        /* \"#utility.yul\":2218:2235   */\n      add\n        /* \"#utility.yul\":2209:2215   */\n      dup5\n        /* \"#utility.yul\":2171:2236   */\n      tag_22\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":2033:2243   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122045a689abef45bd50e03b2f5e813351401916e62a354b81cf8f14143c706d5dd564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506101af8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c806323b872dd1461002d575b5f5ffd5b610047600480360381019061004291906100f6565b61005d565b6040516100549190610160565b60405180910390f35b5f9392505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61009282610069565b9050919050565b6100a281610088565b81146100ac575f5ffd5b50565b5f813590506100bd81610099565b92915050565b5f819050919050565b6100d5816100c3565b81146100df575f5ffd5b50565b5f813590506100f0816100cc565b92915050565b5f5f5f6060848603121561010d5761010c610065565b5b5f61011a868287016100af565b935050602061012b868287016100af565b925050604061013c868287016100e2565b9150509250925092565b5f8115159050919050565b61015a81610146565b82525050565b5f6020820190506101735f830184610151565b9291505056fea264697066735822122045a689abef45bd50e03b2f5e813351401916e62a354b81cf8f14143c706d5dd564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1AF DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x92 DUP3 PUSH2 0x69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2 DUP2 PUSH2 0x88 JUMP JUMPDEST DUP2 EQ PUSH2 0xAC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD DUP2 PUSH2 0x99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0xC3 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF0 DUP2 PUSH2 0xCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10D JUMPI PUSH2 0x10C PUSH2 0x65 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11A DUP7 DUP3 DUP8 ADD PUSH2 0xAF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12B DUP7 DUP3 DUP8 ADD PUSH2 0xAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13C DUP7 DUP3 DUP8 ADD PUSH2 0xE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A DUP2 PUSH2 0x146 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x173 PUSH0 DUP4 ADD DUP5 PUSH2 0x151 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xA6 DUP10 0xAB 0xEF GASLIMIT 0xBD POP RJUMP 0x3B2F MCOPY DUP2 CALLER MLOAD BLOCKHASH NOT AND DUPN 0x2A CALLDATALOAD 0x4B DUP2 0xCF DUP16 EQ EQ EXTCODECOPY PUSH17 0x6D5DD564736F6C634300081E0033000000 ",
							"sourceMap": "532:118:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@transferFrom_17": {
									"entryPoint": 93,
									"id": 17,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 101,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2246:7",
										"nodeType": "YulBlock",
										"src": "0:2246:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "748:87:7",
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nativeSrc": "758:29:7",
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nativeSrc": "767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nativeSrc": "796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nativeSrc": "796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:7",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:7",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:7",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nativeSrc": "886:32:7",
													"nodeType": "YulBlock",
													"src": "886:32:7",
													"statements": [
														{
															"nativeSrc": "896:16:7",
															"nodeType": "YulAssignment",
															"src": "896:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:7",
																"nodeType": "YulIdentifier",
																"src": "907:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:7",
														"nodeType": "YulTypedName",
														"src": "868:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:7",
														"nodeType": "YulTypedName",
														"src": "878:7:7",
														"type": ""
													}
												],
												"src": "841:77:7"
											},
											{
												"body": {
													"nativeSrc": "967:79:7",
													"nodeType": "YulBlock",
													"src": "967:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:7",
																"nodeType": "YulBlock",
																"src": "1024:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:7"
																			},
																			"nativeSrc": "1026:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:7"
																		},
																		"nativeSrc": "1026:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:7"
																				},
																				"nativeSrc": "997:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:7"
																		},
																		"nativeSrc": "987:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:7"
																},
																"nativeSrc": "980:43:7",
																"nodeType": "YulFunctionCall",
																"src": "980:43:7"
															},
															"nativeSrc": "977:63:7",
															"nodeType": "YulIf",
															"src": "977:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:7",
														"nodeType": "YulTypedName",
														"src": "960:5:7",
														"type": ""
													}
												],
												"src": "924:122:7"
											},
											{
												"body": {
													"nativeSrc": "1104:87:7",
													"nodeType": "YulBlock",
													"src": "1104:87:7",
													"statements": [
														{
															"nativeSrc": "1114:29:7",
															"nodeType": "YulAssignment",
															"src": "1114:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:7"
																},
																"nativeSrc": "1123:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:7"
																},
																"nativeSrc": "1152:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:7"
															},
															"nativeSrc": "1152:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:7",
														"nodeType": "YulTypedName",
														"src": "1082:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:7",
														"nodeType": "YulTypedName",
														"src": "1090:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:7",
														"nodeType": "YulTypedName",
														"src": "1098:5:7",
														"type": ""
													}
												],
												"src": "1052:139:7"
											},
											{
												"body": {
													"nativeSrc": "1297:519:7",
													"nodeType": "YulBlock",
													"src": "1297:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1343:83:7",
																"nodeType": "YulBlock",
																"src": "1343:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1345:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1345:77:7"
																			},
																			"nativeSrc": "1345:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1345:79:7"
																		},
																		"nativeSrc": "1345:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1345:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1318:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1318:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1327:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1327:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1314:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:7"
																		},
																		"nativeSrc": "1314:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1314:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1339:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1339:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1310:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1310:3:7"
																},
																"nativeSrc": "1310:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1310:32:7"
															},
															"nativeSrc": "1307:119:7",
															"nodeType": "YulIf",
															"src": "1307:119:7"
														},
														{
															"nativeSrc": "1436:117:7",
															"nodeType": "YulBlock",
															"src": "1436:117:7",
															"statements": [
																{
																	"nativeSrc": "1451:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1451:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1465:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1465:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1455:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1455:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1480:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1480:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1515:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1515:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1526:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1526:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1511:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1511:3:7"
																				},
																				"nativeSrc": "1511:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1511:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1535:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1490:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1490:20:7"
																		},
																		"nativeSrc": "1490:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1490:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1480:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1480:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1563:118:7",
															"nodeType": "YulBlock",
															"src": "1563:118:7",
															"statements": [
																{
																	"nativeSrc": "1578:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1578:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1592:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1582:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1582:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1608:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1608:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1643:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1643:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1654:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1654:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1639:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:7"
																				},
																				"nativeSrc": "1639:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1639:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1663:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1663:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1618:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1618:20:7"
																		},
																		"nativeSrc": "1618:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1618:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1608:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1608:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1691:118:7",
															"nodeType": "YulBlock",
															"src": "1691:118:7",
															"statements": [
																{
																	"nativeSrc": "1706:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1720:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1710:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1736:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1736:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1771:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1771:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1782:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1782:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1767:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1767:3:7"
																				},
																				"nativeSrc": "1767:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1767:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1791:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1791:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1746:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1746:20:7"
																		},
																		"nativeSrc": "1746:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1746:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1736:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1736:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1197:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1251:9:7",
														"nodeType": "YulTypedName",
														"src": "1251:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1262:7:7",
														"nodeType": "YulTypedName",
														"src": "1262:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1274:6:7",
														"nodeType": "YulTypedName",
														"src": "1274:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1282:6:7",
														"nodeType": "YulTypedName",
														"src": "1282:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1290:6:7",
														"nodeType": "YulTypedName",
														"src": "1290:6:7",
														"type": ""
													}
												],
												"src": "1197:619:7"
											},
											{
												"body": {
													"nativeSrc": "1864:48:7",
													"nodeType": "YulBlock",
													"src": "1864:48:7",
													"statements": [
														{
															"nativeSrc": "1874:32:7",
															"nodeType": "YulAssignment",
															"src": "1874:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1899:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1899:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1892:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1892:6:7"
																		},
																		"nativeSrc": "1892:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1892:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1885:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1885:6:7"
																},
																"nativeSrc": "1885:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1885:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1874:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1874:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1822:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1846:5:7",
														"nodeType": "YulTypedName",
														"src": "1846:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1856:7:7",
														"nodeType": "YulTypedName",
														"src": "1856:7:7",
														"type": ""
													}
												],
												"src": "1822:90:7"
											},
											{
												"body": {
													"nativeSrc": "1977:50:7",
													"nodeType": "YulBlock",
													"src": "1977:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1994:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1994:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2014:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2014:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1999:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "1999:14:7"
																		},
																		"nativeSrc": "1999:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1999:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1987:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1987:6:7"
																},
																"nativeSrc": "1987:34:7",
																"nodeType": "YulFunctionCall",
																"src": "1987:34:7"
															},
															"nativeSrc": "1987:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "1987:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1918:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1965:5:7",
														"nodeType": "YulTypedName",
														"src": "1965:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1972:3:7",
														"nodeType": "YulTypedName",
														"src": "1972:3:7",
														"type": ""
													}
												],
												"src": "1918:109:7"
											},
											{
												"body": {
													"nativeSrc": "2125:118:7",
													"nodeType": "YulBlock",
													"src": "2125:118:7",
													"statements": [
														{
															"nativeSrc": "2135:26:7",
															"nodeType": "YulAssignment",
															"src": "2135:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2147:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2147:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2158:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2158:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2143:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2143:3:7"
																},
																"nativeSrc": "2143:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2143:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2135:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2135:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2209:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2209:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2222:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2222:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2233:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2233:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2218:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:7"
																		},
																		"nativeSrc": "2218:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2218:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2171:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "2171:37:7"
																},
																"nativeSrc": "2171:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2171:65:7"
															},
															"nativeSrc": "2171:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2171:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2033:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2097:9:7",
														"nodeType": "YulTypedName",
														"src": "2097:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2109:6:7",
														"nodeType": "YulTypedName",
														"src": "2109:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2120:4:7",
														"nodeType": "YulTypedName",
														"src": "2120:4:7",
														"type": ""
													}
												],
												"src": "2033:210:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c806323b872dd1461002d575b5f5ffd5b610047600480360381019061004291906100f6565b61005d565b6040516100549190610160565b60405180910390f35b5f9392505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61009282610069565b9050919050565b6100a281610088565b81146100ac575f5ffd5b50565b5f813590506100bd81610099565b92915050565b5f819050919050565b6100d5816100c3565b81146100df575f5ffd5b50565b5f813590506100f0816100cc565b92915050565b5f5f5f6060848603121561010d5761010c610065565b5b5f61011a868287016100af565b935050602061012b868287016100af565b925050604061013c868287016100e2565b9150509250925092565b5f8115159050919050565b61015a81610146565b82525050565b5f6020820190506101735f830184610151565b9291505056fea264697066735822122045a689abef45bd50e03b2f5e813351401916e62a354b81cf8f14143c706d5dd564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x54 SWAP2 SWAP1 PUSH2 0x160 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x92 DUP3 PUSH2 0x69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA2 DUP2 PUSH2 0x88 JUMP JUMPDEST DUP2 EQ PUSH2 0xAC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD DUP2 PUSH2 0x99 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD5 DUP2 PUSH2 0xC3 JUMP JUMPDEST DUP2 EQ PUSH2 0xDF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF0 DUP2 PUSH2 0xCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10D JUMPI PUSH2 0x10C PUSH2 0x65 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11A DUP7 DUP3 DUP8 ADD PUSH2 0xAF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x12B DUP7 DUP3 DUP8 ADD PUSH2 0xAF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x13C DUP7 DUP3 DUP8 ADD PUSH2 0xE2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15A DUP2 PUSH2 0x146 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x173 PUSH0 DUP4 ADD DUP5 PUSH2 0x151 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT 0xA6 DUP10 0xAB 0xEF GASLIMIT 0xBD POP RJUMP 0x3B2F MCOPY DUP2 CALLER MLOAD BLOCKHASH NOT AND DUPN 0x2A CALLDATALOAD 0x4B DUP2 0xCF DUP16 EQ EQ EXTCODECOPY PUSH17 0x6D5DD564736F6C634300081E0033000000 ",
							"sourceMap": "532:118:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;639:4;560:87;;;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:90::-;1856:7;1899:5;1892:13;1885:21;1874:32;;1822:90;;;:::o;1918:109::-;1999:21;2014:5;1999:21;:::i;:::-;1994:3;1987:34;1918:109;;:::o;2033:210::-;2120:4;2158:2;2147:9;2143:18;2135:26;;2171:65;2233:1;2222:9;2218:17;2209:6;2171:65;:::i;:::-;2033:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "86200",
								"executionCost": "133",
								"totalCost": "86333"
							},
							"external": {
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 532,
									"end": 650,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 532,
									"end": 650,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 532,
									"end": 650,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 532,
									"end": 650,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 532,
									"end": 650,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 532,
									"end": 650,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 532,
									"end": 650,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 532,
									"end": 650,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 532,
									"end": 650,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 650,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 650,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 532,
									"end": 650,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 532,
									"end": 650,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 532,
									"end": 650,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 532,
									"end": 650,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 532,
									"end": 650,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 532,
									"end": 650,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 532,
									"end": 650,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 650,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 532,
									"end": 650,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 650,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122045a689abef45bd50e03b2f5e813351401916e62a354b81cf8f14143c706d5dd564736f6c634300081e0033",
									".code": [
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 650,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 560,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 560,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 560,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 560,
											"end": 647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 560,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 560,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 560,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 560,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 560,
											"end": 647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 560,
											"end": 647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 560,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 560,
											"end": 647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 560,
											"end": 647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 639,
											"end": 643,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 647,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 560,
											"end": 647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1341,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1327,
											"end": 1336,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1337,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1310,
											"end": 1342,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1345,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1490,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1436,
											"end": 1553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1663,
											"end": 1670,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1639,
											"end": 1661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1618,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1681,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1789,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1691,
											"end": 1809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1197,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1912,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1822,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1863,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1904,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1892,
											"end": 1905,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1885,
											"end": 1906,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1874,
											"end": 1906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1912,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2027,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1918,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 2014,
											"end": 2019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1999,
											"end": 2020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1999,
											"end": 2020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 1997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2027,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1918,
											"end": 2027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2147,
											"end": 2156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2161,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2231,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2235,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2215,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2171,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2236,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 2171,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"contracts/LandFiStake.sol",
								"contracts/access/Ownable.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/utils/SafeERC20.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LandFiStake.sol\":\"LandFiToken\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LandFiStake.sol\":{\"keccak256\":\"0x1dcfe0df70455d9acbe3d98278a30d4b95fc6158fa633ef4ca0ad944e27fbad8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2d9baf387f8bc6cbe6b2e9e7e0ddb9e700413b6efb87bebdb4a3b38242eeb3ab\",\"dweb:/ipfs/QmY3WVBggKfdpznsYp3gynnKawqcYRu99czxsnSnNPKbcg\"]},\"contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0xe9abc4c299ea6f0f5b357c26c573f26de46eea260d8bc28c950d2dfb92c50178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a2261f75a2930e4cdd0320a1ed0337b0ed4ca32877a7bef6252433a47337205\",\"dweb:/ipfs/Qmaa5mykZdKWHexRbjrrvdVKR1ctU8dymDrmtWGsZ1vWhL\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1019,
								"contract": "contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122082ca2460f824e8f556e24b437a985d41f8f01b2221b61e58e7b0b89603863c7364736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122082ca2460f824e8f556e24b437a985d41f8f01b2221b61e58e7b0b89603863c7364736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xCA 0x24 PUSH1 0xF8 0x24 0xE8 CREATE2 JUMP 0xE2 0x4B NUMBER PUSH27 0x985D41F8F01B2221B61E58E7B0B89603863C7364736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "645:3270:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122082ca2460f824e8f556e24b437a985d41f8f01b2221b61e58e7b0b89603863c7364736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xCA 0x24 PUSH1 0xF8 0x24 0xE8 CREATE2 JUMP 0xE2 0x4B NUMBER PUSH27 0x985D41F8F01B2221B61E58E7B0B89603863C7364736F6C63430008 0x1E STOP CALLER ",
							"sourceMap": "645:3270:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122082ca2460f824e8f556e24b437a985d41f8f01b2221b61e58e7b0b89603863c7364736f6c634300081e0033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"contracts/LandFiStake.sol",
								"contracts/access/Ownable.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/utils/SafeERC20.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0xe9abc4c299ea6f0f5b357c26c573f26de46eea260d8bc28c950d2dfb92c50178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a2261f75a2930e4cdd0320a1ed0337b0ed4ca32877a7bef6252433a47337205\",\"dweb:/ipfs/Qmaa5mykZdKWHexRbjrrvdVKR1ctU8dymDrmtWGsZ1vWhL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Address.sol\":179:8240  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Address.sol\":179:8240  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220b1aa5717a13435a6d0f89082906d8b0af2b5793439d87ef2cfca0b3c723f197564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b1aa5717a13435a6d0f89082906d8b0af2b5793439d87ef2cfca0b3c723f197564736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xAA JUMPI OR LOG1 CALLVALUE CALLDATALOAD 0xA6 0xD0 EXTCALL SWAP1 DUP3 SWAP1 PUSH14 0x8B0AF2B5793439D87EF2CFCA0B3C PUSH19 0x3F197564736F6C634300081E00330000000000 ",
							"sourceMap": "179:8061:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220b1aa5717a13435a6d0f89082906d8b0af2b5793439d87ef2cfca0b3c723f197564736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xAA JUMPI OR LOG1 CALLVALUE CALLDATALOAD 0xA6 0xD0 EXTCALL SWAP1 DUP3 SWAP1 PUSH14 0x8B0AF2B5793439D87EF2CFCA0B3C PUSH19 0x3F197564736F6C634300081E00330000000000 ",
							"sourceMap": "179:8061:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 179,
									"end": 8240,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b1aa5717a13435a6d0f89082906d8b0af2b5793439d87ef2cfca0b3c723f197564736f6c634300081e0033",
									".code": [
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 8240,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"contracts/LandFiStake.sol",
								"contracts/access/Ownable.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/utils/SafeERC20.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Address.sol\":{\"keccak256\":\"0xe9abc4c299ea6f0f5b357c26c573f26de46eea260d8bc28c950d2dfb92c50178\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a2261f75a2930e4cdd0320a1ed0337b0ed4ca32877a7bef6252433a47337205\",\"dweb:/ipfs/Qmaa5mykZdKWHexRbjrrvdVKR1ctU8dymDrmtWGsZ1vWhL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212202e030a17943c8687db3e21f071c28335dd3265c62adb2ac1bf9de4b832d7bb6e64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202e030a17943c8687db3e21f071c28335dd3265c62adb2ac1bf9de4b832d7bb6e64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E SUB EXP OR SWAP5 EXTCODECOPY DUP7 DUP8 0xDB RETURNDATACOPY 0x21 CREATE PUSH18 0xC28335DD3265C62ADB2AC1BF9DE4B832D7BB PUSH15 0x64736F6C634300081E003300000000 ",
							"sourceMap": "467:6301:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202e030a17943c8687db3e21f071c28335dd3265c62adb2ac1bf9de4b832d7bb6e64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E SUB EXP OR SWAP5 EXTCODECOPY DUP7 DUP8 0xDB RETURNDATACOPY 0x21 CREATE PUSH18 0xC28335DD3265C62ADB2AC1BF9DE4B832D7BB PUSH15 0x64736F6C634300081E003300000000 ",
							"sourceMap": "467:6301:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e030a17943c8687db3e21f071c28335dd3265c62adb2ac1bf9de4b832d7bb6e64736f6c634300081e0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"contracts/LandFiStake.sol",
								"contracts/access/Ownable.sol",
								"contracts/token/ERC20/IERC20.sol",
								"contracts/token/ERC20/utils/SafeERC20.sol",
								"contracts/utils/Address.sol",
								"contracts/utils/Context.sol",
								"contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/LandFiStake.sol": {
				"ast": {
					"absolutePath": "contracts/LandFiStake.sol",
					"exportedSymbols": {
						"Address": [
							1713
						],
						"Context": [
							1735
						],
						"IERC20": [
							1194
						],
						"LandFiStaking": [
							1011
						],
						"LandFiToken": [
							18
						],
						"Ownable": [
							1116
						],
						"SafeERC20": [
							1418
						],
						"SafeMath": [
							2047
						]
					},
					"id": 1012,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "362:21:0"
						},
						{
							"absolutePath": "contracts/access/Ownable.sol",
							"file": "./access/Ownable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 1117,
							"src": "385:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/math/SafeMath.sol",
							"file": "./utils/math/SafeMath.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 2048,
							"src": "417:35:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Address.sol",
							"file": "./utils/Address.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 1714,
							"src": "454:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "./token/ERC20/utils/SafeERC20.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1012,
							"sourceUnit": 1419,
							"src": "485:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LandFiToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 18,
							"linearizedBaseContracts": [
								18
							],
							"name": "LandFiToken",
							"nameLocation": "541:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "645:2:0",
										"statements": []
									},
									"functionSelector": "23b872dd",
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "569:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "590:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "582:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "604:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "596:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "616:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "608:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:41:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "639:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 13,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "639:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:6:0"
									},
									"scope": 18,
									"src": "560:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1012,
							"src": "532:118:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 19,
										"name": "Ownable",
										"nameLocations": [
											"680:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1116,
										"src": "680:7:0"
									},
									"id": 20,
									"nodeType": "InheritanceSpecifier",
									"src": "680:7:0"
								}
							],
							"canonicalName": "LandFiStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1011,
							"linearizedBaseContracts": [
								1011,
								1116,
								1735
							],
							"name": "LandFiStaking",
							"nameLocation": "663:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 23,
									"libraryName": {
										"id": 21,
										"name": "Address",
										"nameLocations": [
											"701:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1713,
										"src": "701:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:0",
									"typeName": {
										"id": 22,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 26,
									"libraryName": {
										"id": 24,
										"name": "SafeMath",
										"nameLocations": [
											"733:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2047,
										"src": "733:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "727:27:0",
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "746:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "4893afc1",
									"id": 30,
									"mutability": "mutable",
									"name": "box1Balance",
									"nameLocation": "812:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "776:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 29,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "785:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "776:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 28,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "796:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f51d090",
									"id": 34,
									"mutability": "mutable",
									"name": "box1DepositDate",
									"nameLocation": "866:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "830:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 33,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 31,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "839:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "830:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 32,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "850:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e7de2ceb",
									"id": 36,
									"mutability": "mutable",
									"name": "box1Rate",
									"nameLocation": "903:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "888:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 35,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "888:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4b0c10d8",
									"id": 38,
									"mutability": "mutable",
									"name": "box1Time",
									"nameLocation": "933:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "918:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 37,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "918:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8a170ac1",
									"id": 40,
									"mutability": "mutable",
									"name": "box1Enabled",
									"nameLocation": "960:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "948:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 39,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "948:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "058df0e8",
									"id": 44,
									"mutability": "mutable",
									"name": "box2Balance",
									"nameLocation": "1030:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "994:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 43,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 41,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1003:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "994:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 42,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1014:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b3e920c",
									"id": 48,
									"mutability": "mutable",
									"name": "box2DepositDate",
									"nameLocation": "1084:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1048:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 47,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 45,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1057:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1048:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 46,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1068:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d7d4918e",
									"id": 50,
									"mutability": "mutable",
									"name": "box2Rate",
									"nameLocation": "1121:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1106:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 49,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1106:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d47c56e5",
									"id": 52,
									"mutability": "mutable",
									"name": "box2Time",
									"nameLocation": "1151:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1136:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 51,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1136:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "73dec718",
									"id": 54,
									"mutability": "mutable",
									"name": "box2Enabled",
									"nameLocation": "1178:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1166:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 53,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1166:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2e5f89ef",
									"id": 58,
									"mutability": "mutable",
									"name": "box3Balance",
									"nameLocation": "1248:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1212:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 57,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 55,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1221:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1212:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 56,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1232:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "89b0040a",
									"id": 62,
									"mutability": "mutable",
									"name": "box3DepositDate",
									"nameLocation": "1302:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1266:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 61,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 59,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1275:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1266:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 60,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1286:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b39dc996",
									"id": 64,
									"mutability": "mutable",
									"name": "box3Rate",
									"nameLocation": "1339:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1324:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 63,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1324:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d95985b",
									"id": 66,
									"mutability": "mutable",
									"name": "box3Time",
									"nameLocation": "1369:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1354:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 65,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1354:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d0bcc009",
									"id": 68,
									"mutability": "mutable",
									"name": "box3Enabled",
									"nameLocation": "1396:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1384:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 67,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1384:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24ebd9d2",
									"id": 72,
									"mutability": "mutable",
									"name": "box4Balance",
									"nameLocation": "1466:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1430:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 71,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 69,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1439:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1430:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 70,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1450:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "38dc97fb",
									"id": 76,
									"mutability": "mutable",
									"name": "box4DepositDate",
									"nameLocation": "1520:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1484:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 75,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 73,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1493:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1484:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 74,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1504:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c3630edb",
									"id": 78,
									"mutability": "mutable",
									"name": "box4Rate",
									"nameLocation": "1557:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1542:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 77,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1542:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "798cbe5e",
									"id": 80,
									"mutability": "mutable",
									"name": "box4Time",
									"nameLocation": "1587:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1572:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 79,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1572:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5cd5a159",
									"id": 82,
									"mutability": "mutable",
									"name": "box4Enabled",
									"nameLocation": "1614:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1602:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 81,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1602:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 85,
									"mutability": "constant",
									"name": "burnAddress",
									"nameLocation": "1659:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1634:81:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 83,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1634:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 84,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1673:42:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "ea1b28e0",
									"id": 87,
									"mutability": "mutable",
									"name": "maxStake",
									"nameLocation": "1804:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1789:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 86,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1789:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0f9154b5",
									"id": 89,
									"mutability": "mutable",
									"name": "stakeWallet",
									"nameLocation": "1873:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1858:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 88,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1858:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fb75b2c7",
									"id": 91,
									"mutability": "mutable",
									"name": "rewardWallet",
									"nameLocation": "1946:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "1931:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 90,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1931:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d76ea58",
									"id": 93,
									"mutability": "mutable",
									"name": "tokenAddress",
									"nameLocation": "2018:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "2003:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 92,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2003:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "375b3c0a",
									"id": 95,
									"mutability": "mutable",
									"name": "minStake",
									"nameLocation": "2123:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "2108:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 94,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2108:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bba4fefd",
									"id": 97,
									"mutability": "mutable",
									"name": "rewardCountDue",
									"nameLocation": "2198:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "2183:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2183:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "79085425",
									"id": 99,
									"mutability": "mutable",
									"name": "rewardCount",
									"nameLocation": "2287:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "2272:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 98,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2272:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 101,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "2364:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "2349:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 100,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2349:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d19b090e",
									"id": 103,
									"mutability": "mutable",
									"name": "maxRewardDue",
									"nameLocation": "2499:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "2484:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 102,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2484:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f908dc13",
									"id": 105,
									"mutability": "mutable",
									"name": "fullUnlock",
									"nameLocation": "2590:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1011,
									"src": "2578:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 104,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2578:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2623:975:0",
										"statements": [
											{
												"expression": {
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 108,
														"name": "rewardCountDue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2634:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2651:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2634:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2634:18:0"
											},
											{
												"expression": {
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 112,
														"name": "rewardCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "2663:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2677:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2663:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "2663:15:0"
											},
											{
												"expression": {
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 116,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2689:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2703:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2689:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "2689:15:0"
											},
											{
												"expression": {
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 120,
														"name": "maxStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "2715:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "343030303030303030303030303030303030303030",
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2730:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_400000000000000000000_by_1",
															"typeString": "int_const 400000000000000000000"
														},
														"value": "400000000000000000000"
													},
													"src": "2715:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "2715:36:0"
											},
											{
												"expression": {
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 124,
														"name": "maxRewardDue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2770:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "353030303030303030303030303030303030303030",
														"id": 125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2785:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500000000000000000000_by_1",
															"typeString": "int_const 500000000000000000000"
														},
														"value": "500000000000000000000"
													},
													"src": "2770:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "2770:36:0"
											},
											{
												"expression": {
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 128,
														"name": "minStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2825:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3130303030303030303030303030303030",
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2840:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000000000_by_1",
															"typeString": "int_const 10000000000000000"
														},
														"value": "10000000000000000"
													},
													"src": "2825:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2825:32:0"
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 132,
														"name": "stakeWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "2875:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307834333941614230454661613961363436443438383546643861323435413530314361334433323337",
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2889:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x439AaB0EFaa9a646D4885Fd8a245A501Ca3D3237"
													},
													"src": "2875:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "2875:56:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "rewardWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "2942:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307862324338434563313962463545373362323861613031393346466666313234303535343133453245",
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2957:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0xb2C8CEc19bF5E73b28aa0193FFff124055413E2E"
													},
													"src": "2942:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "2942:57:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "3010:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "307835633634373230383438363233316265634341424141436635463242373335383933374433623939",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3025:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x5c647208486231becCABAACf5F2B7358937D3b99"
													},
													"src": "3010:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "3010:57:0"
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 144,
														"name": "fullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "3078:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3091:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3078:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "3078:18:0"
											},
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "box1Rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "3127:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333333",
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3138:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_333_by_1",
															"typeString": "int_const 333"
														},
														"value": "333"
													},
													"src": "3127:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "3127:14:0"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "box1Time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "3152:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "363034383030",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3163:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "604800"
													},
													"src": "3152:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "3152:17:0"
											},
											{
												"expression": {
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 156,
														"name": "box1Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "3200:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3214:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3200:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "3200:18:0"
											},
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 160,
														"name": "box2Rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "3249:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3833",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3260:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_83_by_1",
															"typeString": "int_const 83"
														},
														"value": "83"
													},
													"src": "3249:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "3249:13:0"
											},
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 164,
														"name": "box2Time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "3273:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31323039363030",
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3284:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1209600_by_1",
															"typeString": "int_const 1209600"
														},
														"value": "1209600"
													},
													"src": "3273:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "3273:18:0"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 168,
														"name": "box2Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3324:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3338:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3324:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "3324:18:0"
											},
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "box3Rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 64,
														"src": "3373:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3332",
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3384:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "3373:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "3373:13:0"
											},
											{
												"expression": {
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 176,
														"name": "box3Time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 66,
														"src": "3397:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32343139323030",
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3408:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2419200_by_1",
															"typeString": "int_const 2419200"
														},
														"value": "2419200"
													},
													"src": "3397:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "3397:18:0"
											},
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "box3Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "3448:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3462:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3448:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "3448:18:0"
											},
											{
												"expression": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 184,
														"name": "box4Rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 78,
														"src": "3497:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3236",
														"id": 185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3508:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_26_by_1",
															"typeString": "int_const 26"
														},
														"value": "26"
													},
													"src": "3497:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "3497:13:0"
											},
											{
												"expression": {
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 188,
														"name": "box4Time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "3521:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32343139323030",
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3532:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2419200_by_1",
															"typeString": "int_const 2419200"
														},
														"value": "2419200"
													},
													"src": "3521:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "3521:18:0"
											},
											{
												"expression": {
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 192,
														"name": "box4Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "3572:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3586:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3572:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "3572:18:0"
											}
										]
									},
									"id": 197,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2620:2:0"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2623:0:0"
									},
									"scope": 1011,
									"src": "2609:989:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "3677:46:0",
										"statements": [
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 204,
														"name": "box1Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "3688:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 205,
														"name": "newBox1Status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 199,
														"src": "3702:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3688:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "3688:27:0"
											}
										]
									},
									"functionSelector": "6cbde5cf",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 202,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 201,
												"name": "onlyOwner",
												"nameLocations": [
													"3667:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1058,
												"src": "3667:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3667:9:0"
										}
									],
									"name": "changeBox1Status",
									"nameLocation": "3615:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "newBox1Status",
												"nameLocation": "3637:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3632:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3632:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3631:20:0"
									},
									"returnParameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3677:0:0"
									},
									"scope": 1011,
									"src": "3606:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "3800:46:0",
										"statements": [
											{
												"expression": {
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 216,
														"name": "box2Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3811:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 217,
														"name": "newBox2Status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "3825:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3811:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "3811:27:0"
											}
										]
									},
									"functionSelector": "5f75bcea",
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 214,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 213,
												"name": "onlyOwner",
												"nameLocations": [
													"3790:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1058,
												"src": "3790:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3790:9:0"
										}
									],
									"name": "changeBox2Status",
									"nameLocation": "3738:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "newBox2Status",
												"nameLocation": "3760:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "3755:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3755:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3754:20:0"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3800:0:0"
									},
									"scope": 1011,
									"src": "3729:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "3923:46:0",
										"statements": [
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 228,
														"name": "box3Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "3934:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 229,
														"name": "newBox3Status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "3948:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3934:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "3934:27:0"
											}
										]
									},
									"functionSelector": "d5c41d69",
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 226,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 225,
												"name": "onlyOwner",
												"nameLocations": [
													"3913:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1058,
												"src": "3913:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3913:9:0"
										}
									],
									"name": "changeBox3Status",
									"nameLocation": "3861:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "newBox3Status",
												"nameLocation": "3883:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "3878:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3878:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3877:20:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3923:0:0"
									},
									"scope": 1011,
									"src": "3852:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4046:46:0",
										"statements": [
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 240,
														"name": "box4Enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "4057:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "newBox4Status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 235,
														"src": "4071:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4057:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "4057:27:0"
											}
										]
									},
									"functionSelector": "1d95d52f",
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 238,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 237,
												"name": "onlyOwner",
												"nameLocations": [
													"4036:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1058,
												"src": "4036:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4036:9:0"
										}
									],
									"name": "changeBox4Status",
									"nameLocation": "3984:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "newBox4Status",
												"nameLocation": "4006:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4001:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4001:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4000:20:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4046:0:0"
									},
									"scope": 1011,
									"src": "3975:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "4176:49:0",
										"statements": [
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 252,
														"name": "maxRewardDue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "4187:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 253,
														"name": "newMaxRewardDue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "4202:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4187:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "4187:30:0"
											}
										]
									},
									"functionSelector": "94387289",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 250,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 249,
												"name": "onlyOwner",
												"nameLocations": [
													"4166:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1058,
												"src": "4166:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4166:9:0"
										}
									],
									"name": "changeMaxRewardDue",
									"nameLocation": "4107:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "newMaxRewardDue",
												"nameLocation": "4134:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "4126:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4125:25:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4176:0:0"
									},
									"scope": 1011,
									"src": "4098:127:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "4301:41:0",
										"statements": [
											{
												"expression": {
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 264,
														"name": "maxStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "4312:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 265,
														"name": "newMaxStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "4323:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4312:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "4312:22:0"
											}
										]
									},
									"functionSelector": "cd5692ee",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 262,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 261,
												"name": "onlyOwner",
												"nameLocations": [
													"4291:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1058,
												"src": "4291:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:9:0"
										}
									],
									"name": "changeMaxStake",
									"nameLocation": "4240:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "newMaxStake",
												"nameLocation": "4263:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "4255:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4254:21:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4301:0:0"
									},
									"scope": 1011,
									"src": "4231:111:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "4418:41:0",
										"statements": [
											{
												"expression": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 276,
														"name": "minStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "4429:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 277,
														"name": "newMinStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "4440:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4429:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "4429:22:0"
											}
										]
									},
									"functionSelector": "23dcdb89",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 274,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 273,
												"name": "onlyOwner",
												"nameLocations": [
													"4408:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1058,
												"src": "4408:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4408:9:0"
										}
									],
									"name": "changeMinStake",
									"nameLocation": "4357:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "newMinStake",
												"nameLocation": "4380:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4372:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4371:21:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4418:0:0"
									},
									"scope": 1011,
									"src": "4348:111:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "4538:45:0",
										"statements": [
											{
												"expression": {
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 288,
														"name": "fullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "4549:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 289,
														"name": "newFullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "4562:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4549:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "4549:26:0"
											}
										]
									},
									"functionSelector": "f1cddd55",
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 286,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 285,
												"name": "onlyOwner",
												"nameLocations": [
													"4528:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1058,
												"src": "4528:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4528:9:0"
										}
									],
									"name": "changeFullUnlock",
									"nameLocation": "4476:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "newFullUnlock",
												"nameLocation": "4498:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "4493:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 282,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4493:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:20:0"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4538:0:0"
									},
									"scope": 1011,
									"src": "4467:116:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "4667:177:0",
										"statements": [
											{
												"assignments": [
													301
												],
												"declarations": [
													{
														"constant": false,
														"id": 301,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "4686:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 320,
														"src": "4678:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 300,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4678:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 317,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 302,
																	"name": "box1Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "4696:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 304,
																"indexExpression": {
																	"id": 303,
																	"name": "walletAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "4708:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4696:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"baseExpression": {
																	"id": 305,
																	"name": "box2Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "4725:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 307,
																"indexExpression": {
																	"id": 306,
																	"name": "walletAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "4737:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4725:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4696:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"baseExpression": {
																"id": 309,
																"name": "box3Balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 58,
																"src": "4754:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 311,
															"indexExpression": {
																"id": 310,
																"name": "walletAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 295,
																"src": "4766:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4754:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4696:84:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 313,
															"name": "box4Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "4783:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 315,
														"indexExpression": {
															"id": 314,
															"name": "walletAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "4795:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4783:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4696:113:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4678:131:0"
											},
											{
												"expression": {
													"id": 318,
													"name": "balance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 301,
													"src": "4829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 299,
												"id": 319,
												"nodeType": "Return",
												"src": "4822:14:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4604:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "4622:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4614:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4613:23:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4658:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4657:9:0"
									},
									"scope": 1011,
									"src": "4595:249:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "4945:445:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 330,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "4960:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4969:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4960:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 341,
												"nodeType": "IfStatement",
												"src": "4956:94:0",
												"trueBody": {
													"id": 340,
													"nodeType": "Block",
													"src": "4972:78:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 337,
																		"name": "box1Time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 38,
																		"src": "5029:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 333,
																			"name": "box1DepositDate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 34,
																			"src": "4994:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 335,
																		"indexExpression": {
																			"id": 334,
																			"name": "walletAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 323,
																			"src": "5010:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4994:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5025:3:0",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1911,
																	"src": "4994:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4994:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 329,
															"id": 339,
															"nodeType": "Return",
															"src": "4987:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 342,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "5064:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5073:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5064:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 353,
												"nodeType": "IfStatement",
												"src": "5060:94:0",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "5076:78:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 349,
																		"name": "box2Time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 52,
																		"src": "5133:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 345,
																			"name": "box2DepositDate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 48,
																			"src": "5098:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 347,
																		"indexExpression": {
																			"id": 346,
																			"name": "walletAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 323,
																			"src": "5114:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5098:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5129:3:0",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1911,
																	"src": "5098:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5098:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 329,
															"id": 351,
															"nodeType": "Return",
															"src": "5091:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 354,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "5168:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5177:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "5168:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 365,
												"nodeType": "IfStatement",
												"src": "5164:94:0",
												"trueBody": {
													"id": 364,
													"nodeType": "Block",
													"src": "5180:78:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 361,
																		"name": "box3Time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 66,
																		"src": "5237:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 357,
																			"name": "box3DepositDate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 62,
																			"src": "5202:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 359,
																		"indexExpression": {
																			"id": 358,
																			"name": "walletAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 323,
																			"src": "5218:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5202:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5233:3:0",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1911,
																	"src": "5202:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5202:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 329,
															"id": 363,
															"nodeType": "Return",
															"src": "5195:51:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 366,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "5272:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5281:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "5272:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 377,
												"nodeType": "IfStatement",
												"src": "5268:94:0",
												"trueBody": {
													"id": 376,
													"nodeType": "Block",
													"src": "5284:78:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 373,
																		"name": "box4Time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 80,
																		"src": "5341:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 369,
																			"name": "box4DepositDate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 76,
																			"src": "5306:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 371,
																		"indexExpression": {
																			"id": 370,
																			"name": "walletAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 323,
																			"src": "5322:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5306:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5337:3:0",
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1911,
																	"src": "5306:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5306:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 329,
															"id": 375,
															"nodeType": "Return",
															"src": "5299:51:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5381:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 329,
												"id": 379,
												"nodeType": "Return",
												"src": "5374:8:0"
											}
										]
									},
									"functionSelector": "bef7d12e",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeUnlockTime",
									"nameLocation": "4861:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "4885:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "4877:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "boxNo",
												"nameLocation": "4908:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "4900:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4876:38:0"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "4936:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:9:0"
									},
									"scope": 1011,
									"src": "4852:538:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "5487:373:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 390,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "5502:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5511:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5502:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "5498:76:0",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "5514:60:0",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 393,
																	"name": "box1Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "5536:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 395,
																"indexExpression": {
																	"id": 394,
																	"name": "walletAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "5548:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5536:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 389,
															"id": 396,
															"nodeType": "Return",
															"src": "5529:33:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 399,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "5588:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5597:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "5588:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "IfStatement",
												"src": "5584:76:0",
												"trueBody": {
													"id": 406,
													"nodeType": "Block",
													"src": "5600:60:0",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 402,
																	"name": "box2Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "5622:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 404,
																"indexExpression": {
																	"id": 403,
																	"name": "walletAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "5634:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5622:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 389,
															"id": 405,
															"nodeType": "Return",
															"src": "5615:33:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 408,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "5674:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5683:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "5674:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 416,
												"nodeType": "IfStatement",
												"src": "5670:76:0",
												"trueBody": {
													"id": 415,
													"nodeType": "Block",
													"src": "5686:60:0",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 411,
																	"name": "box3Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "5708:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 413,
																"indexExpression": {
																	"id": 412,
																	"name": "walletAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "5720:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5708:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 389,
															"id": 414,
															"nodeType": "Return",
															"src": "5701:33:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "5760:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5769:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "5760:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 425,
												"nodeType": "IfStatement",
												"src": "5756:76:0",
												"trueBody": {
													"id": 424,
													"nodeType": "Block",
													"src": "5772:60:0",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 420,
																	"name": "box4Balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 72,
																	"src": "5794:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 422,
																"indexExpression": {
																	"id": 421,
																	"name": "walletAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 383,
																	"src": "5806:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5794:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 389,
															"id": 423,
															"nodeType": "Return",
															"src": "5787:33:0"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5851:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 389,
												"id": 427,
												"nodeType": "Return",
												"src": "5844:8:0"
											}
										]
									},
									"functionSelector": "4b5effc2",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeAmount",
									"nameLocation": "5407:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "walletAddress",
												"nameLocation": "5427:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "5419:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "boxNo",
												"nameLocation": "5450:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "5442:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5418:38:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "5478:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5477:9:0"
									},
									"scope": 1011,
									"src": "5398:462:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "5947:2477:0",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "5966:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 686,
														"src": "5958:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"expression": {
														"id": 438,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5973:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5977:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5973:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:25:0"
											},
											{
												"assignments": [
													442
												],
												"declarations": [
													{
														"constant": false,
														"id": 442,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "6010:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 686,
														"src": "6002:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 441,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6002:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"hexValue": "30",
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6025:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6002:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 446,
																"name": "maxRewardDue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "6047:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 447,
																"name": "rewardCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "6063:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6047:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e67206f6e207468697320636f6e74726163742068617320656e64656421",
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6076:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95",
																"typeString": "literal_string \"Staking on this contract has ended!\""
															},
															"value": "Staking on this contract has ended!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e9e393f5b3bec2a8c49e2c2bafa829533aa03653a0d7dc39ba049e71e2b99d95",
																"typeString": "literal_string \"Staking on this contract has ended!\""
															}
														],
														"id": 445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6039:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 451,
												"nodeType": "ExpressionStatement",
												"src": "6039:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 453,
																			"name": "boxNo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "6133:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6142:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "6133:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 456,
																			"name": "boxNo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "6147:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6156:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "6147:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6133:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 460,
																		"name": "boxNo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "6161:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6170:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "6161:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6133:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 464,
																	"name": "boxNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "6175:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6184:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "6175:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6133:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726f647563742049442e",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6187:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740",
																"typeString": "literal_string \"Invalid product ID.\""
															},
															"value": "Invalid product ID."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740",
																"typeString": "literal_string \"Invalid product ID.\""
															}
														],
														"id": 452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6125:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "6125:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "6228:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 473,
																"name": "minStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "6243:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6228:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b656420616d6f756e74206d757374206265206869676865722e",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6253:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb",
																"typeString": "literal_string \"Staked amount must be higher.\""
															},
															"value": "Staked amount must be higher."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9ad567517bd22b652cc2d5b20b60d2a81c95a7a8ab14eb6fc0cba22ae9c6c3bb",
																"typeString": "literal_string \"Staked amount must be higher.\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6220:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "6220:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 479,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "6304:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 480,
																"name": "maxStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "6319:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6304:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b656420616d6f756e74206d757374206265206c6f7765722e",
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6329:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d",
																"typeString": "literal_string \"Staked amount must be lower.\""
															},
															"value": "Staked amount must be lower."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef4f1f79e06b94d7d054931c91c62b77057d16e044b1a4beddb91a708841af7d",
																"typeString": "literal_string \"Staked amount must be lower.\""
															}
														],
														"id": 478,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6296:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6296:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "6296:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 486,
																"name": "fullUnlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "6379:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "66616c7365",
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6393:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"src": "6379:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e672069732063757272656e746c7920696e20756e6c6f636b6564206d6f64652e",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6400:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9",
																"typeString": "literal_string \"Staking is currently in unlocked mode.\""
															},
															"value": "Staking is currently in unlocked mode."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bc01ea034b4bbed34de7675a67b58c50a3cc5593a6aa0cb2f18d713ce2f2bf9",
																"typeString": "literal_string \"Staking is currently in unlocked mode.\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6371:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6371:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "6371:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "6458:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6467:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6458:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 532,
												"nodeType": "IfStatement",
												"src": "6454:395:0",
												"trueBody": {
													"id": 531,
													"nodeType": "Block",
													"src": "6470:379:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 496,
																			"name": "box1Enabled",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "6493:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6508:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "6493:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973207374616b696e672070726f647563742069732064697361626c65642e",
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6514:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9",
																			"typeString": "literal_string \"This staking product is disabled.\""
																		},
																		"value": "This staking product is disabled."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9",
																			"typeString": "literal_string \"This staking product is disabled.\""
																		}
																	],
																	"id": 495,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6485:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6485:65:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 501,
															"nodeType": "ExpressionStatement",
															"src": "6485:65:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 503,
																				"name": "box1Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "6573:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 505,
																			"indexExpression": {
																				"id": 504,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "6585:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6573:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6594:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6573:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546869732077616c6c65742068617320616c7265616479207374616b6564206f6e20746869732070726f64756374202d207761697420666f72207468652072656c6561736520746f2072652d7374616b652e",
																		"id": 508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6597:84:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc",
																			"typeString": "literal_string \"This wallet has already staked on this product - wait for the release to re-stake.\""
																		},
																		"value": "This wallet has already staked on this product - wait for the release to re-stake."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc",
																			"typeString": "literal_string \"This wallet has already staked on this product - wait for the release to re-stake.\""
																		}
																	],
																	"id": 502,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6565:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6565:117:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 510,
															"nodeType": "ExpressionStatement",
															"src": "6565:117:0"
														},
														{
															"expression": {
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 511,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "6697:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 514,
																			"name": "box1Rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "6728:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 512,
																			"name": "tokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "6712:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6724:3:0",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1956,
																		"src": "6712:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6712:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6697:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "6697:40:0"
														},
														{
															"expression": {
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 518,
																		"name": "box1DepositDate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 34,
																		"src": "6752:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 520,
																	"indexExpression": {
																		"id": 519,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "6768:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6752:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 521,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6776:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6782:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6776:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6752:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 524,
															"nodeType": "ExpressionStatement",
															"src": "6752:39:0"
														},
														{
															"expression": {
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 525,
																		"name": "box1Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "6806:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 527,
																	"indexExpression": {
																		"id": 526,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "6818:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6806:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 528,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "6826:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6806:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 530,
															"nodeType": "ExpressionStatement",
															"src": "6806:31:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 533,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "6863:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6872:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "6863:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 573,
												"nodeType": "IfStatement",
												"src": "6859:395:0",
												"trueBody": {
													"id": 572,
													"nodeType": "Block",
													"src": "6875:379:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 537,
																			"name": "box2Enabled",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 54,
																			"src": "6898:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6913:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "6898:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973207374616b696e672070726f647563742069732064697361626c65642e",
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6919:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9",
																			"typeString": "literal_string \"This staking product is disabled.\""
																		},
																		"value": "This staking product is disabled."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9",
																			"typeString": "literal_string \"This staking product is disabled.\""
																		}
																	],
																	"id": 536,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6890:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6890:65:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 542,
															"nodeType": "ExpressionStatement",
															"src": "6890:65:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 544,
																				"name": "box2Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 44,
																				"src": "6978:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 546,
																			"indexExpression": {
																				"id": 545,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "6990:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6978:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6999:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6978:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546869732077616c6c65742068617320616c7265616479207374616b6564206f6e20746869732070726f64756374202d207761697420666f72207468652072656c6561736520746f2072652d7374616b652e",
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7002:84:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc",
																			"typeString": "literal_string \"This wallet has already staked on this product - wait for the release to re-stake.\""
																		},
																		"value": "This wallet has already staked on this product - wait for the release to re-stake."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc",
																			"typeString": "literal_string \"This wallet has already staked on this product - wait for the release to re-stake.\""
																		}
																	],
																	"id": 543,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "6970:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6970:117:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 551,
															"nodeType": "ExpressionStatement",
															"src": "6970:117:0"
														},
														{
															"expression": {
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 552,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "7102:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 555,
																			"name": "box2Rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 50,
																			"src": "7133:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 553,
																			"name": "tokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "7117:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7129:3:0",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1956,
																		"src": "7117:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7117:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7102:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 558,
															"nodeType": "ExpressionStatement",
															"src": "7102:40:0"
														},
														{
															"expression": {
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 559,
																		"name": "box2DepositDate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "7157:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 561,
																	"indexExpression": {
																		"id": 560,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "7173:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7157:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 562,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7181:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7187:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7181:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7157:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 565,
															"nodeType": "ExpressionStatement",
															"src": "7157:39:0"
														},
														{
															"expression": {
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 566,
																		"name": "box2Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "7211:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 568,
																	"indexExpression": {
																		"id": 567,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "7223:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7211:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 569,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "7231:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7211:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 571,
															"nodeType": "ExpressionStatement",
															"src": "7211:31:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "7268:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "7268:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "7264:395:0",
												"trueBody": {
													"id": 613,
													"nodeType": "Block",
													"src": "7280:379:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 578,
																			"name": "box3Enabled",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "7303:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7318:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "7303:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973207374616b696e672070726f647563742069732064697361626c65642e",
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7324:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9",
																			"typeString": "literal_string \"This staking product is disabled.\""
																		},
																		"value": "This staking product is disabled."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9",
																			"typeString": "literal_string \"This staking product is disabled.\""
																		}
																	],
																	"id": 577,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7295:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7295:65:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 583,
															"nodeType": "ExpressionStatement",
															"src": "7295:65:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 585,
																				"name": "box3Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "7383:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 587,
																			"indexExpression": {
																				"id": 586,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "7395:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7383:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 588,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7404:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7383:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546869732077616c6c65742068617320616c7265616479207374616b6564206f6e20746869732070726f64756374202d207761697420666f72207468652072656c6561736520746f2072652d7374616b652e",
																		"id": 590,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7407:84:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc",
																			"typeString": "literal_string \"This wallet has already staked on this product - wait for the release to re-stake.\""
																		},
																		"value": "This wallet has already staked on this product - wait for the release to re-stake."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc",
																			"typeString": "literal_string \"This wallet has already staked on this product - wait for the release to re-stake.\""
																		}
																	],
																	"id": 584,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7375:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7375:117:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 592,
															"nodeType": "ExpressionStatement",
															"src": "7375:117:0"
														},
														{
															"expression": {
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 593,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "7507:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 596,
																			"name": "box3Rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 64,
																			"src": "7538:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 594,
																			"name": "tokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "7522:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7534:3:0",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1956,
																		"src": "7522:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7522:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7507:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 599,
															"nodeType": "ExpressionStatement",
															"src": "7507:40:0"
														},
														{
															"expression": {
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 600,
																		"name": "box3DepositDate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "7562:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 602,
																	"indexExpression": {
																		"id": 601,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "7578:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7562:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 603,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7586:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7592:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7586:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7562:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 606,
															"nodeType": "ExpressionStatement",
															"src": "7562:39:0"
														},
														{
															"expression": {
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 607,
																		"name": "box3Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "7616:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 609,
																	"indexExpression": {
																		"id": 608,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "7628:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7616:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 610,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "7636:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7616:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 612,
															"nodeType": "ExpressionStatement",
															"src": "7616:31:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "7673:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7682:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "7673:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 655,
												"nodeType": "IfStatement",
												"src": "7669:395:0",
												"trueBody": {
													"id": 654,
													"nodeType": "Block",
													"src": "7685:379:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 619,
																			"name": "box4Enabled",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 82,
																			"src": "7708:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "74727565",
																			"id": 620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7723:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"src": "7708:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54686973207374616b696e672070726f647563742069732064697361626c65642e",
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7729:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9",
																			"typeString": "literal_string \"This staking product is disabled.\""
																		},
																		"value": "This staking product is disabled."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c8dc8541a446b630236f6b72e76ace3bb09e47591a1772ebe5eb480a9663d9c9",
																			"typeString": "literal_string \"This staking product is disabled.\""
																		}
																	],
																	"id": 618,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7700:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7700:65:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "7700:65:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 626,
																				"name": "box4Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 72,
																				"src": "7788:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 628,
																			"indexExpression": {
																				"id": 627,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "7800:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7788:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7809:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "7788:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546869732077616c6c65742068617320616c7265616479207374616b6564206f6e20746869732070726f64756374202d207761697420666f72207468652072656c6561736520746f2072652d7374616b652e",
																		"id": 631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7812:84:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc",
																			"typeString": "literal_string \"This wallet has already staked on this product - wait for the release to re-stake.\""
																		},
																		"value": "This wallet has already staked on this product - wait for the release to re-stake."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8082bdaa74262e009d7b940491ba9913ed9281f5b80fc87d6711d3cf4a7132fc",
																			"typeString": "literal_string \"This wallet has already staked on this product - wait for the release to re-stake.\""
																		}
																	],
																	"id": 625,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "7780:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7780:117:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 633,
															"nodeType": "ExpressionStatement",
															"src": "7780:117:0"
														},
														{
															"expression": {
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 634,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "7912:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 637,
																			"name": "box4Rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 78,
																			"src": "7943:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 635,
																			"name": "tokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "7927:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7939:3:0",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1956,
																		"src": "7927:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7927:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7912:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 640,
															"nodeType": "ExpressionStatement",
															"src": "7912:40:0"
														},
														{
															"expression": {
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 641,
																		"name": "box4DepositDate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 76,
																		"src": "7967:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 643,
																	"indexExpression": {
																		"id": 642,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "7983:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7967:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 644,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7991:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7997:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7991:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7967:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 647,
															"nodeType": "ExpressionStatement",
															"src": "7967:39:0"
														},
														{
															"expression": {
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 648,
																		"name": "box4Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 72,
																		"src": "8021:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 650,
																	"indexExpression": {
																		"id": 649,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "8033:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8021:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 651,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "8041:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8021:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 653,
															"nodeType": "ExpressionStatement",
															"src": "8021:31:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 656,
														"name": "rewardCountDue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "8076:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 659,
																"name": "rewardAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "8112:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 657,
																"name": "rewardCountDue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "8093:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8108:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1911,
															"src": "8093:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8093:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8076:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "8076:49:0"
											},
											{
												"expression": {
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 663,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "8136:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 666,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "8166:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 664,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "8150:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8162:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1911,
															"src": "8150:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8150:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8136:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "8136:42:0"
											},
											{
												"assignments": [
													672
												],
												"declarations": [
													{
														"constant": false,
														"id": 672,
														"mutability": "mutable",
														"name": "landFiTokenI",
														"nameLocation": "8203:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 686,
														"src": "8191:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LandFiToken_$18",
															"typeString": "contract LandFiToken"
														},
														"typeName": {
															"id": 671,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 670,
																"name": "LandFiToken",
																"nameLocations": [
																	"8191:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 18,
																"src": "8191:11:0"
															},
															"referencedDeclaration": 18,
															"src": "8191:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LandFiToken_$18",
																"typeString": "contract LandFiToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 676,
												"initialValue": {
													"arguments": [
														{
															"id": 674,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "8230:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 673,
														"name": "LandFiToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "8218:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_LandFiToken_$18_$",
															"typeString": "type(contract LandFiToken)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8218:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LandFiToken_$18",
														"typeString": "contract LandFiToken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8191:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 680,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "8316:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "stakeWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "8322:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 682,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "8335:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 677,
															"name": "landFiTokenI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "8290:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LandFiToken_$18",
																"typeString": "contract LandFiToken"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8303:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "8290:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8290:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "8290:57:0"
											},
											{
												"functionReturnParameters": 435,
												"id": 685,
												"nodeType": "Return",
												"src": "8410:7:0"
											}
										]
									},
									"functionSelector": "fd2b5202",
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addStake",
									"nameLocation": "5895:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "5912:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "5904:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "boxNo",
												"nameLocation": "5933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "5925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5903:36:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5947:0:0"
									},
									"scope": 1011,
									"src": "5886:2538:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "8494:2879:0",
										"statements": [
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8513:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "8505:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 692,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8505:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 696,
												"initialValue": {
													"expression": {
														"id": 694,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8520:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8524:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8520:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8505:25:0"
											},
											{
												"assignments": [
													698
												],
												"declarations": [
													{
														"constant": false,
														"id": 698,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "8557:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "8549:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 697,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 700,
												"initialValue": {
													"hexValue": "30",
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8572:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8549:24:0"
											},
											{
												"assignments": [
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "8597:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "8589:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 704,
												"initialValue": {
													"hexValue": "30",
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8611:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8589:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 706,
																			"name": "boxNo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 689,
																			"src": "8633:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8642:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8633:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 709,
																			"name": "boxNo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 689,
																			"src": "8647:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8656:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "8647:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "8633:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 713,
																		"name": "boxNo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "8661:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8670:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "8661:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8633:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 717,
																	"name": "boxNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "8675:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8684:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "8675:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8633:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726f647563742049442e",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8687:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740",
																"typeString": "literal_string \"Invalid product ID.\""
															},
															"value": "Invalid product ID."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45ac2a9caa6862a2f1280f762b481914bd61b72b06799da6e9bcb04a7711b740",
																"typeString": "literal_string \"Invalid product ID.\""
															}
														],
														"id": 705,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8625:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8625:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "8625:84:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 724,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "8726:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8735:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8726:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "8722:492:0",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "8738:476:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 728,
																				"name": "box1Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "8761:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 730,
																			"indexExpression": {
																				"id": 729,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 693,
																				"src": "8773:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8761:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8781:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "8761:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546869732077616c6c657420686173206e6f207374616b65206f6e20746869732070726f647563742e",
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8784:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575",
																			"typeString": "literal_string \"This wallet has no stake on this product.\""
																		},
																		"value": "This wallet has no stake on this product."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575",
																			"typeString": "literal_string \"This wallet has no stake on this product.\""
																		}
																	],
																	"id": 727,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "8753:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8753:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 735,
															"nodeType": "ExpressionStatement",
															"src": "8753:75:0"
														},
														{
															"condition": {
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "8849:11:0",
																"subExpression": {
																	"id": 736,
																	"name": "fullUnlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "8850:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 752,
															"nodeType": "IfStatement",
															"src": "8845:173:0",
															"trueBody": {
																"id": 751,
																"nodeType": "Block",
																"src": "8862:156:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 747,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 743,
																								"name": "box1Time",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 38,
																								"src": "8915:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"id": 739,
																									"name": "box1DepositDate",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 34,
																									"src": "8889:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 741,
																								"indexExpression": {
																									"id": 740,
																									"name": "from",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 693,
																									"src": "8905:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8889:21:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 742,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "8911:3:0",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1911,
																							"src": "8889:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 744,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "8889:35:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"expression": {
																							"id": 745,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "8928:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 746,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "8934:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "8928:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8889:54:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "546865207374616b696e6720706572696f6420666f7220746869732070726f6475637420686173206e6f7420656e646564207965742e",
																					"id": 748,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8945:56:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e",
																						"typeString": "literal_string \"The staking period for this product has not ended yet.\""
																					},
																					"value": "The staking period for this product has not ended yet."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e",
																						"typeString": "literal_string \"The staking period for this product has not ended yet.\""
																					}
																				],
																				"id": 738,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8881:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8881:121:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 750,
																		"nodeType": "ExpressionStatement",
																		"src": "8881:121:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 753,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "9034:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 758,
																			"name": "box1Rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 36,
																			"src": "9071:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 754,
																				"name": "box1Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "9049:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 756,
																			"indexExpression": {
																				"id": 755,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 693,
																				"src": "9061:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9049:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9067:3:0",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1956,
																		"src": "9049:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9049:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9034:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 761,
															"nodeType": "ExpressionStatement",
															"src": "9034:46:0"
														},
														{
															"expression": {
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 762,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "9095:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 763,
																		"name": "box1Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "9109:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 765,
																	"indexExpression": {
																		"id": 764,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9121:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9109:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9095:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 767,
															"nodeType": "ExpressionStatement",
															"src": "9095:31:0"
														},
														{
															"expression": {
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 768,
																		"name": "box1Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 30,
																		"src": "9141:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 770,
																	"indexExpression": {
																		"id": 769,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9153:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9141:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9161:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9141:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 773,
															"nodeType": "ExpressionStatement",
															"src": "9141:21:0"
														},
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 774,
																		"name": "box1DepositDate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 34,
																		"src": "9177:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 776,
																	"indexExpression": {
																		"id": 775,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9193:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9177:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9201:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9177:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "9177:25:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 782,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "9228:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9237:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "9228:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 839,
												"nodeType": "IfStatement",
												"src": "9224:492:0",
												"trueBody": {
													"id": 838,
													"nodeType": "Block",
													"src": "9240:476:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 786,
																				"name": "box2Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 44,
																				"src": "9263:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 788,
																			"indexExpression": {
																				"id": 787,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 693,
																				"src": "9275:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9263:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9283:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "9263:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546869732077616c6c657420686173206e6f207374616b65206f6e20746869732070726f647563742e",
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9286:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575",
																			"typeString": "literal_string \"This wallet has no stake on this product.\""
																		},
																		"value": "This wallet has no stake on this product."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575",
																			"typeString": "literal_string \"This wallet has no stake on this product.\""
																		}
																	],
																	"id": 785,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9255:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9255:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 793,
															"nodeType": "ExpressionStatement",
															"src": "9255:75:0"
														},
														{
															"condition": {
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9351:11:0",
																"subExpression": {
																	"id": 794,
																	"name": "fullUnlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "9352:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 810,
															"nodeType": "IfStatement",
															"src": "9347:173:0",
															"trueBody": {
																"id": 809,
																"nodeType": "Block",
																"src": "9364:156:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 805,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 801,
																								"name": "box2Time",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 52,
																								"src": "9417:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"id": 797,
																									"name": "box2DepositDate",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 48,
																									"src": "9391:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 799,
																								"indexExpression": {
																									"id": 798,
																									"name": "from",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 693,
																									"src": "9407:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9391:21:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 800,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9413:3:0",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1911,
																							"src": "9391:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 802,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9391:35:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"expression": {
																							"id": 803,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "9430:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 804,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9436:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "9430:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9391:54:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "546865207374616b696e6720706572696f6420666f7220746869732070726f6475637420686173206e6f7420656e646564207965742e",
																					"id": 806,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9447:56:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e",
																						"typeString": "literal_string \"The staking period for this product has not ended yet.\""
																					},
																					"value": "The staking period for this product has not ended yet."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e",
																						"typeString": "literal_string \"The staking period for this product has not ended yet.\""
																					}
																				],
																				"id": 796,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "9383:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9383:121:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 808,
																		"nodeType": "ExpressionStatement",
																		"src": "9383:121:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 811,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "9536:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 816,
																			"name": "box2Rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 50,
																			"src": "9573:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 812,
																				"name": "box2Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 44,
																				"src": "9551:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 814,
																			"indexExpression": {
																				"id": 813,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 693,
																				"src": "9563:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9551:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9569:3:0",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1956,
																		"src": "9551:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9551:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9536:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 819,
															"nodeType": "ExpressionStatement",
															"src": "9536:46:0"
														},
														{
															"expression": {
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 820,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "9597:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 821,
																		"name": "box2Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "9611:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 823,
																	"indexExpression": {
																		"id": 822,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9623:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9611:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9597:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 825,
															"nodeType": "ExpressionStatement",
															"src": "9597:31:0"
														},
														{
															"expression": {
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 826,
																		"name": "box2Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 44,
																		"src": "9643:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 828,
																	"indexExpression": {
																		"id": 827,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9655:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9643:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9663:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9643:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 831,
															"nodeType": "ExpressionStatement",
															"src": "9643:21:0"
														},
														{
															"expression": {
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 832,
																		"name": "box2DepositDate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 48,
																		"src": "9679:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 834,
																	"indexExpression": {
																		"id": 833,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "9695:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9679:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9703:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9679:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 837,
															"nodeType": "ExpressionStatement",
															"src": "9679:25:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 840,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "9730:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "33",
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9739:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "9730:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "IfStatement",
												"src": "9726:492:0",
												"trueBody": {
													"id": 896,
													"nodeType": "Block",
													"src": "9742:476:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 844,
																				"name": "box3Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "9765:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 846,
																			"indexExpression": {
																				"id": 845,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 693,
																				"src": "9777:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9765:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9785:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "9765:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546869732077616c6c657420686173206e6f207374616b65206f6e20746869732070726f647563742e",
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9788:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575",
																			"typeString": "literal_string \"This wallet has no stake on this product.\""
																		},
																		"value": "This wallet has no stake on this product."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575",
																			"typeString": "literal_string \"This wallet has no stake on this product.\""
																		}
																	],
																	"id": 843,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "9757:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9757:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 851,
															"nodeType": "ExpressionStatement",
															"src": "9757:75:0"
														},
														{
															"condition": {
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "9853:11:0",
																"subExpression": {
																	"id": 852,
																	"name": "fullUnlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "9854:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 868,
															"nodeType": "IfStatement",
															"src": "9849:173:0",
															"trueBody": {
																"id": 867,
																"nodeType": "Block",
																"src": "9866:156:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 863,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 859,
																								"name": "box3Time",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 66,
																								"src": "9919:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"id": 855,
																									"name": "box3DepositDate",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 62,
																									"src": "9893:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 857,
																								"indexExpression": {
																									"id": 856,
																									"name": "from",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 693,
																									"src": "9909:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9893:21:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 858,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "9915:3:0",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1911,
																							"src": "9893:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 860,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9893:35:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"expression": {
																							"id": 861,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "9932:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 862,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9938:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "9932:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9893:54:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "546865207374616b696e6720706572696f6420666f7220746869732070726f6475637420686173206e6f7420656e646564207965742e",
																					"id": 864,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9949:56:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e",
																						"typeString": "literal_string \"The staking period for this product has not ended yet.\""
																					},
																					"value": "The staking period for this product has not ended yet."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e",
																						"typeString": "literal_string \"The staking period for this product has not ended yet.\""
																					}
																				],
																				"id": 854,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "9885:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9885:121:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 866,
																		"nodeType": "ExpressionStatement",
																		"src": "9885:121:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 869,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "10038:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 874,
																			"name": "box3Rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 64,
																			"src": "10075:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 870,
																				"name": "box3Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 58,
																				"src": "10053:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 872,
																			"indexExpression": {
																				"id": 871,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 693,
																				"src": "10065:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10053:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10071:3:0",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1956,
																		"src": "10053:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10053:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10038:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 877,
															"nodeType": "ExpressionStatement",
															"src": "10038:46:0"
														},
														{
															"expression": {
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 878,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "10099:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 879,
																		"name": "box3Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "10113:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 881,
																	"indexExpression": {
																		"id": 880,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10125:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10113:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10099:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 883,
															"nodeType": "ExpressionStatement",
															"src": "10099:31:0"
														},
														{
															"expression": {
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 884,
																		"name": "box3Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 58,
																		"src": "10145:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 886,
																	"indexExpression": {
																		"id": 885,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10157:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10145:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10165:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10145:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 889,
															"nodeType": "ExpressionStatement",
															"src": "10145:21:0"
														},
														{
															"expression": {
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 890,
																		"name": "box3DepositDate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "10181:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 892,
																	"indexExpression": {
																		"id": 891,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10197:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10181:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10205:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10181:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 895,
															"nodeType": "ExpressionStatement",
															"src": "10181:25:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 898,
														"name": "boxNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "10234:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "34",
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10243:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "10234:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"nodeType": "IfStatement",
												"src": "10230:492:0",
												"trueBody": {
													"id": 954,
													"nodeType": "Block",
													"src": "10246:476:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 902,
																				"name": "box4Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 72,
																				"src": "10269:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 904,
																			"indexExpression": {
																				"id": 903,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 693,
																				"src": "10281:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10269:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10289:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "10269:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "546869732077616c6c657420686173206e6f207374616b65206f6e20746869732070726f647563742e",
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10292:43:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575",
																			"typeString": "literal_string \"This wallet has no stake on this product.\""
																		},
																		"value": "This wallet has no stake on this product."
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_33963a34db8041415371b3e43d4ae21b118c22cd03aa6e1a225606d04489b575",
																			"typeString": "literal_string \"This wallet has no stake on this product.\""
																		}
																	],
																	"id": 901,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10261:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10261:75:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 909,
															"nodeType": "ExpressionStatement",
															"src": "10261:75:0"
														},
														{
															"condition": {
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "10357:11:0",
																"subExpression": {
																	"id": 910,
																	"name": "fullUnlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 105,
																	"src": "10358:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 926,
															"nodeType": "IfStatement",
															"src": "10353:173:0",
															"trueBody": {
																"id": 925,
																"nodeType": "Block",
																"src": "10370:156:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 921,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 917,
																								"name": "box4Time",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 80,
																								"src": "10423:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"baseExpression": {
																									"id": 913,
																									"name": "box4DepositDate",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 76,
																									"src": "10397:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 915,
																								"indexExpression": {
																									"id": 914,
																									"name": "from",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 693,
																									"src": "10413:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "10397:21:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 916,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10419:3:0",
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1911,
																							"src": "10397:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 918,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "10397:35:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"expression": {
																							"id": 919,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "10436:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 920,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10442:9:0",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "10436:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10397:54:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "546865207374616b696e6720706572696f6420666f7220746869732070726f6475637420686173206e6f7420656e646564207965742e",
																					"id": 922,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10453:56:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e",
																						"typeString": "literal_string \"The staking period for this product has not ended yet.\""
																					},
																					"value": "The staking period for this product has not ended yet."
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_7556e3d0bbac144e79c2abf259715df5663f7281a0f913155190014459a4dd7e",
																						"typeString": "literal_string \"The staking period for this product has not ended yet.\""
																					}
																				],
																				"id": 912,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "10389:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10389:121:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 924,
																		"nodeType": "ExpressionStatement",
																		"src": "10389:121:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 927,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "10542:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 932,
																			"name": "box4Rate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 78,
																			"src": "10579:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 928,
																				"name": "box4Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 72,
																				"src": "10557:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 930,
																			"indexExpression": {
																				"id": 929,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 693,
																				"src": "10569:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10557:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10575:3:0",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1956,
																		"src": "10557:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10557:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10542:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 935,
															"nodeType": "ExpressionStatement",
															"src": "10542:46:0"
														},
														{
															"expression": {
																"id": 940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 936,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "10603:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 937,
																		"name": "box4Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 72,
																		"src": "10617:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 939,
																	"indexExpression": {
																		"id": 938,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10629:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10617:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10603:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 941,
															"nodeType": "ExpressionStatement",
															"src": "10603:31:0"
														},
														{
															"expression": {
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 942,
																		"name": "box4Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 72,
																		"src": "10649:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 944,
																	"indexExpression": {
																		"id": 943,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10661:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10649:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10669:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10649:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 947,
															"nodeType": "ExpressionStatement",
															"src": "10649:21:0"
														},
														{
															"expression": {
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 948,
																		"name": "box4DepositDate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 76,
																		"src": "10685:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 950,
																	"indexExpression": {
																		"id": 949,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10701:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10685:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10709:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10685:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 953,
															"nodeType": "ExpressionStatement",
															"src": "10685:25:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "10738:11:0",
													"subExpression": {
														"id": 956,
														"name": "fullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "10739:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 973,
												"nodeType": "IfStatement",
												"src": "10734:151:0",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "10751:134:0",
													"statements": [
														{
															"expression": {
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 958,
																	"name": "rewardCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 99,
																	"src": "10766:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 961,
																			"name": "rewardAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 698,
																			"src": "10796:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 959,
																			"name": "rewardCount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 99,
																			"src": "10780:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 960,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10792:3:0",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1911,
																		"src": "10780:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10780:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10766:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 964,
															"nodeType": "ExpressionStatement",
															"src": "10766:43:0"
														},
														{
															"expression": {
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 965,
																	"name": "rewardCountDue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 97,
																	"src": "10824:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 968,
																			"name": "rewardAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 698,
																			"src": "10860:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 966,
																			"name": "rewardCountDue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 97,
																			"src": "10841:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10856:3:0",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1926,
																		"src": "10841:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10841:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10824:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 971,
															"nodeType": "ExpressionStatement",
															"src": "10824:49:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 974,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "10905:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 977,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 702,
																"src": "10935:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 975,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "10919:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10931:3:0",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1926,
															"src": "10919:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10919:28:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10905:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "10905:42:0"
											},
											{
												"assignments": [
													983
												],
												"declarations": [
													{
														"constant": false,
														"id": 983,
														"mutability": "mutable",
														"name": "landFiTokenI",
														"nameLocation": "10972:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10960:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LandFiToken_$18",
															"typeString": "contract LandFiToken"
														},
														"typeName": {
															"id": 982,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 981,
																"name": "LandFiToken",
																"nameLocations": [
																	"10960:11:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 18,
																"src": "10960:11:0"
															},
															"referencedDeclaration": 18,
															"src": "10960:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LandFiToken_$18",
																"typeString": "contract LandFiToken"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 987,
												"initialValue": {
													"arguments": [
														{
															"id": 985,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "10999:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 984,
														"name": "LandFiToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "10987:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_LandFiToken_$18_$",
															"typeString": "type(contract LandFiToken)"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10987:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LandFiToken_$18",
														"typeString": "contract LandFiToken"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10960:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 991,
															"name": "stakeWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "11085:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 992,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "11098:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 993,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "11104:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 988,
															"name": "landFiTokenI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "11059:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LandFiToken_$18",
																"typeString": "contract LandFiToken"
															}
														},
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11072:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "11059:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11059:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "11059:57:0"
											},
											{
												"condition": {
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11183:11:0",
													"subExpression": {
														"id": 996,
														"name": "fullUnlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "11184:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "11179:168:0",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "11196:151:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1001,
																		"name": "rewardWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "11301:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1002,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "11315:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1003,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 698,
																		"src": "11321:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 998,
																		"name": "landFiTokenI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "11275:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_LandFiToken_$18",
																			"typeString": "contract LandFiToken"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11288:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 17,
																	"src": "11275:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11275:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1005,
															"nodeType": "ExpressionStatement",
															"src": "11275:59:0"
														}
													]
												}
											},
											{
												"functionReturnParameters": 691,
												"id": 1008,
												"nodeType": "Return",
												"src": "11359:7:0"
											}
										]
									},
									"functionSelector": "35e63055",
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pullStake",
									"nameLocation": "8462:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "boxNo",
												"nameLocation": "8480:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "8472:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8471:15:0"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8494:0:0"
									},
									"scope": 1011,
									"src": "8453:2920:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1012,
							"src": "654:10724:0",
							"usedErrors": [],
							"usedEvents": [
								1025
							]
						}
					],
					"src": "362:11016:0"
				},
				"id": 0
			},
			"contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1735
						],
						"Ownable": [
							1116
						]
					},
					"id": 1117,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1013,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1014,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1117,
							"sourceUnit": 1736,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1016,
										"name": "Context",
										"nameLocations": [
											"668:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1735,
										"src": "668:7:1"
									},
									"id": 1017,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1015,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1116,
							"linearizedBaseContracts": [
								1116,
								1735
							],
							"name": "Ownable",
							"nameLocation": "657:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1019,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1116,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1018,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1025,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 1034,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1030,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1029,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1035,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 1116,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 1041,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1019,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1040,
												"id": 1042,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 1116,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1048,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1050,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1047,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 1056,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1058,
									"name": "onlyOwner",
									"nameLocation": "1218:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1065,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1064,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1062,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1061,
												"name": "onlyOwner",
												"nameLocations": [
													"1712:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1058,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 1116,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1081,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1075,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1082,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1080,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1091,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1090,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 1073,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1078,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1077,
												"name": "onlyOwner",
												"nameLocations": [
													"1978:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1058,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 1116,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													1102
												],
												"declarations": [
													{
														"constant": false,
														"id": 1102,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1114,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1101,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1104,
												"initialValue": {
													"id": 1103,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1019,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1105,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1110,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1111,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1109,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 1116,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1117,
							"src": "639:1820:1",
							"usedErrors": [],
							"usedEvents": [
								1025
							]
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1194
						]
					},
					"id": 1195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1118,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1119,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1194,
							"linearizedBaseContracts": [
								1194
							],
							"name": "IERC20",
							"nameLocation": "197:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:2"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "327:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:2"
									},
									"scope": 1194,
									"src": "281:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:2"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "478:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:2"
									},
									"scope": 1194,
									"src": "419:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "725:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "744:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:2"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "778:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1140,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:2"
									},
									"scope": 1194,
									"src": "707:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1078:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1093:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:2"
									},
									"returnParameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "1133:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:2"
									},
									"scope": 1194,
									"src": "1059:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1154,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1163,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1812:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1829:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:2"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1160,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:2"
									},
									"scope": 1194,
									"src": "1795:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2207:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2231:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2258:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:2"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "2297:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1172,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:2"
									},
									"scope": 1194,
									"src": "2176:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1184,
									"name": "Transfer",
									"nameLocation": "2478:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2487:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2509:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "2529:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:2"
									},
									"src": "2472:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1193,
									"name": "Approval",
									"nameLocation": "2709:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "2718:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "2741:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "2766:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:2"
									},
									"src": "2703:78:2"
								}
							],
							"scope": 1195,
							"src": "187:2596:2",
							"usedErrors": [],
							"usedEvents": [
								1184,
								1193
							]
						}
					],
					"src": "91:2693:2"
				},
				"id": 2
			},
			"contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1713
						],
						"IERC20": [
							1194
						],
						"SafeERC20": [
							1418
						]
					},
					"id": 1419,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"absolutePath": "contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1197,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1419,
							"sourceUnit": 1195,
							"src": "125:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1198,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1419,
							"sourceUnit": 1714,
							"src": "149:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1199,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1418,
							"linearizedBaseContracts": [
								1418
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1202,
									"libraryName": {
										"id": 1200,
										"name": "Address",
										"nameLocations": [
											"675:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1713,
										"src": "675:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:3",
									"typeName": {
										"id": 1201,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "803:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "833:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1194",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1216,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1205,
																			"src": "863:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1194",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "869:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1143,
																		"src": "863:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "878:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1219,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "888:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1220,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "892:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1214,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "844:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1194",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1212,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "813:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1194_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "813:86:3"
											}
										]
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "732:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1194",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1204,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1203,
														"name": "IERC20",
														"nameLocations": [
															"732:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1194,
														"src": "732:6:3"
													},
													"referencedDeclaration": 1194,
													"src": "732:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1194",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "754:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "774:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:3"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:3"
									},
									"scope": 1418,
									"src": "701:205:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "1040:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1238,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1228,
															"src": "1070:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1194",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1241,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1228,
																			"src": "1100:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1194",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1106:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1175,
																		"src": "1100:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1119:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1244,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1230,
																	"src": "1129:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1245,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "1135:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1246,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "1139:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1239,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1081:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1194",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1237,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "1050:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1194_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:3"
											}
										]
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "947:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1194",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1227,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1226,
														"name": "IERC20",
														"nameLocations": [
															"947:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1194,
														"src": "947:6:3"
													},
													"referencedDeclaration": 1194,
													"src": "947:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1194",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "969:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "991:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "1011:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:3"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:3"
									},
									"scope": 1418,
									"src": "912:241:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "1519:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1263,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1259,
																			"src": "1768:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1266,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1271,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1418",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1418",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1270,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1269,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1272,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1273,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1257,
																					"src": "1815:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1267,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1255,
																					"src": "1784:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1194",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1790:9:3",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1153,
																				"src": "1784:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1277,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1262,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1281,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1283,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "1939:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1194",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1286,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1255,
																			"src": "1969:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1194",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1975:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1163,
																		"src": "1969:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1983:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1289,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "1993:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1290,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "2002:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1284,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1950:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1194",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1282,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "1919:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1194_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:3"
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1443:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1194",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1254,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1253,
														"name": "IERC20",
														"nameLocations": [
															"1443:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1194,
														"src": "1443:6:3"
													},
													"referencedDeclaration": 1194,
													"src": "1443:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1194",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1465:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "1490:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:3"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:3"
									},
									"scope": 1418,
									"src": "1413:603:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "2138:194:3",
										"statements": [
											{
												"assignments": [
													1306
												],
												"declarations": [
													{
														"constant": false,
														"id": 1306,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "2148:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1317,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1311,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1418",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1418",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1309,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1313,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1300,
																"src": "2202:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1307,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1298,
																"src": "2171:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1194",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2177:9:3",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1153,
															"src": "2171:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1315,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1302,
														"src": "2213:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1319,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "2248:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1194",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1322,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1298,
																			"src": "2278:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1194",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2284:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1163,
																		"src": "2278:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2292:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1325,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1300,
																	"src": "2302:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1326,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1306,
																	"src": "2311:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1320,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2259:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1194",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1318,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "2228:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1194_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:3"
											}
										]
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "2062:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1194",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1297,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1296,
														"name": "IERC20",
														"nameLocations": [
															"2062:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1194,
														"src": "2062:6:3"
													},
													"referencedDeclaration": 1194,
													"src": "2062:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1194",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "2084:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "2109:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:3"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:3"
									},
									"scope": 1418,
									"src": "2022:310:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "2454:370:3",
										"statements": [
											{
												"id": 1377,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:3",
												"statements": [
													{
														"assignments": [
															1342
														],
														"declarations": [
															{
																"constant": false,
																"id": 1342,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 1377,
																"src": "2488:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1341,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1351,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1347,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1418",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1418",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1345,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1349,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "2542:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1343,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "2511:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1194",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2517:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1153,
																"src": "2511:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1353,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "2572:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1354,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1338,
																		"src": "2588:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1352,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1358,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:3"
													},
													{
														"assignments": [
															1360
														],
														"declarations": [
															{
																"constant": false,
																"id": 1360,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 1377,
																"src": "2653:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1359,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1364,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1361,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1342,
																"src": "2676:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1362,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "2691:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1366,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "2730:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1194",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1369,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1334,
																					"src": "2760:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1194",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1370,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2766:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1163,
																				"src": "2760:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2774:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1372,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1336,
																			"src": "2784:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1373,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1360,
																			"src": "2793:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1367,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2741:18:3",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1194",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1365,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1417,
																"src": "2710:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1194_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1376,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:3"
													}
												]
											}
										]
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2378:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1194",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1332,
														"name": "IERC20",
														"nameLocations": [
															"2378:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1194,
														"src": "2378:6:3"
													},
													"referencedDeclaration": 1194,
													"src": "2378:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1194",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2400:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2425:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:3"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:3"
									},
									"scope": 1418,
									"src": "2338:486:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "3277:636:3",
										"statements": [
											{
												"assignments": [
													1389
												],
												"declarations": [
													{
														"constant": false,
														"id": 1389,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 1416,
														"src": "3626:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1388,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1398,
												"initialValue": {
													"arguments": [
														{
															"id": 1395,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1385,
															"src": "3680:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1392,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1383,
																	"src": "3660:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1194",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1194",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1390,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3667:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1507,
														"src": "3652:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1399,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "3735:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3746:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1415,
												"nodeType": "IfStatement",
												"src": "3731:176:3",
												"trueBody": {
													"id": 1414,
													"nodeType": "Block",
													"src": "3758:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1406,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1389,
																				"src": "3830:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1408,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1407,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1409,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1404,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3823:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1403,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1413,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "3236:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1194",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1382,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1381,
														"name": "IERC20",
														"nameLocations": [
															"3236:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1194,
														"src": "3236:6:3"
													},
													"referencedDeclaration": 1194,
													"src": "3236:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1194",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "3250:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:3"
									},
									"returnParameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:3"
									},
									"scope": 1418,
									"src": "3207:706:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1419,
							"src": "645:3270:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:3816:3"
				},
				"id": 3
			},
			"contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1713
						]
					},
					"id": 1714,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1420,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1421,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1713,
							"linearizedBaseContracts": [
								1713
							],
							"name": "Address",
							"nameLocation": "187:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "1226:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1429,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "1450:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1458:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1450:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1463:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1450:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1472:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1450:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1428,
												"id": 1434,
												"nodeType": "Return",
												"src": "1443:30:4"
											}
										]
									},
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "201:954:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1169:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1188:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "1180:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1179:17:4"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "1220:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1220:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:6:4"
									},
									"scope": 1713,
									"src": "1160:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1469,
										"nodeType": "Block",
										"src": "2468:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1447,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2494:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1713",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1713",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2486:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1445,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2486:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2486:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2500:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2486:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1450,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1441,
																"src": "2511:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2486:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2519:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2478:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2478:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "2478:73:4"
											},
											{
												"assignments": [
													1456,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2568:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1469,
														"src": "2563:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1455,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2563:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1463,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2611:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1457,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "2581:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2591:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2581:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1459,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1441,
																"src": "2603:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2581:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2562:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1465,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "2632:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2641:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1464,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2624:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1468,
												"nodeType": "ExpressionStatement",
												"src": "2624:78:4"
											}
										]
									},
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "1486:906:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2406:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2432:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "2416:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2416:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2451:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1470,
												"src": "2443:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:43:4"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2468:0:4"
									},
									"scope": 1713,
									"src": "2397:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "3540:84:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1481,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "3570:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1482,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1475,
															"src": "3578:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3584:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1480,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1487,
															1507
														],
														"referencedDeclaration": 1507,
														"src": "3557:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3557:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1479,
												"id": 1485,
												"nodeType": "Return",
												"src": "3550:67:4"
											}
										]
									},
									"documentation": {
										"id": 1471,
										"nodeType": "StructuredDocumentation",
										"src": "2715:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3460:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3481:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "3473:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3502:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "3489:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1474,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3489:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3472:35:4"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "3526:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1477,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3526:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:14:4"
									},
									"scope": 1713,
									"src": "3451:173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "3993:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1500,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "4032:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1501,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "4040:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4046:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1503,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "4049:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1499,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1527,
															1577
														],
														"referencedDeclaration": 1577,
														"src": "4010:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4010:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1498,
												"id": 1505,
												"nodeType": "Return",
												"src": "4003:59:4"
											}
										]
									},
									"documentation": {
										"id": 1488,
										"nodeType": "StructuredDocumentation",
										"src": "3630:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3855:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3885:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "3877:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3914:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "3901:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1491,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3901:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3942:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "3928:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1493,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3928:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:93:4"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "3979:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3979:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3978:14:4"
									},
									"scope": 1713,
									"src": "3846:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1526,
										"nodeType": "Block",
										"src": "4574:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1520,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "4613:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1521,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1512,
															"src": "4621:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1522,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "4627:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4634:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1519,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1527,
															1577
														],
														"referencedDeclaration": 1577,
														"src": "4591:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4591:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1518,
												"id": 1525,
												"nodeType": "Return",
												"src": "4584:94:4"
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "4075:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4440:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4479:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4471:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4508:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4495:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4530:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4522:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4522:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4461:80:4"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "4560:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1516,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4560:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4559:14:4"
									},
									"scope": 1713,
									"src": "4431:254:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "5112:320:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1544,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5138:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1713",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1713",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5130:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1542,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5130:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5130:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5144:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5130:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1547,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "5155:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5130:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5162:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5122:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5122:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "5122:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1554,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1530,
																	"src": "5232:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1553,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "5221:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5221:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5241:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1552,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5213:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5213:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "5213:60:4"
											},
											{
												"assignments": [
													1560,
													1562
												],
												"declarations": [
													{
														"constant": false,
														"id": 1560,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5290:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1576,
														"src": "5285:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1559,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5285:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5312:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1576,
														"src": "5299:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1561,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5299:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1569,
												"initialValue": {
													"arguments": [
														{
															"id": 1567,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "5352:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1563,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1530,
																"src": "5326:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5333:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5326:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1565,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1534,
																"src": "5345:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5326:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5326:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5284:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1571,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "5391:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1572,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "5400:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1573,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "5412:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1570,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "5374:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5374:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1540,
												"id": 1575,
												"nodeType": "Return",
												"src": "5367:58:4"
											}
										]
									},
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "4691:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4942:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4981:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "4973:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5010:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "4997:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4997:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5032:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "5024:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5024:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5061:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "5047:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1535,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5047:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4963:116:4"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "5098:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5098:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5097:14:4"
									},
									"scope": 1713,
									"src": "4933:499:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "5709:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1588,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "5745:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1589,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "5753:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1587,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1594,
															1629
														],
														"referencedDeclaration": 1629,
														"src": "5726:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5726:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1586,
												"id": 1592,
												"nodeType": "Return",
												"src": "5719:80:4"
											}
										]
									},
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "5438:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5618:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5645:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "5637:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5637:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5666:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "5653:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5653:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:35:4"
									},
									"returnParameters": {
										"id": 1586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "5695:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1584,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5695:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5694:14:4"
									},
									"scope": 1713,
									"src": "5609:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "6148:228:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1608,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "6177:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1607,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "6166:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6166:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6186:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6158:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6158:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "6158:67:4"
											},
											{
												"assignments": [
													1614,
													1616
												],
												"declarations": [
													{
														"constant": false,
														"id": 1614,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6242:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1628,
														"src": "6237:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1613,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6237:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1616,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6264:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1628,
														"src": "6251:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1615,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6251:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1621,
												"initialValue": {
													"arguments": [
														{
															"id": 1619,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "6296:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1617,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "6278:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6285:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6278:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6278:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6236:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1623,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "6335:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1624,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "6344:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1625,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "6356:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1622,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "6318:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6318:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1605,
												"id": 1627,
												"nodeType": "Return",
												"src": "6311:58:4"
											}
										]
									},
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "5812:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5999:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6035:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "6027:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6027:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6064:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "6051:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1598,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6092:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "6078:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1600,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6078:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6017:93:4"
									},
									"returnParameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "6134:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1603,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6134:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6133:14:4"
									},
									"scope": 1713,
									"src": "5990:386:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1645,
										"nodeType": "Block",
										"src": "6652:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1640,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "6690:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1641,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "6698:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6704:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1639,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1646,
															1681
														],
														"referencedDeclaration": 1681,
														"src": "6669:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6669:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1638,
												"id": 1644,
												"nodeType": "Return",
												"src": "6662:84:4"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "6382:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6564:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6593:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "6585:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6614:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "6601:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1633,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6601:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6584:35:4"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "6638:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1636,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6638:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6637:14:4"
									},
									"scope": 1713,
									"src": "6555:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "7094:232:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1660,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "7123:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1659,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1436,
																"src": "7112:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7112:18:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7132:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1658,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7104:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7104:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "7104:69:4"
											},
											{
												"assignments": [
													1666,
													1668
												],
												"declarations": [
													{
														"constant": false,
														"id": 1666,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7190:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1680,
														"src": "7185:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1665,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7185:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1668,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7212:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1680,
														"src": "7199:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1667,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7199:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1673,
												"initialValue": {
													"arguments": [
														{
															"id": 1671,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1651,
															"src": "7246:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1669,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "7226:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7233:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7226:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7226:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7184:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1675,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "7285:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1676,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "7294:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1677,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "7306:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1674,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "7268:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7268:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1657,
												"id": 1679,
												"nodeType": "Return",
												"src": "7261:58:4"
											}
										]
									},
									"documentation": {
										"id": 1647,
										"nodeType": "StructuredDocumentation",
										"src": "6759:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6948:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6986:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "6978:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7015:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "7002:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7002:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7043:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "7029:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7029:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6968:93:4"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "7080:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7080:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7079:14:4"
									},
									"scope": 1713,
									"src": "6939:387:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "7706:532:4",
										"statements": [
											{
												"condition": {
													"id": 1693,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1684,
													"src": "7720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1709,
													"nodeType": "Block",
													"src": "7777:455:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1697,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1686,
																		"src": "7861:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7872:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7861:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7881:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7861:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1707,
																"nodeType": "Block",
																"src": "8169:53:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1704,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1688,
																					"src": "8194:12:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1703,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8187:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8187:20:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1706,
																		"nodeType": "ExpressionStatement",
																		"src": "8187:20:4"
																	}
																]
															},
															"id": 1708,
															"nodeType": "IfStatement",
															"src": "7857:365:4",
															"trueBody": {
																"id": 1702,
																"nodeType": "Block",
																"src": "7884:279:4",
																"statements": [
																	{
																		"AST": {
																			"nativeSrc": "8004:145:4",
																			"nodeType": "YulBlock",
																			"src": "8004:145:4",
																			"statements": [
																				{
																					"nativeSrc": "8026:40:4",
																					"nodeType": "YulVariableDeclaration",
																					"src": "8026:40:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nativeSrc": "8055:10:4",
																								"nodeType": "YulIdentifier",
																								"src": "8055:10:4"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nativeSrc": "8049:5:4",
																							"nodeType": "YulIdentifier",
																							"src": "8049:5:4"
																						},
																						"nativeSrc": "8049:17:4",
																						"nodeType": "YulFunctionCall",
																						"src": "8049:17:4"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nativeSrc": "8030:15:4",
																							"nodeType": "YulTypedName",
																							"src": "8030:15:4",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "8098:2:4",
																										"nodeType": "YulLiteral",
																										"src": "8098:2:4",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nativeSrc": "8102:10:4",
																										"nodeType": "YulIdentifier",
																										"src": "8102:10:4"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8094:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "8094:3:4"
																								},
																								"nativeSrc": "8094:19:4",
																								"nodeType": "YulFunctionCall",
																								"src": "8094:19:4"
																							},
																							{
																								"name": "returndata_size",
																								"nativeSrc": "8115:15:4",
																								"nodeType": "YulIdentifier",
																								"src": "8115:15:4"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nativeSrc": "8087:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "8087:6:4"
																						},
																						"nativeSrc": "8087:44:4",
																						"nodeType": "YulFunctionCall",
																						"src": "8087:44:4"
																					},
																					"nativeSrc": "8087:44:4",
																					"nodeType": "YulExpressionStatement",
																					"src": "8087:44:4"
																				}
																			]
																		},
																		"evmVersion": "prague",
																		"externalReferences": [
																			{
																				"declaration": 1686,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8055:10:4",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1686,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8102:10:4",
																				"valueSize": 1
																			}
																		],
																		"id": 1701,
																		"nodeType": "InlineAssembly",
																		"src": "7995:154:4"
																	}
																]
															}
														}
													]
												},
												"id": 1710,
												"nodeType": "IfStatement",
												"src": "7716:516:4",
												"trueBody": {
													"id": 1696,
													"nodeType": "Block",
													"src": "7729:42:4",
													"statements": [
														{
															"expression": {
																"id": 1694,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "7750:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1692,
															"id": 1695,
															"nodeType": "Return",
															"src": "7743:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "7332:209:4",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7555:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7586:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "7581:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1683,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7581:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7616:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "7603:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7603:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7650:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "7636:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7636:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7571:97:4"
									},
									"returnParameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "7692:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1690,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7692:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7691:14:4"
									},
									"scope": 1713,
									"src": "7546:692:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1714,
							"src": "179:8061:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:8155:4"
				},
				"id": 4
			},
			"contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1735
						]
					},
					"id": 1736,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1715,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1716,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1735,
							"linearizedBaseContracts": [
								1735
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1721,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1720,
												"id": 1723,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1735,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1733,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1730,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1729,
												"id": 1732,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1735,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1736,
							"src": "608:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			"contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2047
						]
					},
					"id": 2048,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1737,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1738,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2047,
							"linearizedBaseContracts": [
								2047
							],
							"name": "SafeMath",
							"nameLocation": "475:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "702:140:6",
										"statements": [
											{
												"id": 1768,
												"nodeType": "UncheckedBlock",
												"src": "712:124:6",
												"statements": [
													{
														"assignments": [
															1751
														],
														"declarations": [
															{
																"constant": false,
																"id": 1751,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1768,
																"src": "736:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1750,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1755,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1752,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "748:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1753,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1743,
																"src": "752:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1756,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "771:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1757,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1741,
																"src": "775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1763,
														"nodeType": "IfStatement",
														"src": "767:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1761,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1749,
															"id": 1762,
															"nodeType": "Return",
															"src": "778:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1765,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1751,
																	"src": "823:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1766,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1749,
														"id": 1767,
														"nodeType": "Return",
														"src": "809:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "642:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "653:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:6"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "687:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1745,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:6"
									},
									"scope": 2047,
									"src": "626:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "1064:113:6",
										"statements": [
											{
												"id": 1796,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1782,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "1102:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1783,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "1106:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1789,
														"nodeType": "IfStatement",
														"src": "1098:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1787,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1781,
															"id": 1788,
															"nodeType": "Return",
															"src": "1109:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1791,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "1154:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1792,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "1158:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1794,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1781,
														"id": 1795,
														"nodeType": "Return",
														"src": "1140:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "1004:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "1015:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:6"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "1049:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1777,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "1055:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:6"
									},
									"scope": 2047,
									"src": "988:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1839,
										"nodeType": "Block",
										"src": "1401:417:6",
										"statements": [
											{
												"id": 1838,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1810,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "1669:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1817,
														"nodeType": "IfStatement",
														"src": "1665:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1815,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1809,
															"id": 1816,
															"nodeType": "Return",
															"src": "1677:16:6"
														}
													},
													{
														"assignments": [
															1819
														],
														"declarations": [
															{
																"constant": false,
																"id": 1819,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1838,
																"src": "1707:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1818,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1823,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1820,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "1719:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1821,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "1723:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1824,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "1742:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1825,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1801,
																	"src": "1746:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1827,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "1751:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1833,
														"nodeType": "IfStatement",
														"src": "1738:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1831,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1809,
															"id": 1832,
															"nodeType": "Return",
															"src": "1754:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1835,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1819,
																	"src": "1799:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1836,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1809,
														"id": 1837,
														"nodeType": "Return",
														"src": "1785:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1341:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1352:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:6"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1386:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "1392:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:6"
									},
									"scope": 2047,
									"src": "1325:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1867,
										"nodeType": "Block",
										"src": "2043:114:6",
										"statements": [
											{
												"id": 1866,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1852,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1845,
																"src": "2081:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1859,
														"nodeType": "IfStatement",
														"src": "2077:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1857,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1851,
															"id": 1858,
															"nodeType": "Return",
															"src": "2089:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1861,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1843,
																		"src": "2134:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1862,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1845,
																		"src": "2138:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1864,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1851,
														"id": 1865,
														"nodeType": "Return",
														"src": "2120:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1841,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1983:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "1994:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:6"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "2028:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "2034:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:6"
									},
									"scope": 2047,
									"src": "1967:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "2392:114:6",
										"statements": [
											{
												"id": 1894,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1880,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1873,
																"src": "2430:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1887,
														"nodeType": "IfStatement",
														"src": "2426:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1885,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1879,
															"id": 1886,
															"nodeType": "Return",
															"src": "2438:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1888,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1889,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1871,
																		"src": "2483:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1890,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1873,
																		"src": "2487:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1892,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1879,
														"id": 1893,
														"nodeType": "Return",
														"src": "2469:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2332:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1873,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:6"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2377:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "2383:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:6"
									},
									"scope": 2047,
									"src": "2316:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1910,
										"nodeType": "Block",
										"src": "2808:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1906,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "2825:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1907,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1901,
														"src": "2829:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1905,
												"id": 1909,
												"nodeType": "Return",
												"src": "2818:12:6"
											}
										]
									},
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "2754:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "2765:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:6"
									},
									"returnParameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1911,
												"src": "2799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:6"
									},
									"scope": 2047,
									"src": "2741:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1925,
										"nodeType": "Block",
										"src": "3175:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1921,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "3192:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1922,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1916,
														"src": "3196:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1920,
												"id": 1924,
												"nodeType": "Return",
												"src": "3185:12:6"
											}
										]
									},
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "3121:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "3132:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:6"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "3166:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:6"
									},
									"scope": 2047,
									"src": "3108:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "3518:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1936,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1929,
														"src": "3535:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1937,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1931,
														"src": "3539:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1935,
												"id": 1939,
												"nodeType": "Return",
												"src": "3528:12:6"
											}
										]
									},
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "3464:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "3475:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:6"
									},
									"returnParameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "3509:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:6"
									},
									"scope": 2047,
									"src": "3451:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "3903:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1951,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "3920:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1952,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1946,
														"src": "3924:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1950,
												"id": 1954,
												"nodeType": "Return",
												"src": "3913:12:6"
											}
										]
									},
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "3849:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "3860:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:6"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "3894:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:6"
									},
									"scope": 2047,
									"src": "3836:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "4452:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1966,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1959,
														"src": "4469:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1967,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "4473:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1965,
												"id": 1969,
												"nodeType": "Return",
												"src": "4462:12:6"
											}
										]
									},
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "4398:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "4409:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:6"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "4443:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:6"
									},
									"scope": 2047,
									"src": "4385:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1995,
										"nodeType": "Block",
										"src": "5070:106:6",
										"statements": [
											{
												"id": 1994,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1984,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1976,
																		"src": "5112:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1985,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1974,
																		"src": "5117:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1987,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1978,
																	"src": "5120:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1983,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1989,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1990,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "5154:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1991,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1976,
																"src": "5158:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1982,
														"id": 1993,
														"nodeType": "Return",
														"src": "5147:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1972,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "4967:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1976,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "4986:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "5005:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1977,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:6"
									},
									"returnParameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "5061:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:6"
									},
									"scope": 2047,
									"src": "4945:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2020,
										"nodeType": "Block",
										"src": "5785:105:6",
										"statements": [
											{
												"id": 2019,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2009,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2001,
																		"src": "5827:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2012,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2003,
																	"src": "5834:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2008,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2014,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2015,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1999,
																"src": "5868:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2016,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2001,
																"src": "5872:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2007,
														"id": 2018,
														"nodeType": "Return",
														"src": "5861:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "5682:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "5701:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "5720:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2002,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:6"
									},
									"returnParameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "5776:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:6"
									},
									"scope": 2047,
									"src": "5660:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2045,
										"nodeType": "Block",
										"src": "6661:105:6",
										"statements": [
											{
												"id": 2044,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2034,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2026,
																		"src": "6703:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2037,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2028,
																	"src": "6710:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2033,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2039,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2040,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2024,
																"src": "6744:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2041,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2026,
																"src": "6748:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2032,
														"id": 2043,
														"nodeType": "Return",
														"src": "6737:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2022,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "6558:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "6577:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "6596:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2027,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:6"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "6652:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:6"
									},
									"scope": 2047,
									"src": "6536:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2048,
							"src": "467:6301:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "92:6677:6"
				},
				"id": 6
			}
		}
	}
}